INFO  04:51:06,582 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  04:51:06,591 - #1 program
INFO  04:51:06,591 - #36 P
INFO  04:51:06,591 - #7 const
INFO  04:51:06,591 - #36 int
INFO  04:51:06,591 - #36 size
INFO  04:51:06,591 - #24 =
INFO  04:51:06,591 - #37 10
INFO  04:51:06,591 - #27 ;
INFO  04:51:06,591 - #5 enum
INFO  04:51:06,591 - #36 Num
INFO  04:51:06,591 - #34 {
INFO  04:51:06,591 - #36 ZERO
INFO  04:51:06,591 - #28 ,
INFO  04:51:06,591 - #36 ONE
INFO  04:51:06,591 - #28 ,
INFO  04:51:06,591 - #36 TEN
INFO  04:51:06,591 - #24 =
INFO  04:51:06,592 - #37 10
INFO  04:51:06,592 - #35 }
INFO  04:51:06,592 - #4 interface
INFO  04:51:06,592 - #36 I
INFO  04:51:06,592 - #34 {
INFO  04:51:06,592 - #36 int
INFO  04:51:06,592 - #36 getp
INFO  04:51:06,592 - #30 (
INFO  04:51:06,592 - #36 int
INFO  04:51:06,592 - #36 i
INFO  04:51:06,592 - #31 )
INFO  04:51:06,592 - #27 ;
INFO  04:51:06,592 - #36 int
INFO  04:51:06,592 - #36 getn
INFO  04:51:06,592 - #30 (
INFO  04:51:06,592 - #36 int
INFO  04:51:06,592 - #36 i
INFO  04:51:06,592 - #31 )
INFO  04:51:06,593 - #27 ;
INFO  04:51:06,593 - #35 }
INFO  04:51:06,593 - #3 class
INFO  04:51:06,593 - #36 Table
INFO  04:51:06,593 - #36 implements
INFO  04:51:06,593 - #36 I
INFO  04:51:06,593 - #34 {
INFO  04:51:06,593 - #36 int
INFO  04:51:06,593 - #36 pos
INFO  04:51:06,593 - #32 [
INFO  04:51:06,593 - #33 ]
INFO  04:51:06,593 - #28 ,
INFO  04:51:06,593 - #36 neg
INFO  04:51:06,593 - #32 [
INFO  04:51:06,593 - #33 ]
INFO  04:51:06,593 - #27 ;
INFO  04:51:06,593 - #34 {
INFO  04:51:06,593 - #13 void
INFO  04:51:06,593 - #36 putp
INFO  04:51:06,593 - #30 (
INFO  04:51:06,593 - #36 int
INFO  04:51:06,593 - #36 a
INFO  04:51:06,593 - #28 ,
INFO  04:51:06,593 - #36 int
INFO  04:51:06,593 - #36 idx
INFO  04:51:06,593 - #31 )
INFO  04:51:06,593 - #34 {
INFO  04:51:06,594 - #36 this
INFO  04:51:06,594 - #29 .
INFO  04:51:06,594 - #36 pos
INFO  04:51:06,594 - #32 [
INFO  04:51:06,594 - #36 idx
INFO  04:51:06,594 - #33 ]
INFO  04:51:06,594 - #24 =
INFO  04:51:06,594 - #36 a
INFO  04:51:06,594 - #27 ;
INFO  04:51:06,594 - #35 }
INFO  04:51:06,594 - #13 void
INFO  04:51:06,594 - #36 putn
INFO  04:51:06,594 - #30 (
INFO  04:51:06,594 - #36 int
INFO  04:51:06,594 - #36 a
INFO  04:51:06,594 - #28 ,
INFO  04:51:06,594 - #36 int
INFO  04:51:06,594 - #36 idx
INFO  04:51:06,594 - #31 )
INFO  04:51:06,594 - #34 {
INFO  04:51:06,594 - #36 this
INFO  04:51:06,594 - #29 .
INFO  04:51:06,594 - #36 neg
INFO  04:51:06,594 - #32 [
INFO  04:51:06,594 - #36 idx
INFO  04:51:06,594 - #33 ]
INFO  04:51:06,594 - #24 =
INFO  04:51:06,595 - #36 a
INFO  04:51:06,595 - #27 ;
INFO  04:51:06,595 - #35 }
INFO  04:51:06,595 - #36 int
INFO  04:51:06,595 - #36 getp
INFO  04:51:06,595 - #30 (
INFO  04:51:06,595 - #36 int
INFO  04:51:06,595 - #36 idx
INFO  04:51:06,595 - #31 )
INFO  04:51:06,595 - #34 {
INFO  04:51:06,595 - #12 return
INFO  04:51:06,595 - #36 pos
INFO  04:51:06,595 - #32 [
INFO  04:51:06,595 - #36 idx
INFO  04:51:06,595 - #33 ]
INFO  04:51:06,595 - #27 ;
INFO  04:51:06,595 - #35 }
INFO  04:51:06,595 - #36 int
INFO  04:51:06,595 - #36 getn
INFO  04:51:06,596 - #30 (
INFO  04:51:06,596 - #36 int
INFO  04:51:06,596 - #36 idx
INFO  04:51:06,596 - #31 )
INFO  04:51:06,596 - #34 {
INFO  04:51:06,596 - #12 return
INFO  04:51:06,596 - #36 neg
INFO  04:51:06,596 - #32 [
INFO  04:51:06,596 - #36 idx
INFO  04:51:06,596 - #33 ]
INFO  04:51:06,596 - #27 ;
INFO  04:51:06,596 - #35 }
INFO  04:51:06,596 - #35 }
INFO  04:51:06,596 - #35 }
INFO  04:51:06,596 - #36 Table
INFO  04:51:06,596 - #36 val
INFO  04:51:06,596 - #27 ;
INFO  04:51:06,596 - #34 {
INFO  04:51:06,596 - #13 void
INFO  04:51:06,596 - #36 f
INFO  04:51:06,596 - #30 (
INFO  04:51:06,596 - #36 char
INFO  04:51:06,596 - #36 ch
INFO  04:51:06,596 - #28 ,
INFO  04:51:06,596 - #36 int
INFO  04:51:06,596 - #36 a
INFO  04:51:06,596 - #28 ,
INFO  04:51:06,596 - #36 int
INFO  04:51:06,596 - #36 arg
INFO  04:51:06,597 - #31 )
INFO  04:51:06,597 - #36 int
INFO  04:51:06,597 - #36 x
INFO  04:51:06,597 - #27 ;
INFO  04:51:06,597 - #34 {
INFO  04:51:06,597 - #36 x
INFO  04:51:06,597 - #24 =
INFO  04:51:06,597 - #36 arg
INFO  04:51:06,597 - #27 ;
INFO  04:51:06,597 - #35 }
INFO  04:51:06,597 - #13 void
INFO  04:51:06,597 - #36 main
INFO  04:51:06,597 - #30 (
INFO  04:51:06,597 - #31 )
INFO  04:51:06,597 - #36 int
INFO  04:51:06,597 - #36 x
INFO  04:51:06,597 - #28 ,
INFO  04:51:06,597 - #36 i
INFO  04:51:06,597 - #27 ;
INFO  04:51:06,597 - #36 char
INFO  04:51:06,597 - #36 c
INFO  04:51:06,597 - #27 ;
INFO  04:51:06,597 - #34 {
INFO  04:51:06,597 - #36 val
INFO  04:51:06,597 - #24 =
INFO  04:51:06,598 - #9 new
INFO  04:51:06,598 - #36 Table
INFO  04:51:06,598 - #27 ;
INFO  04:51:06,598 - #36 val
INFO  04:51:06,598 - #29 .
INFO  04:51:06,598 - #36 pos
INFO  04:51:06,598 - #24 =
INFO  04:51:06,598 - #9 new
INFO  04:51:06,598 - #36 int
INFO  04:51:06,598 - #32 [
INFO  04:51:06,598 - #36 size
INFO  04:51:06,598 - #33 ]
INFO  04:51:06,598 - #27 ;
INFO  04:51:06,598 - #36 val
INFO  04:51:06,598 - #29 .
INFO  04:51:06,598 - #36 neg
INFO  04:51:06,598 - #24 =
INFO  04:51:06,598 - #9 new
INFO  04:51:06,598 - #36 int
INFO  04:51:06,598 - #32 [
INFO  04:51:06,598 - #36 size
INFO  04:51:06,598 - #33 ]
INFO  04:51:06,598 - #27 ;
INFO  04:51:06,598 - #14 for
INFO  04:51:06,598 - #30 (
INFO  04:51:06,598 - #36 i
INFO  04:51:06,598 - #24 =
INFO  04:51:06,598 - #37 0
INFO  04:51:06,598 - #27 ;
INFO  04:51:06,598 - #36 i
INFO  04:51:06,598 - #20 <
INFO  04:51:06,598 - #36 size
INFO  04:51:06,598 - #27 ;
INFO  04:51:06,598 - #36 i
INFO  04:51:06,600 - #25 ++
INFO  04:51:06,600 - #31 )
INFO  04:51:06,600 - #34 {
INFO  04:51:06,600 - #36 val
INFO  04:51:06,600 - #29 .
INFO  04:51:06,600 - #36 putp
INFO  04:51:06,600 - #30 (
INFO  04:51:06,600 - #37 0
INFO  04:51:06,600 - #28 ,
INFO  04:51:06,600 - #36 i
INFO  04:51:06,600 - #31 )
INFO  04:51:06,600 - #27 ;
INFO  04:51:06,600 - #36 val
INFO  04:51:06,600 - #29 .
INFO  04:51:06,600 - #36 putn
INFO  04:51:06,600 - #30 (
INFO  04:51:06,600 - #37 0
INFO  04:51:06,600 - #28 ,
INFO  04:51:06,600 - #36 i
INFO  04:51:06,600 - #31 )
INFO  04:51:06,600 - #27 ;
INFO  04:51:06,600 - #35 }
INFO  04:51:06,600 - #36 f
INFO  04:51:06,600 - #30 (
INFO  04:51:06,600 - #36 c
INFO  04:51:06,600 - #28 ,
INFO  04:51:06,600 - #36 x
INFO  04:51:06,600 - #28 ,
INFO  04:51:06,600 - #36 i
INFO  04:51:06,600 - #31 )
INFO  04:51:06,600 - #27 ;
INFO  04:51:06,600 - #36 X
INFO  04:51:06,600 - #24 =
INFO  04:51:06,601 - #38 c
INFO  04:51:06,601 - #27 ;
INFO  04:51:06,601 - #11 read
INFO  04:51:06,601 - #30 (
INFO  04:51:06,601 - #36 x
INFO  04:51:06,601 - #31 )
INFO  04:51:06,601 - #27 ;
INFO  04:51:06,601 - #14 for
INFO  04:51:06,601 - #30 (
INFO  04:51:06,601 - #27 ;
INFO  04:51:06,601 - #36 x
INFO  04:51:06,601 - #18 >
INFO  04:51:06,601 - #37 0
INFO  04:51:06,601 - #27 ;
INFO  04:51:06,601 - #31 )
INFO  04:51:06,601 - #34 {
INFO  04:51:06,601 - #8 if
INFO  04:51:06,601 - #30 (
INFO  04:51:06,601 - #36 Num
INFO  04:51:06,601 - #29 .
INFO  04:51:06,601 - #36 ZERO
INFO  04:51:06,601 - #21 <=
INFO  04:51:06,601 - #36 x
INFO  04:51:06,601 - #22 &&
INFO  04:51:06,601 - #36 x
INFO  04:51:06,601 - #20 <
INFO  04:51:06,601 - #36 size
INFO  04:51:06,601 - #31 )
INFO  04:51:06,601 - #34 {
INFO  04:51:06,601 - #36 val
INFO  04:51:06,601 - #29 .
INFO  04:51:06,601 - #36 putp
INFO  04:51:06,602 - #30 (
INFO  04:51:06,602 - #36 val
INFO  04:51:06,602 - #29 .
INFO  04:51:06,602 - #36 getp
INFO  04:51:06,602 - #30 (
INFO  04:51:06,602 - #36 x
INFO  04:51:06,602 - #31 )
INFO  04:51:06,602 - #11 +
INFO  04:51:06,602 - #36 Num
INFO  04:51:06,602 - #29 .
INFO  04:51:06,602 - #36 ONE
INFO  04:51:06,602 - #31 )
INFO  04:51:06,602 - #27 ;
INFO  04:51:06,602 - #35 }
INFO  04:51:06,602 - #6 else
INFO  04:51:06,602 - #8 if
INFO  04:51:06,602 - #30 (
INFO  04:51:06,602 - #12 -
INFO  04:51:06,602 - #36 size
INFO  04:51:06,602 - #20 <
INFO  04:51:06,602 - #36 x
INFO  04:51:06,602 - #22 &&
INFO  04:51:06,602 - #36 x
INFO  04:51:06,602 - #20 <
INFO  04:51:06,602 - #37 0
INFO  04:51:06,602 - #31 )
INFO  04:51:06,602 - #34 {
INFO  04:51:06,602 - #36 val
INFO  04:51:06,602 - #29 .
INFO  04:51:06,602 - #36 putn
INFO  04:51:06,602 - #30 (
INFO  04:51:06,602 - #36 val
INFO  04:51:06,602 - #29 .
INFO  04:51:06,602 - #36 getn
INFO  04:51:06,602 - #30 (
INFO  04:51:06,602 - #12 -
INFO  04:51:06,602 - #36 x
INFO  04:51:06,602 - #31 )
INFO  04:51:06,603 - #11 +
INFO  04:51:06,603 - #37 1
INFO  04:51:06,603 - #31 )
INFO  04:51:06,603 - #27 ;
INFO  04:51:06,603 - #35 }
INFO  04:51:06,603 - #11 read
INFO  04:51:06,603 - #30 (
INFO  04:51:06,603 - #36 x
INFO  04:51:06,603 - #31 )
INFO  04:51:06,603 - #27 ;
INFO  04:51:06,603 - #35 }
INFO  04:51:06,603 - #35 }
INFO  04:51:06,603 - #35 }
INFO  04:51:06,603 - --EOF.
