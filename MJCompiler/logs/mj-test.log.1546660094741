INFO  04:48:08,885 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  04:48:08,896 - #1 program
INFO  04:48:08,896 - #36 P
INFO  04:48:08,896 - #7 const
INFO  04:48:08,896 - #36 int
INFO  04:48:08,896 - #36 size
INFO  04:48:08,896 - #24 =
INFO  04:48:08,896 - #37 10
INFO  04:48:08,896 - #27 ;
INFO  04:48:08,896 - #5 enum
INFO  04:48:08,896 - #36 Num
INFO  04:48:08,896 - #34 {
INFO  04:48:08,897 - #36 ZERO
INFO  04:48:08,897 - #28 ,
INFO  04:48:08,897 - #36 ONE
INFO  04:48:08,897 - #28 ,
INFO  04:48:08,897 - #36 TEN
INFO  04:48:08,897 - #24 =
INFO  04:48:08,897 - #37 10
INFO  04:48:08,897 - #35 }
INFO  04:48:08,897 - #4 interface
INFO  04:48:08,897 - #36 I
INFO  04:48:08,897 - #34 {
INFO  04:48:08,897 - #36 int
INFO  04:48:08,898 - #36 getp
INFO  04:48:08,898 - #30 (
INFO  04:48:08,898 - #36 int
INFO  04:48:08,898 - #36 i
INFO  04:48:08,898 - #31 )
INFO  04:48:08,898 - #27 ;
INFO  04:48:08,898 - #36 int
INFO  04:48:08,898 - #36 getn
INFO  04:48:08,898 - #30 (
INFO  04:48:08,898 - #36 int
INFO  04:48:08,898 - #36 i
INFO  04:48:08,898 - #31 )
INFO  04:48:08,898 - #27 ;
INFO  04:48:08,898 - #35 }
INFO  04:48:08,898 - #3 class
INFO  04:48:08,898 - #36 Table
INFO  04:48:08,898 - #36 implements
INFO  04:48:08,898 - #36 I
INFO  04:48:08,898 - #34 {
INFO  04:48:08,898 - #36 int
INFO  04:48:08,898 - #36 pos
INFO  04:48:08,899 - #32 [
INFO  04:48:08,899 - #33 ]
INFO  04:48:08,899 - #28 ,
INFO  04:48:08,899 - #36 neg
INFO  04:48:08,899 - #32 [
INFO  04:48:08,899 - #33 ]
INFO  04:48:08,899 - #27 ;
INFO  04:48:08,899 - #34 {
INFO  04:48:08,899 - #13 void
INFO  04:48:08,899 - #36 putp
INFO  04:48:08,899 - #30 (
INFO  04:48:08,899 - #36 int
INFO  04:48:08,899 - #36 a
INFO  04:48:08,899 - #28 ,
INFO  04:48:08,899 - #36 int
INFO  04:48:08,899 - #36 idx
INFO  04:48:08,899 - #31 )
INFO  04:48:08,899 - #34 {
INFO  04:48:08,900 - #36 this
INFO  04:48:08,900 - #29 .
INFO  04:48:08,900 - #36 pos
INFO  04:48:08,900 - #32 [
INFO  04:48:08,900 - #36 idx
INFO  04:48:08,900 - #33 ]
INFO  04:48:08,900 - #24 =
INFO  04:48:08,900 - #36 a
INFO  04:48:08,900 - #27 ;
INFO  04:48:08,900 - #35 }
INFO  04:48:08,900 - #13 void
INFO  04:48:08,900 - #36 putn
INFO  04:48:08,900 - #30 (
INFO  04:48:08,901 - #36 int
INFO  04:48:08,901 - #36 a
INFO  04:48:08,901 - #28 ,
INFO  04:48:08,901 - #36 int
INFO  04:48:08,901 - #36 idx
INFO  04:48:08,901 - #31 )
INFO  04:48:08,901 - #34 {
INFO  04:48:08,901 - #36 this
INFO  04:48:08,901 - #29 .
INFO  04:48:08,901 - #36 neg
INFO  04:48:08,901 - #32 [
INFO  04:48:08,901 - #36 idx
INFO  04:48:08,901 - #33 ]
INFO  04:48:08,901 - #24 =
INFO  04:48:08,901 - #36 a
INFO  04:48:08,901 - #27 ;
INFO  04:48:08,901 - #35 }
INFO  04:48:08,901 - #36 int
INFO  04:48:08,902 - #36 getp
INFO  04:48:08,902 - #30 (
INFO  04:48:08,902 - #36 int
INFO  04:48:08,902 - #36 idx
INFO  04:48:08,902 - #31 )
INFO  04:48:08,902 - #34 {
INFO  04:48:08,902 - #12 return
INFO  04:48:08,902 - #36 pos
INFO  04:48:08,902 - #32 [
INFO  04:48:08,902 - #36 idx
INFO  04:48:08,902 - #33 ]
INFO  04:48:08,902 - #27 ;
INFO  04:48:08,902 - #35 }
INFO  04:48:08,902 - #36 int
INFO  04:48:08,902 - #36 getn
INFO  04:48:08,902 - #30 (
INFO  04:48:08,902 - #36 int
INFO  04:48:08,902 - #36 idx
INFO  04:48:08,902 - #31 )
INFO  04:48:08,902 - #34 {
INFO  04:48:08,902 - #12 return
INFO  04:48:08,902 - #36 neg
INFO  04:48:08,902 - #32 [
INFO  04:48:08,902 - #36 idx
INFO  04:48:08,903 - #33 ]
INFO  04:48:08,903 - #27 ;
INFO  04:48:08,903 - #35 }
INFO  04:48:08,903 - #35 }
INFO  04:48:08,903 - #35 }
INFO  04:48:08,903 - #36 Table
INFO  04:48:08,903 - #36 val
INFO  04:48:08,903 - #27 ;
INFO  04:48:08,903 - #34 {
INFO  04:48:08,903 - #13 void
INFO  04:48:08,903 - #36 f
INFO  04:48:08,903 - #30 (
INFO  04:48:08,903 - #36 char
INFO  04:48:08,903 - #36 ch
INFO  04:48:08,903 - #28 ,
INFO  04:48:08,903 - #36 int
INFO  04:48:08,903 - #36 a
INFO  04:48:08,903 - #28 ,
INFO  04:48:08,903 - #36 int
INFO  04:48:08,903 - #36 arg
INFO  04:48:08,904 - #31 )
INFO  04:48:08,904 - #36 int
INFO  04:48:08,904 - #36 x
INFO  04:48:08,904 - #27 ;
INFO  04:48:08,904 - #34 {
INFO  04:48:08,904 - #36 x
INFO  04:48:08,904 - #24 =
INFO  04:48:08,904 - #36 arg
INFO  04:48:08,904 - #27 ;
INFO  04:48:08,904 - #35 }
INFO  04:48:08,904 - #13 void
INFO  04:48:08,904 - #36 main
INFO  04:48:08,904 - #30 (
INFO  04:48:08,904 - #31 )
INFO  04:48:08,904 - #36 int
INFO  04:48:08,904 - #36 x
INFO  04:48:08,904 - #28 ,
INFO  04:48:08,904 - #36 i
INFO  04:48:08,905 - #27 ;
INFO  04:48:08,905 - #36 char
INFO  04:48:08,905 - #36 c
INFO  04:48:08,905 - #27 ;
INFO  04:48:08,905 - #34 {
INFO  04:48:08,905 - #36 val
INFO  04:48:08,905 - #24 =
INFO  04:48:08,905 - #9 new
INFO  04:48:08,905 - #36 Table
INFO  04:48:08,905 - #27 ;
INFO  04:48:08,905 - #36 val
INFO  04:48:08,905 - #29 .
INFO  04:48:08,905 - #36 pos
INFO  04:48:08,905 - #24 =
INFO  04:48:08,905 - #9 new
INFO  04:48:08,905 - #36 int
INFO  04:48:08,905 - #32 [
INFO  04:48:08,905 - #36 size
INFO  04:48:08,905 - #33 ]
INFO  04:48:08,905 - #27 ;
INFO  04:48:08,905 - #36 val
INFO  04:48:08,906 - #29 .
INFO  04:48:08,906 - #36 neg
INFO  04:48:08,906 - #24 =
INFO  04:48:08,906 - #9 new
INFO  04:48:08,906 - #36 int
INFO  04:48:08,906 - #32 [
INFO  04:48:08,906 - #36 size
INFO  04:48:08,906 - #33 ]
INFO  04:48:08,906 - #27 ;
INFO  04:48:08,906 - #14 for
INFO  04:48:08,906 - #30 (
INFO  04:48:08,906 - #36 i
INFO  04:48:08,906 - #24 =
INFO  04:48:08,906 - #37 0
INFO  04:48:08,906 - #27 ;
INFO  04:48:08,906 - #36 i
INFO  04:48:08,906 - #20 <
INFO  04:48:08,906 - #36 size
INFO  04:48:08,906 - #27 ;
INFO  04:48:08,906 - #36 i
INFO  04:48:08,907 - #25 ++
INFO  04:48:08,907 - #31 )
INFO  04:48:08,907 - #34 {
INFO  04:48:08,908 - #36 val
INFO  04:48:08,908 - #29 .
INFO  04:48:08,908 - #36 putp
INFO  04:48:08,908 - #30 (
INFO  04:48:08,908 - #37 0
INFO  04:48:08,908 - #28 ,
INFO  04:48:08,908 - #36 i
INFO  04:48:08,908 - #31 )
INFO  04:48:08,908 - #27 ;
INFO  04:48:08,908 - #36 val
INFO  04:48:08,908 - #29 .
INFO  04:48:08,908 - #36 putn
INFO  04:48:08,908 - #30 (
INFO  04:48:08,908 - #37 0
INFO  04:48:08,908 - #28 ,
INFO  04:48:08,908 - #36 i
INFO  04:48:08,908 - #31 )
INFO  04:48:08,908 - #27 ;
INFO  04:48:08,908 - #35 }
INFO  04:48:08,908 - #36 f
INFO  04:48:08,908 - #30 (
INFO  04:48:08,908 - #36 c
INFO  04:48:08,908 - #28 ,
INFO  04:48:08,908 - #36 x
INFO  04:48:08,908 - #28 ,
INFO  04:48:08,908 - #36 i
INFO  04:48:08,908 - #31 )
INFO  04:48:08,908 - #27 ;
INFO  04:48:08,908 - #36 X
INFO  04:48:08,908 - #24 =
INFO  04:48:08,908 - #38 c
INFO  04:48:08,908 - #27 ;
INFO  04:48:08,908 - #11 read
INFO  04:48:08,908 - #30 (
INFO  04:48:08,908 - #36 x
INFO  04:48:08,908 - #31 )
INFO  04:48:08,908 - #27 ;
INFO  04:48:08,908 - #14 for
INFO  04:48:08,908 - #30 (
INFO  04:48:08,908 - #27 ;
INFO  04:48:08,908 - #36 x
INFO  04:48:08,908 - #18 >
INFO  04:48:08,908 - #37 0
INFO  04:48:08,908 - #27 ;
INFO  04:48:08,908 - #31 )
INFO  04:48:08,909 - #34 {
INFO  04:48:08,909 - #8 if
INFO  04:48:08,909 - #30 (
INFO  04:48:08,909 - #36 Num
INFO  04:48:08,909 - #29 .
INFO  04:48:08,909 - #36 ZERO
INFO  04:48:08,909 - #21 <=
INFO  04:48:08,909 - #36 x
INFO  04:48:08,909 - #22 &&
INFO  04:48:08,909 - #36 x
INFO  04:48:08,909 - #20 <
INFO  04:48:08,909 - #36 size
INFO  04:48:08,909 - #31 )
INFO  04:48:08,909 - #34 {
INFO  04:48:08,909 - #36 val
INFO  04:48:08,909 - #29 .
INFO  04:48:08,909 - #36 putp
INFO  04:48:08,909 - #30 (
INFO  04:48:08,909 - #36 val
INFO  04:48:08,909 - #29 .
INFO  04:48:08,909 - #36 getp
INFO  04:48:08,909 - #30 (
INFO  04:48:08,909 - #36 x
INFO  04:48:08,909 - #31 )
INFO  04:48:08,909 - #11 +
INFO  04:48:08,909 - #36 Num
INFO  04:48:08,909 - #29 .
INFO  04:48:08,909 - #36 ONE
INFO  04:48:08,909 - #31 )
INFO  04:48:08,909 - #27 ;
INFO  04:48:08,909 - #35 }
INFO  04:48:08,909 - #6 else
INFO  04:48:08,909 - #8 if
INFO  04:48:08,909 - #30 (
INFO  04:48:08,909 - #12 -
INFO  04:48:08,909 - #36 size
INFO  04:48:08,909 - #20 <
INFO  04:48:08,909 - #36 x
INFO  04:48:08,910 - #22 &&
INFO  04:48:08,910 - #36 x
INFO  04:48:08,910 - #20 <
INFO  04:48:08,910 - #37 0
INFO  04:48:08,910 - #31 )
INFO  04:48:08,910 - #34 {
INFO  04:48:08,910 - #36 val
INFO  04:48:08,910 - #29 .
INFO  04:48:08,910 - #36 putn
INFO  04:48:08,910 - #30 (
INFO  04:48:08,910 - #36 val
INFO  04:48:08,910 - #29 .
INFO  04:48:08,910 - #36 getn
INFO  04:48:08,910 - #30 (
INFO  04:48:08,910 - #12 -
INFO  04:48:08,910 - #36 x
INFO  04:48:08,910 - #31 )
INFO  04:48:08,910 - #11 +
INFO  04:48:08,910 - #37 1
INFO  04:48:08,910 - #31 )
INFO  04:48:08,910 - #27 ;
INFO  04:48:08,910 - #35 }
INFO  04:48:08,910 - #11 read
INFO  04:48:08,910 - #30 (
INFO  04:48:08,910 - #36 x
INFO  04:48:08,910 - #31 )
INFO  04:48:08,910 - #27 ;
INFO  04:48:08,910 - #35 }
INFO  04:48:08,910 - #35 }
INFO  04:48:08,910 - #35 }
INFO  04:48:08,910 - --EOF.
