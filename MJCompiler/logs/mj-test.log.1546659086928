INFO  04:31:08,518 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  04:31:08,527 - #1 program
INFO  04:31:08,527 - #36 P
INFO  04:31:08,527 - #7 const
INFO  04:31:08,527 - #36 int
INFO  04:31:08,527 - #36 size
INFO  04:31:08,527 - #24 =
INFO  04:31:08,527 - #37 10
INFO  04:31:08,527 - #27 ;
INFO  04:31:08,528 - #5 enum
INFO  04:31:08,528 - #36 Num
INFO  04:31:08,528 - #34 {
INFO  04:31:08,528 - #36 ZERO
INFO  04:31:08,528 - #28 ,
INFO  04:31:08,528 - #36 ONE
INFO  04:31:08,528 - #28 ,
INFO  04:31:08,528 - #36 TEN
INFO  04:31:08,528 - #24 =
INFO  04:31:08,528 - #37 10
INFO  04:31:08,528 - #35 }
INFO  04:31:08,528 - #4 interface
INFO  04:31:08,528 - #36 I
INFO  04:31:08,528 - #34 {
INFO  04:31:08,528 - #36 int
INFO  04:31:08,528 - #36 getp
INFO  04:31:08,528 - #30 (
INFO  04:31:08,528 - #36 int
INFO  04:31:08,528 - #36 i
INFO  04:31:08,528 - #31 )
INFO  04:31:08,529 - #27 ;
INFO  04:31:08,529 - #36 int
INFO  04:31:08,529 - #36 getn
INFO  04:31:08,529 - #30 (
INFO  04:31:08,529 - #36 int
INFO  04:31:08,529 - #36 i
INFO  04:31:08,529 - #31 )
INFO  04:31:08,529 - #27 ;
INFO  04:31:08,529 - #35 }
INFO  04:31:08,529 - #3 class
INFO  04:31:08,529 - #36 Table
INFO  04:31:08,529 - #36 implements
INFO  04:31:08,529 - #36 I
INFO  04:31:08,529 - #34 {
INFO  04:31:08,529 - #36 int
INFO  04:31:08,529 - #36 pos
INFO  04:31:08,529 - #32 [
INFO  04:31:08,529 - #33 ]
INFO  04:31:08,529 - #28 ,
INFO  04:31:08,529 - #36 neg
INFO  04:31:08,529 - #32 [
INFO  04:31:08,529 - #33 ]
INFO  04:31:08,529 - #27 ;
INFO  04:31:08,529 - #34 {
INFO  04:31:08,529 - #13 void
INFO  04:31:08,529 - #36 putp
INFO  04:31:08,529 - #30 (
INFO  04:31:08,529 - #36 int
INFO  04:31:08,529 - #36 a
INFO  04:31:08,529 - #28 ,
INFO  04:31:08,530 - #36 int
INFO  04:31:08,530 - #36 idx
INFO  04:31:08,530 - #31 )
INFO  04:31:08,530 - #34 {
INFO  04:31:08,530 - #36 this
INFO  04:31:08,530 - #29 .
INFO  04:31:08,530 - #36 pos
INFO  04:31:08,530 - #32 [
INFO  04:31:08,530 - #36 idx
INFO  04:31:08,530 - #33 ]
INFO  04:31:08,530 - #24 =
INFO  04:31:08,530 - #36 a
INFO  04:31:08,530 - #27 ;
INFO  04:31:08,530 - #35 }
INFO  04:31:08,530 - #13 void
INFO  04:31:08,530 - #36 putn
INFO  04:31:08,530 - #30 (
INFO  04:31:08,530 - #36 int
INFO  04:31:08,530 - #36 a
INFO  04:31:08,530 - #28 ,
INFO  04:31:08,530 - #36 int
INFO  04:31:08,530 - #36 idx
INFO  04:31:08,530 - #31 )
INFO  04:31:08,530 - #34 {
INFO  04:31:08,530 - #36 this
INFO  04:31:08,530 - #29 .
INFO  04:31:08,530 - #36 neg
INFO  04:31:08,530 - #32 [
INFO  04:31:08,530 - #36 idx
INFO  04:31:08,530 - #33 ]
INFO  04:31:08,530 - #24 =
INFO  04:31:08,531 - #36 a
INFO  04:31:08,531 - #27 ;
INFO  04:31:08,531 - #35 }
INFO  04:31:08,531 - #36 int
INFO  04:31:08,531 - #36 getp
INFO  04:31:08,531 - #30 (
INFO  04:31:08,531 - #36 int
INFO  04:31:08,531 - #36 idx
INFO  04:31:08,531 - #31 )
INFO  04:31:08,531 - #34 {
INFO  04:31:08,531 - #12 return
INFO  04:31:08,531 - #36 pos
INFO  04:31:08,531 - #32 [
INFO  04:31:08,531 - #36 idx
INFO  04:31:08,531 - #33 ]
INFO  04:31:08,531 - #27 ;
INFO  04:31:08,531 - #35 }
INFO  04:31:08,531 - #36 int
INFO  04:31:08,531 - #36 getn
INFO  04:31:08,531 - #30 (
INFO  04:31:08,531 - #36 int
INFO  04:31:08,531 - #36 idx
INFO  04:31:08,531 - #31 )
INFO  04:31:08,531 - #34 {
INFO  04:31:08,531 - #12 return
INFO  04:31:08,532 - #36 neg
INFO  04:31:08,532 - #32 [
INFO  04:31:08,532 - #36 idx
INFO  04:31:08,532 - #33 ]
INFO  04:31:08,532 - #27 ;
INFO  04:31:08,532 - #35 }
INFO  04:31:08,532 - #35 }
INFO  04:31:08,532 - #35 }
INFO  04:31:08,532 - #36 Table
INFO  04:31:08,532 - #36 val
INFO  04:31:08,532 - #27 ;
INFO  04:31:08,532 - #34 {
INFO  04:31:08,532 - #13 void
INFO  04:31:08,532 - #36 f
INFO  04:31:08,532 - #30 (
INFO  04:31:08,532 - #36 char
INFO  04:31:08,532 - #36 ch
INFO  04:31:08,532 - #28 ,
INFO  04:31:08,532 - #36 int
INFO  04:31:08,532 - #36 a
INFO  04:31:08,532 - #28 ,
INFO  04:31:08,532 - #36 int
INFO  04:31:08,532 - #36 arg
INFO  04:31:08,532 - #31 )
INFO  04:31:08,533 - #36 int
INFO  04:31:08,533 - #36 x
INFO  04:31:08,533 - #27 ;
INFO  04:31:08,533 - #34 {
INFO  04:31:08,533 - #36 x
INFO  04:31:08,533 - #24 =
INFO  04:31:08,533 - #36 arg
INFO  04:31:08,533 - #27 ;
INFO  04:31:08,533 - #35 }
INFO  04:31:08,533 - #13 void
INFO  04:31:08,533 - #36 main
INFO  04:31:08,533 - #30 (
INFO  04:31:08,533 - #31 )
INFO  04:31:08,533 - #36 int
INFO  04:31:08,533 - #36 x
INFO  04:31:08,533 - #28 ,
INFO  04:31:08,533 - #36 i
INFO  04:31:08,533 - #27 ;
INFO  04:31:08,533 - #36 char
INFO  04:31:08,533 - #36 c
INFO  04:31:08,533 - #27 ;
INFO  04:31:08,533 - #34 {
INFO  04:31:08,533 - #36 val
INFO  04:31:08,533 - #24 =
INFO  04:31:08,533 - #9 new
INFO  04:31:08,533 - #36 Table
INFO  04:31:08,533 - #27 ;
INFO  04:31:08,533 - #36 val
INFO  04:31:08,533 - #29 .
INFO  04:31:08,533 - #36 pos
INFO  04:31:08,533 - #24 =
INFO  04:31:08,534 - #9 new
INFO  04:31:08,534 - #36 int
INFO  04:31:08,534 - #32 [
INFO  04:31:08,534 - #36 size
INFO  04:31:08,534 - #33 ]
INFO  04:31:08,534 - #27 ;
INFO  04:31:08,534 - #36 val
INFO  04:31:08,534 - #29 .
INFO  04:31:08,534 - #36 neg
INFO  04:31:08,534 - #24 =
INFO  04:31:08,534 - #9 new
INFO  04:31:08,534 - #36 int
INFO  04:31:08,534 - #32 [
INFO  04:31:08,534 - #36 size
INFO  04:31:08,534 - #33 ]
INFO  04:31:08,534 - #27 ;
INFO  04:31:08,534 - #14 for
INFO  04:31:08,534 - #30 (
INFO  04:31:08,534 - #36 i
INFO  04:31:08,534 - #24 =
INFO  04:31:08,534 - #37 0
INFO  04:31:08,534 - #27 ;
INFO  04:31:08,534 - #36 i
INFO  04:31:08,534 - #20 <
INFO  04:31:08,534 - #36 size
INFO  04:31:08,534 - #27 ;
INFO  04:31:08,534 - #36 i
INFO  04:31:08,536 - #25 ++
INFO  04:31:08,536 - #31 )
INFO  04:31:08,536 - #34 {
INFO  04:31:08,536 - #36 val
INFO  04:31:08,536 - #29 .
INFO  04:31:08,536 - #36 putp
INFO  04:31:08,536 - #30 (
INFO  04:31:08,536 - #37 0
INFO  04:31:08,536 - #28 ,
INFO  04:31:08,536 - #36 i
INFO  04:31:08,536 - #31 )
INFO  04:31:08,536 - #27 ;
INFO  04:31:08,536 - #36 val
INFO  04:31:08,536 - #29 .
INFO  04:31:08,536 - #36 putn
INFO  04:31:08,536 - #30 (
INFO  04:31:08,536 - #37 0
INFO  04:31:08,536 - #28 ,
INFO  04:31:08,536 - #36 i
INFO  04:31:08,536 - #31 )
INFO  04:31:08,536 - #27 ;
INFO  04:31:08,536 - #35 }
INFO  04:31:08,536 - #36 f
INFO  04:31:08,536 - #30 (
INFO  04:31:08,536 - #36 c
INFO  04:31:08,536 - #28 ,
INFO  04:31:08,536 - #36 x
INFO  04:31:08,536 - #28 ,
INFO  04:31:08,536 - #36 i
INFO  04:31:08,536 - #31 )
INFO  04:31:08,536 - #27 ;
INFO  04:31:08,536 - #11 read
INFO  04:31:08,536 - #30 (
INFO  04:31:08,536 - #36 x
INFO  04:31:08,536 - #31 )
INFO  04:31:08,536 - #27 ;
INFO  04:31:08,536 - #14 for
INFO  04:31:08,536 - #30 (
INFO  04:31:08,536 - #27 ;
INFO  04:31:08,537 - #36 x
INFO  04:31:08,537 - #18 >
INFO  04:31:08,537 - #37 0
INFO  04:31:08,537 - #27 ;
INFO  04:31:08,537 - #31 )
INFO  04:31:08,537 - #34 {
INFO  04:31:08,537 - #8 if
INFO  04:31:08,537 - #30 (
INFO  04:31:08,537 - #36 Num
INFO  04:31:08,537 - #29 .
INFO  04:31:08,537 - #36 ZERO
INFO  04:31:08,537 - #21 <=
INFO  04:31:08,537 - #36 x
INFO  04:31:08,537 - #22 &&
INFO  04:31:08,537 - #36 x
INFO  04:31:08,537 - #20 <
INFO  04:31:08,537 - #36 size
INFO  04:31:08,537 - #31 )
INFO  04:31:08,537 - #34 {
INFO  04:31:08,537 - #36 val
INFO  04:31:08,537 - #29 .
INFO  04:31:08,537 - #36 putp
INFO  04:31:08,537 - #30 (
INFO  04:31:08,537 - #36 val
INFO  04:31:08,537 - #29 .
INFO  04:31:08,537 - #36 getp
INFO  04:31:08,538 - #30 (
INFO  04:31:08,538 - #36 x
INFO  04:31:08,538 - #31 )
INFO  04:31:08,538 - #11 +
INFO  04:31:08,538 - #36 Num
INFO  04:31:08,538 - #29 .
INFO  04:31:08,538 - #36 ONE
INFO  04:31:08,538 - #31 )
INFO  04:31:08,538 - #27 ;
INFO  04:31:08,538 - #35 }
INFO  04:31:08,538 - #6 else
INFO  04:31:08,538 - #8 if
INFO  04:31:08,538 - #30 (
INFO  04:31:08,538 - #36 size
INFO  04:31:08,538 - #20 <
INFO  04:31:08,538 - #36 x
INFO  04:31:08,538 - #22 &&
INFO  04:31:08,538 - #36 x
INFO  04:31:08,538 - #20 <
INFO  04:31:08,538 - #37 0
INFO  04:31:08,538 - #31 )
INFO  04:31:08,538 - #34 {
INFO  04:31:08,538 - #36 val
INFO  04:31:08,538 - #29 .
INFO  04:31:08,538 - #36 putn
INFO  04:31:08,538 - #30 (
INFO  04:31:08,538 - #36 val
INFO  04:31:08,538 - #29 .
INFO  04:31:08,538 - #36 getn
INFO  04:31:08,538 - #30 (
INFO  04:31:08,538 - #36 x
INFO  04:31:08,538 - #31 )
INFO  04:31:08,538 - #11 +
INFO  04:31:08,538 - #37 1
INFO  04:31:08,538 - #31 )
INFO  04:31:08,538 - #27 ;
INFO  04:31:08,538 - #35 }
INFO  04:31:08,538 - #11 read
INFO  04:31:08,538 - #30 (
INFO  04:31:08,538 - #36 x
INFO  04:31:08,538 - #31 )
INFO  04:31:08,538 - #27 ;
INFO  04:31:08,538 - #35 }
INFO  04:31:08,538 - #35 }
INFO  04:31:08,538 - #35 }
INFO  04:31:08,538 - --EOF.
