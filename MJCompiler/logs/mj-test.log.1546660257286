INFO  04:50:46,767 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  04:50:46,776 - #1 program
INFO  04:50:46,776 - #36 P
INFO  04:50:46,776 - #7 const
INFO  04:50:46,776 - #36 int
INFO  04:50:46,776 - #36 size
INFO  04:50:46,777 - #24 =
INFO  04:50:46,777 - #37 10
INFO  04:50:46,777 - #27 ;
INFO  04:50:46,777 - #5 enum
INFO  04:50:46,777 - #36 Num
INFO  04:50:46,777 - #34 {
INFO  04:50:46,777 - #36 ZERO
INFO  04:50:46,777 - #28 ,
INFO  04:50:46,777 - #36 ONE
INFO  04:50:46,777 - #28 ,
INFO  04:50:46,777 - #36 TEN
INFO  04:50:46,777 - #24 =
INFO  04:50:46,777 - #37 10
INFO  04:50:46,777 - #35 }
INFO  04:50:46,777 - #4 interface
INFO  04:50:46,777 - #36 I
INFO  04:50:46,777 - #34 {
INFO  04:50:46,778 - #36 int
INFO  04:50:46,778 - #36 getp
INFO  04:50:46,778 - #30 (
INFO  04:50:46,778 - #36 int
INFO  04:50:46,778 - #36 i
INFO  04:50:46,778 - #31 )
INFO  04:50:46,778 - #27 ;
INFO  04:50:46,778 - #36 int
INFO  04:50:46,778 - #36 getn
INFO  04:50:46,778 - #30 (
INFO  04:50:46,778 - #36 int
INFO  04:50:46,778 - #36 i
INFO  04:50:46,778 - #31 )
INFO  04:50:46,778 - #27 ;
INFO  04:50:46,778 - #35 }
INFO  04:50:46,778 - #3 class
INFO  04:50:46,778 - #36 Table
INFO  04:50:46,778 - #36 implements
INFO  04:50:46,778 - #36 I
INFO  04:50:46,778 - #34 {
INFO  04:50:46,778 - #36 int
INFO  04:50:46,778 - #36 pos
INFO  04:50:46,778 - #32 [
INFO  04:50:46,779 - #33 ]
INFO  04:50:46,779 - #28 ,
INFO  04:50:46,779 - #36 neg
INFO  04:50:46,779 - #32 [
INFO  04:50:46,779 - #33 ]
INFO  04:50:46,779 - #27 ;
INFO  04:50:46,779 - #34 {
INFO  04:50:46,779 - #13 void
INFO  04:50:46,779 - #36 putp
INFO  04:50:46,779 - #30 (
INFO  04:50:46,779 - #36 int
INFO  04:50:46,779 - #36 a
INFO  04:50:46,779 - #28 ,
INFO  04:50:46,779 - #36 int
INFO  04:50:46,779 - #36 idx
INFO  04:50:46,779 - #31 )
INFO  04:50:46,779 - #34 {
INFO  04:50:46,779 - #36 this
INFO  04:50:46,779 - #29 .
INFO  04:50:46,779 - #36 pos
INFO  04:50:46,779 - #32 [
INFO  04:50:46,779 - #36 idx
INFO  04:50:46,779 - #33 ]
INFO  04:50:46,779 - #24 =
INFO  04:50:46,779 - #36 a
INFO  04:50:46,779 - #27 ;
INFO  04:50:46,779 - #35 }
INFO  04:50:46,779 - #13 void
INFO  04:50:46,780 - #36 putn
INFO  04:50:46,780 - #30 (
INFO  04:50:46,780 - #36 int
INFO  04:50:46,780 - #36 a
INFO  04:50:46,780 - #28 ,
INFO  04:50:46,780 - #36 int
INFO  04:50:46,780 - #36 idx
INFO  04:50:46,780 - #31 )
INFO  04:50:46,780 - #34 {
INFO  04:50:46,780 - #36 this
INFO  04:50:46,780 - #29 .
INFO  04:50:46,780 - #36 neg
INFO  04:50:46,780 - #32 [
INFO  04:50:46,780 - #36 idx
INFO  04:50:46,780 - #33 ]
INFO  04:50:46,780 - #24 =
INFO  04:50:46,780 - #36 a
INFO  04:50:46,780 - #27 ;
INFO  04:50:46,780 - #35 }
INFO  04:50:46,780 - #36 int
INFO  04:50:46,780 - #36 getp
INFO  04:50:46,780 - #30 (
INFO  04:50:46,780 - #36 int
INFO  04:50:46,780 - #36 idx
INFO  04:50:46,780 - #31 )
INFO  04:50:46,780 - #34 {
INFO  04:50:46,781 - #12 return
INFO  04:50:46,781 - #36 pos
INFO  04:50:46,781 - #32 [
INFO  04:50:46,781 - #36 idx
INFO  04:50:46,781 - #33 ]
INFO  04:50:46,781 - #27 ;
INFO  04:50:46,781 - #35 }
INFO  04:50:46,781 - #36 int
INFO  04:50:46,781 - #36 getn
INFO  04:50:46,781 - #30 (
INFO  04:50:46,781 - #36 int
INFO  04:50:46,781 - #36 idx
INFO  04:50:46,781 - #31 )
INFO  04:50:46,781 - #34 {
INFO  04:50:46,781 - #12 return
INFO  04:50:46,781 - #36 neg
INFO  04:50:46,781 - #32 [
INFO  04:50:46,781 - #36 idx
INFO  04:50:46,781 - #33 ]
INFO  04:50:46,781 - #27 ;
INFO  04:50:46,781 - #35 }
INFO  04:50:46,781 - #35 }
INFO  04:50:46,781 - #35 }
INFO  04:50:46,781 - #36 Table
INFO  04:50:46,781 - #36 val
INFO  04:50:46,781 - #27 ;
INFO  04:50:46,782 - #34 {
INFO  04:50:46,782 - #13 void
INFO  04:50:46,782 - #36 f
INFO  04:50:46,782 - #30 (
INFO  04:50:46,782 - #36 char
INFO  04:50:46,782 - #36 ch
INFO  04:50:46,782 - #28 ,
INFO  04:50:46,782 - #36 int
INFO  04:50:46,782 - #36 a
INFO  04:50:46,782 - #28 ,
INFO  04:50:46,782 - #36 int
INFO  04:50:46,782 - #36 arg
INFO  04:50:46,782 - #31 )
INFO  04:50:46,782 - #36 int
INFO  04:50:46,782 - #36 x
INFO  04:50:46,782 - #27 ;
INFO  04:50:46,782 - #34 {
INFO  04:50:46,783 - #36 x
INFO  04:50:46,783 - #24 =
INFO  04:50:46,783 - #36 arg
INFO  04:50:46,783 - #27 ;
INFO  04:50:46,783 - #35 }
INFO  04:50:46,783 - #13 void
INFO  04:50:46,783 - #36 main
INFO  04:50:46,783 - #30 (
INFO  04:50:46,783 - #31 )
INFO  04:50:46,783 - #36 int
INFO  04:50:46,783 - #36 x
INFO  04:50:46,783 - #28 ,
INFO  04:50:46,783 - #36 i
INFO  04:50:46,783 - #27 ;
INFO  04:50:46,783 - #36 char
INFO  04:50:46,783 - #36 c
INFO  04:50:46,783 - #27 ;
INFO  04:50:46,783 - #34 {
INFO  04:50:46,783 - #36 val
INFO  04:50:46,783 - #24 =
INFO  04:50:46,783 - #9 new
INFO  04:50:46,783 - #36 Table
INFO  04:50:46,784 - #27 ;
INFO  04:50:46,784 - #36 val
INFO  04:50:46,784 - #29 .
INFO  04:50:46,784 - #36 pos
INFO  04:50:46,784 - #24 =
INFO  04:50:46,784 - #9 new
INFO  04:50:46,784 - #36 int
INFO  04:50:46,784 - #32 [
INFO  04:50:46,784 - #36 size
INFO  04:50:46,784 - #33 ]
INFO  04:50:46,784 - #27 ;
INFO  04:50:46,784 - #36 val
INFO  04:50:46,784 - #29 .
INFO  04:50:46,784 - #36 neg
INFO  04:50:46,784 - #24 =
INFO  04:50:46,784 - #9 new
INFO  04:50:46,784 - #36 int
INFO  04:50:46,784 - #32 [
INFO  04:50:46,784 - #36 size
INFO  04:50:46,784 - #33 ]
INFO  04:50:46,784 - #27 ;
INFO  04:50:46,784 - #14 for
INFO  04:50:46,784 - #30 (
INFO  04:50:46,784 - #36 i
INFO  04:50:46,784 - #24 =
INFO  04:50:46,784 - #37 0
INFO  04:50:46,785 - #27 ;
INFO  04:50:46,785 - #36 i
INFO  04:50:46,785 - #20 <
INFO  04:50:46,785 - #36 size
INFO  04:50:46,785 - #27 ;
INFO  04:50:46,785 - #36 i
INFO  04:50:46,787 - #25 ++
INFO  04:50:46,787 - #31 )
INFO  04:50:46,787 - #34 {
INFO  04:50:46,787 - #36 val
INFO  04:50:46,787 - #29 .
INFO  04:50:46,787 - #36 putp
INFO  04:50:46,787 - #30 (
INFO  04:50:46,787 - #37 0
INFO  04:50:46,787 - #28 ,
INFO  04:50:46,787 - #36 i
INFO  04:50:46,787 - #31 )
INFO  04:50:46,787 - #27 ;
INFO  04:50:46,787 - #36 val
INFO  04:50:46,787 - #29 .
INFO  04:50:46,787 - #36 putn
INFO  04:50:46,787 - #30 (
INFO  04:50:46,787 - #37 0
INFO  04:50:46,787 - #28 ,
INFO  04:50:46,787 - #36 i
INFO  04:50:46,787 - #31 )
INFO  04:50:46,787 - #27 ;
INFO  04:50:46,787 - #35 }
INFO  04:50:46,787 - #36 f
INFO  04:50:46,787 - #30 (
INFO  04:50:46,787 - #36 c
INFO  04:50:46,787 - #28 ,
INFO  04:50:46,787 - #36 x
INFO  04:50:46,787 - #28 ,
INFO  04:50:46,787 - #36 i
INFO  04:50:46,787 - #31 )
INFO  04:50:46,787 - #27 ;
INFO  04:50:46,787 - #36 X
INFO  04:50:46,787 - #24 =
INFO  04:50:46,787 - #38 c
INFO  04:50:46,788 - #27 ;
INFO  04:50:46,788 - #11 read
INFO  04:50:46,788 - #30 (
INFO  04:50:46,788 - #36 x
INFO  04:50:46,788 - #31 )
INFO  04:50:46,788 - #27 ;
INFO  04:50:46,788 - #14 for
INFO  04:50:46,788 - #30 (
INFO  04:50:46,788 - #27 ;
INFO  04:50:46,788 - #36 x
INFO  04:50:46,788 - #18 >
INFO  04:50:46,788 - #37 0
INFO  04:50:46,788 - #27 ;
INFO  04:50:46,788 - #31 )
INFO  04:50:46,788 - #34 {
INFO  04:50:46,788 - #8 if
INFO  04:50:46,788 - #30 (
INFO  04:50:46,788 - #36 Num
INFO  04:50:46,788 - #29 .
INFO  04:50:46,788 - #36 ZERO
INFO  04:50:46,788 - #21 <=
INFO  04:50:46,788 - #36 x
INFO  04:50:46,788 - #22 &&
INFO  04:50:46,788 - #36 x
INFO  04:50:46,788 - #20 <
INFO  04:50:46,789 - #36 size
INFO  04:50:46,789 - #31 )
INFO  04:50:46,789 - #34 {
INFO  04:50:46,789 - #36 val
INFO  04:50:46,789 - #29 .
INFO  04:50:46,789 - #36 putp
INFO  04:50:46,789 - #30 (
INFO  04:50:46,789 - #36 val
INFO  04:50:46,789 - #29 .
INFO  04:50:46,789 - #36 getp
INFO  04:50:46,789 - #30 (
INFO  04:50:46,789 - #36 x
INFO  04:50:46,789 - #31 )
INFO  04:50:46,789 - #11 +
INFO  04:50:46,789 - #36 Num
INFO  04:50:46,789 - #29 .
INFO  04:50:46,789 - #36 ONE
INFO  04:50:46,789 - #31 )
INFO  04:50:46,789 - #27 ;
INFO  04:50:46,789 - #35 }
INFO  04:50:46,789 - #6 else
INFO  04:50:46,789 - #8 if
INFO  04:50:46,789 - #30 (
INFO  04:50:46,789 - #12 -
INFO  04:50:46,789 - #36 size
INFO  04:50:46,789 - #20 <
INFO  04:50:46,789 - #36 x
INFO  04:50:46,789 - #22 &&
INFO  04:50:46,789 - #36 x
INFO  04:50:46,789 - #20 <
INFO  04:50:46,789 - #37 0
INFO  04:50:46,789 - #31 )
INFO  04:50:46,789 - #34 {
INFO  04:50:46,789 - #36 val
INFO  04:50:46,789 - #29 .
INFO  04:50:46,789 - #36 putn
INFO  04:50:46,789 - #30 (
INFO  04:50:46,789 - #36 val
INFO  04:50:46,789 - #29 .
INFO  04:50:46,789 - #36 getn
INFO  04:50:46,789 - #30 (
INFO  04:50:46,789 - #12 -
INFO  04:50:46,789 - #36 x
INFO  04:50:46,789 - #31 )
INFO  04:50:46,789 - #11 +
INFO  04:50:46,789 - #37 1
INFO  04:50:46,789 - #31 )
INFO  04:50:46,789 - #27 ;
INFO  04:50:46,789 - #35 }
INFO  04:50:46,790 - #11 read
INFO  04:50:46,790 - #30 (
INFO  04:50:46,790 - #36 x
INFO  04:50:46,790 - #31 )
INFO  04:50:46,790 - #27 ;
INFO  04:50:46,790 - #35 }
INFO  04:50:46,790 - #35 }
INFO  04:50:46,790 - #35 }
INFO  04:50:46,790 - --EOF.
