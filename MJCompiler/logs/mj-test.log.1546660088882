INFO  04:44:28,624 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  04:44:28,632 - #1 program
INFO  04:44:28,632 - #36 P
INFO  04:44:28,633 - #7 const
INFO  04:44:28,633 - #36 int
INFO  04:44:28,633 - #36 size
INFO  04:44:28,633 - #24 =
INFO  04:44:28,633 - #37 10
INFO  04:44:28,633 - #27 ;
INFO  04:44:28,633 - #5 enum
INFO  04:44:28,633 - #36 Num
INFO  04:44:28,633 - #34 {
INFO  04:44:28,633 - #36 ZERO
INFO  04:44:28,633 - #28 ,
INFO  04:44:28,633 - #36 ONE
INFO  04:44:28,633 - #28 ,
INFO  04:44:28,633 - #36 TEN
INFO  04:44:28,633 - #24 =
INFO  04:44:28,633 - #37 10
INFO  04:44:28,633 - #35 }
INFO  04:44:28,633 - #4 interface
INFO  04:44:28,633 - #36 I
INFO  04:44:28,634 - #34 {
INFO  04:44:28,634 - #36 int
INFO  04:44:28,634 - #36 getp
INFO  04:44:28,634 - #30 (
INFO  04:44:28,634 - #36 int
INFO  04:44:28,634 - #36 i
INFO  04:44:28,634 - #31 )
INFO  04:44:28,634 - #27 ;
INFO  04:44:28,634 - #36 int
INFO  04:44:28,634 - #36 getn
INFO  04:44:28,634 - #30 (
INFO  04:44:28,634 - #36 int
INFO  04:44:28,634 - #36 i
INFO  04:44:28,634 - #31 )
INFO  04:44:28,634 - #27 ;
INFO  04:44:28,634 - #35 }
INFO  04:44:28,634 - #3 class
INFO  04:44:28,634 - #36 Table
INFO  04:44:28,634 - #36 implements
INFO  04:44:28,634 - #36 I
INFO  04:44:28,634 - #34 {
INFO  04:44:28,634 - #36 int
INFO  04:44:28,634 - #36 pos
INFO  04:44:28,634 - #32 [
INFO  04:44:28,635 - #33 ]
INFO  04:44:28,635 - #28 ,
INFO  04:44:28,635 - #36 neg
INFO  04:44:28,635 - #32 [
INFO  04:44:28,635 - #33 ]
INFO  04:44:28,635 - #27 ;
INFO  04:44:28,635 - #34 {
INFO  04:44:28,635 - #13 void
INFO  04:44:28,635 - #36 putp
INFO  04:44:28,635 - #30 (
INFO  04:44:28,635 - #36 int
INFO  04:44:28,635 - #36 a
INFO  04:44:28,635 - #28 ,
INFO  04:44:28,635 - #36 int
INFO  04:44:28,635 - #36 idx
INFO  04:44:28,635 - #31 )
INFO  04:44:28,635 - #34 {
INFO  04:44:28,635 - #36 this
INFO  04:44:28,635 - #29 .
INFO  04:44:28,635 - #36 pos
INFO  04:44:28,635 - #32 [
INFO  04:44:28,635 - #36 idx
INFO  04:44:28,635 - #33 ]
INFO  04:44:28,635 - #24 =
INFO  04:44:28,635 - #36 a
INFO  04:44:28,635 - #27 ;
INFO  04:44:28,635 - #35 }
INFO  04:44:28,635 - #13 void
INFO  04:44:28,636 - #36 putn
INFO  04:44:28,636 - #30 (
INFO  04:44:28,636 - #36 int
INFO  04:44:28,636 - #36 a
INFO  04:44:28,636 - #28 ,
INFO  04:44:28,636 - #36 int
INFO  04:44:28,636 - #36 idx
INFO  04:44:28,636 - #31 )
INFO  04:44:28,636 - #34 {
INFO  04:44:28,636 - #36 this
INFO  04:44:28,636 - #29 .
INFO  04:44:28,636 - #36 neg
INFO  04:44:28,636 - #32 [
INFO  04:44:28,636 - #36 idx
INFO  04:44:28,636 - #33 ]
INFO  04:44:28,636 - #24 =
INFO  04:44:28,636 - #36 a
INFO  04:44:28,636 - #27 ;
INFO  04:44:28,636 - #35 }
INFO  04:44:28,636 - #36 int
INFO  04:44:28,636 - #36 getp
INFO  04:44:28,636 - #30 (
INFO  04:44:28,636 - #36 int
INFO  04:44:28,636 - #36 idx
INFO  04:44:28,637 - #31 )
INFO  04:44:28,637 - #34 {
INFO  04:44:28,637 - #12 return
INFO  04:44:28,637 - #36 pos
INFO  04:44:28,637 - #32 [
INFO  04:44:28,637 - #36 idx
INFO  04:44:28,637 - #33 ]
INFO  04:44:28,637 - #27 ;
INFO  04:44:28,637 - #35 }
INFO  04:44:28,637 - #36 int
INFO  04:44:28,637 - #36 getn
INFO  04:44:28,637 - #30 (
INFO  04:44:28,637 - #36 int
INFO  04:44:28,637 - #36 idx
INFO  04:44:28,637 - #31 )
INFO  04:44:28,637 - #34 {
INFO  04:44:28,637 - #12 return
INFO  04:44:28,637 - #36 neg
INFO  04:44:28,637 - #32 [
INFO  04:44:28,637 - #36 idx
INFO  04:44:28,637 - #33 ]
INFO  04:44:28,637 - #27 ;
INFO  04:44:28,637 - #35 }
INFO  04:44:28,637 - #35 }
INFO  04:44:28,637 - #35 }
INFO  04:44:28,637 - #36 Table
INFO  04:44:28,637 - #36 val
INFO  04:44:28,637 - #27 ;
INFO  04:44:28,637 - #34 {
INFO  04:44:28,638 - #13 void
INFO  04:44:28,638 - #36 f
INFO  04:44:28,638 - #30 (
INFO  04:44:28,638 - #36 char
INFO  04:44:28,638 - #36 ch
INFO  04:44:28,638 - #28 ,
INFO  04:44:28,638 - #36 int
INFO  04:44:28,638 - #36 a
INFO  04:44:28,638 - #28 ,
INFO  04:44:28,638 - #36 int
INFO  04:44:28,638 - #36 arg
INFO  04:44:28,638 - #31 )
INFO  04:44:28,638 - #36 int
INFO  04:44:28,638 - #36 x
INFO  04:44:28,638 - #27 ;
INFO  04:44:28,638 - #34 {
INFO  04:44:28,638 - #36 x
INFO  04:44:28,638 - #24 =
INFO  04:44:28,638 - #36 arg
INFO  04:44:28,638 - #27 ;
INFO  04:44:28,638 - #35 }
INFO  04:44:28,638 - #13 void
INFO  04:44:28,638 - #36 main
INFO  04:44:28,638 - #30 (
INFO  04:44:28,638 - #31 )
INFO  04:44:28,638 - #36 int
INFO  04:44:28,639 - #36 x
INFO  04:44:28,639 - #28 ,
INFO  04:44:28,639 - #36 i
INFO  04:44:28,639 - #27 ;
INFO  04:44:28,639 - #36 char
INFO  04:44:28,639 - #36 c
INFO  04:44:28,639 - #27 ;
INFO  04:44:28,639 - #34 {
INFO  04:44:28,639 - #36 val
INFO  04:44:28,639 - #24 =
INFO  04:44:28,639 - #9 new
INFO  04:44:28,639 - #36 Table
INFO  04:44:28,639 - #27 ;
INFO  04:44:28,639 - #36 val
INFO  04:44:28,639 - #29 .
INFO  04:44:28,639 - #36 pos
INFO  04:44:28,639 - #24 =
INFO  04:44:28,639 - #9 new
INFO  04:44:28,639 - #36 int
INFO  04:44:28,639 - #32 [
INFO  04:44:28,639 - #36 size
INFO  04:44:28,639 - #33 ]
INFO  04:44:28,639 - #27 ;
INFO  04:44:28,639 - #36 val
INFO  04:44:28,639 - #29 .
INFO  04:44:28,639 - #36 neg
INFO  04:44:28,639 - #24 =
INFO  04:44:28,639 - #9 new
INFO  04:44:28,639 - #36 int
INFO  04:44:28,640 - #32 [
INFO  04:44:28,640 - #36 size
INFO  04:44:28,640 - #33 ]
INFO  04:44:28,640 - #27 ;
INFO  04:44:28,640 - #14 for
INFO  04:44:28,640 - #30 (
INFO  04:44:28,640 - #36 i
INFO  04:44:28,640 - #24 =
INFO  04:44:28,640 - #37 0
INFO  04:44:28,640 - #27 ;
INFO  04:44:28,640 - #36 i
INFO  04:44:28,640 - #20 <
INFO  04:44:28,640 - #36 size
INFO  04:44:28,640 - #27 ;
INFO  04:44:28,640 - #36 i
INFO  04:44:28,641 - #25 ++
INFO  04:44:28,641 - #31 )
INFO  04:44:28,641 - #34 {
INFO  04:44:28,641 - #36 val
INFO  04:44:28,641 - #29 .
INFO  04:44:28,642 - #36 putp
INFO  04:44:28,642 - #30 (
INFO  04:44:28,642 - #37 0
INFO  04:44:28,642 - #28 ,
INFO  04:44:28,642 - #36 i
INFO  04:44:28,642 - #31 )
INFO  04:44:28,642 - #27 ;
INFO  04:44:28,642 - #36 val
INFO  04:44:28,642 - #29 .
INFO  04:44:28,642 - #36 putn
INFO  04:44:28,642 - #30 (
INFO  04:44:28,642 - #37 0
INFO  04:44:28,642 - #28 ,
INFO  04:44:28,642 - #36 i
INFO  04:44:28,642 - #31 )
INFO  04:44:28,642 - #27 ;
INFO  04:44:28,642 - #35 }
INFO  04:44:28,642 - #36 f
INFO  04:44:28,642 - #30 (
INFO  04:44:28,642 - #36 c
INFO  04:44:28,642 - #28 ,
INFO  04:44:28,642 - #36 x
INFO  04:44:28,642 - #28 ,
INFO  04:44:28,642 - #36 i
INFO  04:44:28,642 - #31 )
INFO  04:44:28,642 - #27 ;
INFO  04:44:28,642 - #36 X
INFO  04:44:28,642 - #24 =
INFO  04:44:28,642 - #38 c
INFO  04:44:28,642 - #27 ;
INFO  04:44:28,642 - #11 read
INFO  04:44:28,642 - #30 (
INFO  04:44:28,642 - #36 x
INFO  04:44:28,642 - #31 )
INFO  04:44:28,642 - #27 ;
INFO  04:44:28,642 - #14 for
INFO  04:44:28,642 - #30 (
INFO  04:44:28,642 - #27 ;
INFO  04:44:28,642 - #36 x
INFO  04:44:28,643 - #18 >
INFO  04:44:28,643 - #37 0
INFO  04:44:28,643 - #27 ;
INFO  04:44:28,643 - #31 )
INFO  04:44:28,643 - #34 {
INFO  04:44:28,643 - #8 if
INFO  04:44:28,643 - #30 (
INFO  04:44:28,643 - #36 Num
INFO  04:44:28,643 - #29 .
INFO  04:44:28,643 - #36 ZERO
INFO  04:44:28,643 - #21 <=
INFO  04:44:28,643 - #36 x
INFO  04:44:28,643 - #22 &&
INFO  04:44:28,643 - #36 x
INFO  04:44:28,643 - #20 <
INFO  04:44:28,643 - #36 size
INFO  04:44:28,643 - #31 )
INFO  04:44:28,643 - #34 {
INFO  04:44:28,643 - #36 val
INFO  04:44:28,643 - #29 .
INFO  04:44:28,643 - #36 putp
INFO  04:44:28,643 - #30 (
INFO  04:44:28,643 - #36 val
INFO  04:44:28,643 - #29 .
INFO  04:44:28,643 - #36 getp
INFO  04:44:28,643 - #30 (
INFO  04:44:28,643 - #36 x
INFO  04:44:28,643 - #31 )
INFO  04:44:28,643 - #11 +
INFO  04:44:28,643 - #36 Num
INFO  04:44:28,643 - #29 .
INFO  04:44:28,643 - #36 ONE
INFO  04:44:28,643 - #31 )
INFO  04:44:28,643 - #27 ;
INFO  04:44:28,643 - #35 }
INFO  04:44:28,643 - #6 else
INFO  04:44:28,643 - #8 if
INFO  04:44:28,643 - #30 (
INFO  04:44:28,643 - #12 -
INFO  04:44:28,643 - #36 size
INFO  04:44:28,644 - #20 <
INFO  04:44:28,644 - #36 x
INFO  04:44:28,644 - #22 &&
INFO  04:44:28,644 - #36 x
INFO  04:44:28,644 - #20 <
INFO  04:44:28,644 - #37 0
INFO  04:44:28,644 - #31 )
INFO  04:44:28,644 - #34 {
INFO  04:44:28,644 - #36 val
INFO  04:44:28,644 - #29 .
INFO  04:44:28,644 - #36 putn
INFO  04:44:28,644 - #30 (
INFO  04:44:28,644 - #36 val
INFO  04:44:28,644 - #29 .
INFO  04:44:28,644 - #36 getn
INFO  04:44:28,644 - #30 (
INFO  04:44:28,644 - #12 -
INFO  04:44:28,644 - #36 x
INFO  04:44:28,644 - #31 )
INFO  04:44:28,644 - #11 +
INFO  04:44:28,644 - #37 1
INFO  04:44:28,644 - #31 )
INFO  04:44:28,644 - #27 ;
INFO  04:44:28,644 - #35 }
INFO  04:44:28,644 - #11 read
INFO  04:44:28,644 - #30 (
INFO  04:44:28,644 - #36 x
INFO  04:44:28,644 - #31 )
INFO  04:44:28,644 - #27 ;
INFO  04:44:28,644 - #35 }
INFO  04:44:28,644 - #35 }
INFO  04:44:28,644 - #35 }
INFO  04:44:28,644 - --EOF.
