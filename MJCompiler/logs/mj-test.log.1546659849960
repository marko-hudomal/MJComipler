INFO  04:43:13,983 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  04:43:13,991 - #1 program
INFO  04:43:13,991 - #36 P
INFO  04:43:13,991 - #7 const
INFO  04:43:13,991 - #36 int
INFO  04:43:13,991 - #36 size
INFO  04:43:13,991 - #24 =
INFO  04:43:13,991 - #37 10
INFO  04:43:13,991 - #27 ;
INFO  04:43:13,991 - #5 enum
INFO  04:43:13,991 - #36 Num
INFO  04:43:13,991 - #34 {
INFO  04:43:13,991 - #36 ZERO
INFO  04:43:13,991 - #28 ,
INFO  04:43:13,992 - #36 ONE
INFO  04:43:13,992 - #28 ,
INFO  04:43:13,992 - #36 TEN
INFO  04:43:13,992 - #24 =
INFO  04:43:13,992 - #37 10
INFO  04:43:13,992 - #35 }
INFO  04:43:13,992 - #4 interface
INFO  04:43:13,992 - #36 I
INFO  04:43:13,992 - #34 {
INFO  04:43:13,992 - #36 int
INFO  04:43:13,992 - #36 getp
INFO  04:43:13,992 - #30 (
INFO  04:43:13,992 - #36 int
INFO  04:43:13,992 - #36 i
INFO  04:43:13,992 - #31 )
INFO  04:43:13,992 - #27 ;
INFO  04:43:13,992 - #36 int
INFO  04:43:13,992 - #36 getn
INFO  04:43:13,992 - #30 (
INFO  04:43:13,992 - #36 int
INFO  04:43:13,992 - #36 i
INFO  04:43:13,992 - #31 )
INFO  04:43:13,992 - #27 ;
INFO  04:43:13,992 - #35 }
INFO  04:43:13,993 - #3 class
INFO  04:43:13,993 - #36 Table
INFO  04:43:13,993 - #36 implements
INFO  04:43:13,993 - #36 I
INFO  04:43:13,993 - #34 {
INFO  04:43:13,993 - #36 int
INFO  04:43:13,993 - #36 pos
INFO  04:43:13,993 - #32 [
INFO  04:43:13,993 - #33 ]
INFO  04:43:13,993 - #28 ,
INFO  04:43:13,993 - #36 neg
INFO  04:43:13,993 - #32 [
INFO  04:43:13,993 - #33 ]
INFO  04:43:13,993 - #27 ;
INFO  04:43:13,993 - #34 {
INFO  04:43:13,993 - #13 void
INFO  04:43:13,993 - #36 putp
INFO  04:43:13,993 - #30 (
INFO  04:43:13,993 - #36 int
INFO  04:43:13,993 - #36 a
INFO  04:43:13,993 - #28 ,
INFO  04:43:13,993 - #36 int
INFO  04:43:13,993 - #36 idx
INFO  04:43:13,993 - #31 )
INFO  04:43:13,993 - #34 {
INFO  04:43:13,993 - #36 this
INFO  04:43:13,993 - #29 .
INFO  04:43:13,993 - #36 pos
INFO  04:43:13,993 - #32 [
INFO  04:43:13,994 - #36 idx
INFO  04:43:13,994 - #33 ]
INFO  04:43:13,994 - #24 =
INFO  04:43:13,994 - #36 a
INFO  04:43:13,994 - #27 ;
INFO  04:43:13,994 - #35 }
INFO  04:43:13,994 - #13 void
INFO  04:43:13,994 - #36 putn
INFO  04:43:13,994 - #30 (
INFO  04:43:13,994 - #36 int
INFO  04:43:13,994 - #36 a
INFO  04:43:13,994 - #28 ,
INFO  04:43:13,994 - #36 int
INFO  04:43:13,994 - #36 idx
INFO  04:43:13,994 - #31 )
INFO  04:43:13,994 - #34 {
INFO  04:43:13,994 - #36 this
INFO  04:43:13,994 - #29 .
INFO  04:43:13,994 - #36 neg
INFO  04:43:13,994 - #32 [
INFO  04:43:13,994 - #36 idx
INFO  04:43:13,994 - #33 ]
INFO  04:43:13,994 - #24 =
INFO  04:43:13,994 - #36 a
INFO  04:43:13,994 - #27 ;
INFO  04:43:13,994 - #35 }
INFO  04:43:13,994 - #36 int
INFO  04:43:13,994 - #36 getp
INFO  04:43:13,994 - #30 (
INFO  04:43:13,995 - #36 int
INFO  04:43:13,995 - #36 idx
INFO  04:43:13,995 - #31 )
INFO  04:43:13,995 - #34 {
INFO  04:43:13,995 - #12 return
INFO  04:43:13,995 - #36 pos
INFO  04:43:13,995 - #32 [
INFO  04:43:13,995 - #36 idx
INFO  04:43:13,995 - #33 ]
INFO  04:43:13,995 - #27 ;
INFO  04:43:13,995 - #35 }
INFO  04:43:13,995 - #36 int
INFO  04:43:13,995 - #36 getn
INFO  04:43:13,995 - #30 (
INFO  04:43:13,995 - #36 int
INFO  04:43:13,995 - #36 idx
INFO  04:43:13,995 - #31 )
INFO  04:43:13,995 - #34 {
INFO  04:43:13,995 - #12 return
INFO  04:43:13,995 - #36 neg
INFO  04:43:13,995 - #32 [
INFO  04:43:13,995 - #36 idx
INFO  04:43:13,995 - #33 ]
INFO  04:43:13,995 - #27 ;
INFO  04:43:13,995 - #35 }
INFO  04:43:13,995 - #35 }
INFO  04:43:13,995 - #35 }
INFO  04:43:13,995 - #36 Table
INFO  04:43:13,995 - #36 val
INFO  04:43:13,995 - #27 ;
INFO  04:43:13,995 - #34 {
INFO  04:43:13,995 - #13 void
INFO  04:43:13,996 - #36 f
INFO  04:43:13,996 - #30 (
INFO  04:43:13,996 - #36 char
INFO  04:43:13,996 - #36 ch
INFO  04:43:13,996 - #28 ,
INFO  04:43:13,996 - #36 int
INFO  04:43:13,996 - #36 a
INFO  04:43:13,996 - #28 ,
INFO  04:43:13,996 - #36 int
INFO  04:43:13,996 - #36 arg
INFO  04:43:13,996 - #31 )
INFO  04:43:13,996 - #36 int
INFO  04:43:13,996 - #36 x
INFO  04:43:13,996 - #27 ;
INFO  04:43:13,996 - #34 {
INFO  04:43:13,996 - #36 x
INFO  04:43:13,996 - #24 =
INFO  04:43:13,996 - #36 arg
INFO  04:43:13,996 - #27 ;
INFO  04:43:13,996 - #35 }
INFO  04:43:13,996 - #13 void
INFO  04:43:13,996 - #36 main
INFO  04:43:13,996 - #30 (
INFO  04:43:13,996 - #31 )
INFO  04:43:13,996 - #36 int
INFO  04:43:13,996 - #36 x
INFO  04:43:13,996 - #28 ,
INFO  04:43:13,996 - #36 i
INFO  04:43:13,996 - #27 ;
INFO  04:43:13,996 - #36 char
INFO  04:43:13,996 - #36 c
INFO  04:43:13,996 - #27 ;
INFO  04:43:13,996 - #34 {
INFO  04:43:13,997 - #36 val
INFO  04:43:13,997 - #24 =
INFO  04:43:13,997 - #9 new
INFO  04:43:13,997 - #36 Table
INFO  04:43:13,997 - #27 ;
INFO  04:43:13,997 - #36 val
INFO  04:43:13,997 - #29 .
INFO  04:43:13,997 - #36 pos
INFO  04:43:13,997 - #24 =
INFO  04:43:13,997 - #9 new
INFO  04:43:13,997 - #36 int
INFO  04:43:13,997 - #32 [
INFO  04:43:13,997 - #36 size
INFO  04:43:13,997 - #33 ]
INFO  04:43:13,997 - #27 ;
INFO  04:43:13,997 - #36 val
INFO  04:43:13,997 - #29 .
INFO  04:43:13,997 - #36 neg
INFO  04:43:13,997 - #24 =
INFO  04:43:13,997 - #9 new
INFO  04:43:13,997 - #36 int
INFO  04:43:13,997 - #32 [
INFO  04:43:13,997 - #36 size
INFO  04:43:13,997 - #33 ]
INFO  04:43:13,997 - #27 ;
INFO  04:43:13,997 - #14 for
INFO  04:43:13,997 - #30 (
INFO  04:43:13,997 - #36 i
INFO  04:43:13,997 - #24 =
INFO  04:43:13,997 - #37 0
INFO  04:43:13,997 - #27 ;
INFO  04:43:13,997 - #36 i
INFO  04:43:13,997 - #20 <
INFO  04:43:13,997 - #36 size
INFO  04:43:13,997 - #27 ;
INFO  04:43:13,997 - #36 i
INFO  04:43:13,999 - #25 ++
INFO  04:43:13,999 - #31 )
INFO  04:43:13,999 - #34 {
INFO  04:43:13,999 - #36 val
INFO  04:43:13,999 - #29 .
INFO  04:43:13,999 - #36 putp
INFO  04:43:13,999 - #30 (
INFO  04:43:13,999 - #37 0
INFO  04:43:13,999 - #28 ,
INFO  04:43:13,999 - #36 i
INFO  04:43:13,999 - #31 )
INFO  04:43:13,999 - #27 ;
INFO  04:43:13,999 - #36 val
INFO  04:43:13,999 - #29 .
INFO  04:43:13,999 - #36 putn
INFO  04:43:13,999 - #30 (
INFO  04:43:13,999 - #37 0
INFO  04:43:13,999 - #28 ,
INFO  04:43:13,999 - #36 i
INFO  04:43:13,999 - #31 )
INFO  04:43:13,999 - #27 ;
INFO  04:43:13,999 - #35 }
INFO  04:43:13,999 - #36 f
INFO  04:43:13,999 - #30 (
INFO  04:43:13,999 - #36 c
INFO  04:43:13,999 - #28 ,
INFO  04:43:13,999 - #36 x
INFO  04:43:13,999 - #28 ,
INFO  04:43:13,999 - #36 i
INFO  04:43:13,999 - #31 )
INFO  04:43:13,999 - #27 ;
INFO  04:43:13,999 - #11 read
INFO  04:43:14,000 - #30 (
INFO  04:43:14,000 - #36 x
INFO  04:43:14,000 - #31 )
INFO  04:43:14,000 - #27 ;
INFO  04:43:14,000 - #14 for
INFO  04:43:14,000 - #30 (
INFO  04:43:14,000 - #27 ;
INFO  04:43:14,000 - #36 x
INFO  04:43:14,000 - #18 >
INFO  04:43:14,000 - #37 0
INFO  04:43:14,000 - #27 ;
INFO  04:43:14,000 - #31 )
INFO  04:43:14,000 - #34 {
INFO  04:43:14,000 - #8 if
INFO  04:43:14,000 - #30 (
INFO  04:43:14,000 - #36 Num
INFO  04:43:14,000 - #29 .
INFO  04:43:14,000 - #36 ZERO
INFO  04:43:14,000 - #21 <=
INFO  04:43:14,000 - #36 x
INFO  04:43:14,000 - #22 &&
INFO  04:43:14,000 - #36 x
INFO  04:43:14,000 - #20 <
INFO  04:43:14,000 - #36 size
INFO  04:43:14,000 - #31 )
INFO  04:43:14,000 - #34 {
INFO  04:43:14,000 - #36 val
INFO  04:43:14,001 - #29 .
INFO  04:43:14,001 - #36 putp
INFO  04:43:14,001 - #30 (
INFO  04:43:14,001 - #36 val
INFO  04:43:14,001 - #29 .
INFO  04:43:14,001 - #36 getp
INFO  04:43:14,001 - #30 (
INFO  04:43:14,001 - #36 x
INFO  04:43:14,001 - #31 )
INFO  04:43:14,001 - #11 +
INFO  04:43:14,001 - #36 Num
INFO  04:43:14,001 - #29 .
INFO  04:43:14,001 - #36 ONE
INFO  04:43:14,001 - #31 )
INFO  04:43:14,001 - #27 ;
INFO  04:43:14,001 - #35 }
INFO  04:43:14,001 - #6 else
INFO  04:43:14,001 - #8 if
INFO  04:43:14,001 - #30 (
INFO  04:43:14,001 - #12 -
INFO  04:43:14,001 - #36 size
INFO  04:43:14,001 - #20 <
INFO  04:43:14,001 - #36 x
INFO  04:43:14,001 - #22 &&
INFO  04:43:14,001 - #36 x
INFO  04:43:14,001 - #20 <
INFO  04:43:14,001 - #37 0
INFO  04:43:14,001 - #31 )
INFO  04:43:14,001 - #34 {
INFO  04:43:14,001 - #36 val
INFO  04:43:14,002 - #29 .
INFO  04:43:14,002 - #36 putn
INFO  04:43:14,002 - #30 (
INFO  04:43:14,002 - #36 val
INFO  04:43:14,002 - #29 .
INFO  04:43:14,002 - #36 getn
INFO  04:43:14,002 - #30 (
INFO  04:43:14,002 - #12 -
INFO  04:43:14,002 - #36 x
INFO  04:43:14,002 - #31 )
INFO  04:43:14,002 - #11 +
INFO  04:43:14,002 - #37 1
INFO  04:43:14,002 - #31 )
INFO  04:43:14,002 - #27 ;
INFO  04:43:14,002 - #35 }
INFO  04:43:14,002 - #11 read
INFO  04:43:14,002 - #30 (
INFO  04:43:14,002 - #36 x
INFO  04:43:14,002 - #31 )
INFO  04:43:14,002 - #27 ;
INFO  04:43:14,002 - #35 }
INFO  04:43:14,002 - #35 }
INFO  04:43:14,002 - #35 }
INFO  04:43:14,002 - --EOF.
