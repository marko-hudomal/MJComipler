INFO  04:32:04,895 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  04:32:04,903 - #1 program
INFO  04:32:04,903 - #36 P
INFO  04:32:04,903 - #7 const
INFO  04:32:04,903 - #36 int
INFO  04:32:04,903 - #36 size
INFO  04:32:04,903 - #24 =
INFO  04:32:04,903 - #37 10
INFO  04:32:04,903 - #27 ;
INFO  04:32:04,903 - #5 enum
INFO  04:32:04,903 - #36 Num
INFO  04:32:04,903 - #34 {
INFO  04:32:04,903 - #36 ZERO
INFO  04:32:04,904 - #28 ,
INFO  04:32:04,904 - #36 ONE
INFO  04:32:04,904 - #28 ,
INFO  04:32:04,904 - #36 TEN
INFO  04:32:04,904 - #24 =
INFO  04:32:04,904 - #37 10
INFO  04:32:04,904 - #35 }
INFO  04:32:04,904 - #4 interface
INFO  04:32:04,904 - #36 I
INFO  04:32:04,904 - #34 {
INFO  04:32:04,904 - #36 int
INFO  04:32:04,904 - #36 getp
INFO  04:32:04,904 - #30 (
INFO  04:32:04,904 - #36 int
INFO  04:32:04,904 - #36 i
INFO  04:32:04,904 - #31 )
INFO  04:32:04,904 - #27 ;
INFO  04:32:04,904 - #36 int
INFO  04:32:04,904 - #36 getn
INFO  04:32:04,905 - #30 (
INFO  04:32:04,905 - #36 int
INFO  04:32:04,905 - #36 i
INFO  04:32:04,905 - #31 )
INFO  04:32:04,905 - #27 ;
INFO  04:32:04,905 - #35 }
INFO  04:32:04,905 - #3 class
INFO  04:32:04,905 - #36 Table
INFO  04:32:04,905 - #36 implements
INFO  04:32:04,905 - #36 I
INFO  04:32:04,905 - #34 {
INFO  04:32:04,905 - #36 int
INFO  04:32:04,905 - #36 pos
INFO  04:32:04,905 - #32 [
INFO  04:32:04,905 - #33 ]
INFO  04:32:04,905 - #28 ,
INFO  04:32:04,905 - #36 neg
INFO  04:32:04,905 - #32 [
INFO  04:32:04,905 - #33 ]
INFO  04:32:04,905 - #27 ;
INFO  04:32:04,905 - #34 {
INFO  04:32:04,905 - #13 void
INFO  04:32:04,905 - #36 putp
INFO  04:32:04,905 - #30 (
INFO  04:32:04,905 - #36 int
INFO  04:32:04,905 - #36 a
INFO  04:32:04,905 - #28 ,
INFO  04:32:04,906 - #36 int
INFO  04:32:04,906 - #36 idx
INFO  04:32:04,906 - #31 )
INFO  04:32:04,906 - #34 {
INFO  04:32:04,906 - #36 this
INFO  04:32:04,906 - #29 .
INFO  04:32:04,906 - #36 pos
INFO  04:32:04,906 - #32 [
INFO  04:32:04,906 - #36 idx
INFO  04:32:04,906 - #33 ]
INFO  04:32:04,906 - #24 =
INFO  04:32:04,906 - #36 a
INFO  04:32:04,906 - #27 ;
INFO  04:32:04,906 - #35 }
INFO  04:32:04,906 - #13 void
INFO  04:32:04,906 - #36 putn
INFO  04:32:04,906 - #30 (
INFO  04:32:04,906 - #36 int
INFO  04:32:04,906 - #36 a
INFO  04:32:04,906 - #28 ,
INFO  04:32:04,906 - #36 int
INFO  04:32:04,906 - #36 idx
INFO  04:32:04,906 - #31 )
INFO  04:32:04,906 - #34 {
INFO  04:32:04,906 - #36 this
INFO  04:32:04,906 - #29 .
INFO  04:32:04,906 - #36 neg
INFO  04:32:04,906 - #32 [
INFO  04:32:04,906 - #36 idx
INFO  04:32:04,906 - #33 ]
INFO  04:32:04,906 - #24 =
INFO  04:32:04,907 - #36 a
INFO  04:32:04,907 - #27 ;
INFO  04:32:04,907 - #35 }
INFO  04:32:04,907 - #36 int
INFO  04:32:04,907 - #36 getp
INFO  04:32:04,907 - #30 (
INFO  04:32:04,907 - #36 int
INFO  04:32:04,907 - #36 idx
INFO  04:32:04,907 - #31 )
INFO  04:32:04,907 - #34 {
INFO  04:32:04,907 - #12 return
INFO  04:32:04,907 - #36 pos
INFO  04:32:04,907 - #32 [
INFO  04:32:04,907 - #36 idx
INFO  04:32:04,907 - #33 ]
INFO  04:32:04,907 - #27 ;
INFO  04:32:04,907 - #35 }
INFO  04:32:04,907 - #36 int
INFO  04:32:04,907 - #36 getn
INFO  04:32:04,907 - #30 (
INFO  04:32:04,907 - #36 int
INFO  04:32:04,907 - #36 idx
INFO  04:32:04,907 - #31 )
INFO  04:32:04,907 - #34 {
INFO  04:32:04,907 - #12 return
INFO  04:32:04,907 - #36 neg
INFO  04:32:04,908 - #32 [
INFO  04:32:04,908 - #36 idx
INFO  04:32:04,908 - #33 ]
INFO  04:32:04,908 - #27 ;
INFO  04:32:04,908 - #35 }
INFO  04:32:04,908 - #35 }
INFO  04:32:04,908 - #35 }
INFO  04:32:04,908 - #36 Table
INFO  04:32:04,908 - #36 val
INFO  04:32:04,908 - #27 ;
INFO  04:32:04,908 - #34 {
INFO  04:32:04,908 - #13 void
INFO  04:32:04,908 - #36 f
INFO  04:32:04,908 - #30 (
INFO  04:32:04,908 - #36 char
INFO  04:32:04,908 - #36 ch
INFO  04:32:04,908 - #28 ,
INFO  04:32:04,908 - #36 int
INFO  04:32:04,908 - #36 a
INFO  04:32:04,908 - #28 ,
INFO  04:32:04,908 - #36 int
INFO  04:32:04,908 - #36 arg
INFO  04:32:04,908 - #31 )
INFO  04:32:04,908 - #36 int
INFO  04:32:04,908 - #36 x
INFO  04:32:04,908 - #27 ;
INFO  04:32:04,908 - #34 {
INFO  04:32:04,909 - #36 x
INFO  04:32:04,909 - #24 =
INFO  04:32:04,909 - #36 arg
INFO  04:32:04,909 - #27 ;
INFO  04:32:04,909 - #35 }
INFO  04:32:04,909 - #13 void
INFO  04:32:04,909 - #36 main
INFO  04:32:04,909 - #30 (
INFO  04:32:04,909 - #31 )
INFO  04:32:04,909 - #36 int
INFO  04:32:04,909 - #36 x
INFO  04:32:04,909 - #28 ,
INFO  04:32:04,909 - #36 i
INFO  04:32:04,909 - #27 ;
INFO  04:32:04,909 - #36 char
INFO  04:32:04,909 - #36 c
INFO  04:32:04,909 - #27 ;
INFO  04:32:04,909 - #34 {
INFO  04:32:04,909 - #36 val
INFO  04:32:04,909 - #24 =
INFO  04:32:04,909 - #9 new
INFO  04:32:04,909 - #36 Table
INFO  04:32:04,909 - #27 ;
INFO  04:32:04,909 - #36 val
INFO  04:32:04,909 - #29 .
INFO  04:32:04,909 - #36 pos
INFO  04:32:04,909 - #24 =
INFO  04:32:04,909 - #9 new
INFO  04:32:04,909 - #36 int
INFO  04:32:04,909 - #32 [
INFO  04:32:04,909 - #36 size
INFO  04:32:04,909 - #33 ]
INFO  04:32:04,910 - #27 ;
INFO  04:32:04,910 - #36 val
INFO  04:32:04,910 - #29 .
INFO  04:32:04,910 - #36 neg
INFO  04:32:04,910 - #24 =
INFO  04:32:04,910 - #9 new
INFO  04:32:04,910 - #36 int
INFO  04:32:04,910 - #32 [
INFO  04:32:04,910 - #36 size
INFO  04:32:04,910 - #33 ]
INFO  04:32:04,910 - #27 ;
INFO  04:32:04,910 - #14 for
INFO  04:32:04,910 - #30 (
INFO  04:32:04,910 - #36 i
INFO  04:32:04,910 - #24 =
INFO  04:32:04,910 - #37 0
INFO  04:32:04,910 - #27 ;
INFO  04:32:04,910 - #36 i
INFO  04:32:04,910 - #20 <
INFO  04:32:04,910 - #36 size
INFO  04:32:04,910 - #27 ;
INFO  04:32:04,910 - #36 i
INFO  04:32:04,911 - #25 ++
INFO  04:32:04,912 - #31 )
INFO  04:32:04,912 - #34 {
INFO  04:32:04,912 - #36 val
INFO  04:32:04,912 - #29 .
INFO  04:32:04,912 - #36 putp
INFO  04:32:04,912 - #30 (
INFO  04:32:04,912 - #37 0
INFO  04:32:04,912 - #28 ,
INFO  04:32:04,912 - #36 i
INFO  04:32:04,912 - #31 )
INFO  04:32:04,912 - #27 ;
INFO  04:32:04,912 - #36 val
INFO  04:32:04,912 - #29 .
INFO  04:32:04,912 - #36 putn
INFO  04:32:04,912 - #30 (
INFO  04:32:04,912 - #37 0
INFO  04:32:04,912 - #28 ,
INFO  04:32:04,912 - #36 i
INFO  04:32:04,912 - #31 )
INFO  04:32:04,912 - #27 ;
INFO  04:32:04,912 - #36 p
INFO  04:32:04,912 - #24 =
INFO  04:32:04,912 - #38 x
INFO  04:32:04,912 - #27 ;
INFO  04:32:04,912 - #35 }
INFO  04:32:04,912 - #36 f
INFO  04:32:04,912 - #30 (
INFO  04:32:04,912 - #36 c
INFO  04:32:04,912 - #28 ,
INFO  04:32:04,912 - #36 x
INFO  04:32:04,912 - #28 ,
INFO  04:32:04,912 - #36 i
INFO  04:32:04,912 - #31 )
INFO  04:32:04,912 - #27 ;
INFO  04:32:04,912 - #11 read
INFO  04:32:04,912 - #30 (
INFO  04:32:04,912 - #36 x
INFO  04:32:04,912 - #31 )
INFO  04:32:04,912 - #27 ;
INFO  04:32:04,912 - #14 for
INFO  04:32:04,912 - #30 (
INFO  04:32:04,912 - #27 ;
INFO  04:32:04,912 - #36 x
INFO  04:32:04,913 - #18 >
INFO  04:32:04,913 - #37 0
INFO  04:32:04,913 - #27 ;
INFO  04:32:04,913 - #31 )
INFO  04:32:04,913 - #34 {
INFO  04:32:04,913 - #8 if
INFO  04:32:04,913 - #30 (
INFO  04:32:04,913 - #36 Num
INFO  04:32:04,913 - #29 .
INFO  04:32:04,913 - #36 ZERO
INFO  04:32:04,913 - #21 <=
INFO  04:32:04,913 - #36 x
INFO  04:32:04,913 - #22 &&
INFO  04:32:04,913 - #36 x
INFO  04:32:04,913 - #20 <
INFO  04:32:04,913 - #36 size
INFO  04:32:04,913 - #31 )
INFO  04:32:04,913 - #34 {
INFO  04:32:04,913 - #36 val
INFO  04:32:04,913 - #29 .
INFO  04:32:04,913 - #36 putp
INFO  04:32:04,913 - #30 (
INFO  04:32:04,913 - #36 val
INFO  04:32:04,913 - #29 .
INFO  04:32:04,913 - #36 getp
INFO  04:32:04,913 - #30 (
INFO  04:32:04,913 - #36 x
INFO  04:32:04,913 - #31 )
INFO  04:32:04,913 - #11 +
INFO  04:32:04,913 - #36 Num
INFO  04:32:04,913 - #29 .
INFO  04:32:04,913 - #36 ONE
INFO  04:32:04,913 - #31 )
INFO  04:32:04,913 - #27 ;
INFO  04:32:04,913 - #35 }
INFO  04:32:04,913 - #6 else
INFO  04:32:04,913 - #8 if
INFO  04:32:04,913 - #30 (
INFO  04:32:04,913 - #12 -
INFO  04:32:04,913 - #36 size
INFO  04:32:04,914 - #20 <
INFO  04:32:04,914 - #36 x
INFO  04:32:04,914 - #22 &&
INFO  04:32:04,914 - #36 x
INFO  04:32:04,914 - #20 <
INFO  04:32:04,914 - #37 0
INFO  04:32:04,914 - #31 )
INFO  04:32:04,914 - #34 {
INFO  04:32:04,914 - #36 val
INFO  04:32:04,914 - #29 .
INFO  04:32:04,914 - #36 putn
INFO  04:32:04,914 - #30 (
INFO  04:32:04,914 - #36 val
INFO  04:32:04,914 - #29 .
INFO  04:32:04,914 - #36 getn
INFO  04:32:04,914 - #30 (
INFO  04:32:04,914 - #12 -
INFO  04:32:04,914 - #36 x
INFO  04:32:04,914 - #31 )
INFO  04:32:04,914 - #11 +
INFO  04:32:04,914 - #37 1
INFO  04:32:04,914 - #31 )
INFO  04:32:04,914 - #27 ;
INFO  04:32:04,914 - #35 }
INFO  04:32:04,914 - #11 read
INFO  04:32:04,914 - #30 (
INFO  04:32:04,914 - #36 x
INFO  04:32:04,914 - #31 )
INFO  04:32:04,914 - #27 ;
INFO  04:32:04,914 - #35 }
INFO  04:32:04,914 - #35 }
INFO  04:32:04,914 - #35 }
INFO  04:32:04,914 - --EOF.
