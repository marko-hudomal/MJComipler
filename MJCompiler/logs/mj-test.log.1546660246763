INFO  04:50:22,136 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  04:50:22,144 - #1 program
INFO  04:50:22,144 - #36 P
INFO  04:50:22,144 - #7 const
INFO  04:50:22,144 - #36 int
INFO  04:50:22,144 - #36 size
INFO  04:50:22,144 - #24 =
INFO  04:50:22,144 - #37 10
INFO  04:50:22,144 - #27 ;
INFO  04:50:22,144 - #5 enum
INFO  04:50:22,144 - #36 Num
INFO  04:50:22,144 - #34 {
INFO  04:50:22,144 - #36 ZERO
INFO  04:50:22,144 - #28 ,
INFO  04:50:22,144 - #36 ONE
INFO  04:50:22,144 - #28 ,
INFO  04:50:22,144 - #36 TEN
INFO  04:50:22,145 - #24 =
INFO  04:50:22,145 - #37 10
INFO  04:50:22,145 - #35 }
INFO  04:50:22,145 - #4 interface
INFO  04:50:22,145 - #36 I
INFO  04:50:22,145 - #34 {
INFO  04:50:22,145 - #36 int
INFO  04:50:22,145 - #36 getp
INFO  04:50:22,145 - #30 (
INFO  04:50:22,145 - #36 int
INFO  04:50:22,145 - #36 i
INFO  04:50:22,145 - #31 )
INFO  04:50:22,145 - #27 ;
INFO  04:50:22,145 - #36 int
INFO  04:50:22,145 - #36 getn
INFO  04:50:22,145 - #30 (
INFO  04:50:22,145 - #36 int
INFO  04:50:22,145 - #36 i
INFO  04:50:22,145 - #31 )
INFO  04:50:22,145 - #27 ;
INFO  04:50:22,145 - #35 }
INFO  04:50:22,145 - #3 class
INFO  04:50:22,145 - #36 Table
INFO  04:50:22,146 - #36 implements
INFO  04:50:22,146 - #36 I
INFO  04:50:22,146 - #34 {
INFO  04:50:22,146 - #36 int
INFO  04:50:22,146 - #36 pos
INFO  04:50:22,146 - #32 [
INFO  04:50:22,146 - #33 ]
INFO  04:50:22,146 - #28 ,
INFO  04:50:22,146 - #36 neg
INFO  04:50:22,146 - #32 [
INFO  04:50:22,146 - #33 ]
INFO  04:50:22,146 - #27 ;
INFO  04:50:22,146 - #34 {
INFO  04:50:22,146 - #13 void
INFO  04:50:22,146 - #36 putp
INFO  04:50:22,146 - #30 (
INFO  04:50:22,146 - #36 int
INFO  04:50:22,146 - #36 a
INFO  04:50:22,146 - #28 ,
INFO  04:50:22,146 - #36 int
INFO  04:50:22,146 - #36 idx
INFO  04:50:22,146 - #31 )
INFO  04:50:22,146 - #34 {
INFO  04:50:22,146 - #36 this
INFO  04:50:22,146 - #29 .
INFO  04:50:22,146 - #36 pos
INFO  04:50:22,146 - #32 [
INFO  04:50:22,146 - #36 idx
INFO  04:50:22,146 - #33 ]
INFO  04:50:22,146 - #24 =
INFO  04:50:22,147 - #36 a
INFO  04:50:22,147 - #27 ;
INFO  04:50:22,147 - #35 }
INFO  04:50:22,147 - #13 void
INFO  04:50:22,147 - #36 putn
INFO  04:50:22,147 - #30 (
INFO  04:50:22,147 - #36 int
INFO  04:50:22,147 - #36 a
INFO  04:50:22,147 - #28 ,
INFO  04:50:22,147 - #36 int
INFO  04:50:22,147 - #36 idx
INFO  04:50:22,147 - #31 )
INFO  04:50:22,147 - #34 {
INFO  04:50:22,147 - #36 this
INFO  04:50:22,147 - #29 .
INFO  04:50:22,147 - #36 neg
INFO  04:50:22,147 - #32 [
INFO  04:50:22,147 - #36 idx
INFO  04:50:22,147 - #33 ]
INFO  04:50:22,147 - #24 =
INFO  04:50:22,147 - #36 a
INFO  04:50:22,147 - #27 ;
INFO  04:50:22,147 - #35 }
INFO  04:50:22,147 - #36 int
INFO  04:50:22,147 - #36 getp
INFO  04:50:22,147 - #30 (
INFO  04:50:22,147 - #36 int
INFO  04:50:22,147 - #36 idx
INFO  04:50:22,147 - #31 )
INFO  04:50:22,148 - #34 {
INFO  04:50:22,148 - #12 return
INFO  04:50:22,148 - #36 pos
INFO  04:50:22,148 - #32 [
INFO  04:50:22,148 - #36 idx
INFO  04:50:22,148 - #33 ]
INFO  04:50:22,148 - #27 ;
INFO  04:50:22,148 - #35 }
INFO  04:50:22,148 - #36 int
INFO  04:50:22,148 - #36 getn
INFO  04:50:22,148 - #30 (
INFO  04:50:22,148 - #36 int
INFO  04:50:22,148 - #36 idx
INFO  04:50:22,148 - #31 )
INFO  04:50:22,148 - #34 {
INFO  04:50:22,148 - #12 return
INFO  04:50:22,148 - #36 neg
INFO  04:50:22,148 - #32 [
INFO  04:50:22,148 - #36 idx
INFO  04:50:22,148 - #33 ]
INFO  04:50:22,148 - #27 ;
INFO  04:50:22,149 - #35 }
INFO  04:50:22,149 - #35 }
INFO  04:50:22,149 - #35 }
INFO  04:50:22,149 - #36 Table
INFO  04:50:22,149 - #36 val
INFO  04:50:22,149 - #27 ;
INFO  04:50:22,149 - #34 {
INFO  04:50:22,149 - #13 void
INFO  04:50:22,149 - #36 f
INFO  04:50:22,149 - #30 (
INFO  04:50:22,149 - #36 char
INFO  04:50:22,149 - #36 ch
INFO  04:50:22,149 - #28 ,
INFO  04:50:22,150 - #36 int
INFO  04:50:22,151 - #36 a
INFO  04:50:22,151 - #28 ,
INFO  04:50:22,151 - #36 int
INFO  04:50:22,151 - #36 arg
INFO  04:50:22,151 - #31 )
INFO  04:50:22,151 - #36 int
INFO  04:50:22,151 - #36 x
INFO  04:50:22,151 - #27 ;
INFO  04:50:22,151 - #34 {
INFO  04:50:22,151 - #36 x
INFO  04:50:22,151 - #24 =
INFO  04:50:22,151 - #36 arg
INFO  04:50:22,151 - #27 ;
INFO  04:50:22,151 - #35 }
INFO  04:50:22,151 - #13 void
INFO  04:50:22,151 - #36 main
INFO  04:50:22,151 - #30 (
INFO  04:50:22,151 - #31 )
INFO  04:50:22,151 - #36 int
INFO  04:50:22,151 - #36 x
INFO  04:50:22,151 - #28 ,
INFO  04:50:22,151 - #36 i
INFO  04:50:22,151 - #27 ;
INFO  04:50:22,151 - #36 char
INFO  04:50:22,151 - #36 c
INFO  04:50:22,151 - #27 ;
INFO  04:50:22,151 - #34 {
INFO  04:50:22,151 - #36 val
INFO  04:50:22,151 - #24 =
INFO  04:50:22,151 - #9 new
INFO  04:50:22,151 - #36 Table
INFO  04:50:22,151 - #27 ;
INFO  04:50:22,151 - #36 val
INFO  04:50:22,151 - #29 .
INFO  04:50:22,151 - #36 pos
INFO  04:50:22,151 - #24 =
INFO  04:50:22,151 - #9 new
INFO  04:50:22,152 - #36 int
INFO  04:50:22,152 - #32 [
INFO  04:50:22,152 - #36 size
INFO  04:50:22,152 - #33 ]
INFO  04:50:22,152 - #27 ;
INFO  04:50:22,152 - #36 val
INFO  04:50:22,152 - #29 .
INFO  04:50:22,152 - #36 neg
INFO  04:50:22,152 - #24 =
INFO  04:50:22,152 - #9 new
INFO  04:50:22,152 - #36 int
INFO  04:50:22,152 - #32 [
INFO  04:50:22,152 - #36 size
INFO  04:50:22,152 - #33 ]
INFO  04:50:22,152 - #27 ;
INFO  04:50:22,152 - #14 for
INFO  04:50:22,152 - #30 (
INFO  04:50:22,152 - #36 i
INFO  04:50:22,152 - #24 =
INFO  04:50:22,152 - #37 0
INFO  04:50:22,152 - #27 ;
INFO  04:50:22,152 - #36 i
INFO  04:50:22,152 - #20 <
INFO  04:50:22,152 - #36 size
INFO  04:50:22,152 - #27 ;
INFO  04:50:22,152 - #36 i
INFO  04:50:22,152 - #25 ++
INFO  04:50:22,152 - #31 )
INFO  04:50:22,152 - #34 {
INFO  04:50:22,152 - #36 val
INFO  04:50:22,152 - #29 .
INFO  04:50:22,152 - #36 putp
INFO  04:50:22,152 - #30 (
INFO  04:50:22,152 - #37 0
INFO  04:50:22,152 - #28 ,
INFO  04:50:22,152 - #36 i
INFO  04:50:22,152 - #31 )
INFO  04:50:22,152 - #27 ;
INFO  04:50:22,152 - #36 val
INFO  04:50:22,152 - #29 .
INFO  04:50:22,152 - #36 putn
INFO  04:50:22,152 - #30 (
INFO  04:50:22,152 - #37 0
INFO  04:50:22,152 - #28 ,
INFO  04:50:22,152 - #36 i
INFO  04:50:22,153 - #31 )
INFO  04:50:22,153 - #27 ;
INFO  04:50:22,153 - #35 }
INFO  04:50:22,153 - #36 f
INFO  04:50:22,153 - #30 (
INFO  04:50:22,153 - #36 c
INFO  04:50:22,153 - #28 ,
INFO  04:50:22,153 - #36 x
INFO  04:50:22,153 - #28 ,
INFO  04:50:22,153 - #36 i
INFO  04:50:22,153 - #31 )
INFO  04:50:22,153 - #27 ;
INFO  04:50:22,153 - #36 X
INFO  04:50:22,153 - #24 =
INFO  04:50:22,153 - #38 c
INFO  04:50:22,153 - #27 ;
INFO  04:50:22,153 - #11 read
INFO  04:50:22,153 - #30 (
INFO  04:50:22,153 - #36 x
INFO  04:50:22,153 - #31 )
INFO  04:50:22,153 - #27 ;
INFO  04:50:22,153 - #14 for
INFO  04:50:22,153 - #30 (
INFO  04:50:22,153 - #27 ;
INFO  04:50:22,153 - #36 x
INFO  04:50:22,153 - #18 >
INFO  04:50:22,153 - #37 0
INFO  04:50:22,153 - #27 ;
INFO  04:50:22,153 - #31 )
INFO  04:50:22,153 - #34 {
INFO  04:50:22,153 - #8 if
INFO  04:50:22,154 - #30 (
INFO  04:50:22,154 - #36 Num
INFO  04:50:22,154 - #29 .
INFO  04:50:22,154 - #36 ZERO
INFO  04:50:22,154 - #21 <=
INFO  04:50:22,154 - #36 x
INFO  04:50:22,154 - #22 &&
INFO  04:50:22,154 - #36 x
INFO  04:50:22,154 - #20 <
INFO  04:50:22,154 - #36 size
INFO  04:50:22,154 - #31 )
INFO  04:50:22,154 - #34 {
INFO  04:50:22,154 - #36 val
INFO  04:50:22,154 - #29 .
INFO  04:50:22,154 - #36 putp
INFO  04:50:22,154 - #30 (
INFO  04:50:22,154 - #36 val
INFO  04:50:22,154 - #29 .
INFO  04:50:22,154 - #36 getp
INFO  04:50:22,154 - #30 (
INFO  04:50:22,154 - #36 x
INFO  04:50:22,154 - #31 )
INFO  04:50:22,154 - #11 +
INFO  04:50:22,154 - #36 Num
INFO  04:50:22,154 - #29 .
INFO  04:50:22,154 - #36 ONE
INFO  04:50:22,154 - #31 )
INFO  04:50:22,154 - #27 ;
INFO  04:50:22,154 - #35 }
INFO  04:50:22,154 - #6 else
INFO  04:50:22,154 - #8 if
INFO  04:50:22,154 - #30 (
INFO  04:50:22,154 - #12 -
INFO  04:50:22,154 - #36 size
INFO  04:50:22,154 - #20 <
INFO  04:50:22,155 - #36 x
INFO  04:50:22,155 - #22 &&
INFO  04:50:22,155 - #36 x
INFO  04:50:22,155 - #20 <
INFO  04:50:22,155 - #37 0
INFO  04:50:22,155 - #31 )
INFO  04:50:22,155 - #34 {
INFO  04:50:22,155 - #36 val
INFO  04:50:22,155 - #29 .
INFO  04:50:22,155 - #36 putn
INFO  04:50:22,155 - #30 (
INFO  04:50:22,155 - #36 val
INFO  04:50:22,155 - #29 .
INFO  04:50:22,155 - #36 getn
INFO  04:50:22,155 - #30 (
INFO  04:50:22,155 - #12 -
INFO  04:50:22,155 - #36 x
INFO  04:50:22,155 - #31 )
INFO  04:50:22,155 - #11 +
INFO  04:50:22,155 - #37 1
INFO  04:50:22,155 - #31 )
INFO  04:50:22,155 - #27 ;
INFO  04:50:22,155 - #35 }
INFO  04:50:22,155 - #11 read
INFO  04:50:22,155 - #30 (
INFO  04:50:22,155 - #36 x
INFO  04:50:22,155 - #31 )
INFO  04:50:22,155 - #27 ;
INFO  04:50:22,155 - #35 }
INFO  04:50:22,155 - #35 }
INFO  04:50:22,155 - #35 }
INFO  04:50:22,155 - --EOF.
