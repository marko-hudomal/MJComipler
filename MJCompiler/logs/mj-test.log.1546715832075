INFO  04:51:39,548 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  04:51:39,557 - #1 program
INFO  04:51:39,557 - #36 P
INFO  04:51:39,557 - #7 const
INFO  04:51:39,557 - #36 int
INFO  04:51:39,557 - #36 size
INFO  04:51:39,557 - #24 =
INFO  04:51:39,557 - #37 10
INFO  04:51:39,557 - #27 ;
INFO  04:51:39,557 - #5 enum
INFO  04:51:39,557 - #36 Num
INFO  04:51:39,557 - #34 {
INFO  04:51:39,557 - #36 ZERO
INFO  04:51:39,557 - #28 ,
INFO  04:51:39,557 - #36 ONE
INFO  04:51:39,557 - #28 ,
INFO  04:51:39,557 - #36 TEN
INFO  04:51:39,557 - #24 =
INFO  04:51:39,557 - #37 10
INFO  04:51:39,558 - #35 }
INFO  04:51:39,558 - #4 interface
INFO  04:51:39,558 - #36 I
INFO  04:51:39,558 - #34 {
INFO  04:51:39,558 - #36 int
INFO  04:51:39,558 - #36 getp
INFO  04:51:39,558 - #30 (
INFO  04:51:39,558 - #36 int
INFO  04:51:39,558 - #36 i
INFO  04:51:39,558 - #31 )
INFO  04:51:39,558 - #27 ;
INFO  04:51:39,558 - #36 int
INFO  04:51:39,558 - #36 getn
INFO  04:51:39,558 - #30 (
INFO  04:51:39,558 - #36 int
INFO  04:51:39,558 - #36 i
INFO  04:51:39,558 - #31 )
INFO  04:51:39,558 - #27 ;
INFO  04:51:39,558 - #35 }
INFO  04:51:39,558 - #3 class
INFO  04:51:39,559 - #36 Table
INFO  04:51:39,559 - #36 implements
INFO  04:51:39,559 - #36 I
INFO  04:51:39,559 - #34 {
INFO  04:51:39,559 - #36 int
INFO  04:51:39,559 - #36 pos
INFO  04:51:39,559 - #32 [
INFO  04:51:39,559 - #33 ]
INFO  04:51:39,559 - #28 ,
INFO  04:51:39,559 - #36 neg
INFO  04:51:39,559 - #32 [
INFO  04:51:39,559 - #33 ]
INFO  04:51:39,559 - #27 ;
INFO  04:51:39,559 - #34 {
INFO  04:51:39,559 - #13 void
INFO  04:51:39,559 - #36 putp
INFO  04:51:39,559 - #30 (
INFO  04:51:39,559 - #36 int
INFO  04:51:39,559 - #36 a
INFO  04:51:39,559 - #28 ,
INFO  04:51:39,559 - #36 int
INFO  04:51:39,559 - #36 idx
INFO  04:51:39,560 - #31 )
INFO  04:51:39,560 - #34 {
INFO  04:51:39,560 - #36 this
INFO  04:51:39,560 - #29 .
INFO  04:51:39,560 - #36 pos
INFO  04:51:39,560 - #32 [
INFO  04:51:39,560 - #36 idx
INFO  04:51:39,560 - #33 ]
INFO  04:51:39,560 - #24 =
INFO  04:51:39,560 - #36 a
INFO  04:51:39,560 - #27 ;
INFO  04:51:39,560 - #35 }
INFO  04:51:39,560 - #13 void
INFO  04:51:39,560 - #36 putn
INFO  04:51:39,560 - #30 (
INFO  04:51:39,560 - #36 int
INFO  04:51:39,560 - #36 a
INFO  04:51:39,560 - #28 ,
INFO  04:51:39,560 - #36 int
INFO  04:51:39,560 - #36 idx
INFO  04:51:39,560 - #31 )
INFO  04:51:39,560 - #34 {
INFO  04:51:39,560 - #36 this
INFO  04:51:39,560 - #29 .
INFO  04:51:39,560 - #36 neg
INFO  04:51:39,560 - #32 [
INFO  04:51:39,560 - #36 idx
INFO  04:51:39,560 - #33 ]
INFO  04:51:39,560 - #24 =
INFO  04:51:39,561 - #36 a
INFO  04:51:39,561 - #27 ;
INFO  04:51:39,561 - #35 }
INFO  04:51:39,561 - #36 int
INFO  04:51:39,561 - #36 getp
INFO  04:51:39,561 - #30 (
INFO  04:51:39,561 - #36 int
INFO  04:51:39,561 - #36 idx
INFO  04:51:39,561 - #31 )
INFO  04:51:39,561 - #34 {
INFO  04:51:39,561 - #12 return
INFO  04:51:39,561 - #36 pos
INFO  04:51:39,561 - #32 [
INFO  04:51:39,561 - #36 idx
INFO  04:51:39,561 - #33 ]
INFO  04:51:39,561 - #27 ;
INFO  04:51:39,561 - #35 }
INFO  04:51:39,561 - #36 int
INFO  04:51:39,561 - #36 getn
INFO  04:51:39,561 - #30 (
INFO  04:51:39,561 - #36 int
INFO  04:51:39,561 - #36 idx
INFO  04:51:39,561 - #31 )
INFO  04:51:39,561 - #34 {
INFO  04:51:39,561 - #12 return
INFO  04:51:39,561 - #36 neg
INFO  04:51:39,561 - #32 [
INFO  04:51:39,561 - #36 idx
INFO  04:51:39,561 - #33 ]
INFO  04:51:39,562 - #27 ;
INFO  04:51:39,562 - #35 }
INFO  04:51:39,562 - #35 }
INFO  04:51:39,562 - #35 }
INFO  04:51:39,562 - #36 Table
INFO  04:51:39,562 - #36 val
INFO  04:51:39,562 - #27 ;
INFO  04:51:39,562 - #34 {
INFO  04:51:39,562 - #13 void
INFO  04:51:39,562 - #36 f
INFO  04:51:39,562 - #30 (
INFO  04:51:39,562 - #36 char
INFO  04:51:39,562 - #36 ch
INFO  04:51:39,562 - #28 ,
INFO  04:51:39,562 - #36 int
INFO  04:51:39,562 - #36 a
INFO  04:51:39,562 - #28 ,
INFO  04:51:39,562 - #36 int
INFO  04:51:39,562 - #36 arg
INFO  04:51:39,562 - #31 )
INFO  04:51:39,562 - #36 int
INFO  04:51:39,562 - #36 x
INFO  04:51:39,562 - #27 ;
INFO  04:51:39,562 - #34 {
INFO  04:51:39,562 - #36 x
INFO  04:51:39,562 - #24 =
INFO  04:51:39,562 - #36 arg
INFO  04:51:39,563 - #27 ;
INFO  04:51:39,563 - #35 }
INFO  04:51:39,563 - #13 void
INFO  04:51:39,563 - #36 main
INFO  04:51:39,563 - #30 (
INFO  04:51:39,563 - #31 )
INFO  04:51:39,563 - #36 int
INFO  04:51:39,563 - #36 x
INFO  04:51:39,563 - #28 ,
INFO  04:51:39,563 - #36 i
INFO  04:51:39,563 - #27 ;
INFO  04:51:39,563 - #36 char
INFO  04:51:39,563 - #36 c
INFO  04:51:39,563 - #27 ;
INFO  04:51:39,563 - #34 {
INFO  04:51:39,563 - #36 val
INFO  04:51:39,563 - #24 =
INFO  04:51:39,563 - #9 new
INFO  04:51:39,563 - #36 Table
INFO  04:51:39,563 - #27 ;
INFO  04:51:39,564 - #36 val
INFO  04:51:39,564 - #29 .
INFO  04:51:39,564 - #36 pos
INFO  04:51:39,564 - #24 =
INFO  04:51:39,564 - #9 new
INFO  04:51:39,564 - #36 int
INFO  04:51:39,564 - #32 [
INFO  04:51:39,564 - #36 size
INFO  04:51:39,564 - #33 ]
INFO  04:51:39,564 - #27 ;
INFO  04:51:39,564 - #36 val
INFO  04:51:39,564 - #29 .
INFO  04:51:39,564 - #36 neg
INFO  04:51:39,564 - #24 =
INFO  04:51:39,564 - #9 new
INFO  04:51:39,564 - #36 int
INFO  04:51:39,564 - #32 [
INFO  04:51:39,564 - #36 size
INFO  04:51:39,564 - #33 ]
INFO  04:51:39,564 - #27 ;
INFO  04:51:39,564 - #14 for
INFO  04:51:39,564 - #30 (
INFO  04:51:39,564 - #36 i
INFO  04:51:39,564 - #24 =
INFO  04:51:39,564 - #37 0
INFO  04:51:39,564 - #27 ;
INFO  04:51:39,564 - #36 i
INFO  04:51:39,565 - #20 <
INFO  04:51:39,565 - #36 size
INFO  04:51:39,565 - #27 ;
INFO  04:51:39,565 - #36 i
INFO  04:51:39,566 - #25 ++
INFO  04:51:39,566 - #31 )
INFO  04:51:39,566 - #34 {
INFO  04:51:39,566 - #36 val
INFO  04:51:39,566 - #29 .
INFO  04:51:39,566 - #36 putp
INFO  04:51:39,566 - #30 (
INFO  04:51:39,566 - #37 0
INFO  04:51:39,566 - #28 ,
INFO  04:51:39,566 - #36 i
INFO  04:51:39,566 - #31 )
INFO  04:51:39,566 - #27 ;
INFO  04:51:39,566 - #36 val
INFO  04:51:39,566 - #29 .
INFO  04:51:39,566 - #36 putn
INFO  04:51:39,566 - #30 (
INFO  04:51:39,566 - #37 0
INFO  04:51:39,566 - #28 ,
INFO  04:51:39,566 - #36 i
INFO  04:51:39,566 - #31 )
INFO  04:51:39,566 - #27 ;
INFO  04:51:39,566 - #35 }
INFO  04:51:39,566 - #36 f
INFO  04:51:39,566 - #30 (
INFO  04:51:39,566 - #36 c
INFO  04:51:39,566 - #28 ,
INFO  04:51:39,566 - #36 x
INFO  04:51:39,567 - #28 ,
INFO  04:51:39,567 - #36 i
INFO  04:51:39,567 - #31 )
INFO  04:51:39,567 - #27 ;
INFO  04:51:39,567 - #36 X
INFO  04:51:39,567 - #24 =
INFO  04:51:39,567 - #38 c
INFO  04:51:39,567 - #27 ;
INFO  04:51:39,567 - #11 read
INFO  04:51:39,567 - #30 (
INFO  04:51:39,567 - #36 x
INFO  04:51:39,567 - #31 )
INFO  04:51:39,567 - #27 ;
INFO  04:51:39,567 - #14 for
INFO  04:51:39,567 - #30 (
INFO  04:51:39,567 - #27 ;
INFO  04:51:39,567 - #36 x
INFO  04:51:39,567 - #18 >
INFO  04:51:39,567 - #37 0
INFO  04:51:39,567 - #27 ;
INFO  04:51:39,567 - #31 )
INFO  04:51:39,567 - #34 {
INFO  04:51:39,567 - #8 if
INFO  04:51:39,567 - #30 (
INFO  04:51:39,567 - #36 Num
INFO  04:51:39,567 - #29 .
INFO  04:51:39,567 - #36 ZERO
INFO  04:51:39,567 - #21 <=
INFO  04:51:39,567 - #36 x
INFO  04:51:39,567 - #22 &&
INFO  04:51:39,567 - #36 x
INFO  04:51:39,567 - #20 <
INFO  04:51:39,568 - #36 size
INFO  04:51:39,568 - #31 )
INFO  04:51:39,568 - #34 {
INFO  04:51:39,568 - #36 val
INFO  04:51:39,568 - #29 .
INFO  04:51:39,568 - #36 putp
INFO  04:51:39,568 - #30 (
INFO  04:51:39,568 - #36 val
INFO  04:51:39,568 - #29 .
INFO  04:51:39,568 - #36 getp
INFO  04:51:39,568 - #30 (
INFO  04:51:39,568 - #36 x
INFO  04:51:39,568 - #31 )
INFO  04:51:39,568 - #11 +
INFO  04:51:39,568 - #36 Num
INFO  04:51:39,568 - #29 .
INFO  04:51:39,568 - #36 ONE
INFO  04:51:39,568 - #31 )
INFO  04:51:39,568 - #27 ;
INFO  04:51:39,568 - #35 }
INFO  04:51:39,568 - #6 else
INFO  04:51:39,568 - #8 if
INFO  04:51:39,568 - #30 (
INFO  04:51:39,568 - #12 -
INFO  04:51:39,568 - #36 size
INFO  04:51:39,568 - #20 <
INFO  04:51:39,568 - #36 x
INFO  04:51:39,568 - #22 &&
INFO  04:51:39,568 - #36 x
INFO  04:51:39,568 - #20 <
INFO  04:51:39,568 - #37 0
INFO  04:51:39,568 - #31 )
INFO  04:51:39,568 - #34 {
INFO  04:51:39,568 - #36 val
INFO  04:51:39,568 - #29 .
INFO  04:51:39,568 - #36 putn
INFO  04:51:39,568 - #30 (
INFO  04:51:39,568 - #36 val
INFO  04:51:39,568 - #29 .
INFO  04:51:39,568 - #36 getn
INFO  04:51:39,568 - #30 (
INFO  04:51:39,568 - #12 -
INFO  04:51:39,568 - #36 x
INFO  04:51:39,569 - #31 )
INFO  04:51:39,569 - #11 +
INFO  04:51:39,569 - #37 1
INFO  04:51:39,569 - #31 )
INFO  04:51:39,569 - #27 ;
INFO  04:51:39,569 - #35 }
INFO  04:51:39,569 - #11 read
INFO  04:51:39,569 - #30 (
INFO  04:51:39,569 - #36 x
INFO  04:51:39,569 - #31 )
INFO  04:51:39,569 - #27 ;
INFO  04:51:39,569 - #35 }
INFO  04:51:39,569 - #35 }
INFO  04:51:39,569 - #35 }
INFO  04:51:39,569 - --EOF.
