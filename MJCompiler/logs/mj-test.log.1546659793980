INFO  04:40:41,220 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  04:40:41,228 - #1 program
INFO  04:40:41,228 - #36 P
INFO  04:40:41,228 - #7 const
INFO  04:40:41,228 - #36 int
INFO  04:40:41,228 - #36 size
INFO  04:40:41,229 - #24 =
INFO  04:40:41,229 - #37 10
INFO  04:40:41,229 - #27 ;
INFO  04:40:41,229 - #5 enum
INFO  04:40:41,229 - #36 Num
INFO  04:40:41,229 - #34 {
INFO  04:40:41,229 - #36 ZERO
INFO  04:40:41,229 - #28 ,
INFO  04:40:41,229 - #36 ONE
INFO  04:40:41,229 - #28 ,
INFO  04:40:41,229 - #36 TEN
INFO  04:40:41,229 - #24 =
INFO  04:40:41,229 - #37 10
INFO  04:40:41,229 - #35 }
INFO  04:40:41,229 - #4 interface
INFO  04:40:41,229 - #36 I
INFO  04:40:41,229 - #34 {
INFO  04:40:41,230 - #36 int
INFO  04:40:41,230 - #36 getp
INFO  04:40:41,230 - #30 (
INFO  04:40:41,230 - #36 int
INFO  04:40:41,230 - #36 i
INFO  04:40:41,230 - #31 )
INFO  04:40:41,230 - #27 ;
INFO  04:40:41,230 - #36 int
INFO  04:40:41,230 - #36 getn
INFO  04:40:41,230 - #30 (
INFO  04:40:41,230 - #36 int
INFO  04:40:41,230 - #36 i
INFO  04:40:41,230 - #31 )
INFO  04:40:41,230 - #27 ;
INFO  04:40:41,230 - #35 }
INFO  04:40:41,230 - #3 class
INFO  04:40:41,230 - #36 Table
INFO  04:40:41,230 - #36 implements
INFO  04:40:41,230 - #36 I
INFO  04:40:41,230 - #34 {
INFO  04:40:41,230 - #36 int
INFO  04:40:41,230 - #36 pos
INFO  04:40:41,230 - #32 [
INFO  04:40:41,230 - #33 ]
INFO  04:40:41,230 - #28 ,
INFO  04:40:41,230 - #36 neg
INFO  04:40:41,230 - #32 [
INFO  04:40:41,231 - #33 ]
INFO  04:40:41,231 - #27 ;
INFO  04:40:41,231 - #34 {
INFO  04:40:41,231 - #13 void
INFO  04:40:41,231 - #36 putp
INFO  04:40:41,231 - #30 (
INFO  04:40:41,231 - #36 int
INFO  04:40:41,231 - #36 a
INFO  04:40:41,231 - #28 ,
INFO  04:40:41,231 - #36 int
INFO  04:40:41,231 - #36 idx
INFO  04:40:41,231 - #31 )
INFO  04:40:41,231 - #34 {
INFO  04:40:41,231 - #36 this
INFO  04:40:41,231 - #29 .
INFO  04:40:41,231 - #36 pos
INFO  04:40:41,231 - #32 [
INFO  04:40:41,231 - #36 idx
INFO  04:40:41,231 - #33 ]
INFO  04:40:41,231 - #24 =
INFO  04:40:41,231 - #36 a
INFO  04:40:41,231 - #27 ;
INFO  04:40:41,231 - #35 }
INFO  04:40:41,231 - #13 void
INFO  04:40:41,231 - #36 putn
INFO  04:40:41,231 - #30 (
INFO  04:40:41,231 - #36 int
INFO  04:40:41,231 - #36 a
INFO  04:40:41,231 - #28 ,
INFO  04:40:41,231 - #36 int
INFO  04:40:41,231 - #36 idx
INFO  04:40:41,232 - #31 )
INFO  04:40:41,232 - #34 {
INFO  04:40:41,232 - #36 this
INFO  04:40:41,232 - #29 .
INFO  04:40:41,232 - #36 neg
INFO  04:40:41,232 - #32 [
INFO  04:40:41,232 - #36 idx
INFO  04:40:41,232 - #33 ]
INFO  04:40:41,232 - #24 =
INFO  04:40:41,232 - #36 a
INFO  04:40:41,232 - #27 ;
INFO  04:40:41,232 - #35 }
INFO  04:40:41,232 - #36 int
INFO  04:40:41,232 - #36 getp
INFO  04:40:41,232 - #30 (
INFO  04:40:41,232 - #36 int
INFO  04:40:41,232 - #36 idx
INFO  04:40:41,232 - #31 )
INFO  04:40:41,232 - #34 {
INFO  04:40:41,232 - #12 return
INFO  04:40:41,232 - #36 pos
INFO  04:40:41,232 - #32 [
INFO  04:40:41,232 - #36 idx
INFO  04:40:41,232 - #33 ]
INFO  04:40:41,232 - #27 ;
INFO  04:40:41,232 - #35 }
INFO  04:40:41,232 - #36 int
INFO  04:40:41,232 - #36 getn
INFO  04:40:41,232 - #30 (
INFO  04:40:41,232 - #36 int
INFO  04:40:41,232 - #36 idx
INFO  04:40:41,232 - #31 )
INFO  04:40:41,232 - #34 {
INFO  04:40:41,232 - #12 return
INFO  04:40:41,233 - #36 neg
INFO  04:40:41,233 - #32 [
INFO  04:40:41,233 - #36 idx
INFO  04:40:41,233 - #33 ]
INFO  04:40:41,233 - #27 ;
INFO  04:40:41,233 - #35 }
INFO  04:40:41,233 - #35 }
INFO  04:40:41,233 - #35 }
INFO  04:40:41,233 - #36 Table
INFO  04:40:41,233 - #36 val
INFO  04:40:41,233 - #27 ;
INFO  04:40:41,233 - #34 {
INFO  04:40:41,233 - #13 void
INFO  04:40:41,233 - #36 f
INFO  04:40:41,233 - #30 (
INFO  04:40:41,233 - #36 char
INFO  04:40:41,233 - #36 ch
INFO  04:40:41,233 - #28 ,
INFO  04:40:41,234 - #36 int
INFO  04:40:41,234 - #36 a
INFO  04:40:41,234 - #28 ,
INFO  04:40:41,234 - #36 int
INFO  04:40:41,234 - #36 arg
INFO  04:40:41,234 - #31 )
INFO  04:40:41,235 - #36 int
INFO  04:40:41,235 - #36 x
INFO  04:40:41,235 - #27 ;
INFO  04:40:41,235 - #34 {
INFO  04:40:41,235 - #36 x
INFO  04:40:41,235 - #24 =
INFO  04:40:41,235 - #36 arg
INFO  04:40:41,235 - #27 ;
INFO  04:40:41,235 - #35 }
INFO  04:40:41,235 - #13 void
INFO  04:40:41,235 - #36 main
INFO  04:40:41,235 - #30 (
INFO  04:40:41,235 - #31 )
INFO  04:40:41,235 - #36 int
INFO  04:40:41,235 - #36 x
INFO  04:40:41,235 - #28 ,
INFO  04:40:41,235 - #36 i
INFO  04:40:41,235 - #27 ;
INFO  04:40:41,235 - #36 char
INFO  04:40:41,235 - #36 c
INFO  04:40:41,235 - #27 ;
INFO  04:40:41,235 - #34 {
INFO  04:40:41,235 - #36 val
INFO  04:40:41,236 - #24 =
INFO  04:40:41,236 - #9 new
INFO  04:40:41,236 - #36 Table
INFO  04:40:41,236 - #27 ;
INFO  04:40:41,236 - #36 val
INFO  04:40:41,236 - #29 .
INFO  04:40:41,236 - #36 pos
INFO  04:40:41,236 - #24 =
INFO  04:40:41,236 - #9 new
INFO  04:40:41,236 - #36 int
INFO  04:40:41,236 - #32 [
INFO  04:40:41,236 - #36 size
INFO  04:40:41,236 - #33 ]
INFO  04:40:41,236 - #27 ;
INFO  04:40:41,236 - #36 val
INFO  04:40:41,236 - #29 .
INFO  04:40:41,236 - #36 neg
INFO  04:40:41,236 - #24 =
INFO  04:40:41,236 - #9 new
INFO  04:40:41,236 - #36 int
INFO  04:40:41,236 - #32 [
INFO  04:40:41,236 - #36 size
INFO  04:40:41,236 - #33 ]
INFO  04:40:41,237 - #27 ;
INFO  04:40:41,237 - #14 for
INFO  04:40:41,237 - #30 (
INFO  04:40:41,237 - #36 i
INFO  04:40:41,237 - #24 =
INFO  04:40:41,237 - #37 0
INFO  04:40:41,237 - #27 ;
INFO  04:40:41,237 - #36 i
INFO  04:40:41,237 - #20 <
INFO  04:40:41,237 - #36 size
INFO  04:40:41,237 - #27 ;
INFO  04:40:41,237 - #36 i
INFO  04:40:41,237 - #25 ++
INFO  04:40:41,237 - #31 )
INFO  04:40:41,237 - #34 {
INFO  04:40:41,237 - #36 val
INFO  04:40:41,237 - #29 .
INFO  04:40:41,237 - #36 putp
INFO  04:40:41,237 - #30 (
INFO  04:40:41,237 - #37 0
INFO  04:40:41,237 - #28 ,
INFO  04:40:41,237 - #36 i
INFO  04:40:41,237 - #31 )
INFO  04:40:41,237 - #27 ;
INFO  04:40:41,237 - #36 val
INFO  04:40:41,237 - #29 .
INFO  04:40:41,237 - #36 putn
INFO  04:40:41,237 - #30 (
INFO  04:40:41,237 - #37 0
INFO  04:40:41,237 - #28 ,
INFO  04:40:41,237 - #36 i
INFO  04:40:41,238 - #31 )
INFO  04:40:41,238 - #27 ;
INFO  04:40:41,238 - #35 }
INFO  04:40:41,238 - #36 f
INFO  04:40:41,238 - #30 (
INFO  04:40:41,238 - #36 c
INFO  04:40:41,238 - #28 ,
INFO  04:40:41,238 - #36 x
INFO  04:40:41,238 - #28 ,
INFO  04:40:41,238 - #36 i
INFO  04:40:41,238 - #31 )
INFO  04:40:41,238 - #27 ;
INFO  04:40:41,238 - #11 read
INFO  04:40:41,238 - #30 (
INFO  04:40:41,238 - #36 x
INFO  04:40:41,238 - #31 )
INFO  04:40:41,238 - #27 ;
INFO  04:40:41,238 - #14 for
INFO  04:40:41,238 - #30 (
INFO  04:40:41,238 - #27 ;
INFO  04:40:41,238 - #36 x
INFO  04:40:41,238 - #18 >
INFO  04:40:41,238 - #37 0
INFO  04:40:41,238 - #27 ;
INFO  04:40:41,238 - #31 )
INFO  04:40:41,238 - #34 {
INFO  04:40:41,238 - #8 if
INFO  04:40:41,238 - #30 (
INFO  04:40:41,238 - #36 Num
INFO  04:40:41,238 - #29 .
INFO  04:40:41,238 - #36 ZERO
INFO  04:40:41,238 - #21 <=
INFO  04:40:41,238 - #36 x
INFO  04:40:41,238 - #22 &&
INFO  04:40:41,238 - #36 x
INFO  04:40:41,238 - #20 <
INFO  04:40:41,238 - #36 size
INFO  04:40:41,238 - #31 )
INFO  04:40:41,238 - #34 {
INFO  04:40:41,238 - #36 val
INFO  04:40:41,238 - #29 .
INFO  04:40:41,238 - #36 putp
INFO  04:40:41,239 - #30 (
INFO  04:40:41,239 - #36 val
INFO  04:40:41,239 - #29 .
INFO  04:40:41,239 - #36 getp
INFO  04:40:41,239 - #30 (
INFO  04:40:41,239 - #36 x
INFO  04:40:41,239 - #31 )
INFO  04:40:41,239 - #11 +
INFO  04:40:41,239 - #36 Num
INFO  04:40:41,239 - #29 .
INFO  04:40:41,239 - #36 ONE
INFO  04:40:41,239 - #31 )
INFO  04:40:41,239 - #27 ;
INFO  04:40:41,239 - #35 }
INFO  04:40:41,239 - #6 else
INFO  04:40:41,239 - #8 if
INFO  04:40:41,239 - #30 (
INFO  04:40:41,239 - #36 size
INFO  04:40:41,239 - #20 <
INFO  04:40:41,239 - #36 x
INFO  04:40:41,239 - #22 &&
INFO  04:40:41,239 - #36 x
INFO  04:40:41,239 - #20 <
INFO  04:40:41,239 - #37 0
INFO  04:40:41,239 - #31 )
INFO  04:40:41,239 - #34 {
INFO  04:40:41,239 - #36 val
INFO  04:40:41,239 - #29 .
INFO  04:40:41,239 - #36 putn
INFO  04:40:41,239 - #30 (
INFO  04:40:41,239 - #36 val
INFO  04:40:41,239 - #29 .
INFO  04:40:41,239 - #36 getn
INFO  04:40:41,239 - #30 (
INFO  04:40:41,239 - #36 x
INFO  04:40:41,239 - #31 )
INFO  04:40:41,240 - #11 +
INFO  04:40:41,240 - #37 1
INFO  04:40:41,240 - #31 )
INFO  04:40:41,240 - #27 ;
INFO  04:40:41,240 - #35 }
INFO  04:40:41,240 - #11 read
INFO  04:40:41,240 - #30 (
INFO  04:40:41,240 - #36 x
INFO  04:40:41,240 - #31 )
INFO  04:40:41,240 - #27 ;
INFO  04:40:41,240 - #35 }
INFO  04:40:41,240 - #35 }
INFO  04:40:41,240 - #35 }
INFO  04:40:41,240 - --EOF.
