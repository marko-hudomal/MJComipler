INFO  20:17:12,077 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  20:17:12,127 - #1 program
INFO  20:17:12,127 - #43 P
INFO  20:17:12,127 - #7 const
INFO  20:17:12,128 - #43 int
INFO  20:17:12,128 - #43 size
INFO  20:17:12,128 - #24 =
INFO  20:17:12,128 - #45 10
INFO  20:17:12,128 - #27 ;
INFO  20:17:12,128 - #5 enum
INFO  20:17:12,128 - #43 Num
INFO  20:17:12,128 - #34 {
INFO  20:17:12,129 - #43 ZERO
INFO  20:17:12,129 - #28 ,
INFO  20:17:12,129 - #43 ONE
INFO  20:17:12,129 - #28 ,
INFO  20:17:12,129 - #43 TEN
INFO  20:17:12,129 - #24 =
INFO  20:17:12,129 - #45 10
INFO  20:17:12,129 - #35 }
INFO  20:17:12,129 - #4 interface
INFO  20:17:12,130 - #43 I
INFO  20:17:12,130 - #34 {
INFO  20:17:12,130 - #43 int
INFO  20:17:12,130 - #43 getp
INFO  20:17:12,130 - #30 (
INFO  20:17:12,130 - #43 int
INFO  20:17:12,130 - #43 i
INFO  20:17:12,130 - #31 )
INFO  20:17:12,131 - #27 ;
INFO  20:17:12,131 - #43 int
INFO  20:17:12,131 - #43 getn
INFO  20:17:12,131 - #30 (
INFO  20:17:12,131 - #43 int
INFO  20:17:12,131 - #43 i
INFO  20:17:12,131 - #31 )
INFO  20:17:12,131 - #27 ;
INFO  20:17:12,131 - #35 }
INFO  20:17:12,131 - #3 class
INFO  20:17:12,131 - #43 Table
INFO  20:17:12,132 - #43 implements
INFO  20:17:12,132 - #43 I
INFO  20:17:12,132 - #34 {
INFO  20:17:12,132 - #43 int
INFO  20:17:12,132 - #43 pos
INFO  20:17:12,132 - #32 [
INFO  20:17:12,132 - #33 ]
INFO  20:17:12,132 - #28 ,
INFO  20:17:12,132 - #43 neg
INFO  20:17:12,132 - #32 [
INFO  20:17:12,132 - #33 ]
INFO  20:17:12,133 - #27 ;
INFO  20:17:12,133 - #34 {
INFO  20:17:12,133 - #38 void
INFO  20:17:12,133 - #43 putp
INFO  20:17:12,133 - #30 (
INFO  20:17:12,133 - #43 int
INFO  20:17:12,133 - #43 a
INFO  20:17:12,133 - #28 ,
INFO  20:17:12,133 - #43 int
INFO  20:17:12,133 - #43 idx
INFO  20:17:12,134 - #31 )
INFO  20:17:12,134 - #34 {
INFO  20:17:12,134 - #43 this
INFO  20:17:12,134 - #29 .
INFO  20:17:12,134 - #43 pos
INFO  20:17:12,134 - #32 [
INFO  20:17:12,134 - #43 idx
INFO  20:17:12,134 - #33 ]
INFO  20:17:12,134 - #24 =
INFO  20:17:12,134 - #43 a
INFO  20:17:12,135 - #27 ;
INFO  20:17:12,135 - #35 }
INFO  20:17:12,135 - #38 void
INFO  20:17:12,135 - #43 putn
INFO  20:17:12,135 - #30 (
INFO  20:17:12,135 - #43 int
INFO  20:17:12,135 - #43 a
INFO  20:17:12,135 - #28 ,
INFO  20:17:12,135 - #43 int
INFO  20:17:12,135 - #43 idx
INFO  20:17:12,135 - #31 )
INFO  20:17:12,135 - #34 {
INFO  20:17:12,136 - #43 this
INFO  20:17:12,136 - #29 .
INFO  20:17:12,136 - #43 neg
INFO  20:17:12,136 - #32 [
INFO  20:17:12,136 - #43 idx
INFO  20:17:12,136 - #33 ]
INFO  20:17:12,136 - #24 =
INFO  20:17:12,136 - #43 a
INFO  20:17:12,136 - #27 ;
INFO  20:17:12,136 - #35 }
INFO  20:17:12,136 - #43 int
INFO  20:17:12,136 - #43 getp
INFO  20:17:12,136 - #30 (
INFO  20:17:12,136 - #43 int
INFO  20:17:12,136 - #43 idx
INFO  20:17:12,136 - #31 )
INFO  20:17:12,136 - #34 {
INFO  20:17:12,136 - #37 return
INFO  20:17:12,136 - #43 pos
INFO  20:17:12,136 - #32 [
INFO  20:17:12,136 - #43 idx
INFO  20:17:12,136 - #33 ]
INFO  20:17:12,136 - #27 ;
INFO  20:17:12,136 - #35 }
INFO  20:17:12,136 - #43 int
INFO  20:17:12,137 - #43 getn
INFO  20:17:12,137 - #30 (
INFO  20:17:12,137 - #43 int
INFO  20:17:12,137 - #43 idx
INFO  20:17:12,137 - #31 )
INFO  20:17:12,137 - #34 {
INFO  20:17:12,137 - #37 return
INFO  20:17:12,137 - #43 neg
INFO  20:17:12,137 - #32 [
INFO  20:17:12,137 - #43 idx
INFO  20:17:12,137 - #33 ]
INFO  20:17:12,137 - #27 ;
INFO  20:17:12,137 - #35 }
INFO  20:17:12,137 - #35 }
INFO  20:17:12,137 - #35 }
INFO  20:17:12,137 - #43 Table
INFO  20:17:12,137 - #43 val
INFO  20:17:12,137 - #27 ;
INFO  20:17:12,137 - #34 {
INFO  20:17:12,137 - #38 void
INFO  20:17:12,137 - #43 f
INFO  20:17:12,137 - #30 (
INFO  20:17:12,137 - #43 char
INFO  20:17:12,138 - #43 ch
INFO  20:17:12,138 - #28 ,
INFO  20:17:12,139 - #43 int
INFO  20:17:12,139 - #43 a
INFO  20:17:12,139 - #28 ,
INFO  20:17:12,139 - #43 int
INFO  20:17:12,139 - #43 arg
INFO  20:17:12,139 - #31 )
INFO  20:17:12,140 - #43 int
INFO  20:17:12,140 - #43 x
INFO  20:17:12,140 - #27 ;
INFO  20:17:12,140 - #34 {
INFO  20:17:12,140 - #43 x
INFO  20:17:12,140 - #24 =
INFO  20:17:12,140 - #43 arg
INFO  20:17:12,140 - #27 ;
INFO  20:17:12,140 - #35 }
INFO  20:17:12,140 - #38 void
INFO  20:17:12,140 - #43 main
INFO  20:17:12,140 - #30 (
INFO  20:17:12,140 - #31 )
INFO  20:17:12,140 - #43 int
INFO  20:17:12,140 - #43 x
INFO  20:17:12,140 - #28 ,
INFO  20:17:12,140 - #43 i
INFO  20:17:12,140 - #27 ;
INFO  20:17:12,140 - #43 char
INFO  20:17:12,140 - #43 c
INFO  20:17:12,140 - #27 ;
INFO  20:17:12,140 - #34 {
INFO  20:17:12,140 - #43 val
INFO  20:17:12,140 - #24 =
INFO  20:17:12,140 - #9 new
INFO  20:17:12,140 - #43 Table
INFO  20:17:12,140 - #27 ;
INFO  20:17:12,140 - #43 val
INFO  20:17:12,140 - #29 .
INFO  20:17:12,140 - #43 pos
INFO  20:17:12,140 - #24 =
INFO  20:17:12,141 - #9 new
INFO  20:17:12,141 - #43 int
INFO  20:17:12,141 - #32 [
INFO  20:17:12,141 - #43 size
INFO  20:17:12,141 - #33 ]
INFO  20:17:12,141 - #27 ;
INFO  20:17:12,141 - #43 val
INFO  20:17:12,141 - #29 .
INFO  20:17:12,141 - #43 neg
INFO  20:17:12,141 - #24 =
INFO  20:17:12,141 - #9 new
INFO  20:17:12,141 - #43 int
INFO  20:17:12,141 - #32 [
INFO  20:17:12,141 - #43 size
INFO  20:17:12,141 - #33 ]
INFO  20:17:12,141 - #27 ;
INFO  20:17:12,141 - #39 for
INFO  20:17:12,141 - #30 (
INFO  20:17:12,141 - #43 i
INFO  20:17:12,141 - #24 =
INFO  20:17:12,141 - #45 0
INFO  20:17:12,141 - #27 ;
INFO  20:17:12,141 - #43 i
INFO  20:17:12,141 - #20 <
INFO  20:17:12,141 - #43 size
INFO  20:17:12,141 - #27 ;
INFO  20:17:12,141 - #43 i
INFO  20:17:12,141 - #25 ++
INFO  20:17:12,141 - #31 )
INFO  20:17:12,141 - #34 {
INFO  20:17:12,141 - #43 val
INFO  20:17:12,141 - #29 .
INFO  20:17:12,141 - #43 putp
INFO  20:17:12,141 - #30 (
INFO  20:17:12,142 - #45 0
INFO  20:17:12,142 - #28 ,
INFO  20:17:12,142 - #43 i
INFO  20:17:12,142 - #31 )
INFO  20:17:12,142 - #27 ;
INFO  20:17:12,142 - #43 val
INFO  20:17:12,142 - #29 .
INFO  20:17:12,142 - #43 putn
INFO  20:17:12,142 - #30 (
INFO  20:17:12,142 - #45 0
INFO  20:17:12,142 - #28 ,
INFO  20:17:12,142 - #43 i
INFO  20:17:12,142 - #31 )
INFO  20:17:12,142 - #27 ;
INFO  20:17:12,142 - #35 }
INFO  20:17:12,142 - #43 f
INFO  20:17:12,142 - #30 (
INFO  20:17:12,142 - #43 c
INFO  20:17:12,142 - #28 ,
INFO  20:17:12,142 - #43 x
INFO  20:17:12,142 - #28 ,
INFO  20:17:12,142 - #43 i
INFO  20:17:12,142 - #31 )
INFO  20:17:12,142 - #27 ;
INFO  20:17:12,142 - #43 X
INFO  20:17:12,142 - #24 =
INFO  20:17:12,142 - #42 c
INFO  20:17:12,142 - #27 ;
INFO  20:17:12,142 - #36 read
INFO  20:17:12,142 - #30 (
INFO  20:17:12,142 - #43 x
INFO  20:17:12,142 - #31 )
INFO  20:17:12,143 - #27 ;
INFO  20:17:12,143 - #39 for
INFO  20:17:12,143 - #30 (
INFO  20:17:12,143 - #27 ;
INFO  20:17:12,143 - #43 x
INFO  20:17:12,143 - #18 >
INFO  20:17:12,143 - #45 0
INFO  20:17:12,143 - #27 ;
INFO  20:17:12,143 - #31 )
INFO  20:17:12,143 - #34 {
INFO  20:17:12,143 - #8 if
INFO  20:17:12,143 - #30 (
INFO  20:17:12,143 - #43 Num
INFO  20:17:12,143 - #29 .
INFO  20:17:12,143 - #43 ZERO
INFO  20:17:12,143 - #21 <=
INFO  20:17:12,143 - #43 x
INFO  20:17:12,143 - #22 &&
INFO  20:17:12,143 - #43 x
INFO  20:17:12,143 - #20 <
INFO  20:17:12,143 - #43 size
INFO  20:17:12,143 - #31 )
INFO  20:17:12,143 - #34 {
INFO  20:17:12,143 - #43 val
INFO  20:17:12,143 - #29 .
INFO  20:17:12,143 - #43 putp
INFO  20:17:12,143 - #30 (
INFO  20:17:12,143 - #43 val
INFO  20:17:12,144 - #29 .
INFO  20:17:12,144 - #43 getp
INFO  20:17:12,144 - #30 (
INFO  20:17:12,144 - #43 x
INFO  20:17:12,144 - #31 )
INFO  20:17:12,144 - #11 +
INFO  20:17:12,144 - #43 Num
INFO  20:17:12,144 - #29 .
INFO  20:17:12,144 - #43 ONE
INFO  20:17:12,144 - #31 )
INFO  20:17:12,144 - #27 ;
INFO  20:17:12,144 - #35 }
INFO  20:17:12,144 - #6 else
INFO  20:17:12,144 - #8 if
INFO  20:17:12,144 - #30 (
INFO  20:17:12,144 - #12 -
INFO  20:17:12,144 - #43 size
INFO  20:17:12,144 - #20 <
INFO  20:17:12,144 - #43 x
INFO  20:17:12,144 - #22 &&
INFO  20:17:12,144 - #43 x
INFO  20:17:12,144 - #20 <
INFO  20:17:12,144 - #45 0
INFO  20:17:12,144 - #31 )
INFO  20:17:12,144 - #34 {
INFO  20:17:12,144 - #43 val
INFO  20:17:12,144 - #29 .
INFO  20:17:12,144 - #43 putn
INFO  20:17:12,144 - #30 (
INFO  20:17:12,144 - #43 val
INFO  20:17:12,144 - #29 .
INFO  20:17:12,144 - #43 getn
INFO  20:17:12,144 - #30 (
INFO  20:17:12,144 - #12 -
INFO  20:17:12,144 - #43 x
INFO  20:17:12,144 - #31 )
INFO  20:17:12,144 - #11 +
INFO  20:17:12,144 - #45 1
INFO  20:17:12,144 - #31 )
INFO  20:17:12,145 - #27 ;
INFO  20:17:12,145 - #35 }
INFO  20:17:12,145 - #36 read
INFO  20:17:12,145 - #30 (
INFO  20:17:12,145 - #43 x
INFO  20:17:12,145 - #31 )
INFO  20:17:12,145 - #27 ;
INFO  20:17:12,145 - #35 }
INFO  20:17:12,145 - #35 }
INFO  20:17:12,145 - #35 }
INFO  20:17:12,145 - --EOF.
