INFO  04:49:19,275 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  04:49:19,283 - #1 program
INFO  04:49:19,283 - #36 P
INFO  04:49:19,284 - #7 const
INFO  04:49:19,284 - #36 int
INFO  04:49:19,284 - #36 size
INFO  04:49:19,284 - #24 =
INFO  04:49:19,284 - #37 10
INFO  04:49:19,284 - #27 ;
INFO  04:49:19,284 - #5 enum
INFO  04:49:19,284 - #36 Num
INFO  04:49:19,284 - #34 {
INFO  04:49:19,284 - #36 ZERO
INFO  04:49:19,284 - #28 ,
INFO  04:49:19,284 - #36 ONE
INFO  04:49:19,284 - #28 ,
INFO  04:49:19,284 - #36 TEN
INFO  04:49:19,284 - #24 =
INFO  04:49:19,284 - #37 10
INFO  04:49:19,284 - #35 }
INFO  04:49:19,284 - #4 interface
INFO  04:49:19,284 - #36 I
INFO  04:49:19,284 - #34 {
INFO  04:49:19,285 - #36 int
INFO  04:49:19,285 - #36 getp
INFO  04:49:19,285 - #30 (
INFO  04:49:19,285 - #36 int
INFO  04:49:19,285 - #36 i
INFO  04:49:19,285 - #31 )
INFO  04:49:19,285 - #27 ;
INFO  04:49:19,285 - #36 int
INFO  04:49:19,285 - #36 getn
INFO  04:49:19,285 - #30 (
INFO  04:49:19,285 - #36 int
INFO  04:49:19,285 - #36 i
INFO  04:49:19,285 - #31 )
INFO  04:49:19,285 - #27 ;
INFO  04:49:19,285 - #35 }
INFO  04:49:19,285 - #3 class
INFO  04:49:19,285 - #36 Table
INFO  04:49:19,285 - #36 implements
INFO  04:49:19,285 - #36 I
INFO  04:49:19,286 - #34 {
INFO  04:49:19,286 - #36 int
INFO  04:49:19,286 - #36 pos
INFO  04:49:19,286 - #32 [
INFO  04:49:19,286 - #33 ]
INFO  04:49:19,286 - #28 ,
INFO  04:49:19,286 - #36 neg
INFO  04:49:19,286 - #32 [
INFO  04:49:19,286 - #33 ]
INFO  04:49:19,286 - #27 ;
INFO  04:49:19,286 - #34 {
INFO  04:49:19,286 - #13 void
INFO  04:49:19,286 - #36 putp
INFO  04:49:19,286 - #30 (
INFO  04:49:19,286 - #36 int
INFO  04:49:19,286 - #36 a
INFO  04:49:19,286 - #28 ,
INFO  04:49:19,286 - #36 int
INFO  04:49:19,286 - #36 idx
INFO  04:49:19,286 - #31 )
INFO  04:49:19,286 - #34 {
INFO  04:49:19,286 - #36 this
INFO  04:49:19,286 - #29 .
INFO  04:49:19,286 - #36 pos
INFO  04:49:19,286 - #32 [
INFO  04:49:19,286 - #36 idx
INFO  04:49:19,287 - #33 ]
INFO  04:49:19,287 - #24 =
INFO  04:49:19,287 - #36 a
INFO  04:49:19,287 - #27 ;
INFO  04:49:19,287 - #35 }
INFO  04:49:19,287 - #13 void
INFO  04:49:19,287 - #36 putn
INFO  04:49:19,287 - #30 (
INFO  04:49:19,287 - #36 int
INFO  04:49:19,287 - #36 a
INFO  04:49:19,287 - #28 ,
INFO  04:49:19,287 - #36 int
INFO  04:49:19,287 - #36 idx
INFO  04:49:19,287 - #31 )
INFO  04:49:19,287 - #34 {
INFO  04:49:19,287 - #36 this
INFO  04:49:19,287 - #29 .
INFO  04:49:19,287 - #36 neg
INFO  04:49:19,287 - #32 [
INFO  04:49:19,287 - #36 idx
INFO  04:49:19,287 - #33 ]
INFO  04:49:19,287 - #24 =
INFO  04:49:19,287 - #36 a
INFO  04:49:19,287 - #27 ;
INFO  04:49:19,287 - #35 }
INFO  04:49:19,287 - #36 int
INFO  04:49:19,287 - #36 getp
INFO  04:49:19,287 - #30 (
INFO  04:49:19,287 - #36 int
INFO  04:49:19,288 - #36 idx
INFO  04:49:19,288 - #31 )
INFO  04:49:19,288 - #34 {
INFO  04:49:19,288 - #12 return
INFO  04:49:19,288 - #36 pos
INFO  04:49:19,288 - #32 [
INFO  04:49:19,288 - #36 idx
INFO  04:49:19,288 - #33 ]
INFO  04:49:19,288 - #27 ;
INFO  04:49:19,288 - #35 }
INFO  04:49:19,288 - #36 int
INFO  04:49:19,288 - #36 getn
INFO  04:49:19,288 - #30 (
INFO  04:49:19,288 - #36 int
INFO  04:49:19,288 - #36 idx
INFO  04:49:19,288 - #31 )
INFO  04:49:19,288 - #34 {
INFO  04:49:19,288 - #12 return
INFO  04:49:19,288 - #36 neg
INFO  04:49:19,288 - #32 [
INFO  04:49:19,288 - #36 idx
INFO  04:49:19,288 - #33 ]
INFO  04:49:19,288 - #27 ;
INFO  04:49:19,288 - #35 }
INFO  04:49:19,288 - #35 }
INFO  04:49:19,288 - #35 }
INFO  04:49:19,288 - #36 Table
INFO  04:49:19,288 - #36 val
INFO  04:49:19,288 - #27 ;
INFO  04:49:19,289 - #34 {
INFO  04:49:19,289 - #13 void
INFO  04:49:19,289 - #36 f
INFO  04:49:19,289 - #30 (
INFO  04:49:19,289 - #36 char
INFO  04:49:19,289 - #36 ch
INFO  04:49:19,289 - #28 ,
INFO  04:49:19,290 - #36 int
INFO  04:49:19,290 - #36 a
INFO  04:49:19,290 - #28 ,
INFO  04:49:19,290 - #36 int
INFO  04:49:19,290 - #36 arg
INFO  04:49:19,290 - #31 )
INFO  04:49:19,290 - #36 int
INFO  04:49:19,290 - #36 x
INFO  04:49:19,290 - #27 ;
INFO  04:49:19,290 - #34 {
INFO  04:49:19,290 - #36 x
INFO  04:49:19,290 - #24 =
INFO  04:49:19,290 - #36 arg
INFO  04:49:19,290 - #27 ;
INFO  04:49:19,290 - #35 }
INFO  04:49:19,290 - #13 void
INFO  04:49:19,291 - #36 main
INFO  04:49:19,291 - #30 (
INFO  04:49:19,291 - #31 )
INFO  04:49:19,291 - #36 int
INFO  04:49:19,291 - #36 x
INFO  04:49:19,291 - #28 ,
INFO  04:49:19,291 - #36 i
INFO  04:49:19,291 - #27 ;
INFO  04:49:19,291 - #36 char
INFO  04:49:19,291 - #36 c
INFO  04:49:19,291 - #27 ;
INFO  04:49:19,291 - #34 {
INFO  04:49:19,291 - #36 val
INFO  04:49:19,291 - #24 =
INFO  04:49:19,291 - #9 new
INFO  04:49:19,291 - #36 Table
INFO  04:49:19,291 - #27 ;
INFO  04:49:19,291 - #36 val
INFO  04:49:19,291 - #29 .
INFO  04:49:19,291 - #36 pos
INFO  04:49:19,291 - #24 =
INFO  04:49:19,291 - #9 new
INFO  04:49:19,292 - #36 int
INFO  04:49:19,292 - #32 [
INFO  04:49:19,292 - #36 size
INFO  04:49:19,292 - #33 ]
INFO  04:49:19,292 - #27 ;
INFO  04:49:19,292 - #36 val
INFO  04:49:19,292 - #29 .
INFO  04:49:19,292 - #36 neg
INFO  04:49:19,292 - #24 =
INFO  04:49:19,292 - #9 new
INFO  04:49:19,292 - #36 int
INFO  04:49:19,292 - #32 [
INFO  04:49:19,292 - #36 size
INFO  04:49:19,292 - #33 ]
INFO  04:49:19,292 - #27 ;
INFO  04:49:19,292 - #14 for
INFO  04:49:19,292 - #30 (
INFO  04:49:19,292 - #36 i
INFO  04:49:19,292 - #24 =
INFO  04:49:19,292 - #37 0
INFO  04:49:19,293 - #27 ;
INFO  04:49:19,293 - #36 i
INFO  04:49:19,293 - #20 <
INFO  04:49:19,293 - #36 size
INFO  04:49:19,293 - #27 ;
INFO  04:49:19,293 - #36 i
INFO  04:49:19,293 - #25 ++
INFO  04:49:19,293 - #31 )
INFO  04:49:19,293 - #34 {
INFO  04:49:19,293 - #36 val
INFO  04:49:19,293 - #29 .
INFO  04:49:19,293 - #36 putp
INFO  04:49:19,293 - #30 (
INFO  04:49:19,293 - #37 0
INFO  04:49:19,293 - #28 ,
INFO  04:49:19,293 - #36 i
INFO  04:49:19,293 - #31 )
INFO  04:49:19,293 - #27 ;
INFO  04:49:19,293 - #36 val
INFO  04:49:19,293 - #29 .
INFO  04:49:19,293 - #36 putn
INFO  04:49:19,294 - #30 (
INFO  04:49:19,294 - #37 0
INFO  04:49:19,294 - #28 ,
INFO  04:49:19,294 - #36 i
INFO  04:49:19,294 - #31 )
INFO  04:49:19,294 - #27 ;
INFO  04:49:19,294 - #35 }
INFO  04:49:19,294 - #36 f
INFO  04:49:19,294 - #30 (
INFO  04:49:19,294 - #36 c
INFO  04:49:19,294 - #28 ,
INFO  04:49:19,294 - #36 x
INFO  04:49:19,294 - #28 ,
INFO  04:49:19,294 - #36 i
INFO  04:49:19,294 - #31 )
INFO  04:49:19,294 - #27 ;
INFO  04:49:19,294 - #36 X
INFO  04:49:19,294 - #24 =
INFO  04:49:19,294 - #36 c
INFO  04:49:19,294 - #27 ;
INFO  04:49:19,294 - #11 read
INFO  04:49:19,294 - #30 (
INFO  04:49:19,294 - #36 x
INFO  04:49:19,294 - #31 )
INFO  04:49:19,294 - #27 ;
INFO  04:49:19,294 - #14 for
INFO  04:49:19,294 - #30 (
INFO  04:49:19,294 - #27 ;
INFO  04:49:19,295 - #36 x
INFO  04:49:19,295 - #18 >
INFO  04:49:19,295 - #37 0
INFO  04:49:19,295 - #27 ;
INFO  04:49:19,295 - #31 )
INFO  04:49:19,295 - #34 {
INFO  04:49:19,295 - #8 if
INFO  04:49:19,295 - #30 (
INFO  04:49:19,295 - #36 Num
INFO  04:49:19,295 - #29 .
INFO  04:49:19,295 - #36 ZERO
INFO  04:49:19,295 - #21 <=
INFO  04:49:19,295 - #36 x
INFO  04:49:19,295 - #22 &&
INFO  04:49:19,295 - #36 x
INFO  04:49:19,295 - #20 <
INFO  04:49:19,295 - #36 size
INFO  04:49:19,295 - #31 )
INFO  04:49:19,295 - #34 {
INFO  04:49:19,295 - #36 val
INFO  04:49:19,295 - #29 .
INFO  04:49:19,295 - #36 putp
INFO  04:49:19,295 - #30 (
INFO  04:49:19,295 - #36 val
INFO  04:49:19,295 - #29 .
INFO  04:49:19,295 - #36 getp
INFO  04:49:19,295 - #30 (
INFO  04:49:19,295 - #36 x
INFO  04:49:19,295 - #31 )
INFO  04:49:19,295 - #11 +
INFO  04:49:19,295 - #36 Num
INFO  04:49:19,295 - #29 .
INFO  04:49:19,295 - #36 ONE
INFO  04:49:19,295 - #31 )
INFO  04:49:19,295 - #27 ;
INFO  04:49:19,295 - #35 }
INFO  04:49:19,295 - #6 else
INFO  04:49:19,295 - #8 if
INFO  04:49:19,295 - #30 (
INFO  04:49:19,295 - #12 -
INFO  04:49:19,295 - #36 size
INFO  04:49:19,295 - #20 <
INFO  04:49:19,295 - #36 x
INFO  04:49:19,296 - #22 &&
INFO  04:49:19,296 - #36 x
INFO  04:49:19,296 - #20 <
INFO  04:49:19,296 - #37 0
INFO  04:49:19,296 - #31 )
INFO  04:49:19,296 - #34 {
INFO  04:49:19,296 - #36 val
INFO  04:49:19,296 - #29 .
INFO  04:49:19,296 - #36 putn
INFO  04:49:19,296 - #30 (
INFO  04:49:19,296 - #36 val
INFO  04:49:19,296 - #29 .
INFO  04:49:19,296 - #36 getn
INFO  04:49:19,296 - #30 (
INFO  04:49:19,296 - #12 -
INFO  04:49:19,296 - #36 x
INFO  04:49:19,296 - #31 )
INFO  04:49:19,296 - #11 +
INFO  04:49:19,296 - #37 1
INFO  04:49:19,296 - #31 )
INFO  04:49:19,296 - #27 ;
INFO  04:49:19,296 - #35 }
INFO  04:49:19,296 - #11 read
INFO  04:49:19,296 - #30 (
INFO  04:49:19,296 - #36 x
INFO  04:49:19,296 - #31 )
INFO  04:49:19,296 - #27 ;
INFO  04:49:19,296 - #35 }
INFO  04:49:19,296 - #35 }
INFO  04:49:19,296 - #35 }
INFO  04:49:19,296 - --EOF.
