INFO  04:44:09,962 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  04:44:09,970 - #1 program
INFO  04:44:09,970 - #36 P
INFO  04:44:09,970 - #7 const
INFO  04:44:09,970 - #36 int
INFO  04:44:09,970 - #36 size
INFO  04:44:09,970 - #24 =
INFO  04:44:09,971 - #37 10
INFO  04:44:09,971 - #27 ;
INFO  04:44:09,971 - #5 enum
INFO  04:44:09,971 - #36 Num
INFO  04:44:09,971 - #34 {
INFO  04:44:09,971 - #36 ZERO
INFO  04:44:09,971 - #28 ,
INFO  04:44:09,971 - #36 ONE
INFO  04:44:09,971 - #28 ,
INFO  04:44:09,971 - #36 TEN
INFO  04:44:09,971 - #24 =
INFO  04:44:09,971 - #37 10
INFO  04:44:09,971 - #35 }
INFO  04:44:09,971 - #4 interface
INFO  04:44:09,971 - #36 I
INFO  04:44:09,971 - #34 {
INFO  04:44:09,971 - #36 int
INFO  04:44:09,971 - #36 getp
INFO  04:44:09,972 - #30 (
INFO  04:44:09,972 - #36 int
INFO  04:44:09,972 - #36 i
INFO  04:44:09,972 - #31 )
INFO  04:44:09,972 - #27 ;
INFO  04:44:09,972 - #36 int
INFO  04:44:09,972 - #36 getn
INFO  04:44:09,972 - #30 (
INFO  04:44:09,972 - #36 int
INFO  04:44:09,972 - #36 i
INFO  04:44:09,972 - #31 )
INFO  04:44:09,972 - #27 ;
INFO  04:44:09,972 - #35 }
INFO  04:44:09,972 - #3 class
INFO  04:44:09,972 - #36 Table
INFO  04:44:09,972 - #36 implements
INFO  04:44:09,972 - #36 I
INFO  04:44:09,972 - #34 {
INFO  04:44:09,972 - #36 int
INFO  04:44:09,972 - #36 pos
INFO  04:44:09,972 - #32 [
INFO  04:44:09,972 - #33 ]
INFO  04:44:09,972 - #28 ,
INFO  04:44:09,972 - #36 neg
INFO  04:44:09,972 - #32 [
INFO  04:44:09,972 - #33 ]
INFO  04:44:09,972 - #27 ;
INFO  04:44:09,972 - #34 {
INFO  04:44:09,972 - #13 void
INFO  04:44:09,972 - #36 putp
INFO  04:44:09,973 - #30 (
INFO  04:44:09,973 - #36 int
INFO  04:44:09,973 - #36 a
INFO  04:44:09,973 - #28 ,
INFO  04:44:09,973 - #36 int
INFO  04:44:09,973 - #36 idx
INFO  04:44:09,973 - #31 )
INFO  04:44:09,973 - #34 {
INFO  04:44:09,973 - #36 this
INFO  04:44:09,973 - #29 .
INFO  04:44:09,973 - #36 pos
INFO  04:44:09,973 - #32 [
INFO  04:44:09,973 - #36 idx
INFO  04:44:09,973 - #33 ]
INFO  04:44:09,973 - #24 =
INFO  04:44:09,973 - #36 a
INFO  04:44:09,973 - #27 ;
INFO  04:44:09,973 - #35 }
INFO  04:44:09,973 - #13 void
INFO  04:44:09,973 - #36 putn
INFO  04:44:09,973 - #30 (
INFO  04:44:09,973 - #36 int
INFO  04:44:09,973 - #36 a
INFO  04:44:09,973 - #28 ,
INFO  04:44:09,973 - #36 int
INFO  04:44:09,973 - #36 idx
INFO  04:44:09,973 - #31 )
INFO  04:44:09,973 - #34 {
INFO  04:44:09,973 - #36 this
INFO  04:44:09,974 - #29 .
INFO  04:44:09,974 - #36 neg
INFO  04:44:09,974 - #32 [
INFO  04:44:09,974 - #36 idx
INFO  04:44:09,974 - #33 ]
INFO  04:44:09,974 - #24 =
INFO  04:44:09,974 - #36 a
INFO  04:44:09,974 - #27 ;
INFO  04:44:09,974 - #35 }
INFO  04:44:09,974 - #36 int
INFO  04:44:09,974 - #36 getp
INFO  04:44:09,974 - #30 (
INFO  04:44:09,974 - #36 int
INFO  04:44:09,974 - #36 idx
INFO  04:44:09,974 - #31 )
INFO  04:44:09,974 - #34 {
INFO  04:44:09,974 - #12 return
INFO  04:44:09,974 - #36 pos
INFO  04:44:09,974 - #32 [
INFO  04:44:09,974 - #36 idx
INFO  04:44:09,974 - #33 ]
INFO  04:44:09,974 - #27 ;
INFO  04:44:09,974 - #35 }
INFO  04:44:09,974 - #36 int
INFO  04:44:09,974 - #36 getn
INFO  04:44:09,974 - #30 (
INFO  04:44:09,974 - #36 int
INFO  04:44:09,974 - #36 idx
INFO  04:44:09,974 - #31 )
INFO  04:44:09,975 - #34 {
INFO  04:44:09,975 - #12 return
INFO  04:44:09,975 - #36 neg
INFO  04:44:09,975 - #32 [
INFO  04:44:09,975 - #36 idx
INFO  04:44:09,975 - #33 ]
INFO  04:44:09,975 - #27 ;
INFO  04:44:09,975 - #35 }
INFO  04:44:09,975 - #35 }
INFO  04:44:09,975 - #35 }
INFO  04:44:09,975 - #36 Table
INFO  04:44:09,975 - #36 val
INFO  04:44:09,975 - #27 ;
INFO  04:44:09,975 - #34 {
INFO  04:44:09,975 - #13 void
INFO  04:44:09,975 - #36 f
INFO  04:44:09,975 - #30 (
INFO  04:44:09,975 - #36 char
INFO  04:44:09,975 - #36 ch
INFO  04:44:09,975 - #28 ,
INFO  04:44:09,977 - #36 int
INFO  04:44:09,977 - #36 a
INFO  04:44:09,977 - #28 ,
INFO  04:44:09,977 - #36 int
INFO  04:44:09,977 - #36 arg
INFO  04:44:09,977 - #31 )
INFO  04:44:09,977 - #36 int
INFO  04:44:09,977 - #36 x
INFO  04:44:09,977 - #27 ;
INFO  04:44:09,977 - #34 {
INFO  04:44:09,977 - #36 x
INFO  04:44:09,977 - #24 =
INFO  04:44:09,977 - #36 arg
INFO  04:44:09,977 - #27 ;
INFO  04:44:09,977 - #35 }
INFO  04:44:09,977 - #13 void
INFO  04:44:09,977 - #36 main
INFO  04:44:09,977 - #30 (
INFO  04:44:09,977 - #31 )
INFO  04:44:09,977 - #36 int
INFO  04:44:09,977 - #36 x
INFO  04:44:09,977 - #28 ,
INFO  04:44:09,977 - #36 i
INFO  04:44:09,977 - #27 ;
INFO  04:44:09,977 - #36 char
INFO  04:44:09,977 - #36 c
INFO  04:44:09,977 - #27 ;
INFO  04:44:09,977 - #34 {
INFO  04:44:09,977 - #36 val
INFO  04:44:09,977 - #24 =
INFO  04:44:09,977 - #9 new
INFO  04:44:09,977 - #36 Table
INFO  04:44:09,978 - #27 ;
INFO  04:44:09,978 - #36 val
INFO  04:44:09,978 - #29 .
INFO  04:44:09,978 - #36 pos
INFO  04:44:09,978 - #24 =
INFO  04:44:09,978 - #9 new
INFO  04:44:09,978 - #36 int
INFO  04:44:09,978 - #32 [
INFO  04:44:09,978 - #36 size
INFO  04:44:09,978 - #33 ]
INFO  04:44:09,978 - #27 ;
INFO  04:44:09,978 - #36 val
INFO  04:44:09,978 - #29 .
INFO  04:44:09,978 - #36 neg
INFO  04:44:09,978 - #24 =
INFO  04:44:09,978 - #9 new
INFO  04:44:09,978 - #36 int
INFO  04:44:09,978 - #32 [
INFO  04:44:09,978 - #36 size
INFO  04:44:09,978 - #33 ]
INFO  04:44:09,978 - #27 ;
INFO  04:44:09,978 - #14 for
INFO  04:44:09,978 - #30 (
INFO  04:44:09,978 - #36 i
INFO  04:44:09,978 - #24 =
INFO  04:44:09,978 - #37 0
INFO  04:44:09,978 - #27 ;
INFO  04:44:09,978 - #36 i
INFO  04:44:09,978 - #20 <
INFO  04:44:09,978 - #36 size
INFO  04:44:09,978 - #27 ;
INFO  04:44:09,978 - #36 i
INFO  04:44:09,978 - #25 ++
INFO  04:44:09,978 - #31 )
INFO  04:44:09,978 - #34 {
INFO  04:44:09,978 - #36 val
INFO  04:44:09,978 - #29 .
INFO  04:44:09,978 - #36 putp
INFO  04:44:09,978 - #30 (
INFO  04:44:09,978 - #37 0
INFO  04:44:09,978 - #28 ,
INFO  04:44:09,978 - #36 i
INFO  04:44:09,979 - #31 )
INFO  04:44:09,979 - #27 ;
INFO  04:44:09,979 - #36 val
INFO  04:44:09,979 - #29 .
INFO  04:44:09,979 - #36 putn
INFO  04:44:09,979 - #30 (
INFO  04:44:09,979 - #37 0
INFO  04:44:09,979 - #28 ,
INFO  04:44:09,979 - #36 i
INFO  04:44:09,979 - #31 )
INFO  04:44:09,979 - #27 ;
INFO  04:44:09,979 - #35 }
INFO  04:44:09,979 - #36 f
INFO  04:44:09,979 - #30 (
INFO  04:44:09,979 - #36 c
INFO  04:44:09,979 - #28 ,
INFO  04:44:09,979 - #36 x
INFO  04:44:09,979 - #28 ,
INFO  04:44:09,979 - #36 i
INFO  04:44:09,979 - #31 )
INFO  04:44:09,979 - #27 ;
INFO  04:44:09,979 - #11 read
INFO  04:44:09,979 - #30 (
INFO  04:44:09,979 - #36 x
INFO  04:44:09,979 - #31 )
INFO  04:44:09,979 - #27 ;
INFO  04:44:09,979 - #14 for
INFO  04:44:09,979 - #30 (
INFO  04:44:09,979 - #27 ;
INFO  04:44:09,979 - #36 x
INFO  04:44:09,979 - #18 >
INFO  04:44:09,979 - #37 0
INFO  04:44:09,979 - #27 ;
INFO  04:44:09,979 - #31 )
INFO  04:44:09,979 - #34 {
INFO  04:44:09,979 - #8 if
INFO  04:44:09,979 - #30 (
INFO  04:44:09,979 - #36 Num
INFO  04:44:09,979 - #29 .
INFO  04:44:09,979 - #36 ZERO
INFO  04:44:09,979 - #21 <=
INFO  04:44:09,979 - #36 x
INFO  04:44:09,979 - #22 &&
INFO  04:44:09,979 - #36 x
INFO  04:44:09,979 - #20 <
INFO  04:44:09,979 - #36 size
INFO  04:44:09,979 - #31 )
INFO  04:44:09,980 - #34 {
INFO  04:44:09,980 - #36 val
INFO  04:44:09,980 - #29 .
INFO  04:44:09,980 - #36 putp
INFO  04:44:09,980 - #30 (
INFO  04:44:09,980 - #36 val
INFO  04:44:09,980 - #29 .
INFO  04:44:09,980 - #36 getp
INFO  04:44:09,980 - #30 (
INFO  04:44:09,980 - #36 x
INFO  04:44:09,980 - #31 )
INFO  04:44:09,980 - #11 +
INFO  04:44:09,980 - #36 Num
INFO  04:44:09,980 - #29 .
INFO  04:44:09,980 - #36 ONE
INFO  04:44:09,980 - #31 )
INFO  04:44:09,980 - #27 ;
INFO  04:44:09,980 - #35 }
INFO  04:44:09,980 - #6 else
INFO  04:44:09,980 - #8 if
INFO  04:44:09,980 - #30 (
INFO  04:44:09,980 - #12 -
INFO  04:44:09,980 - #36 size
INFO  04:44:09,980 - #20 <
INFO  04:44:09,980 - #36 x
INFO  04:44:09,980 - #22 &&
INFO  04:44:09,980 - #36 x
INFO  04:44:09,980 - #20 <
INFO  04:44:09,980 - #37 0
INFO  04:44:09,980 - #31 )
INFO  04:44:09,980 - #34 {
INFO  04:44:09,980 - #36 val
INFO  04:44:09,980 - #29 .
INFO  04:44:09,980 - #36 putn
INFO  04:44:09,980 - #30 (
INFO  04:44:09,980 - #36 val
INFO  04:44:09,980 - #29 .
INFO  04:44:09,980 - #36 getn
INFO  04:44:09,980 - #30 (
INFO  04:44:09,980 - #12 -
INFO  04:44:09,980 - #36 x
INFO  04:44:09,980 - #31 )
INFO  04:44:09,981 - #11 +
INFO  04:44:09,981 - #37 1
INFO  04:44:09,981 - #31 )
INFO  04:44:09,981 - #27 ;
INFO  04:44:09,981 - #35 }
INFO  04:44:09,981 - #11 read
INFO  04:44:09,981 - #30 (
INFO  04:44:09,981 - #36 x
INFO  04:44:09,981 - #31 )
INFO  04:44:09,981 - #27 ;
INFO  04:44:09,981 - #35 }
INFO  04:44:09,981 - #35 }
INFO  04:44:09,981 - #35 }
INFO  04:44:09,981 - --EOF.
