INFO  04:50:57,288 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  04:50:57,296 - #1 program
INFO  04:50:57,296 - #36 P
INFO  04:50:57,296 - #7 const
INFO  04:50:57,296 - #36 int
INFO  04:50:57,296 - #36 size
INFO  04:50:57,296 - #24 =
INFO  04:50:57,296 - #37 10
INFO  04:50:57,296 - #27 ;
INFO  04:50:57,296 - #5 enum
INFO  04:50:57,296 - #36 Num
INFO  04:50:57,296 - #34 {
INFO  04:50:57,296 - #36 ZERO
INFO  04:50:57,296 - #28 ,
INFO  04:50:57,296 - #36 ONE
INFO  04:50:57,296 - #28 ,
INFO  04:50:57,297 - #36 TEN
INFO  04:50:57,297 - #24 =
INFO  04:50:57,297 - #37 10
INFO  04:50:57,297 - #35 }
INFO  04:50:57,297 - #4 interface
INFO  04:50:57,297 - #36 I
INFO  04:50:57,297 - #34 {
INFO  04:50:57,297 - #36 int
INFO  04:50:57,297 - #36 getp
INFO  04:50:57,297 - #30 (
INFO  04:50:57,297 - #36 int
INFO  04:50:57,297 - #36 i
INFO  04:50:57,297 - #31 )
INFO  04:50:57,297 - #27 ;
INFO  04:50:57,297 - #36 int
INFO  04:50:57,297 - #36 getn
INFO  04:50:57,297 - #30 (
INFO  04:50:57,297 - #36 int
INFO  04:50:57,298 - #36 i
INFO  04:50:57,298 - #31 )
INFO  04:50:57,298 - #27 ;
INFO  04:50:57,298 - #35 }
INFO  04:50:57,298 - #3 class
INFO  04:50:57,298 - #36 Table
INFO  04:50:57,298 - #36 implements
INFO  04:50:57,298 - #36 I
INFO  04:50:57,298 - #34 {
INFO  04:50:57,298 - #36 int
INFO  04:50:57,298 - #36 pos
INFO  04:50:57,298 - #32 [
INFO  04:50:57,298 - #33 ]
INFO  04:50:57,298 - #28 ,
INFO  04:50:57,298 - #36 neg
INFO  04:50:57,298 - #32 [
INFO  04:50:57,298 - #33 ]
INFO  04:50:57,298 - #27 ;
INFO  04:50:57,298 - #34 {
INFO  04:50:57,298 - #13 void
INFO  04:50:57,298 - #36 putp
INFO  04:50:57,298 - #30 (
INFO  04:50:57,298 - #36 int
INFO  04:50:57,298 - #36 a
INFO  04:50:57,298 - #28 ,
INFO  04:50:57,298 - #36 int
INFO  04:50:57,298 - #36 idx
INFO  04:50:57,298 - #31 )
INFO  04:50:57,298 - #34 {
INFO  04:50:57,299 - #36 this
INFO  04:50:57,299 - #29 .
INFO  04:50:57,299 - #36 pos
INFO  04:50:57,299 - #32 [
INFO  04:50:57,299 - #36 idx
INFO  04:50:57,299 - #33 ]
INFO  04:50:57,299 - #24 =
INFO  04:50:57,299 - #36 a
INFO  04:50:57,299 - #27 ;
INFO  04:50:57,299 - #35 }
INFO  04:50:57,299 - #13 void
INFO  04:50:57,299 - #36 putn
INFO  04:50:57,299 - #30 (
INFO  04:50:57,299 - #36 int
INFO  04:50:57,299 - #36 a
INFO  04:50:57,299 - #28 ,
INFO  04:50:57,299 - #36 int
INFO  04:50:57,299 - #36 idx
INFO  04:50:57,299 - #31 )
INFO  04:50:57,299 - #34 {
INFO  04:50:57,299 - #36 this
INFO  04:50:57,299 - #29 .
INFO  04:50:57,299 - #36 neg
INFO  04:50:57,299 - #32 [
INFO  04:50:57,299 - #36 idx
INFO  04:50:57,299 - #33 ]
INFO  04:50:57,299 - #24 =
INFO  04:50:57,299 - #36 a
INFO  04:50:57,299 - #27 ;
INFO  04:50:57,299 - #35 }
INFO  04:50:57,299 - #36 int
INFO  04:50:57,300 - #36 getp
INFO  04:50:57,300 - #30 (
INFO  04:50:57,300 - #36 int
INFO  04:50:57,300 - #36 idx
INFO  04:50:57,300 - #31 )
INFO  04:50:57,300 - #34 {
INFO  04:50:57,300 - #12 return
INFO  04:50:57,300 - #36 pos
INFO  04:50:57,300 - #32 [
INFO  04:50:57,300 - #36 idx
INFO  04:50:57,300 - #33 ]
INFO  04:50:57,300 - #27 ;
INFO  04:50:57,300 - #35 }
INFO  04:50:57,300 - #36 int
INFO  04:50:57,300 - #36 getn
INFO  04:50:57,300 - #30 (
INFO  04:50:57,300 - #36 int
INFO  04:50:57,300 - #36 idx
INFO  04:50:57,300 - #31 )
INFO  04:50:57,300 - #34 {
INFO  04:50:57,300 - #12 return
INFO  04:50:57,300 - #36 neg
INFO  04:50:57,300 - #32 [
INFO  04:50:57,300 - #36 idx
INFO  04:50:57,300 - #33 ]
INFO  04:50:57,300 - #27 ;
INFO  04:50:57,300 - #35 }
INFO  04:50:57,300 - #35 }
INFO  04:50:57,300 - #35 }
INFO  04:50:57,300 - #36 Table
INFO  04:50:57,301 - #36 val
INFO  04:50:57,301 - #27 ;
INFO  04:50:57,301 - #34 {
INFO  04:50:57,301 - #13 void
INFO  04:50:57,301 - #36 f
INFO  04:50:57,301 - #30 (
INFO  04:50:57,301 - #36 char
INFO  04:50:57,301 - #36 ch
INFO  04:50:57,301 - #28 ,
INFO  04:50:57,302 - #36 int
INFO  04:50:57,302 - #36 a
INFO  04:50:57,302 - #28 ,
INFO  04:50:57,302 - #36 int
INFO  04:50:57,302 - #36 arg
INFO  04:50:57,302 - #31 )
INFO  04:50:57,302 - #36 int
INFO  04:50:57,303 - #36 x
INFO  04:50:57,303 - #27 ;
INFO  04:50:57,303 - #34 {
INFO  04:50:57,303 - #36 x
INFO  04:50:57,303 - #24 =
INFO  04:50:57,303 - #36 arg
INFO  04:50:57,303 - #27 ;
INFO  04:50:57,303 - #35 }
INFO  04:50:57,303 - #13 void
INFO  04:50:57,303 - #36 main
INFO  04:50:57,303 - #30 (
INFO  04:50:57,303 - #31 )
INFO  04:50:57,303 - #36 int
INFO  04:50:57,303 - #36 x
INFO  04:50:57,303 - #28 ,
INFO  04:50:57,303 - #36 i
INFO  04:50:57,303 - #27 ;
INFO  04:50:57,303 - #36 char
INFO  04:50:57,303 - #36 c
INFO  04:50:57,303 - #27 ;
INFO  04:50:57,303 - #34 {
INFO  04:50:57,303 - #36 val
INFO  04:50:57,303 - #24 =
INFO  04:50:57,303 - #9 new
INFO  04:50:57,303 - #36 Table
INFO  04:50:57,303 - #27 ;
INFO  04:50:57,303 - #36 val
INFO  04:50:57,303 - #29 .
INFO  04:50:57,303 - #36 pos
INFO  04:50:57,303 - #24 =
INFO  04:50:57,303 - #9 new
INFO  04:50:57,304 - #36 int
INFO  04:50:57,304 - #32 [
INFO  04:50:57,304 - #36 size
INFO  04:50:57,304 - #33 ]
INFO  04:50:57,304 - #27 ;
INFO  04:50:57,304 - #36 val
INFO  04:50:57,304 - #29 .
INFO  04:50:57,304 - #36 neg
INFO  04:50:57,304 - #24 =
INFO  04:50:57,304 - #9 new
INFO  04:50:57,304 - #36 int
INFO  04:50:57,304 - #32 [
INFO  04:50:57,304 - #36 size
INFO  04:50:57,304 - #33 ]
INFO  04:50:57,304 - #27 ;
INFO  04:50:57,304 - #14 for
INFO  04:50:57,304 - #30 (
INFO  04:50:57,304 - #36 i
INFO  04:50:57,304 - #24 =
INFO  04:50:57,304 - #37 0
INFO  04:50:57,304 - #27 ;
INFO  04:50:57,304 - #36 i
INFO  04:50:57,304 - #20 <
INFO  04:50:57,304 - #36 size
INFO  04:50:57,304 - #27 ;
INFO  04:50:57,304 - #36 i
INFO  04:50:57,304 - #25 ++
INFO  04:50:57,304 - #31 )
INFO  04:50:57,304 - #34 {
INFO  04:50:57,304 - #36 val
INFO  04:50:57,304 - #29 .
INFO  04:50:57,304 - #36 putp
INFO  04:50:57,304 - #30 (
INFO  04:50:57,304 - #37 0
INFO  04:50:57,304 - #28 ,
INFO  04:50:57,304 - #36 i
INFO  04:50:57,304 - #31 )
INFO  04:50:57,304 - #27 ;
INFO  04:50:57,305 - #36 val
INFO  04:50:57,305 - #29 .
INFO  04:50:57,305 - #36 putn
INFO  04:50:57,305 - #30 (
INFO  04:50:57,305 - #37 0
INFO  04:50:57,305 - #28 ,
INFO  04:50:57,305 - #36 i
INFO  04:50:57,305 - #31 )
INFO  04:50:57,305 - #27 ;
INFO  04:50:57,305 - #35 }
INFO  04:50:57,305 - #36 f
INFO  04:50:57,305 - #30 (
INFO  04:50:57,305 - #36 c
INFO  04:50:57,305 - #28 ,
INFO  04:50:57,305 - #36 x
INFO  04:50:57,305 - #28 ,
INFO  04:50:57,305 - #36 i
INFO  04:50:57,305 - #31 )
INFO  04:50:57,305 - #27 ;
INFO  04:50:57,305 - #36 X
INFO  04:50:57,305 - #24 =
INFO  04:50:57,305 - #38 c
INFO  04:50:57,305 - #27 ;
INFO  04:50:57,305 - #11 read
INFO  04:50:57,305 - #30 (
INFO  04:50:57,305 - #36 x
INFO  04:50:57,305 - #31 )
INFO  04:50:57,305 - #27 ;
INFO  04:50:57,305 - #14 for
INFO  04:50:57,305 - #30 (
INFO  04:50:57,305 - #27 ;
INFO  04:50:57,305 - #36 x
INFO  04:50:57,305 - #18 >
INFO  04:50:57,305 - #37 0
INFO  04:50:57,306 - #27 ;
INFO  04:50:57,306 - #31 )
INFO  04:50:57,306 - #34 {
INFO  04:50:57,306 - #8 if
INFO  04:50:57,306 - #30 (
INFO  04:50:57,306 - #36 Num
INFO  04:50:57,306 - #29 .
INFO  04:50:57,306 - #36 ZERO
INFO  04:50:57,306 - #21 <=
INFO  04:50:57,306 - #36 x
INFO  04:50:57,306 - #22 &&
INFO  04:50:57,306 - #36 x
INFO  04:50:57,306 - #20 <
INFO  04:50:57,306 - #36 size
INFO  04:50:57,306 - #31 )
INFO  04:50:57,306 - #34 {
INFO  04:50:57,306 - #36 val
INFO  04:50:57,306 - #29 .
INFO  04:50:57,306 - #36 putp
INFO  04:50:57,306 - #30 (
INFO  04:50:57,306 - #36 val
INFO  04:50:57,306 - #29 .
INFO  04:50:57,306 - #36 getp
INFO  04:50:57,306 - #30 (
INFO  04:50:57,306 - #36 x
INFO  04:50:57,306 - #31 )
INFO  04:50:57,306 - #11 +
INFO  04:50:57,306 - #36 Num
INFO  04:50:57,306 - #29 .
INFO  04:50:57,306 - #36 ONE
INFO  04:50:57,306 - #31 )
INFO  04:50:57,306 - #27 ;
INFO  04:50:57,306 - #35 }
INFO  04:50:57,306 - #6 else
INFO  04:50:57,306 - #8 if
INFO  04:50:57,306 - #30 (
INFO  04:50:57,306 - #12 -
INFO  04:50:57,307 - #36 size
INFO  04:50:57,307 - #20 <
INFO  04:50:57,307 - #36 x
INFO  04:50:57,307 - #22 &&
INFO  04:50:57,307 - #36 x
INFO  04:50:57,307 - #20 <
INFO  04:50:57,307 - #37 0
INFO  04:50:57,307 - #31 )
INFO  04:50:57,307 - #34 {
INFO  04:50:57,307 - #36 val
INFO  04:50:57,307 - #29 .
INFO  04:50:57,307 - #36 putn
INFO  04:50:57,307 - #30 (
INFO  04:50:57,307 - #36 val
INFO  04:50:57,307 - #29 .
INFO  04:50:57,307 - #36 getn
INFO  04:50:57,307 - #30 (
INFO  04:50:57,307 - #12 -
INFO  04:50:57,307 - #36 x
INFO  04:50:57,307 - #31 )
INFO  04:50:57,307 - #11 +
INFO  04:50:57,307 - #37 1
INFO  04:50:57,307 - #31 )
INFO  04:50:57,307 - #27 ;
INFO  04:50:57,307 - #35 }
INFO  04:50:57,307 - #11 read
INFO  04:50:57,307 - #30 (
INFO  04:50:57,307 - #36 x
INFO  04:50:57,307 - #31 )
INFO  04:50:57,307 - #27 ;
INFO  04:50:57,307 - #35 }
INFO  04:50:57,307 - #35 }
INFO  04:50:57,307 - #35 }
INFO  04:50:57,307 - --EOF.
