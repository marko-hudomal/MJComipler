INFO  04:49:34,456 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  04:49:34,464 - #1 program
INFO  04:49:34,464 - #36 P
INFO  04:49:34,464 - #7 const
INFO  04:49:34,464 - #36 int
INFO  04:49:34,464 - #36 size
INFO  04:49:34,464 - #24 =
INFO  04:49:34,465 - #37 10
INFO  04:49:34,465 - #27 ;
INFO  04:49:34,465 - #5 enum
INFO  04:49:34,465 - #36 Num
INFO  04:49:34,465 - #34 {
INFO  04:49:34,465 - #36 ZERO
INFO  04:49:34,465 - #28 ,
INFO  04:49:34,465 - #36 ONE
INFO  04:49:34,465 - #28 ,
INFO  04:49:34,465 - #36 TEN
INFO  04:49:34,465 - #24 =
INFO  04:49:34,465 - #37 10
INFO  04:49:34,465 - #35 }
INFO  04:49:34,465 - #4 interface
INFO  04:49:34,465 - #36 I
INFO  04:49:34,465 - #34 {
INFO  04:49:34,466 - #36 int
INFO  04:49:34,466 - #36 getp
INFO  04:49:34,466 - #30 (
INFO  04:49:34,466 - #36 int
INFO  04:49:34,466 - #36 i
INFO  04:49:34,466 - #31 )
INFO  04:49:34,466 - #27 ;
INFO  04:49:34,466 - #36 int
INFO  04:49:34,466 - #36 getn
INFO  04:49:34,466 - #30 (
INFO  04:49:34,466 - #36 int
INFO  04:49:34,466 - #36 i
INFO  04:49:34,466 - #31 )
INFO  04:49:34,466 - #27 ;
INFO  04:49:34,466 - #35 }
INFO  04:49:34,466 - #3 class
INFO  04:49:34,466 - #36 Table
INFO  04:49:34,466 - #36 implements
INFO  04:49:34,466 - #36 I
INFO  04:49:34,466 - #34 {
INFO  04:49:34,466 - #36 int
INFO  04:49:34,466 - #36 pos
INFO  04:49:34,466 - #32 [
INFO  04:49:34,466 - #33 ]
INFO  04:49:34,466 - #28 ,
INFO  04:49:34,467 - #36 neg
INFO  04:49:34,467 - #32 [
INFO  04:49:34,467 - #33 ]
INFO  04:49:34,467 - #27 ;
INFO  04:49:34,467 - #34 {
INFO  04:49:34,467 - #13 void
INFO  04:49:34,467 - #36 putp
INFO  04:49:34,467 - #30 (
INFO  04:49:34,467 - #36 int
INFO  04:49:34,467 - #36 a
INFO  04:49:34,467 - #28 ,
INFO  04:49:34,467 - #36 int
INFO  04:49:34,467 - #36 idx
INFO  04:49:34,467 - #31 )
INFO  04:49:34,467 - #34 {
INFO  04:49:34,467 - #36 this
INFO  04:49:34,467 - #29 .
INFO  04:49:34,467 - #36 pos
INFO  04:49:34,467 - #32 [
INFO  04:49:34,467 - #36 idx
INFO  04:49:34,467 - #33 ]
INFO  04:49:34,467 - #24 =
INFO  04:49:34,467 - #36 a
INFO  04:49:34,467 - #27 ;
INFO  04:49:34,467 - #35 }
INFO  04:49:34,467 - #13 void
INFO  04:49:34,467 - #36 putn
INFO  04:49:34,467 - #30 (
INFO  04:49:34,467 - #36 int
INFO  04:49:34,468 - #36 a
INFO  04:49:34,468 - #28 ,
INFO  04:49:34,468 - #36 int
INFO  04:49:34,468 - #36 idx
INFO  04:49:34,468 - #31 )
INFO  04:49:34,468 - #34 {
INFO  04:49:34,468 - #36 this
INFO  04:49:34,468 - #29 .
INFO  04:49:34,468 - #36 neg
INFO  04:49:34,468 - #32 [
INFO  04:49:34,468 - #36 idx
INFO  04:49:34,468 - #33 ]
INFO  04:49:34,468 - #24 =
INFO  04:49:34,468 - #36 a
INFO  04:49:34,468 - #27 ;
INFO  04:49:34,468 - #35 }
INFO  04:49:34,468 - #36 int
INFO  04:49:34,468 - #36 getp
INFO  04:49:34,468 - #30 (
INFO  04:49:34,468 - #36 int
INFO  04:49:34,468 - #36 idx
INFO  04:49:34,468 - #31 )
INFO  04:49:34,468 - #34 {
INFO  04:49:34,468 - #12 return
INFO  04:49:34,468 - #36 pos
INFO  04:49:34,468 - #32 [
INFO  04:49:34,468 - #36 idx
INFO  04:49:34,468 - #33 ]
INFO  04:49:34,468 - #27 ;
INFO  04:49:34,468 - #35 }
INFO  04:49:34,468 - #36 int
INFO  04:49:34,468 - #36 getn
INFO  04:49:34,468 - #30 (
INFO  04:49:34,469 - #36 int
INFO  04:49:34,469 - #36 idx
INFO  04:49:34,469 - #31 )
INFO  04:49:34,469 - #34 {
INFO  04:49:34,469 - #12 return
INFO  04:49:34,469 - #36 neg
INFO  04:49:34,469 - #32 [
INFO  04:49:34,469 - #36 idx
INFO  04:49:34,469 - #33 ]
INFO  04:49:34,469 - #27 ;
INFO  04:49:34,469 - #35 }
INFO  04:49:34,469 - #35 }
INFO  04:49:34,469 - #35 }
INFO  04:49:34,469 - #36 Table
INFO  04:49:34,469 - #36 val
INFO  04:49:34,469 - #27 ;
INFO  04:49:34,469 - #34 {
INFO  04:49:34,469 - #13 void
INFO  04:49:34,469 - #36 f
INFO  04:49:34,469 - #30 (
INFO  04:49:34,469 - #36 char
INFO  04:49:34,469 - #36 ch
INFO  04:49:34,469 - #28 ,
INFO  04:49:34,470 - #36 int
INFO  04:49:34,470 - #36 a
INFO  04:49:34,470 - #28 ,
INFO  04:49:34,470 - #36 int
INFO  04:49:34,470 - #36 arg
INFO  04:49:34,471 - #31 )
INFO  04:49:34,471 - #36 int
INFO  04:49:34,471 - #36 x
INFO  04:49:34,471 - #27 ;
INFO  04:49:34,471 - #34 {
INFO  04:49:34,471 - #36 x
INFO  04:49:34,471 - #24 =
INFO  04:49:34,471 - #36 arg
INFO  04:49:34,471 - #27 ;
INFO  04:49:34,471 - #35 }
INFO  04:49:34,471 - #13 void
INFO  04:49:34,471 - #36 main
INFO  04:49:34,471 - #30 (
INFO  04:49:34,471 - #31 )
INFO  04:49:34,471 - #36 int
INFO  04:49:34,471 - #36 x
INFO  04:49:34,471 - #28 ,
INFO  04:49:34,471 - #36 i
INFO  04:49:34,471 - #27 ;
INFO  04:49:34,471 - #36 char
INFO  04:49:34,471 - #36 c
INFO  04:49:34,471 - #27 ;
INFO  04:49:34,471 - #34 {
INFO  04:49:34,471 - #36 val
INFO  04:49:34,472 - #24 =
INFO  04:49:34,472 - #9 new
INFO  04:49:34,472 - #36 Table
INFO  04:49:34,472 - #27 ;
INFO  04:49:34,472 - #36 val
INFO  04:49:34,472 - #29 .
INFO  04:49:34,472 - #36 pos
INFO  04:49:34,472 - #24 =
INFO  04:49:34,472 - #9 new
INFO  04:49:34,472 - #36 int
INFO  04:49:34,472 - #32 [
INFO  04:49:34,472 - #36 size
INFO  04:49:34,472 - #33 ]
INFO  04:49:34,472 - #27 ;
INFO  04:49:34,472 - #36 val
INFO  04:49:34,472 - #29 .
INFO  04:49:34,472 - #36 neg
INFO  04:49:34,472 - #24 =
INFO  04:49:34,472 - #9 new
INFO  04:49:34,472 - #36 int
INFO  04:49:34,472 - #32 [
INFO  04:49:34,472 - #36 size
INFO  04:49:34,472 - #33 ]
INFO  04:49:34,473 - #27 ;
INFO  04:49:34,473 - #14 for
INFO  04:49:34,473 - #30 (
INFO  04:49:34,473 - #36 i
INFO  04:49:34,473 - #24 =
INFO  04:49:34,473 - #37 0
INFO  04:49:34,473 - #27 ;
INFO  04:49:34,473 - #36 i
INFO  04:49:34,473 - #20 <
INFO  04:49:34,473 - #36 size
INFO  04:49:34,473 - #27 ;
INFO  04:49:34,473 - #36 i
INFO  04:49:34,473 - #25 ++
INFO  04:49:34,473 - #31 )
INFO  04:49:34,473 - #34 {
INFO  04:49:34,473 - #36 val
INFO  04:49:34,473 - #29 .
INFO  04:49:34,473 - #36 putp
INFO  04:49:34,473 - #30 (
INFO  04:49:34,473 - #37 0
INFO  04:49:34,473 - #28 ,
INFO  04:49:34,473 - #36 i
INFO  04:49:34,473 - #31 )
INFO  04:49:34,473 - #27 ;
INFO  04:49:34,473 - #36 val
INFO  04:49:34,473 - #29 .
INFO  04:49:34,473 - #36 putn
INFO  04:49:34,473 - #30 (
INFO  04:49:34,473 - #37 0
INFO  04:49:34,473 - #28 ,
INFO  04:49:34,473 - #36 i
INFO  04:49:34,473 - #31 )
INFO  04:49:34,473 - #27 ;
INFO  04:49:34,473 - #35 }
INFO  04:49:34,473 - #36 f
INFO  04:49:34,473 - #30 (
INFO  04:49:34,473 - #36 c
INFO  04:49:34,473 - #28 ,
INFO  04:49:34,473 - #36 x
INFO  04:49:34,473 - #28 ,
INFO  04:49:34,473 - #36 i
INFO  04:49:34,473 - #31 )
INFO  04:49:34,473 - #27 ;
INFO  04:49:34,473 - #36 X
INFO  04:49:34,474 - #24 =
INFO  04:49:34,474 - #36 c
INFO  04:49:34,474 - #27 ;
INFO  04:49:34,474 - #11 read
INFO  04:49:34,474 - #30 (
INFO  04:49:34,474 - #36 x
INFO  04:49:34,474 - #31 )
INFO  04:49:34,474 - #27 ;
INFO  04:49:34,474 - #14 for
INFO  04:49:34,474 - #30 (
INFO  04:49:34,474 - #27 ;
INFO  04:49:34,474 - #36 x
INFO  04:49:34,474 - #18 >
INFO  04:49:34,474 - #37 0
INFO  04:49:34,474 - #27 ;
INFO  04:49:34,474 - #31 )
INFO  04:49:34,474 - #34 {
INFO  04:49:34,474 - #8 if
INFO  04:49:34,474 - #30 (
INFO  04:49:34,474 - #36 Num
INFO  04:49:34,474 - #29 .
INFO  04:49:34,474 - #36 ZERO
INFO  04:49:34,474 - #21 <=
INFO  04:49:34,474 - #36 x
INFO  04:49:34,475 - #22 &&
INFO  04:49:34,475 - #36 x
INFO  04:49:34,475 - #20 <
INFO  04:49:34,475 - #36 size
INFO  04:49:34,475 - #31 )
INFO  04:49:34,475 - #34 {
INFO  04:49:34,475 - #36 val
INFO  04:49:34,475 - #29 .
INFO  04:49:34,475 - #36 putp
INFO  04:49:34,475 - #30 (
INFO  04:49:34,475 - #36 val
INFO  04:49:34,475 - #29 .
INFO  04:49:34,475 - #36 getp
INFO  04:49:34,475 - #30 (
INFO  04:49:34,475 - #36 x
INFO  04:49:34,475 - #31 )
INFO  04:49:34,475 - #11 +
INFO  04:49:34,475 - #36 Num
INFO  04:49:34,475 - #29 .
INFO  04:49:34,475 - #36 ONE
INFO  04:49:34,475 - #31 )
INFO  04:49:34,475 - #27 ;
INFO  04:49:34,475 - #35 }
INFO  04:49:34,475 - #6 else
INFO  04:49:34,475 - #8 if
INFO  04:49:34,475 - #30 (
INFO  04:49:34,475 - #12 -
INFO  04:49:34,475 - #36 size
INFO  04:49:34,475 - #20 <
INFO  04:49:34,475 - #36 x
INFO  04:49:34,475 - #22 &&
INFO  04:49:34,475 - #36 x
INFO  04:49:34,475 - #20 <
INFO  04:49:34,475 - #37 0
INFO  04:49:34,476 - #31 )
INFO  04:49:34,476 - #34 {
INFO  04:49:34,476 - #36 val
INFO  04:49:34,476 - #29 .
INFO  04:49:34,476 - #36 putn
INFO  04:49:34,476 - #30 (
INFO  04:49:34,476 - #36 val
INFO  04:49:34,476 - #29 .
INFO  04:49:34,476 - #36 getn
INFO  04:49:34,476 - #30 (
INFO  04:49:34,476 - #12 -
INFO  04:49:34,476 - #36 x
INFO  04:49:34,476 - #31 )
INFO  04:49:34,476 - #11 +
INFO  04:49:34,476 - #37 1
INFO  04:49:34,476 - #31 )
INFO  04:49:34,476 - #27 ;
INFO  04:49:34,476 - #35 }
INFO  04:49:34,476 - #11 read
INFO  04:49:34,476 - #30 (
INFO  04:49:34,476 - #36 x
INFO  04:49:34,476 - #31 )
INFO  04:49:34,476 - #27 ;
INFO  04:49:34,476 - #35 }
INFO  04:49:34,476 - #35 }
INFO  04:49:34,476 - #35 }
INFO  04:49:34,476 - --EOF.
