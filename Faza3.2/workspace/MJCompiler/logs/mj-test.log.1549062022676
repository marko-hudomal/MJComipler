INFO  00:00:19,733 - Putanja iz argumenta: test/program.mj
INFO  00:00:19,733 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  00:00:19,767 - #2 program
INFO  00:00:19,767 - #45 Program
INFO  00:00:19,767 - #8 const
INFO  00:00:19,768 - #45 bool
INFO  00:00:19,768 - #45 const_bool1
INFO  00:00:19,768 - #26 =
INFO  00:00:19,769 - #47 1
INFO  00:00:19,769 - #19 ,
INFO  00:00:19,769 - #45 const_bool2
INFO  00:00:19,769 - #26 =
INFO  00:00:19,769 - #47 1
INFO  00:00:19,769 - #19 ,
INFO  00:00:19,769 - #45 const_bool3
INFO  00:00:19,769 - #26 =
INFO  00:00:19,769 - #47 0
INFO  00:00:19,769 - #18 ;
INFO  00:00:19,770 - #8 const
INFO  00:00:19,770 - #45 int
INFO  00:00:19,770 - #45 const_int1
INFO  00:00:19,770 - #26 =
INFO  00:00:19,770 - #44 1
INFO  00:00:19,770 - #18 ;
INFO  00:00:19,770 - #8 const
INFO  00:00:19,770 - #45 char
INFO  00:00:19,770 - #45 const_char1
INFO  00:00:19,771 - #26 =
INFO  00:00:19,771 - #46 a
INFO  00:00:19,771 - #19 ,
INFO  00:00:19,771 - #45 const_char2
INFO  00:00:19,771 - #26 =
INFO  00:00:19,771 - #46 b
INFO  00:00:19,771 - #19 ,
INFO  00:00:19,771 - #45 const_char3
INFO  00:00:19,771 - #26 =
INFO  00:00:19,771 - #46 c
INFO  00:00:19,771 - #18 ;
INFO  00:00:19,771 - #6 enum
INFO  00:00:19,771 - #45 type_enum1
INFO  00:00:19,771 - #12 {
INFO  00:00:19,772 - #45 ZERO
INFO  00:00:19,772 - #19 ,
INFO  00:00:19,772 - #45 ONE
INFO  00:00:19,772 - #19 ,
INFO  00:00:19,772 - #45 THREE
INFO  00:00:19,772 - #26 =
INFO  00:00:19,772 - #44 3
INFO  00:00:19,772 - #19 ,
INFO  00:00:19,772 - #45 FIVE
INFO  00:00:19,772 - #26 =
INFO  00:00:19,773 - #44 5
INFO  00:00:19,773 - #19 ,
INFO  00:00:19,773 - #45 SIX
INFO  00:00:19,773 - #19 ,
INFO  00:00:19,773 - #45 SEVEN
INFO  00:00:19,773 - #19 ,
INFO  00:00:19,773 - #45 TEN
INFO  00:00:19,773 - #26 =
INFO  00:00:19,773 - #44 10
INFO  00:00:19,773 - #13 }
INFO  00:00:19,773 - #6 enum
INFO  00:00:19,773 - #45 type_enum2
INFO  00:00:19,773 - #12 {
INFO  00:00:19,773 - #45 X
INFO  00:00:19,773 - #13 }
INFO  00:00:19,773 - #45 int
INFO  00:00:19,773 - #45 var_int1
INFO  00:00:19,774 - #19 ,
INFO  00:00:19,774 - #45 var_int2
INFO  00:00:19,774 - #19 ,
INFO  00:00:19,774 - #45 var_ints1
INFO  00:00:19,774 - #14 [
INFO  00:00:19,774 - #15 ]
INFO  00:00:19,774 - #19 ,
INFO  00:00:19,774 - #45 var_ints2
INFO  00:00:19,774 - #14 [
INFO  00:00:19,774 - #15 ]
INFO  00:00:19,774 - #18 ;
INFO  00:00:19,774 - #45 char
INFO  00:00:19,775 - #45 var_char1
INFO  00:00:19,775 - #19 ,
INFO  00:00:19,775 - #45 var_chars1
INFO  00:00:19,775 - #14 [
INFO  00:00:19,775 - #15 ]
INFO  00:00:19,775 - #18 ;
INFO  00:00:19,775 - #45 bool
INFO  00:00:19,775 - #45 var_bool1
INFO  00:00:19,775 - #19 ,
INFO  00:00:19,775 - #45 var_bool2
INFO  00:00:19,775 - #19 ,
INFO  00:00:19,775 - #45 var_bools1
INFO  00:00:19,775 - #14 [
INFO  00:00:19,775 - #15 ]
INFO  00:00:19,775 - #18 ;
INFO  00:00:19,775 - #45 type_enum1
INFO  00:00:19,775 - #45 var_enum1
INFO  00:00:19,775 - #19 ,
INFO  00:00:19,775 - #45 var_enum2
INFO  00:00:19,775 - #19 ,
INFO  00:00:19,775 - #45 var_enums1
INFO  00:00:19,775 - #14 [
INFO  00:00:19,775 - #15 ]
INFO  00:00:19,775 - #18 ;
INFO  00:00:19,775 - #12 {
INFO  00:00:19,775 - #45 int
INFO  00:00:19,776 - #45 funkc1
INFO  00:00:19,776 - #16 (
INFO  00:00:19,776 - #45 int
INFO  00:00:19,776 - #45 arg1
INFO  00:00:19,776 - #17 )
INFO  00:00:19,776 - #45 int
INFO  00:00:19,777 - #45 local_int1
INFO  00:00:19,777 - #19 ,
INFO  00:00:19,777 - #45 local_int2
INFO  00:00:19,777 - #18 ;
INFO  00:00:19,777 - #45 char
INFO  00:00:19,777 - #45 local_char1
INFO  00:00:19,777 - #19 ,
INFO  00:00:19,777 - #45 local_char2
INFO  00:00:19,777 - #18 ;
INFO  00:00:19,777 - #45 bool
INFO  00:00:19,777 - #45 var_bool1
INFO  00:00:19,777 - #18 ;
INFO  00:00:19,777 - #12 {
INFO  00:00:19,777 - #45 var_bool1
INFO  00:00:19,778 - #26 =
INFO  00:00:19,778 - #47 0
INFO  00:00:19,778 - #18 ;
INFO  00:00:19,779 - #9 if
INFO  00:00:19,779 - #16 (
INFO  00:00:19,779 - #45 const_bool1
INFO  00:00:19,779 - #36 ||
INFO  00:00:19,781 - #45 var_bool1
INFO  00:00:19,781 - #35 &&
INFO  00:00:19,781 - #46 A
INFO  00:00:19,781 - #29 ==
INFO  00:00:19,781 - #46 A
INFO  00:00:19,781 - #36 ||
INFO  00:00:19,782 - #47 1
INFO  00:00:19,782 - #35 &&
INFO  00:00:19,782 - #47 0
INFO  00:00:19,782 - #36 ||
INFO  00:00:19,782 - #22 -
INFO  00:00:19,782 - #44 2
INFO  00:00:19,782 - #33 <
INFO  00:00:19,782 - #16 (
INFO  00:00:19,782 - #44 3
INFO  00:00:19,782 - #23 *
INFO  00:00:19,782 - #44 20
INFO  00:00:19,783 - #24 /
INFO  00:00:19,783 - #16 (
INFO  00:00:19,783 - #45 type_enum1
INFO  00:00:19,783 - #20 .
INFO  00:00:19,783 - #45 ONE
INFO  00:00:19,783 - #17 )
INFO  00:00:19,783 - #23 *
INFO  00:00:19,783 - #44 2
INFO  00:00:19,783 - #21 +
INFO  00:00:19,783 - #45 local_int1
INFO  00:00:19,784 - #17 )
INFO  00:00:19,784 - #17 )
INFO  00:00:19,784 - #45 arg1
INFO  00:00:19,784 - #26 =
INFO  00:00:19,784 - #45 arg1
INFO  00:00:19,784 - #21 +
INFO  00:00:19,784 - #44 1
INFO  00:00:19,785 - #18 ;
INFO  00:00:19,785 - #38 return
INFO  00:00:19,785 - #44 1
INFO  00:00:19,785 - #21 +
INFO  00:00:19,785 - #44 2
INFO  00:00:19,785 - #23 *
INFO  00:00:19,785 - #45 local_int1
INFO  00:00:19,785 - #18 ;
INFO  00:00:19,785 - #13 }
INFO  00:00:19,785 - #39 void
INFO  00:00:19,785 - #45 funkc2
INFO  00:00:19,786 - #16 (
INFO  00:00:19,786 - #45 bool
INFO  00:00:19,786 - #45 args
INFO  00:00:19,786 - #14 [
INFO  00:00:19,786 - #15 ]
INFO  00:00:19,786 - #19 ,
INFO  00:00:19,786 - #45 char
INFO  00:00:19,786 - #45 arg
INFO  00:00:19,786 - #19 ,
INFO  00:00:19,786 - #45 char
INFO  00:00:19,786 - #14 [
ERROR 00:00:19,786 - 
Sintaksna greska na liniji 47
INFO  00:00:19,786 - #15 ]
INFO  00:00:19,786 - #17 )
INFO  00:00:19,786 - #12 {
INFO  00:00:19,787 - #9 if
INFO  00:00:19,787 - #16 (
ERROR 00:00:19,787 - [Formalni parametar] Izvrsen oporavak do sledeceg ',')' u liniji 47
INFO  00:00:19,787 - #45 args
INFO  00:00:19,787 - #14 [
INFO  00:00:19,787 - #44 0
INFO  00:00:19,787 - #21 +
INFO  00:00:19,787 - #44 1
INFO  00:00:19,787 - #15 ]
INFO  00:00:19,787 - #36 ||
INFO  00:00:19,787 - #45 arg
INFO  00:00:19,787 - #29 ==
INFO  00:00:19,787 - #46 A
INFO  00:00:19,787 - #17 )
INFO  00:00:19,787 - #12 {
INFO  00:00:19,788 - #45 args
INFO  00:00:19,788 - #14 [
INFO  00:00:19,788 - #44 0
INFO  00:00:19,788 - #15 ]
INFO  00:00:19,788 - #26 =
INFO  00:00:19,788 - #47 0
INFO  00:00:19,788 - #18 ;
INFO  00:00:19,788 - #13 }
INFO  00:00:19,788 - #7 else
INFO  00:00:19,788 - #9 if
INFO  00:00:19,788 - #16 (
INFO  00:00:19,788 - #45 type_enum2
INFO  00:00:19,788 - #20 .
INFO  00:00:19,788 - #45 X
INFO  00:00:19,788 - #30 !=
INFO  00:00:19,788 - #44 5
INFO  00:00:19,788 - #35 &&
INFO  00:00:19,788 - #45 const_int2
INFO  00:00:19,788 - #17 )
INFO  00:00:19,788 - #45 arg
INFO  00:00:19,788 - #26 =
INFO  00:00:19,788 - #46 B
INFO  00:00:19,788 - #18 ;
INFO  00:00:19,788 - #7 else
INFO  00:00:19,788 - #12 {
INFO  00:00:19,788 - #45 args
INFO  00:00:19,789 - #13 }
ERROR 00:00:19,789 - 
Sintaksna greska na liniji 57
INFO  00:00:19,789 - #13 }
INFO  00:00:19,789 - #39 void
INFO  00:00:19,789 - #45 main
INFO  00:00:19,789 - #16 (
INFO  00:00:19,789 - #17 )
INFO  00:00:19,789 - #12 {
INFO  00:00:19,789 - #13 }
INFO  00:00:19,789 - #13 }
ERROR 00:00:19,789 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 63
