INFO  23:43:39,904 - Putanja iz argumenta: test/program.mj
INFO  23:43:39,904 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  23:43:39,936 - #2 program
INFO  23:43:39,936 - #45 Program
INFO  23:43:39,936 - #8 const
INFO  23:43:39,936 - #45 bool
INFO  23:43:39,936 - #45 const_bool1
INFO  23:43:39,937 - #26 =
INFO  23:43:39,937 - #47 1
INFO  23:43:39,937 - #19 ,
INFO  23:43:39,937 - #45 const_bool2
INFO  23:43:39,937 - #26 =
INFO  23:43:39,937 - #47 1
INFO  23:43:39,937 - #19 ,
INFO  23:43:39,937 - #45 const_bool3
INFO  23:43:39,938 - #26 =
INFO  23:43:39,938 - #47 0
INFO  23:43:39,938 - #18 ;
INFO  23:43:39,938 - #8 const
INFO  23:43:39,938 - #45 int
INFO  23:43:39,938 - #45 const_int1
INFO  23:43:39,938 - #26 =
INFO  23:43:39,938 - #44 1
INFO  23:43:39,938 - #18 ;
INFO  23:43:39,939 - #8 const
INFO  23:43:39,939 - #45 char
INFO  23:43:39,939 - #45 const_char1
INFO  23:43:39,939 - #26 =
INFO  23:43:39,939 - #46 a
INFO  23:43:39,939 - #19 ,
INFO  23:43:39,939 - #45 const_char2
INFO  23:43:39,939 - #26 =
INFO  23:43:39,939 - #46 b
INFO  23:43:39,939 - #19 ,
INFO  23:43:39,939 - #45 const_char3
INFO  23:43:39,939 - #26 =
INFO  23:43:39,939 - #46 c
INFO  23:43:39,939 - #18 ;
INFO  23:43:39,939 - #6 enum
INFO  23:43:39,939 - #45 type_enum1
INFO  23:43:39,940 - #12 {
INFO  23:43:39,940 - #45 ZERO
INFO  23:43:39,940 - #19 ,
INFO  23:43:39,940 - #45 ONE
INFO  23:43:39,940 - #19 ,
INFO  23:43:39,940 - #45 THREE
INFO  23:43:39,940 - #26 =
INFO  23:43:39,940 - #44 3
INFO  23:43:39,940 - #19 ,
INFO  23:43:39,940 - #45 FIVE
INFO  23:43:39,941 - #26 =
INFO  23:43:39,941 - #44 5
INFO  23:43:39,941 - #19 ,
INFO  23:43:39,941 - #45 SIX
INFO  23:43:39,941 - #19 ,
INFO  23:43:39,941 - #45 SEVEN
INFO  23:43:39,941 - #19 ,
INFO  23:43:39,941 - #45 TEN
INFO  23:43:39,941 - #26 =
INFO  23:43:39,941 - #44 10
INFO  23:43:39,941 - #13 }
INFO  23:43:39,941 - #6 enum
INFO  23:43:39,941 - #45 type_enum2
INFO  23:43:39,941 - #12 {
INFO  23:43:39,941 - #45 X
INFO  23:43:39,941 - #13 }
INFO  23:43:39,942 - #45 int
INFO  23:43:39,942 - #45 var_int1
INFO  23:43:39,942 - #19 ,
INFO  23:43:39,942 - #45 var_int2
INFO  23:43:39,942 - #19 ,
INFO  23:43:39,942 - #45 var_ints1
INFO  23:43:39,942 - #14 [
INFO  23:43:39,942 - #15 ]
INFO  23:43:39,942 - #19 ,
INFO  23:43:39,942 - #45 var_ints2
INFO  23:43:39,943 - #14 [
INFO  23:43:39,943 - #15 ]
INFO  23:43:39,943 - #18 ;
INFO  23:43:39,943 - #45 char
INFO  23:43:39,943 - #45 var_char1
INFO  23:43:39,943 - #19 ,
INFO  23:43:39,943 - #45 var_chars1
INFO  23:43:39,943 - #14 [
INFO  23:43:39,943 - #15 ]
INFO  23:43:39,943 - #18 ;
INFO  23:43:39,943 - #45 bool
INFO  23:43:39,943 - #45 var_bool1
INFO  23:43:39,943 - #19 ,
INFO  23:43:39,943 - #45 var_bool2
INFO  23:43:39,943 - #19 ,
INFO  23:43:39,943 - #45 var_bools1
INFO  23:43:39,943 - #14 [
INFO  23:43:39,943 - #15 ]
INFO  23:43:39,943 - #18 ;
INFO  23:43:39,943 - #45 type_enum1
INFO  23:43:39,943 - #45 var_enum1
INFO  23:43:39,944 - #19 ,
INFO  23:43:39,944 - #45 var_enum2
INFO  23:43:39,944 - #19 ,
INFO  23:43:39,944 - #45 var_enums1
INFO  23:43:39,944 - #14 [
INFO  23:43:39,944 - #15 ]
INFO  23:43:39,944 - #18 ;
INFO  23:43:39,944 - #12 {
INFO  23:43:39,944 - #45 int
INFO  23:43:39,944 - #45 funkc1
INFO  23:43:39,944 - #16 (
INFO  23:43:39,945 - #45 int
INFO  23:43:39,945 - #45 arg1
INFO  23:43:39,945 - #17 )
INFO  23:43:39,945 - #45 int
INFO  23:43:39,945 - #45 local_int1
INFO  23:43:39,945 - #19 ,
INFO  23:43:39,945 - #45 local_int2
INFO  23:43:39,945 - #18 ;
INFO  23:43:39,945 - #45 char
INFO  23:43:39,945 - #45 local_char1
INFO  23:43:39,945 - #19 ,
INFO  23:43:39,946 - #45 local_char2
INFO  23:43:39,946 - #18 ;
INFO  23:43:39,946 - #45 bool
INFO  23:43:39,946 - #45 const_bool1
INFO  23:43:39,946 - #18 ;
INFO  23:43:39,946 - #12 {
INFO  23:43:39,946 - #9 if
INFO  23:43:39,946 - #16 (
INFO  23:43:39,946 - #45 const_bool1
INFO  23:43:39,946 - #35 &&
INFO  23:43:39,947 - #46 A
INFO  23:43:39,947 - #29 ==
INFO  23:43:39,947 - #46 A
INFO  23:43:39,947 - #17 )
INFO  23:43:39,949 - #45 local_int1
INFO  23:43:39,949 - #26 =
INFO  23:43:39,949 - #44 1
INFO  23:43:39,949 - #18 ;
INFO  23:43:39,950 - #38 return
INFO  23:43:39,950 - #44 1
INFO  23:43:39,950 - #18 ;
INFO  23:43:39,950 - #13 }
INFO  23:43:39,950 - #39 void
INFO  23:43:39,951 - #45 main
INFO  23:43:39,951 - #16 (
INFO  23:43:39,951 - #17 )
INFO  23:43:39,951 - #12 {
INFO  23:43:39,951 - #13 }
INFO  23:43:39,951 - #13 }
INFO  23:43:39,956 - Program(
  ProgName(
   Program
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                Declarations(
                  Declarations(
                    NoDecl(
                    ) [NoDecl]
                    ConstDeclaration(
                      ConstDeclNode(
                        ConstDeclType(
                          TypeNode(
                           bool
                          ) [TypeNode]
                        ) [ConstDeclType]
                        Constants(
                          Constants(
                            SingleConstant(
                              IdentEqualConstantNode(
                               const_bool1
                                BooleanNode(
                                 1
                                ) [BooleanNode]
                              ) [IdentEqualConstantNode]
                            ) [SingleConstant]
                            IdentEqualConstantNode(
                             const_bool2
                              BooleanNode(
                               1
                              ) [BooleanNode]
                            ) [IdentEqualConstantNode]
                          ) [Constants]
                          IdentEqualConstantNode(
                           const_bool3
                            BooleanNode(
                             0
                            ) [BooleanNode]
                          ) [IdentEqualConstantNode]
                        ) [Constants]
                      ) [ConstDeclNode]
                    ) [ConstDeclaration]
                  ) [Declarations]
                  ConstDeclaration(
                    ConstDeclNode(
                      ConstDeclType(
                        TypeNode(
                         int
                        ) [TypeNode]
                      ) [ConstDeclType]
                      SingleConstant(
                        IdentEqualConstantNode(
                         const_int1
                          NumberNode(
                           1
                          ) [NumberNode]
                        ) [IdentEqualConstantNode]
                      ) [SingleConstant]
                    ) [ConstDeclNode]
                  ) [ConstDeclaration]
                ) [Declarations]
                ConstDeclaration(
                  ConstDeclNode(
                    ConstDeclType(
                      TypeNode(
                       char
                      ) [TypeNode]
                    ) [ConstDeclType]
                    Constants(
                      Constants(
                        SingleConstant(
                          IdentEqualConstantNode(
                           const_char1
                            CharNode(
                             a
                            ) [CharNode]
                          ) [IdentEqualConstantNode]
                        ) [SingleConstant]
                        IdentEqualConstantNode(
                         const_char2
                          CharNode(
                           b
                          ) [CharNode]
                        ) [IdentEqualConstantNode]
                      ) [Constants]
                      IdentEqualConstantNode(
                       const_char3
                        CharNode(
                         c
                        ) [CharNode]
                      ) [IdentEqualConstantNode]
                    ) [Constants]
                  ) [ConstDeclNode]
                ) [ConstDeclaration]
              ) [Declarations]
              EnumDeclaration(
                EnumDeclarationNode(
                  EnumIdent(
                   type_enum1
                  ) [EnumIdent]
                  Enumerations(
                    Enumerations(
                      Enumerations(
                        Enumerations(
                          Enumerations(
                            Enumerations(
                              SingleEnumeration(
                                EnumerationNoVal(
                                 ZERO
                                ) [EnumerationNoVal]
                              ) [SingleEnumeration]
                              EnumerationNoVal(
                               ONE
                              ) [EnumerationNoVal]
                            ) [Enumerations]
                            EnumerationVal(
                             THREE
                             3
                            ) [EnumerationVal]
                          ) [Enumerations]
                          EnumerationVal(
                           FIVE
                           5
                          ) [EnumerationVal]
                        ) [Enumerations]
                        EnumerationNoVal(
                         SIX
                        ) [EnumerationNoVal]
                      ) [Enumerations]
                      EnumerationNoVal(
                       SEVEN
                      ) [EnumerationNoVal]
                    ) [Enumerations]
                    EnumerationVal(
                     TEN
                     10
                    ) [EnumerationVal]
                  ) [Enumerations]
                ) [EnumDeclarationNode]
              ) [EnumDeclaration]
            ) [Declarations]
            EnumDeclaration(
              EnumDeclarationNode(
                EnumIdent(
                 type_enum2
                ) [EnumIdent]
                SingleEnumeration(
                  EnumerationNoVal(
                   X
                  ) [EnumerationNoVal]
                ) [SingleEnumeration]
              ) [EnumDeclarationNode]
            ) [EnumDeclaration]
          ) [Declarations]
          VarDeclaration(
            VarDeclNode(
              VarDeclType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [VarDeclType]
              Variables(
                Variables(
                  Variables(
                    SingleVariable(
                      VariableNoBracket(
                       var_int1
                      ) [VariableNoBracket]
                    ) [SingleVariable]
                    VariableNoBracket(
                     var_int2
                    ) [VariableNoBracket]
                  ) [Variables]
                  VariableBracket(
                   var_ints1
                  ) [VariableBracket]
                ) [Variables]
                VariableBracket(
                 var_ints2
                ) [VariableBracket]
              ) [Variables]
            ) [VarDeclNode]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclNode(
            VarDeclType(
              TypeNode(
               char
              ) [TypeNode]
            ) [VarDeclType]
            Variables(
              SingleVariable(
                VariableNoBracket(
                 var_char1
                ) [VariableNoBracket]
              ) [SingleVariable]
              VariableBracket(
               var_chars1
              ) [VariableBracket]
            ) [Variables]
          ) [VarDeclNode]
        ) [VarDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclNode(
          VarDeclType(
            TypeNode(
             bool
            ) [TypeNode]
          ) [VarDeclType]
          Variables(
            Variables(
              SingleVariable(
                VariableNoBracket(
                 var_bool1
                ) [VariableNoBracket]
              ) [SingleVariable]
              VariableNoBracket(
               var_bool2
              ) [VariableNoBracket]
            ) [Variables]
            VariableBracket(
             var_bools1
            ) [VariableBracket]
          ) [Variables]
        ) [VarDeclNode]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclNode(
        VarDeclType(
          TypeNode(
           type_enum1
          ) [TypeNode]
        ) [VarDeclType]
        Variables(
          Variables(
            SingleVariable(
              VariableNoBracket(
               var_enum1
              ) [VariableNoBracket]
            ) [SingleVariable]
            VariableNoBracket(
             var_enum2
            ) [VariableNoBracket]
          ) [Variables]
          VariableBracket(
           var_enums1
          ) [VariableBracket]
        ) [Variables]
      ) [VarDeclNode]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          NoVoidType(
            TypeNode(
             int
            ) [TypeNode]
          ) [NoVoidType]
         funkc1
        ) [MethodTypeName]
        FormalParams(
          SingleFormalParamDecl(
            FormalParamDeclarationNoBrackets(
              TypeNode(
               int
              ) [TypeNode]
             arg1
            ) [FormalParamDeclarationNoBrackets]
          ) [SingleFormalParamDecl]
        ) [FormalParams]
        VarDeclarationList(
          VarDeclarationList(
            VarDeclarationList(
              NoVarDeclaration(
              ) [NoVarDeclaration]
              VarDeclNode(
                VarDeclType(
                  TypeNode(
                   int
                  ) [TypeNode]
                ) [VarDeclType]
                Variables(
                  SingleVariable(
                    VariableNoBracket(
                     local_int1
                    ) [VariableNoBracket]
                  ) [SingleVariable]
                  VariableNoBracket(
                   local_int2
                  ) [VariableNoBracket]
                ) [Variables]
              ) [VarDeclNode]
            ) [VarDeclarationList]
            VarDeclNode(
              VarDeclType(
                TypeNode(
                 char
                ) [TypeNode]
              ) [VarDeclType]
              Variables(
                SingleVariable(
                  VariableNoBracket(
                   local_char1
                  ) [VariableNoBracket]
                ) [SingleVariable]
                VariableNoBracket(
                 local_char2
                ) [VariableNoBracket]
              ) [Variables]
            ) [VarDeclNode]
          ) [VarDeclarationList]
          VarDeclNode(
            VarDeclType(
              TypeNode(
               bool
              ) [TypeNode]
            ) [VarDeclType]
            SingleVariable(
              VariableNoBracket(
               const_bool1
              ) [VariableNoBracket]
            ) [SingleVariable]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        Statements(
          Statements(
            NoStatement(
            ) [NoStatement]
            IfStatement(
              IfConditionNode(
                ConditionNode(
                  SingleConditionTerm(
                    ConditionTermNode(
                      ConditionFacts(
                        SingleConditionFact(
                          CondFactExpression(
                            SingleExpression(
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     const_bool1
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [CondFactExpression]
                        ) [SingleConditionFact]
                        CondFactExpressionRelopExpression(
                          SingleExpression(
                            TermFactor(
                              ConstantCharacter(
                               A
                              ) [ConstantCharacter]
                            ) [TermFactor]
                          ) [SingleExpression]
                          RelopEqualEqual(
                          ) [RelopEqualEqual]
                          SingleExpression(
                            TermFactor(
                              ConstantCharacter(
                               A
                              ) [ConstantCharacter]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [CondFactExpressionRelopExpression]
                      ) [ConditionFacts]
                    ) [ConditionTermNode]
                  ) [SingleConditionTerm]
                ) [ConditionNode]
              ) [IfConditionNode]
              DesignatorStatementOnly(
                DesignatorStatementAssignop(
                  DesignatorNode(
                    SingleIdentExpr(
                     local_int1
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    TermFactor(
                      ConstantNumber(
                       1
                      ) [ConstantNumber]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementOnly]
            ) [IfStatement]
          ) [Statements]
          ReturnStatementExpr(
            SingleExpression(
              TermFactor(
                ConstantNumber(
                 1
                ) [ConstantNumber]
              ) [TermFactor]
            ) [SingleExpression]
          ) [ReturnStatementExpr]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      NoVarDeclaration(
      ) [NoVarDeclaration]
      NoStatement(
      ) [NoStatement]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:43:39,957 - ===================================
INFO  23:43:39,959 - Definisana konstanta (1)const_bool1 na liniji 4
INFO  23:43:39,959 - Definisana konstanta (1)const_bool2 na liniji 4
INFO  23:43:39,959 - Definisana konstanta (0)const_bool3 na liniji 4
INFO  23:43:39,959 - Definisana konstanta (1)const_int1 na liniji 5
INFO  23:43:39,959 - Definisana konstanta (97)const_char1 na liniji 6
INFO  23:43:39,959 - Definisana konstanta (98)const_char2 na liniji 6
INFO  23:43:39,959 - Definisana konstanta (99)const_char3 na liniji 6
INFO  23:43:39,960 - Deklarisan novi enum tip: type_enum1 na liniji 11
INFO  23:43:39,960 - Definisana enum konstanta ZERO sa vrednoscu 0 na liniji 12
INFO  23:43:39,960 - Definisana enum konstanta ONE sa vrednoscu 1 na liniji 12
INFO  23:43:39,960 - Definisana enum konstanta THREE sa vrednoscu 3 na liniji 12
INFO  23:43:39,960 - Definisana enum konstanta FIVE sa vrednoscu 5 na liniji 12
INFO  23:43:39,960 - Definisana enum konstanta SIX sa vrednoscu 6 na liniji 12
INFO  23:43:39,960 - Definisana enum konstanta SEVEN sa vrednoscu 7 na liniji 12
INFO  23:43:39,960 - Definisana enum konstanta TEN sa vrednoscu 10 na liniji 12
INFO  23:43:39,960 - Deklarisan novi enum tip: type_enum2 na liniji 14
INFO  23:43:39,960 - Definisana enum konstanta X sa vrednoscu 0 na liniji 15
INFO  23:43:39,960 - Deklarisana single promenljiva var_int1 na liniji 21
INFO  23:43:39,960 - Deklarisana single promenljiva var_int2 na liniji 21
INFO  23:43:39,960 - Deklarisana array promenljiva var_ints1 na liniji 21
INFO  23:43:39,960 - Deklarisana array promenljiva var_ints2 na liniji 21
INFO  23:43:39,960 - Deklarisana single promenljiva var_char1 na liniji 22
INFO  23:43:39,960 - Deklarisana array promenljiva var_chars1 na liniji 22
INFO  23:43:39,960 - Deklarisana single promenljiva var_bool1 na liniji 23
INFO  23:43:39,960 - Deklarisana single promenljiva var_bool2 na liniji 23
INFO  23:43:39,960 - Deklarisana array promenljiva var_bools1 na liniji 23
INFO  23:43:39,960 - Deklarisana single promenljiva var_enum1 na liniji 24
INFO  23:43:39,960 - Deklarisana single promenljiva var_enum2 na liniji 24
INFO  23:43:39,960 - Deklarisana array promenljiva var_enums1 na liniji 24
INFO  23:43:39,960 - Definisana funkcija funkc1 na liniji 31
INFO  23:43:39,960 - Deklarisan single argument arg1 na liniji 31
INFO  23:43:39,960 - Deklarisana single promenljiva local_int1 na liniji 33
INFO  23:43:39,961 - Deklarisana single promenljiva local_int2 na liniji 33
INFO  23:43:39,961 - Deklarisana single promenljiva local_char1 na liniji 34
INFO  23:43:39,961 - Deklarisana single promenljiva local_char2 na liniji 34
INFO  23:43:39,961 - Deklarisana single promenljiva const_bool1 na liniji 37
INFO  23:43:39,961 - Pronadjen poziv promenljive const_bool1 na liniji 41
INFO  23:43:39,961 - Dodela vrednosti za local_int1 na liniji 42
INFO  23:43:39,961 - Definisana funkcija main na liniji 47
INFO  23:43:39,961 - main funkcija je korektna.  na liniji 47
INFO  23:43:39,961 - ===================================
INFO  23:43:39,962 - Parsiranje uspesno zavrseno!
