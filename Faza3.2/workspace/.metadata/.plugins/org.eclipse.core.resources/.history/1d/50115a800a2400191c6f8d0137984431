INFO  02:57:12,303 - Putanja iz argumenta: test/program.mj
INFO  02:57:12,303 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  02:57:12,335 - #2 program
INFO  02:57:12,335 - #45 MojProgram
INFO  02:57:12,335 - #8 const
INFO  02:57:12,335 - #45 int
INFO  02:57:12,335 - #45 test_konstanta
INFO  02:57:12,335 - #29 ==
ERROR 02:57:12,335 - 
Sintaksna greska na liniji 3
INFO  02:57:12,336 - #44 0
INFO  02:57:12,336 - #18 ;
INFO  02:57:12,336 - #45 int
INFO  02:57:12,336 - #45 test_variabla
INFO  02:57:12,336 - #14 [
INFO  02:57:12,336 - #15 ]
INFO  02:57:12,336 - #18 ;
INFO  02:57:12,336 - #4 class
INFO  02:57:12,336 - #45 Klasa
INFO  02:57:12,336 - #12 {
INFO  02:57:12,336 - #45 char
INFO  02:57:12,337 - #45 prom
INFO  02:57:12,337 - #19 ,
INFO  02:57:12,337 - #45 array
INFO  02:57:12,337 - #14 [
INFO  02:57:12,337 - #15 ]
INFO  02:57:12,337 - #19 ,
INFO  02:57:12,337 - #45 x
INFO  02:57:12,337 - #18 ;
INFO  02:57:12,337 - #45 char
INFO  02:57:12,337 - #45 m
INFO  02:57:12,337 - #18 ;
INFO  02:57:12,337 - #45 bool
INFO  02:57:12,337 - #45 a
INFO  02:57:12,337 - #19 ,
INFO  02:57:12,337 - #45 b
INFO  02:57:12,337 - #18 ;
INFO  02:57:12,337 - #45 Klasa2
INFO  02:57:12,337 - #45 k2
INFO  02:57:12,337 - #18 ;
INFO  02:57:12,337 - #12 {
INFO  02:57:12,338 - #45 char
INFO  02:57:12,338 - #45 funkc
INFO  02:57:12,338 - #16 (
INFO  02:57:12,338 - #45 bool
INFO  02:57:12,338 - #45 b
INFO  02:57:12,338 - #19 ,
INFO  02:57:12,338 - #45 char
INFO  02:57:12,338 - #45 o
INFO  02:57:12,338 - #17 )
INFO  02:57:12,338 - #45 int
INFO  02:57:12,338 - #45 prom_x
INFO  02:57:12,338 - #18 ;
INFO  02:57:12,338 - #45 char
INFO  02:57:12,338 - #45 prom_c1
INFO  02:57:12,338 - #19 ,
INFO  02:57:12,338 - #45 prom_c2
INFO  02:57:12,338 - #18 ;
INFO  02:57:12,338 - #12 {
INFO  02:57:12,338 - #45 prom_x
INFO  02:57:12,338 - #26 =
INFO  02:57:12,338 - #44 1
INFO  02:57:12,338 - #18 ;
INFO  02:57:12,338 - #45 prom_c1
INFO  02:57:12,339 - #26 =
INFO  02:57:12,339 - #46 A
INFO  02:57:12,339 - #21 +
INFO  02:57:12,339 - #44 5
INFO  02:57:12,339 - #18 ;
INFO  02:57:12,339 - #45 prom_c2
INFO  02:57:12,339 - #26 =
INFO  02:57:12,339 - #10 new
INFO  02:57:12,339 - #45 Klasa2
INFO  02:57:12,339 - #18 ;
INFO  02:57:12,339 - #38 return
INFO  02:57:12,339 - #22 -
INFO  02:57:12,339 - #45 metoda1_x
INFO  02:57:12,339 - #23 *
INFO  02:57:12,339 - #45 funkc
INFO  02:57:12,339 - #16 (
INFO  02:57:12,339 - #47 true
INFO  02:57:12,340 - #17 )
INFO  02:57:12,340 - #18 ;
INFO  02:57:12,340 - #13 }
INFO  02:57:12,340 - #39 void
INFO  02:57:12,340 - #45 funkc2
INFO  02:57:12,340 - #16 (
INFO  02:57:12,340 - #17 )
INFO  02:57:12,340 - #12 {
INFO  02:57:12,340 - #45 this
INFO  02:57:12,340 - #20 .
INFO  02:57:12,340 - #45 a
INFO  02:57:12,340 - #26 =
INFO  02:57:12,340 - #47 false
INFO  02:57:12,340 - #18 ;
INFO  02:57:12,340 - #9 if
INFO  02:57:12,340 - #16 (
INFO  02:57:12,340 - #45 this
INFO  02:57:12,341 - #20 .
INFO  02:57:12,341 - #45 a
INFO  02:57:12,341 - #29 ==
INFO  02:57:12,341 - #45 this
INFO  02:57:12,341 - #20 .
INFO  02:57:12,341 - #45 b
INFO  02:57:12,341 - #17 )
INFO  02:57:12,341 - #37 read
INFO  02:57:12,341 - #16 (
INFO  02:57:12,341 - #45 this
INFO  02:57:12,341 - #20 .
INFO  02:57:12,341 - #45 k2
INFO  02:57:12,341 - #20 .
INFO  02:57:12,341 - #45 a
INFO  02:57:12,341 - #14 [
INFO  02:57:12,341 - #44 0
INFO  02:57:12,341 - #15 ]
INFO  02:57:12,341 - #17 )
INFO  02:57:12,341 - #18 ;
INFO  02:57:12,341 - #7 else
INFO  02:57:12,341 - #12 {
INFO  02:57:12,341 - #9 if
INFO  02:57:12,341 - #16 (
INFO  02:57:12,341 - #47 true
INFO  02:57:12,341 - #17 )
INFO  02:57:12,341 - #12 {
INFO  02:57:12,341 - #3 break
INFO  02:57:12,342 - #18 ;
INFO  02:57:12,342 - #43 continue
INFO  02:57:12,342 - #18 ;
INFO  02:57:12,342 - #9 if
INFO  02:57:12,342 - #16 (
INFO  02:57:12,342 - #45 prom_x
INFO  02:57:12,342 - #36 ||
INFO  02:57:12,342 - #45 prom_c1
INFO  02:57:12,342 - #31 >
INFO  02:57:12,343 - #46 A
INFO  02:57:12,343 - #17 )
INFO  02:57:12,343 - #9 if
INFO  02:57:12,343 - #16 (
INFO  02:57:12,343 - #44 1
INFO  02:57:12,343 - #33 <
INFO  02:57:12,343 - #44 2
INFO  02:57:12,343 - #17 )
INFO  02:57:12,343 - #12 {
INFO  02:57:12,343 - #45 prom_x
INFO  02:57:12,343 - #26 =
INFO  02:57:12,343 - #44 15
INFO  02:57:12,344 - #18 ;
INFO  02:57:12,344 - #40 for
INFO  02:57:12,344 - #16 (
INFO  02:57:12,344 - #18 ;
INFO  02:57:12,344 - #18 ;
INFO  02:57:12,344 - #17 )
INFO  02:57:12,344 - #11 print
INFO  02:57:12,344 - #16 (
INFO  02:57:12,344 - #46 i
INFO  02:57:12,344 - #19 ,
INFO  02:57:12,344 - #44 2
INFO  02:57:12,344 - #17 )
INFO  02:57:12,344 - #18 ;
INFO  02:57:12,344 - #13 }
INFO  02:57:12,344 - #13 }
INFO  02:57:12,344 - #13 }
INFO  02:57:12,344 - #40 for
INFO  02:57:12,344 - #16 (
INFO  02:57:12,344 - #45 this
INFO  02:57:12,344 - #20 .
INFO  02:57:12,344 - #45 k2
INFO  02:57:12,344 - #20 .
INFO  02:57:12,344 - #45 a
INFO  02:57:12,344 - #14 [
INFO  02:57:12,344 - #44 0
INFO  02:57:12,344 - #21 +
INFO  02:57:12,344 - #44 0
INFO  02:57:12,344 - #15 ]
INFO  02:57:12,344 - #26 =
INFO  02:57:12,344 - #44 0
INFO  02:57:12,345 - #18 ;
INFO  02:57:12,345 - #45 this
INFO  02:57:12,345 - #20 .
INFO  02:57:12,345 - #45 k2
INFO  02:57:12,345 - #20 .
INFO  02:57:12,345 - #45 a
INFO  02:57:12,345 - #14 [
INFO  02:57:12,345 - #44 0
INFO  02:57:12,345 - #21 +
INFO  02:57:12,345 - #44 0
INFO  02:57:12,345 - #15 ]
INFO  02:57:12,345 - #33 <
INFO  02:57:12,345 - #44 2
INFO  02:57:12,345 - #18 ;
INFO  02:57:12,345 - #45 this
INFO  02:57:12,345 - #20 .
INFO  02:57:12,345 - #45 k2
INFO  02:57:12,345 - #20 .
INFO  02:57:12,345 - #45 a
INFO  02:57:12,345 - #14 [
INFO  02:57:12,345 - #44 0
INFO  02:57:12,345 - #21 +
INFO  02:57:12,345 - #44 0
INFO  02:57:12,345 - #21 +
INFO  02:57:12,345 - #10 new
INFO  02:57:12,345 - #45 Klasa2
INFO  02:57:12,345 - #14 [
INFO  02:57:12,345 - #44 2
INFO  02:57:12,345 - #23 *
INFO  02:57:12,345 - #44 5
INFO  02:57:12,345 - #25 %
INFO  02:57:12,345 - #44 2
INFO  02:57:12,345 - #15 ]
INFO  02:57:12,345 - #15 ]
INFO  02:57:12,345 - #27 ++
INFO  02:57:12,345 - #17 )
INFO  02:57:12,345 - #12 {
INFO  02:57:12,346 - #3 break
INFO  02:57:12,346 - #18 ;
INFO  02:57:12,346 - #43 continue
INFO  02:57:12,346 - #18 ;
INFO  02:57:12,346 - #9 if
INFO  02:57:12,346 - #16 (
INFO  02:57:12,346 - #45 this
INFO  02:57:12,346 - #20 .
INFO  02:57:12,346 - #45 k2
INFO  02:57:12,346 - #20 .
INFO  02:57:12,346 - #45 a
INFO  02:57:12,346 - #14 [
INFO  02:57:12,346 - #44 1
INFO  02:57:12,346 - #15 ]
INFO  02:57:12,346 - #21 +
INFO  02:57:12,346 - #45 funkc
INFO  02:57:12,346 - #16 (
INFO  02:57:12,346 - #47 true
INFO  02:57:12,346 - #17 )
INFO  02:57:12,346 - #31 >
INFO  02:57:12,346 - #44 2
INFO  02:57:12,346 - #17 )
INFO  02:57:12,346 - #37 read
INFO  02:57:12,346 - #16 (
INFO  02:57:12,346 - #45 this
INFO  02:57:12,346 - #20 .
INFO  02:57:12,346 - #45 k2
INFO  02:57:12,346 - #20 .
INFO  02:57:12,346 - #45 a
INFO  02:57:12,346 - #14 [
INFO  02:57:12,346 - #44 2
INFO  02:57:12,346 - #15 ]
INFO  02:57:12,346 - #17 )
INFO  02:57:12,346 - #18 ;
INFO  02:57:12,347 - #13 }
INFO  02:57:12,347 - #38 return
INFO  02:57:12,347 - #18 ;
INFO  02:57:12,347 - #13 }
INFO  02:57:12,347 - #13 }
INFO  02:57:12,347 - #13 }
INFO  02:57:12,347 - #4 class
INFO  02:57:12,347 - #45 Klasa2
INFO  02:57:12,347 - #12 {
INFO  02:57:12,347 - #45 int
INFO  02:57:12,347 - #45 a
INFO  02:57:12,347 - #14 [
INFO  02:57:12,347 - #15 ]
INFO  02:57:12,347 - #18 ;
INFO  02:57:12,347 - #13 }
INFO  02:57:12,347 - #4 class
INFO  02:57:12,347 - #45 Klasa3
INFO  02:57:12,347 - #12 {
INFO  02:57:12,347 - #13 }
INFO  02:57:12,347 - #5 interface
INFO  02:57:12,347 - #45 Interfejs1
INFO  02:57:12,347 - #12 {
INFO  02:57:12,347 - #39 void
INFO  02:57:12,347 - #45 printstr
INFO  02:57:12,347 - #16 (
INFO  02:57:12,347 - #45 char
INFO  02:57:12,347 - #45 str
INFO  02:57:12,347 - #14 [
INFO  02:57:12,347 - #15 ]
INFO  02:57:12,348 - #17 )
INFO  02:57:12,348 - #18 ;
INFO  02:57:12,348 - #13 }
INFO  02:57:12,348 - #5 interface
INFO  02:57:12,348 - #45 Interfejs2
INFO  02:57:12,348 - #12 {
INFO  02:57:12,348 - #45 Klasa3
INFO  02:57:12,348 - #45 vratiK3
INFO  02:57:12,348 - #16 (
INFO  02:57:12,348 - #17 )
INFO  02:57:12,348 - #18 ;
INFO  02:57:12,348 - #13 }
INFO  02:57:12,348 - #5 interface
INFO  02:57:12,348 - #45 Interfejs3
INFO  02:57:12,348 - #12 {
INFO  02:57:12,348 - #13 }
INFO  02:57:12,348 - #45 Klasa
INFO  02:57:12,348 - #45 klasa1
INFO  02:57:12,348 - #18 ;
INFO  02:57:12,348 - #8 const
INFO  02:57:12,348 - #45 int
INFO  02:57:12,348 - #45 konstanta1
INFO  02:57:12,348 - #26 =
INFO  02:57:12,348 - #44 5
INFO  02:57:12,348 - #19 ,
INFO  02:57:12,348 - #45 konstanta2
INFO  02:57:12,348 - #26 =
INFO  02:57:12,348 - #46 a
INFO  02:57:12,348 - #18 ;
INFO  02:57:12,348 - #45 bool
INFO  02:57:12,348 - #45 m
INFO  02:57:12,348 - #18 ;
INFO  02:57:12,348 - #8 const
INFO  02:57:12,348 - #45 bool
INFO  02:57:12,348 - #45 konstanta_m
INFO  02:57:12,348 - #26 =
INFO  02:57:12,348 - #47 false
INFO  02:57:12,348 - #18 ;
INFO  02:57:12,348 - #45 char
INFO  02:57:12,349 - #45 arr
INFO  02:57:12,349 - #14 [
INFO  02:57:12,349 - #15 ]
INFO  02:57:12,349 - #18 ;
INFO  02:57:12,349 - #4 class
INFO  02:57:12,349 - #45 Util
INFO  02:57:12,349 - #42 implements
INFO  02:57:12,349 - #45 Interfejs1
INFO  02:57:12,349 - #19 ,
INFO  02:57:12,349 - #45 Interfejs2
INFO  02:57:12,349 - #19 ,
INFO  02:57:12,349 - #45 Interfejs3
INFO  02:57:12,349 - #12 {
INFO  02:57:12,349 - #12 {
INFO  02:57:12,349 - #39 void
INFO  02:57:12,349 - #45 printstr
INFO  02:57:12,349 - #16 (
INFO  02:57:12,349 - #45 char
INFO  02:57:12,349 - #45 s
INFO  02:57:12,349 - #14 [
INFO  02:57:12,349 - #15 ]
INFO  02:57:12,349 - #17 )
INFO  02:57:12,349 - #45 Klasa2
INFO  02:57:12,349 - #45 k2
INFO  02:57:12,349 - #18 ;
INFO  02:57:12,349 - #45 char
INFO  02:57:12,349 - #45 chr
INFO  02:57:12,349 - #14 [
INFO  02:57:12,349 - #15 ]
INFO  02:57:12,349 - #18 ;
INFO  02:57:12,349 - #12 {
INFO  02:57:12,349 - #45 chr
INFO  02:57:12,349 - #26 =
INFO  02:57:12,349 - #10 new
INFO  02:57:12,349 - #45 char
INFO  02:57:12,349 - #14 [
INFO  02:57:12,349 - #44 3
INFO  02:57:12,349 - #15 ]
INFO  02:57:12,349 - #18 ;
INFO  02:57:12,349 - #45 chr
INFO  02:57:12,349 - #14 [
INFO  02:57:12,350 - #44 0
INFO  02:57:12,350 - #15 ]
INFO  02:57:12,350 - #26 =
INFO  02:57:12,350 - #46 I
INFO  02:57:12,350 - #18 ;
INFO  02:57:12,350 - #45 chr
INFO  02:57:12,350 - #14 [
INFO  02:57:12,350 - #44 1
INFO  02:57:12,350 - #15 ]
INFO  02:57:12,350 - #26 =
INFO  02:57:12,350 - #46 m
INFO  02:57:12,350 - #18 ;
INFO  02:57:12,350 - #45 chr
INFO  02:57:12,350 - #14 [
INFO  02:57:12,350 - #44 2
INFO  02:57:12,350 - #15 ]
INFO  02:57:12,350 - #26 =
INFO  02:57:12,350 - #46 a
INFO  02:57:12,350 - #18 ;
INFO  02:57:12,350 - #45 pca
INFO  02:57:12,350 - #26 =
INFO  02:57:12,350 - #10 new
INFO  02:57:12,350 - #45 PackedCharArray
INFO  02:57:12,350 - #18 ;
INFO  02:57:12,350 - #45 pca
INFO  02:57:12,350 - #20 .
INFO  02:57:12,350 - #45 array
INFO  02:57:12,350 - #26 =
INFO  02:57:12,350 - #45 chr
INFO  02:57:12,350 - #18 ;
INFO  02:57:12,350 - #38 return
INFO  02:57:12,350 - #45 pca
INFO  02:57:12,350 - #18 ;
INFO  02:57:12,350 - #13 }
INFO  02:57:12,350 - #45 Klasa3
INFO  02:57:12,350 - #45 vratiK3
INFO  02:57:12,350 - #16 (
INFO  02:57:12,350 - #17 )
INFO  02:57:12,350 - #12 {
INFO  02:57:12,350 - #38 return
INFO  02:57:12,350 - #22 -
INFO  02:57:12,351 - #10 new
INFO  02:57:12,351 - #45 Klasa3
INFO  02:57:12,351 - #18 ;
INFO  02:57:12,351 - #13 }
INFO  02:57:12,351 - #13 }
INFO  02:57:12,351 - #13 }
INFO  02:57:12,351 - #45 Interfejs3
INFO  02:57:12,351 - #45 i3
INFO  02:57:12,351 - #18 ;
INFO  02:57:12,351 - #4 class
INFO  02:57:12,351 - #45 Util2
INFO  02:57:12,351 - #41 extends
INFO  02:57:12,351 - #45 Util
INFO  02:57:12,351 - #42 implements
INFO  02:57:12,351 - #45 Interfejs1
INFO  02:57:12,351 - #12 {
INFO  02:57:12,351 - #12 {
INFO  02:57:12,351 - #39 void
INFO  02:57:12,351 - #45 printstr
INFO  02:57:12,351 - #16 (
INFO  02:57:12,351 - #45 char
INFO  02:57:12,351 - #45 str
INFO  02:57:12,351 - #14 [
INFO  02:57:12,351 - #15 ]
INFO  02:57:12,351 - #17 )
INFO  02:57:12,351 - #45 int
INFO  02:57:12,351 - #45 i
INFO  02:57:12,351 - #18 ;
INFO  02:57:12,351 - #12 {
INFO  02:57:12,351 - #40 for
INFO  02:57:12,351 - #16 (
INFO  02:57:12,351 - #45 i
INFO  02:57:12,351 - #26 =
INFO  02:57:12,351 - #44 0
INFO  02:57:12,351 - #18 ;
INFO  02:57:12,351 - #45 i
INFO  02:57:12,351 - #33 <
INFO  02:57:12,351 - #45 len
INFO  02:57:12,351 - #16 (
INFO  02:57:12,351 - #45 str
INFO  02:57:12,351 - #17 )
INFO  02:57:12,352 - #18 ;
INFO  02:57:12,352 - #45 i
INFO  02:57:12,352 - #27 ++
INFO  02:57:12,352 - #17 )
INFO  02:57:12,352 - #11 print
INFO  02:57:12,352 - #16 (
INFO  02:57:12,352 - #45 str
INFO  02:57:12,352 - #14 [
INFO  02:57:12,352 - #45 i
INFO  02:57:12,352 - #15 ]
INFO  02:57:12,352 - #17 )
INFO  02:57:12,352 - #18 ;
INFO  02:57:12,352 - #13 }
INFO  02:57:12,352 - #45 PackedCharArray
INFO  02:57:12,352 - #45 buildNema
INFO  02:57:12,352 - #16 (
INFO  02:57:12,352 - #17 )
INFO  02:57:12,352 - #45 PackedCharArray
INFO  02:57:12,352 - #45 pca
INFO  02:57:12,352 - #18 ;
INFO  02:57:12,352 - #45 char
INFO  02:57:12,352 - #45 chr
INFO  02:57:12,352 - #14 [
INFO  02:57:12,352 - #15 ]
INFO  02:57:12,352 - #18 ;
INFO  02:57:12,352 - #12 {
INFO  02:57:12,352 - #45 chr
INFO  02:57:12,352 - #26 =
INFO  02:57:12,352 - #10 new
INFO  02:57:12,352 - #45 char
INFO  02:57:12,352 - #14 [
INFO  02:57:12,352 - #44 4
INFO  02:57:12,352 - #15 ]
INFO  02:57:12,352 - #18 ;
INFO  02:57:12,352 - #45 chr
INFO  02:57:12,352 - #14 [
INFO  02:57:12,352 - #44 0
INFO  02:57:12,352 - #15 ]
INFO  02:57:12,352 - #26 =
INFO  02:57:12,352 - #46 N
INFO  02:57:12,352 - #18 ;
INFO  02:57:12,352 - #45 chr
INFO  02:57:12,352 - #14 [
INFO  02:57:12,352 - #44 1
INFO  02:57:12,352 - #15 ]
INFO  02:57:12,352 - #26 =
INFO  02:57:12,352 - #46 e
INFO  02:57:12,352 - #18 ;
INFO  02:57:12,352 - #45 chr
INFO  02:57:12,352 - #14 [
INFO  02:57:12,352 - #44 2
INFO  02:57:12,353 - #15 ]
INFO  02:57:12,353 - #26 =
INFO  02:57:12,353 - #46 m
INFO  02:57:12,353 - #18 ;
INFO  02:57:12,353 - #45 chr
INFO  02:57:12,353 - #14 [
INFO  02:57:12,353 - #44 3
INFO  02:57:12,353 - #15 ]
INFO  02:57:12,353 - #26 =
INFO  02:57:12,353 - #46 a
INFO  02:57:12,353 - #18 ;
INFO  02:57:12,353 - #45 pca
INFO  02:57:12,353 - #26 =
INFO  02:57:12,353 - #10 new
INFO  02:57:12,353 - #45 PackedCharArray
INFO  02:57:12,353 - #18 ;
INFO  02:57:12,353 - #45 pca
INFO  02:57:12,353 - #20 .
INFO  02:57:12,353 - #45 array
INFO  02:57:12,353 - #26 =
INFO  02:57:12,353 - #45 chr
INFO  02:57:12,353 - #18 ;
INFO  02:57:12,353 - #38 return
INFO  02:57:12,353 - #45 pca
INFO  02:57:12,353 - #18 ;
INFO  02:57:12,353 - #13 }
INFO  02:57:12,353 - #13 }
INFO  02:57:12,353 - #13 }
INFO  02:57:12,353 - #45 IUtil
INFO  02:57:12,353 - #45 util
INFO  02:57:12,353 - #18 ;
INFO  02:57:12,353 - #4 class
INFO  02:57:12,353 - #45 Node
INFO  02:57:12,353 - #12 {
INFO  02:57:12,353 - #45 Node
INFO  02:57:12,353 - #45 right
INFO  02:57:12,353 - #19 ,
INFO  02:57:12,353 - #45 left
INFO  02:57:12,353 - #18 ;
INFO  02:57:12,353 - #45 int
INFO  02:57:12,353 - #45 val
INFO  02:57:12,353 - #18 ;
INFO  02:57:12,354 - #12 {
INFO  02:57:12,354 - #39 void
INFO  02:57:12,354 - #45 insrt
INFO  02:57:12,354 - #16 (
INFO  02:57:12,354 - #45 int
INFO  02:57:12,354 - #45 v
INFO  02:57:12,354 - #17 )
INFO  02:57:12,354 - #12 {
INFO  02:57:12,354 - #9 if
INFO  02:57:12,354 - #16 (
INFO  02:57:12,354 - #45 v
INFO  02:57:12,354 - #31 >
INFO  02:57:12,354 - #45 val
INFO  02:57:12,354 - #17 )
INFO  02:57:12,354 - #12 {
INFO  02:57:12,354 - #9 if
INFO  02:57:12,354 - #16 (
INFO  02:57:12,354 - #45 right
INFO  02:57:12,354 - #29 ==
INFO  02:57:12,354 - #45 null
INFO  02:57:12,354 - #17 )
INFO  02:57:12,354 - #12 {
INFO  02:57:12,354 - #45 right
INFO  02:57:12,354 - #26 =
INFO  02:57:12,354 - #10 new
INFO  02:57:12,354 - #45 Node
INFO  02:57:12,354 - #18 ;
INFO  02:57:12,354 - #45 right
INFO  02:57:12,354 - #20 .
INFO  02:57:12,354 - #45 val
INFO  02:57:12,354 - #26 =
INFO  02:57:12,354 - #45 v
INFO  02:57:12,354 - #18 ;
INFO  02:57:12,354 - #13 }
INFO  02:57:12,354 - #7 else
INFO  02:57:12,354 - #12 {
INFO  02:57:12,354 - #45 right
INFO  02:57:12,354 - #20 .
INFO  02:57:12,354 - #45 insrt
INFO  02:57:12,354 - #16 (
INFO  02:57:12,354 - #45 v
INFO  02:57:12,354 - #17 )
INFO  02:57:12,354 - #18 ;
INFO  02:57:12,354 - #13 }
INFO  02:57:12,355 - #13 }
INFO  02:57:12,355 - #7 else
INFO  02:57:12,355 - #12 {
INFO  02:57:12,355 - #9 if
INFO  02:57:12,355 - #16 (
INFO  02:57:12,355 - #45 left
INFO  02:57:12,355 - #29 ==
INFO  02:57:12,355 - #45 null
INFO  02:57:12,355 - #17 )
INFO  02:57:12,355 - #12 {
INFO  02:57:12,355 - #45 left
INFO  02:57:12,355 - #26 =
INFO  02:57:12,355 - #10 new
INFO  02:57:12,355 - #45 Node
INFO  02:57:12,355 - #18 ;
INFO  02:57:12,355 - #45 left
INFO  02:57:12,355 - #20 .
INFO  02:57:12,355 - #45 val
INFO  02:57:12,355 - #26 =
INFO  02:57:12,355 - #45 v
INFO  02:57:12,355 - #18 ;
INFO  02:57:12,355 - #13 }
INFO  02:57:12,355 - #7 else
INFO  02:57:12,355 - #12 {
INFO  02:57:12,355 - #45 left
INFO  02:57:12,355 - #20 .
INFO  02:57:12,355 - #45 insrt
INFO  02:57:12,355 - #16 (
INFO  02:57:12,355 - #45 v
INFO  02:57:12,355 - #17 )
INFO  02:57:12,355 - #18 ;
INFO  02:57:12,355 - #13 }
INFO  02:57:12,355 - #13 }
INFO  02:57:12,355 - #13 }
INFO  02:57:12,355 - #13 }
INFO  02:57:12,355 - #13 }
INFO  02:57:12,355 - #45 PackedCharArray
INFO  02:57:12,355 - #45 ima
INFO  02:57:12,355 - #18 ;
INFO  02:57:12,355 - #45 PackedCharArray
INFO  02:57:12,355 - #45 nema
INFO  02:57:12,355 - #18 ;
INFO  02:57:12,355 - #6 enum
INFO  02:57:12,355 - #45 StringPicker
INFO  02:57:12,355 - #12 {
INFO  02:57:12,356 - #45 IMA
INFO  02:57:12,356 - #26 =
INFO  02:57:12,356 - #44 42
INFO  02:57:12,356 - #19 ,
INFO  02:57:12,356 - #45 NEMA
INFO  02:57:12,356 - #26 =
INFO  02:57:12,356 - #44 43
INFO  02:57:12,356 - #13 }
INFO  02:57:12,356 - #12 {
INFO  02:57:12,356 - #39 void
INFO  02:57:12,356 - #45 printstr
INFO  02:57:12,356 - #16 (
INFO  02:57:12,356 - #45 int
INFO  02:57:12,356 - #45 x
INFO  02:57:12,356 - #17 )
INFO  02:57:12,356 - #12 {
INFO  02:57:12,356 - #9 if
INFO  02:57:12,356 - #16 (
INFO  02:57:12,356 - #45 x
INFO  02:57:12,356 - #29 ==
INFO  02:57:12,356 - #44 42
INFO  02:57:12,356 - #35 &&
INFO  02:57:12,356 - #45 x
INFO  02:57:12,356 - #29 ==
INFO  02:57:12,356 - #45 StringPicker
INFO  02:57:12,356 - #20 .
INFO  02:57:12,356 - #45 IMA
INFO  02:57:12,356 - #17 )
INFO  02:57:12,356 - #45 util
INFO  02:57:12,356 - #20 .
INFO  02:57:12,356 - #45 printstr
INFO  02:57:12,356 - #16 (
INFO  02:57:12,356 - #45 ima
INFO  02:57:12,356 - #20 .
INFO  02:57:12,356 - #45 array
INFO  02:57:12,356 - #17 )
INFO  02:57:12,356 - #18 ;
INFO  02:57:12,356 - #9 if
INFO  02:57:12,356 - #16 (
INFO  02:57:12,356 - #45 x
INFO  02:57:12,356 - #29 ==
INFO  02:57:12,356 - #44 86
INFO  02:57:12,356 - #36 ||
INFO  02:57:12,356 - #45 x
INFO  02:57:12,356 - #29 ==
INFO  02:57:12,356 - #45 StringPicker
INFO  02:57:12,356 - #20 .
INFO  02:57:12,357 - #45 NEMA
INFO  02:57:12,357 - #17 )
INFO  02:57:12,357 - #45 util
INFO  02:57:12,357 - #20 .
INFO  02:57:12,357 - #45 printstr
INFO  02:57:12,357 - #16 (
INFO  02:57:12,357 - #45 nema
INFO  02:57:12,357 - #20 .
INFO  02:57:12,357 - #45 array
INFO  02:57:12,357 - #17 )
INFO  02:57:12,357 - #18 ;
INFO  02:57:12,357 - #13 }
INFO  02:57:12,357 - #39 void
INFO  02:57:12,357 - #45 printstrE
INFO  02:57:12,357 - #16 (
INFO  02:57:12,357 - #45 StringPicker
INFO  02:57:12,357 - #45 e
INFO  02:57:12,357 - #17 )
INFO  02:57:12,357 - #12 {
INFO  02:57:12,357 - #9 if
INFO  02:57:12,357 - #16 (
INFO  02:57:12,357 - #45 e
INFO  02:57:12,357 - #32 >=
INFO  02:57:12,357 - #44 42
INFO  02:57:12,357 - #35 &&
INFO  02:57:12,357 - #45 e
INFO  02:57:12,357 - #34 <=
INFO  02:57:12,357 - #44 43
INFO  02:57:12,357 - #17 )
INFO  02:57:12,357 - #45 printstr
INFO  02:57:12,357 - #16 (
INFO  02:57:12,357 - #45 e
INFO  02:57:12,357 - #17 )
INFO  02:57:12,357 - #18 ;
INFO  02:57:12,357 - #13 }
INFO  02:57:12,357 - #45 bool
INFO  02:57:12,357 - #45 find
INFO  02:57:12,357 - #16 (
INFO  02:57:12,357 - #45 Node
INFO  02:57:12,357 - #45 nd
INFO  02:57:12,357 - #19 ,
INFO  02:57:12,357 - #45 int
INFO  02:57:12,357 - #45 v
INFO  02:57:12,357 - #17 )
INFO  02:57:12,358 - #12 {
INFO  02:57:12,358 - #9 if
INFO  02:57:12,358 - #16 (
INFO  02:57:12,358 - #45 nd
INFO  02:57:12,358 - #30 !=
INFO  02:57:12,358 - #45 null
INFO  02:57:12,358 - #35 &&
INFO  02:57:12,358 - #45 nd
INFO  02:57:12,358 - #20 .
INFO  02:57:12,358 - #45 val
INFO  02:57:12,358 - #29 ==
INFO  02:57:12,358 - #45 v
INFO  02:57:12,358 - #17 )
INFO  02:57:12,358 - #38 return
INFO  02:57:12,358 - #47 true
INFO  02:57:12,358 - #18 ;
INFO  02:57:12,358 - #7 else
INFO  02:57:12,358 - #9 if
INFO  02:57:12,358 - #16 (
INFO  02:57:12,358 - #45 nd
INFO  02:57:12,358 - #30 !=
INFO  02:57:12,358 - #45 null
INFO  02:57:12,358 - #35 &&
INFO  02:57:12,358 - #45 nd
INFO  02:57:12,358 - #20 .
INFO  02:57:12,358 - #45 val
INFO  02:57:12,358 - #33 <
INFO  02:57:12,358 - #45 v
INFO  02:57:12,358 - #17 )
INFO  02:57:12,358 - #38 return
INFO  02:57:12,358 - #45 find
INFO  02:57:12,358 - #16 (
INFO  02:57:12,358 - #45 nd
INFO  02:57:12,358 - #20 .
INFO  02:57:12,358 - #45 right
INFO  02:57:12,358 - #19 ,
INFO  02:57:12,358 - #45 v
INFO  02:57:12,358 - #17 )
INFO  02:57:12,358 - #18 ;
INFO  02:57:12,358 - #7 else
INFO  02:57:12,358 - #9 if
INFO  02:57:12,358 - #16 (
INFO  02:57:12,358 - #45 nd
INFO  02:57:12,358 - #30 !=
INFO  02:57:12,358 - #45 null
INFO  02:57:12,358 - #35 &&
INFO  02:57:12,358 - #45 nd
INFO  02:57:12,358 - #20 .
INFO  02:57:12,358 - #45 val
INFO  02:57:12,358 - #31 >
INFO  02:57:12,358 - #45 v
INFO  02:57:12,358 - #17 )
INFO  02:57:12,358 - #12 {
INFO  02:57:12,358 - #38 return
INFO  02:57:12,358 - #45 find
INFO  02:57:12,358 - #16 (
INFO  02:57:12,359 - #45 nd
INFO  02:57:12,359 - #20 .
INFO  02:57:12,359 - #45 left
INFO  02:57:12,359 - #19 ,
INFO  02:57:12,359 - #45 v
INFO  02:57:12,359 - #17 )
INFO  02:57:12,359 - #18 ;
INFO  02:57:12,359 - #13 }
INFO  02:57:12,359 - #7 else
INFO  02:57:12,359 - #38 return
INFO  02:57:12,359 - #47 false
INFO  02:57:12,359 - #18 ;
INFO  02:57:12,359 - #13 }
INFO  02:57:12,359 - #45 PackedCharArray
INFO  02:57:12,359 - #45 getInitialMessage
INFO  02:57:12,359 - #16 (
INFO  02:57:12,359 - #17 )
INFO  02:57:12,359 - #45 PackedCharArray
INFO  02:57:12,359 - #45 pca
INFO  02:57:12,359 - #18 ;
INFO  02:57:12,359 - #45 char
INFO  02:57:12,359 - #45 chr
INFO  02:57:12,359 - #14 [
INFO  02:57:12,359 - #15 ]
INFO  02:57:12,359 - #18 ;
INFO  02:57:12,359 - #12 {
INFO  02:57:12,359 - #45 chr
INFO  02:57:12,359 - #26 =
INFO  02:57:12,359 - #10 new
INFO  02:57:12,359 - #45 char
INFO  02:57:12,359 - #14 [
INFO  02:57:12,359 - #44 80
INFO  02:57:12,359 - #15 ]
INFO  02:57:12,359 - #18 ;
INFO  02:57:12,359 - #45 chr
INFO  02:57:12,359 - #14 [
INFO  02:57:12,359 - #44 0
INFO  02:57:12,359 - #15 ]
INFO  02:57:12,359 - #26 =
INFO  02:57:12,359 - #46 U
INFO  02:57:12,359 - #18 ;
INFO  02:57:12,359 - #45 chr
INFO  02:57:12,359 - #14 [
INFO  02:57:12,359 - #44 1
INFO  02:57:12,359 - #15 ]
INFO  02:57:12,359 - #26 =
INFO  02:57:12,359 - #46 n
INFO  02:57:12,359 - #18 ;
INFO  02:57:12,359 - #45 chr
INFO  02:57:12,359 - #14 [
INFO  02:57:12,359 - #44 2
INFO  02:57:12,359 - #15 ]
INFO  02:57:12,359 - #26 =
INFO  02:57:12,359 - #46 e
INFO  02:57:12,359 - #18 ;
INFO  02:57:12,359 - #45 chr
INFO  02:57:12,360 - #14 [
INFO  02:57:12,360 - #44 3
INFO  02:57:12,360 - #15 ]
INFO  02:57:12,360 - #26 =
INFO  02:57:12,360 - #46 s
INFO  02:57:12,360 - #18 ;
INFO  02:57:12,360 - #45 chr
INFO  02:57:12,360 - #14 [
INFO  02:57:12,360 - #44 4
INFO  02:57:12,360 - #15 ]
INFO  02:57:12,360 - #26 =
INFO  02:57:12,360 - #46 i
INFO  02:57:12,360 - #18 ;
INFO  02:57:12,360 - #45 chr
INFO  02:57:12,360 - #14 [
INFO  02:57:12,360 - #44 5
INFO  02:57:12,360 - #15 ]
INFO  02:57:12,360 - #26 =
INFO  02:57:12,360 - #46 t
INFO  02:57:12,360 - #18 ;
INFO  02:57:12,360 - #45 chr
INFO  02:57:12,360 - #14 [
INFO  02:57:12,360 - #44 6
INFO  02:57:12,360 - #15 ]
INFO  02:57:12,360 - #26 =
INFO  02:57:12,360 - #46 e
INFO  02:57:12,360 - #18 ;
INFO  02:57:12,360 - #45 chr
INFO  02:57:12,360 - #14 [
INFO  02:57:12,360 - #44 7
INFO  02:57:12,360 - #15 ]
INFO  02:57:12,360 - #26 =
INFO  02:57:12,360 - #46  
INFO  02:57:12,360 - #18 ;
INFO  02:57:12,360 - #45 chr
INFO  02:57:12,360 - #14 [
INFO  02:57:12,360 - #44 8
INFO  02:57:12,360 - #15 ]
INFO  02:57:12,360 - #26 =
INFO  02:57:12,360 - #46 k
INFO  02:57:12,360 - #18 ;
INFO  02:57:12,360 - #45 chr
INFO  02:57:12,360 - #14 [
INFO  02:57:12,360 - #44 9
INFO  02:57:12,360 - #15 ]
INFO  02:57:12,360 - #26 =
INFO  02:57:12,360 - #46 o
INFO  02:57:12,360 - #18 ;
INFO  02:57:12,360 - #45 chr
INFO  02:57:12,360 - #14 [
INFO  02:57:12,360 - #44 10
INFO  02:57:12,360 - #15 ]
INFO  02:57:12,360 - #26 =
INFO  02:57:12,360 - #46 m
INFO  02:57:12,360 - #18 ;
INFO  02:57:12,360 - #45 chr
INFO  02:57:12,361 - #14 [
INFO  02:57:12,361 - #44 11
INFO  02:57:12,361 - #15 ]
INFO  02:57:12,361 - #26 =
INFO  02:57:12,361 - #46 a
INFO  02:57:12,361 - #18 ;
INFO  02:57:12,361 - #45 chr
INFO  02:57:12,361 - #14 [
INFO  02:57:12,361 - #44 12
INFO  02:57:12,361 - #15 ]
INFO  02:57:12,361 - #26 =
INFO  02:57:12,361 - #46 n
INFO  02:57:12,361 - #18 ;
INFO  02:57:12,361 - #45 chr
INFO  02:57:12,361 - #14 [
INFO  02:57:12,361 - #44 13
INFO  02:57:12,361 - #15 ]
INFO  02:57:12,361 - #26 =
INFO  02:57:12,361 - #46 d
INFO  02:57:12,361 - #18 ;
INFO  02:57:12,361 - #45 chr
INFO  02:57:12,361 - #14 [
INFO  02:57:12,361 - #44 14
INFO  02:57:12,361 - #15 ]
INFO  02:57:12,361 - #26 =
INFO  02:57:12,361 - #46 u
INFO  02:57:12,361 - #18 ;
INFO  02:57:12,361 - #45 chr
INFO  02:57:12,361 - #14 [
INFO  02:57:12,361 - #44 15
INFO  02:57:12,361 - #15 ]
INFO  02:57:12,361 - #26 =
INFO  02:57:12,362 - #46 :
INFO  02:57:12,362 - #18 ;
INFO  02:57:12,362 - #45 chr
INFO  02:57:12,362 - #14 [
INFO  02:57:12,362 - #44 16
INFO  02:57:12,362 - #15 ]
INFO  02:57:12,362 - #26 =
INFO  02:57:12,362 - #45 eol
INFO  02:57:12,362 - #18 ;
INFO  02:57:12,362 - #45 chr
INFO  02:57:12,362 - #14 [
INFO  02:57:12,362 - #44 17
INFO  02:57:12,362 - #15 ]
INFO  02:57:12,362 - #26 =
INFO  02:57:12,362 - #46 1
INFO  02:57:12,362 - #18 ;
INFO  02:57:12,362 - #45 chr
INFO  02:57:12,362 - #14 [
INFO  02:57:12,362 - #44 18
INFO  02:57:12,362 - #15 ]
INFO  02:57:12,362 - #26 =
INFO  02:57:12,362 - #46  
INFO  02:57:12,362 - #18 ;
INFO  02:57:12,362 - #45 chr
INFO  02:57:12,362 - #14 [
INFO  02:57:12,362 - #44 19
INFO  02:57:12,362 - #15 ]
INFO  02:57:12,362 - #26 =
INFO  02:57:12,362 - #46 X
INFO  02:57:12,362 - #18 ;
INFO  02:57:12,362 - #45 chr
INFO  02:57:12,363 - #14 [
INFO  02:57:12,363 - #44 20
INFO  02:57:12,363 - #15 ]
INFO  02:57:12,363 - #26 =
INFO  02:57:12,363 - #46  
INFO  02:57:12,363 - #18 ;
INFO  02:57:12,363 - #45 chr
INFO  02:57:12,363 - #14 [
INFO  02:57:12,363 - #44 21
INFO  02:57:12,363 - #15 ]
INFO  02:57:12,363 - #26 =
INFO  02:57:12,363 - #46 (
INFO  02:57:12,363 - #18 ;
INFO  02:57:12,363 - #45 chr
INFO  02:57:12,363 - #14 [
INFO  02:57:12,363 - #44 22
INFO  02:57:12,363 - #15 ]
INFO  02:57:12,363 - #26 =
INFO  02:57:12,363 - #46 u
INFO  02:57:12,363 - #18 ;
INFO  02:57:12,363 - #45 chr
INFO  02:57:12,363 - #14 [
INFO  02:57:12,363 - #44 23
INFO  02:57:12,363 - #15 ]
INFO  02:57:12,363 - #26 =
INFO  02:57:12,363 - #46 b
INFO  02:57:12,363 - #18 ;
INFO  02:57:12,363 - #45 chr
INFO  02:57:12,364 - #14 [
INFO  02:57:12,364 - #44 24
INFO  02:57:12,364 - #15 ]
INFO  02:57:12,364 - #26 =
INFO  02:57:12,364 - #46 a
INFO  02:57:12,364 - #18 ;
INFO  02:57:12,364 - #45 chr
INFO  02:57:12,364 - #14 [
INFO  02:57:12,364 - #44 25
INFO  02:57:12,364 - #15 ]
INFO  02:57:12,364 - #26 =
INFO  02:57:12,364 - #46 c
INFO  02:57:12,364 - #18 ;
INFO  02:57:12,364 - #45 chr
INFO  02:57:12,364 - #14 [
INFO  02:57:12,364 - #44 26
INFO  02:57:12,364 - #15 ]
INFO  02:57:12,364 - #26 =
INFO  02:57:12,364 - #46 i
INFO  02:57:12,364 - #18 ;
INFO  02:57:12,364 - #45 chr
INFO  02:57:12,364 - #14 [
INFO  02:57:12,364 - #44 27
INFO  02:57:12,364 - #15 ]
INFO  02:57:12,364 - #26 =
INFO  02:57:12,364 - #46 v
INFO  02:57:12,364 - #18 ;
INFO  02:57:12,364 - #45 chr
INFO  02:57:12,364 - #14 [
INFO  02:57:12,364 - #44 28
INFO  02:57:12,364 - #15 ]
INFO  02:57:12,364 - #26 =
INFO  02:57:12,365 - #46 a
INFO  02:57:12,365 - #18 ;
INFO  02:57:12,365 - #45 chr
INFO  02:57:12,365 - #14 [
INFO  02:57:12,365 - #44 29
INFO  02:57:12,365 - #15 ]
INFO  02:57:12,365 - #26 =
INFO  02:57:12,365 - #46 n
INFO  02:57:12,365 - #18 ;
INFO  02:57:12,365 - #45 chr
INFO  02:57:12,365 - #14 [
INFO  02:57:12,365 - #44 30
INFO  02:57:12,365 - #15 ]
INFO  02:57:12,365 - #26 =
INFO  02:57:12,365 - #46 j
INFO  02:57:12,365 - #18 ;
INFO  02:57:12,365 - #45 chr
INFO  02:57:12,365 - #14 [
INFO  02:57:12,365 - #44 31
INFO  02:57:12,365 - #15 ]
INFO  02:57:12,365 - #26 =
INFO  02:57:12,365 - #46 e
INFO  02:57:12,365 - #18 ;
INFO  02:57:12,365 - #45 chr
INFO  02:57:12,365 - #14 [
INFO  02:57:12,365 - #44 32
INFO  02:57:12,365 - #15 ]
INFO  02:57:12,365 - #26 =
INFO  02:57:12,365 - #46  
INFO  02:57:12,365 - #18 ;
INFO  02:57:12,365 - #45 chr
INFO  02:57:12,365 - #14 [
INFO  02:57:12,366 - #44 33
INFO  02:57:12,366 - #15 ]
INFO  02:57:12,366 - #26 =
INFO  02:57:12,366 - #46 e
INFO  02:57:12,366 - #18 ;
INFO  02:57:12,366 - #45 chr
INFO  02:57:12,366 - #14 [
INFO  02:57:12,366 - #44 34
INFO  02:57:12,366 - #15 ]
INFO  02:57:12,366 - #26 =
INFO  02:57:12,366 - #46 l
INFO  02:57:12,366 - #18 ;
INFO  02:57:12,366 - #45 chr
INFO  02:57:12,366 - #14 [
INFO  02:57:12,366 - #44 35
INFO  02:57:12,366 - #15 ]
INFO  02:57:12,366 - #26 =
INFO  02:57:12,366 - #46 e
INFO  02:57:12,366 - #18 ;
INFO  02:57:12,366 - #45 chr
INFO  02:57:12,366 - #14 [
INFO  02:57:12,366 - #44 36
INFO  02:57:12,366 - #15 ]
INFO  02:57:12,366 - #26 =
INFO  02:57:12,366 - #46 m
INFO  02:57:12,366 - #18 ;
INFO  02:57:12,366 - #45 chr
INFO  02:57:12,366 - #14 [
INFO  02:57:12,367 - #44 37
INFO  02:57:12,367 - #15 ]
INFO  02:57:12,367 - #26 =
INFO  02:57:12,367 - #46 e
INFO  02:57:12,367 - #18 ;
INFO  02:57:12,367 - #45 chr
INFO  02:57:12,367 - #14 [
INFO  02:57:12,367 - #44 38
INFO  02:57:12,367 - #15 ]
INFO  02:57:12,367 - #26 =
INFO  02:57:12,367 - #46 n
INFO  02:57:12,367 - #18 ;
INFO  02:57:12,367 - #45 chr
INFO  02:57:12,367 - #14 [
INFO  02:57:12,367 - #44 39
INFO  02:57:12,367 - #15 ]
INFO  02:57:12,367 - #26 =
INFO  02:57:12,367 - #46 t
INFO  02:57:12,367 - #18 ;
INFO  02:57:12,367 - #45 chr
INFO  02:57:12,367 - #14 [
INFO  02:57:12,367 - #44 40
INFO  02:57:12,367 - #15 ]
INFO  02:57:12,367 - #26 =
INFO  02:57:12,367 - #46 a
INFO  02:57:12,367 - #18 ;
INFO  02:57:12,367 - #45 chr
INFO  02:57:12,367 - #14 [
INFO  02:57:12,367 - #44 41
INFO  02:57:12,367 - #15 ]
INFO  02:57:12,367 - #26 =
INFO  02:57:12,367 - #46  
INFO  02:57:12,367 - #18 ;
INFO  02:57:12,367 - #45 chr
INFO  02:57:12,367 - #14 [
INFO  02:57:12,367 - #44 42
INFO  02:57:12,367 - #15 ]
INFO  02:57:12,367 - #26 =
INFO  02:57:12,367 - #46 X
INFO  02:57:12,368 - #18 ;
INFO  02:57:12,368 - #45 chr
INFO  02:57:12,368 - #14 [
INFO  02:57:12,368 - #44 43
INFO  02:57:12,368 - #15 ]
INFO  02:57:12,368 - #26 =
INFO  02:57:12,368 - #46  
INFO  02:57:12,368 - #18 ;
INFO  02:57:12,368 - #45 chr
INFO  02:57:12,368 - #14 [
INFO  02:57:12,368 - #44 44
INFO  02:57:12,368 - #15 ]
INFO  02:57:12,368 - #26 =
INFO  02:57:12,368 - #46 u
INFO  02:57:12,368 - #18 ;
INFO  02:57:12,368 - #45 chr
INFO  02:57:12,368 - #14 [
INFO  02:57:12,368 - #44 45
INFO  02:57:12,368 - #15 ]
INFO  02:57:12,368 - #26 =
INFO  02:57:12,368 - #46  
INFO  02:57:12,368 - #18 ;
INFO  02:57:12,368 - #45 chr
INFO  02:57:12,368 - #14 [
INFO  02:57:12,368 - #44 46
INFO  02:57:12,368 - #15 ]
INFO  02:57:12,368 - #26 =
INFO  02:57:12,368 - #46 s
INFO  02:57:12,368 - #18 ;
INFO  02:57:12,368 - #45 chr
INFO  02:57:12,368 - #14 [
INFO  02:57:12,368 - #44 47
INFO  02:57:12,368 - #15 ]
INFO  02:57:12,369 - #26 =
INFO  02:57:12,369 - #46 t
INFO  02:57:12,369 - #18 ;
INFO  02:57:12,369 - #45 chr
INFO  02:57:12,369 - #14 [
INFO  02:57:12,369 - #44 48
INFO  02:57:12,369 - #15 ]
INFO  02:57:12,369 - #26 =
INFO  02:57:12,369 - #46 a
INFO  02:57:12,369 - #18 ;
INFO  02:57:12,369 - #45 chr
INFO  02:57:12,369 - #14 [
INFO  02:57:12,369 - #44 49
INFO  02:57:12,369 - #15 ]
INFO  02:57:12,369 - #26 =
INFO  02:57:12,369 - #46 b
INFO  02:57:12,369 - #18 ;
INFO  02:57:12,369 - #45 chr
INFO  02:57:12,369 - #14 [
INFO  02:57:12,369 - #44 50
INFO  02:57:12,369 - #15 ]
INFO  02:57:12,369 - #26 =
INFO  02:57:12,369 - #46 l
INFO  02:57:12,369 - #18 ;
INFO  02:57:12,369 - #45 chr
INFO  02:57:12,369 - #14 [
INFO  02:57:12,369 - #44 51
INFO  02:57:12,369 - #15 ]
INFO  02:57:12,369 - #26 =
INFO  02:57:12,369 - #46 o
INFO  02:57:12,369 - #18 ;
INFO  02:57:12,370 - #45 chr
INFO  02:57:12,370 - #14 [
INFO  02:57:12,370 - #44 52
INFO  02:57:12,370 - #15 ]
INFO  02:57:12,370 - #26 =
INFO  02:57:12,370 - #46 )
INFO  02:57:12,370 - #18 ;
INFO  02:57:12,370 - #45 chr
INFO  02:57:12,370 - #14 [
INFO  02:57:12,370 - #44 53
INFO  02:57:12,370 - #15 ]
INFO  02:57:12,370 - #26 =
INFO  02:57:12,370 - #45 eol
INFO  02:57:12,370 - #18 ;
INFO  02:57:12,370 - #45 chr
INFO  02:57:12,370 - #14 [
INFO  02:57:12,370 - #44 54
INFO  02:57:12,370 - #15 ]
INFO  02:57:12,370 - #26 =
INFO  02:57:12,370 - #46 2
INFO  02:57:12,370 - #18 ;
INFO  02:57:12,370 - #45 chr
INFO  02:57:12,370 - #14 [
INFO  02:57:12,370 - #44 55
INFO  02:57:12,370 - #15 ]
INFO  02:57:12,370 - #26 =
INFO  02:57:12,370 - #46  
INFO  02:57:12,370 - #18 ;
INFO  02:57:12,370 - #45 chr
INFO  02:57:12,370 - #14 [
INFO  02:57:12,370 - #44 56
INFO  02:57:12,370 - #15 ]
INFO  02:57:12,370 - #26 =
INFO  02:57:12,370 - #46 X
INFO  02:57:12,370 - #18 ;
INFO  02:57:12,370 - #45 chr
INFO  02:57:12,370 - #14 [
INFO  02:57:12,370 - #44 57
INFO  02:57:12,370 - #15 ]
INFO  02:57:12,370 - #26 =
INFO  02:57:12,370 - #46  
INFO  02:57:12,370 - #18 ;
INFO  02:57:12,370 - #45 chr
INFO  02:57:12,370 - #14 [
INFO  02:57:12,371 - #44 58
INFO  02:57:12,371 - #15 ]
INFO  02:57:12,371 - #26 =
INFO  02:57:12,371 - #46 p
INFO  02:57:12,371 - #18 ;
INFO  02:57:12,371 - #45 chr
INFO  02:57:12,371 - #14 [
INFO  02:57:12,371 - #44 59
INFO  02:57:12,371 - #15 ]
INFO  02:57:12,371 - #26 =
INFO  02:57:12,371 - #46 r
INFO  02:57:12,371 - #18 ;
INFO  02:57:12,371 - #45 chr
INFO  02:57:12,371 - #14 [
INFO  02:57:12,371 - #44 60
INFO  02:57:12,371 - #15 ]
INFO  02:57:12,371 - #26 =
INFO  02:57:12,371 - #46 e
INFO  02:57:12,371 - #18 ;
INFO  02:57:12,371 - #45 chr
INFO  02:57:12,371 - #14 [
INFO  02:57:12,371 - #44 61
INFO  02:57:12,371 - #15 ]
INFO  02:57:12,371 - #26 =
INFO  02:57:12,371 - #46 t
INFO  02:57:12,371 - #18 ;
INFO  02:57:12,371 - #45 chr
INFO  02:57:12,371 - #14 [
INFO  02:57:12,371 - #44 62
INFO  02:57:12,371 - #15 ]
INFO  02:57:12,371 - #26 =
INFO  02:57:12,371 - #46 r
INFO  02:57:12,371 - #18 ;
INFO  02:57:12,371 - #45 chr
INFO  02:57:12,371 - #14 [
INFO  02:57:12,371 - #44 63
INFO  02:57:12,371 - #15 ]
INFO  02:57:12,371 - #26 =
INFO  02:57:12,371 - #46 a
INFO  02:57:12,371 - #18 ;
INFO  02:57:12,371 - #45 chr
INFO  02:57:12,371 - #14 [
INFO  02:57:12,371 - #44 64
INFO  02:57:12,371 - #15 ]
INFO  02:57:12,371 - #26 =
INFO  02:57:12,371 - #46 g
INFO  02:57:12,371 - #18 ;
INFO  02:57:12,371 - #45 chr
INFO  02:57:12,372 - #14 [
INFO  02:57:12,372 - #44 65
INFO  02:57:12,372 - #15 ]
INFO  02:57:12,372 - #26 =
INFO  02:57:12,372 - #46 a
INFO  02:57:12,372 - #18 ;
INFO  02:57:12,372 - #45 chr
INFO  02:57:12,372 - #14 [
INFO  02:57:12,372 - #44 66
INFO  02:57:12,372 - #15 ]
INFO  02:57:12,372 - #26 =
INFO  02:57:12,372 - #46  
INFO  02:57:12,372 - #18 ;
INFO  02:57:12,372 - #45 chr
INFO  02:57:12,372 - #14 [
INFO  02:57:12,372 - #44 67
INFO  02:57:12,372 - #15 ]
INFO  02:57:12,372 - #26 =
INFO  02:57:12,372 - #46 s
INFO  02:57:12,372 - #18 ;
INFO  02:57:12,372 - #45 chr
INFO  02:57:12,372 - #14 [
INFO  02:57:12,372 - #44 68
INFO  02:57:12,372 - #15 ]
INFO  02:57:12,372 - #26 =
INFO  02:57:12,372 - #46 t
INFO  02:57:12,372 - #18 ;
INFO  02:57:12,372 - #45 chr
INFO  02:57:12,372 - #14 [
INFO  02:57:12,372 - #44 69
INFO  02:57:12,372 - #15 ]
INFO  02:57:12,372 - #26 =
INFO  02:57:12,372 - #46 a
INFO  02:57:12,372 - #18 ;
INFO  02:57:12,372 - #45 chr
INFO  02:57:12,372 - #14 [
INFO  02:57:12,372 - #44 70
INFO  02:57:12,373 - #15 ]
INFO  02:57:12,373 - #26 =
INFO  02:57:12,373 - #46 b
INFO  02:57:12,373 - #18 ;
INFO  02:57:12,373 - #45 chr
INFO  02:57:12,373 - #14 [
INFO  02:57:12,373 - #44 71
INFO  02:57:12,373 - #15 ]
INFO  02:57:12,373 - #26 =
INFO  02:57:12,373 - #46 l
INFO  02:57:12,373 - #18 ;
INFO  02:57:12,373 - #45 chr
INFO  02:57:12,373 - #14 [
INFO  02:57:12,373 - #44 72
INFO  02:57:12,373 - #15 ]
INFO  02:57:12,373 - #26 =
INFO  02:57:12,373 - #46 a
INFO  02:57:12,373 - #18 ;
INFO  02:57:12,373 - #45 chr
INFO  02:57:12,373 - #14 [
INFO  02:57:12,373 - #44 73
INFO  02:57:12,373 - #15 ]
INFO  02:57:12,373 - #26 =
INFO  02:57:12,373 - #45 eol
INFO  02:57:12,373 - #18 ;
INFO  02:57:12,373 - #45 chr
INFO  02:57:12,373 - #14 [
INFO  02:57:12,373 - #44 74
INFO  02:57:12,373 - #15 ]
INFO  02:57:12,373 - #26 =
INFO  02:57:12,373 - #46 3
INFO  02:57:12,373 - #18 ;
INFO  02:57:12,373 - #45 chr
INFO  02:57:12,373 - #14 [
INFO  02:57:12,373 - #44 75
INFO  02:57:12,373 - #15 ]
INFO  02:57:12,373 - #26 =
INFO  02:57:12,373 - #46  
INFO  02:57:12,373 - #18 ;
INFO  02:57:12,373 - #45 chr
INFO  02:57:12,373 - #14 [
INFO  02:57:12,373 - #44 76
INFO  02:57:12,373 - #15 ]
INFO  02:57:12,373 - #26 =
INFO  02:57:12,373 - #46 K
INFO  02:57:12,373 - #18 ;
INFO  02:57:12,373 - #45 chr
INFO  02:57:12,373 - #14 [
INFO  02:57:12,373 - #44 77
INFO  02:57:12,373 - #15 ]
INFO  02:57:12,373 - #26 =
INFO  02:57:12,373 - #46 r
INFO  02:57:12,373 - #18 ;
INFO  02:57:12,373 - #45 chr
INFO  02:57:12,373 - #14 [
INFO  02:57:12,373 - #44 78
INFO  02:57:12,373 - #15 ]
INFO  02:57:12,373 - #26 =
INFO  02:57:12,373 - #46 a
INFO  02:57:12,373 - #18 ;
INFO  02:57:12,373 - #45 chr
INFO  02:57:12,373 - #14 [
INFO  02:57:12,373 - #44 79
INFO  02:57:12,373 - #15 ]
INFO  02:57:12,373 - #26 =
INFO  02:57:12,373 - #46 j
INFO  02:57:12,373 - #18 ;
INFO  02:57:12,373 - #45 pca
INFO  02:57:12,373 - #26 =
INFO  02:57:12,373 - #10 new
INFO  02:57:12,373 - #45 PackedCharArray
INFO  02:57:12,373 - #18 ;
INFO  02:57:12,373 - #45 pca
INFO  02:57:12,373 - #20 .
INFO  02:57:12,373 - #45 array
INFO  02:57:12,373 - #26 =
INFO  02:57:12,373 - #45 chr
INFO  02:57:12,373 - #18 ;
INFO  02:57:12,373 - #38 return
INFO  02:57:12,373 - #45 pca
INFO  02:57:12,373 - #18 ;
INFO  02:57:12,373 - #13 }
INFO  02:57:12,374 - #39 void
INFO  02:57:12,374 - #45 main
INFO  02:57:12,374 - #16 (
INFO  02:57:12,374 - #17 )
INFO  02:57:12,374 - #45 PackedCharArray
INFO  02:57:12,374 - #45 message
INFO  02:57:12,374 - #18 ;
INFO  02:57:12,374 - #45 Node
INFO  02:57:12,374 - #45 root
INFO  02:57:12,374 - #18 ;
INFO  02:57:12,374 - #45 int
INFO  02:57:12,374 - #45 c
INFO  02:57:12,374 - #19 ,
INFO  02:57:12,374 - #45 v
INFO  02:57:12,374 - #18 ;
INFO  02:57:12,374 - #12 {
INFO  02:57:12,374 - #45 util
INFO  02:57:12,374 - #26 =
INFO  02:57:12,374 - #10 new
INFO  02:57:12,374 - #45 Util2
INFO  02:57:12,374 - #18 ;
INFO  02:57:12,374 - #45 builder1
INFO  02:57:12,374 - #26 =
INFO  02:57:12,374 - #10 new
INFO  02:57:12,374 - #45 Util2
INFO  02:57:12,374 - #18 ;
INFO  02:57:12,374 - #45 builder2
INFO  02:57:12,374 - #26 =
INFO  02:57:12,374 - #10 new
INFO  02:57:12,374 - #45 Util2
INFO  02:57:12,374 - #18 ;
INFO  02:57:12,374 - #45 message
INFO  02:57:12,374 - #26 =
INFO  02:57:12,374 - #45 getInitialMessage
INFO  02:57:12,374 - #16 (
INFO  02:57:12,374 - #17 )
INFO  02:57:12,374 - #18 ;
INFO  02:57:12,374 - #45 ima
INFO  02:57:12,374 - #26 =
INFO  02:57:12,374 - #45 builder1
INFO  02:57:12,374 - #20 .
INFO  02:57:12,374 - #45 buildIma
INFO  02:57:12,374 - #16 (
INFO  02:57:12,374 - #17 )
INFO  02:57:12,374 - #18 ;
INFO  02:57:12,374 - #45 nema
INFO  02:57:12,374 - #26 =
INFO  02:57:12,374 - #45 builder2
INFO  02:57:12,374 - #20 .
INFO  02:57:12,375 - #45 buildNema
INFO  02:57:12,375 - #16 (
INFO  02:57:12,375 - #17 )
INFO  02:57:12,375 - #18 ;
INFO  02:57:12,375 - #45 util
INFO  02:57:12,375 - #20 .
INFO  02:57:12,375 - #45 printstr
INFO  02:57:12,375 - #16 (
INFO  02:57:12,375 - #45 message
INFO  02:57:12,375 - #20 .
INFO  02:57:12,375 - #45 array
INFO  02:57:12,375 - #17 )
INFO  02:57:12,375 - #18 ;
INFO  02:57:12,375 - #45 root
INFO  02:57:12,375 - #26 =
INFO  02:57:12,375 - #45 null
INFO  02:57:12,375 - #18 ;
INFO  02:57:12,375 - #37 read
INFO  02:57:12,375 - #16 (
INFO  02:57:12,375 - #45 c
INFO  02:57:12,375 - #17 )
INFO  02:57:12,375 - #18 ;
INFO  02:57:12,375 - #40 for
INFO  02:57:12,375 - #16 (
INFO  02:57:12,375 - #18 ;
INFO  02:57:12,375 - #45 c
INFO  02:57:12,375 - #30 !=
INFO  02:57:12,375 - #44 3
INFO  02:57:12,375 - #18 ;
INFO  02:57:12,375 - #17 )
INFO  02:57:12,375 - #12 {
INFO  02:57:12,375 - #9 if
INFO  02:57:12,375 - #16 (
INFO  02:57:12,375 - #45 c
INFO  02:57:12,375 - #29 ==
INFO  02:57:12,375 - #44 1
INFO  02:57:12,375 - #17 )
INFO  02:57:12,375 - #12 {
INFO  02:57:12,375 - #37 read
INFO  02:57:12,375 - #16 (
INFO  02:57:12,375 - #45 v
INFO  02:57:12,375 - #17 )
INFO  02:57:12,375 - #18 ;
INFO  02:57:12,375 - #9 if
INFO  02:57:12,375 - #16 (
INFO  02:57:12,375 - #45 root
INFO  02:57:12,375 - #29 ==
INFO  02:57:12,376 - #45 null
INFO  02:57:12,376 - #17 )
INFO  02:57:12,376 - #12 {
INFO  02:57:12,376 - #45 root
INFO  02:57:12,376 - #26 =
INFO  02:57:12,376 - #10 new
INFO  02:57:12,376 - #45 Node
INFO  02:57:12,376 - #18 ;
INFO  02:57:12,376 - #45 root
INFO  02:57:12,376 - #20 .
INFO  02:57:12,376 - #45 val
INFO  02:57:12,376 - #26 =
INFO  02:57:12,376 - #45 v
INFO  02:57:12,376 - #18 ;
INFO  02:57:12,376 - #13 }
INFO  02:57:12,376 - #7 else
INFO  02:57:12,376 - #12 {
INFO  02:57:12,376 - #45 root
INFO  02:57:12,376 - #20 .
INFO  02:57:12,376 - #45 insrt
INFO  02:57:12,376 - #16 (
INFO  02:57:12,376 - #45 v
INFO  02:57:12,376 - #17 )
INFO  02:57:12,376 - #18 ;
INFO  02:57:12,376 - #13 }
INFO  02:57:12,376 - #13 }
INFO  02:57:12,376 - #7 else
INFO  02:57:12,376 - #9 if
INFO  02:57:12,376 - #16 (
INFO  02:57:12,376 - #45 c
INFO  02:57:12,376 - #29 ==
INFO  02:57:12,376 - #44 2
INFO  02:57:12,376 - #17 )
INFO  02:57:12,376 - #12 {
INFO  02:57:12,376 - #37 read
INFO  02:57:12,376 - #16 (
INFO  02:57:12,376 - #45 v
INFO  02:57:12,376 - #17 )
INFO  02:57:12,376 - #18 ;
INFO  02:57:12,376 - #9 if
INFO  02:57:12,376 - #16 (
INFO  02:57:12,376 - #45 find
INFO  02:57:12,376 - #16 (
INFO  02:57:12,376 - #45 root
INFO  02:57:12,376 - #19 ,
INFO  02:57:12,376 - #45 v
INFO  02:57:12,376 - #17 )
INFO  02:57:12,376 - #17 )
INFO  02:57:12,376 - #12 {
INFO  02:57:12,376 - #45 printstrE
INFO  02:57:12,376 - #16 (
INFO  02:57:12,376 - #45 StringPicker
INFO  02:57:12,376 - #20 .
INFO  02:57:12,376 - #45 IMA
INFO  02:57:12,376 - #17 )
INFO  02:57:12,376 - #18 ;
INFO  02:57:12,376 - #13 }
INFO  02:57:12,376 - #7 else
INFO  02:57:12,376 - #45 printstr
INFO  02:57:12,376 - #16 (
INFO  02:57:12,376 - #45 StringPicker
INFO  02:57:12,376 - #20 .
INFO  02:57:12,376 - #45 NEMA
INFO  02:57:12,376 - #17 )
INFO  02:57:12,376 - #18 ;
INFO  02:57:12,376 - #13 }
INFO  02:57:12,376 - #37 read
INFO  02:57:12,376 - #16 (
INFO  02:57:12,376 - #45 c
INFO  02:57:12,376 - #17 )
INFO  02:57:12,376 - #18 ;
INFO  02:57:12,376 - #13 }
INFO  02:57:12,376 - #13 }
INFO  02:57:12,376 - #13 }
ERROR 02:57:12,376 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 328
