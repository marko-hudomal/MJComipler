INFO  21:15:09,045 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  21:15:09,054 - #2 program
INFO  21:15:09,054 - #45 P
INFO  21:15:09,054 - #8 const
INFO  21:15:09,054 - #45 int
INFO  21:15:09,054 - #45 size
INFO  21:15:09,054 - #26 =
INFO  21:15:09,055 - #44 10
INFO  21:15:09,055 - #18 ;
INFO  21:15:09,055 - #45 int
INFO  21:15:09,055 - #45 a
INFO  21:15:09,055 - #19 ,
INFO  21:15:09,055 - #45 b
INFO  21:15:09,055 - #19 ,
INFO  21:15:09,055 - #45 d
INFO  21:15:09,055 - #18 ;
INFO  21:15:09,055 - #6 enum
INFO  21:15:09,055 - #45 Num
INFO  21:15:09,055 - #12 {
INFO  21:15:09,055 - #45 ZERO
INFO  21:15:09,055 - #19 ,
INFO  21:15:09,055 - #45 ONE
INFO  21:15:09,055 - #19 ,
INFO  21:15:09,056 - #45 TEN
INFO  21:15:09,056 - #26 =
INFO  21:15:09,056 - #44 10
INFO  21:15:09,056 - #13 }
INFO  21:15:09,056 - #5 interface
INFO  21:15:09,056 - #45 I
INFO  21:15:09,056 - #12 {
INFO  21:15:09,056 - #45 int
INFO  21:15:09,056 - #45 getp
INFO  21:15:09,056 - #16 (
INFO  21:15:09,056 - #45 int
INFO  21:15:09,056 - #45 i
INFO  21:15:09,056 - #17 )
INFO  21:15:09,056 - #18 ;
INFO  21:15:09,056 - #45 int
INFO  21:15:09,056 - #45 getn
INFO  21:15:09,056 - #16 (
INFO  21:15:09,056 - #45 int
INFO  21:15:09,056 - #45 i
INFO  21:15:09,056 - #17 )
INFO  21:15:09,056 - #18 ;
INFO  21:15:09,056 - #13 }
INFO  21:15:09,056 - #4 class
INFO  21:15:09,056 - #45 Table
INFO  21:15:09,056 - #42 implements
INFO  21:15:09,056 - #45 I
INFO  21:15:09,056 - #12 {
INFO  21:15:09,056 - #45 int
INFO  21:15:09,057 - #45 pos
INFO  21:15:09,057 - #14 [
INFO  21:15:09,057 - #15 ]
INFO  21:15:09,057 - #19 ,
INFO  21:15:09,057 - #45 neg
INFO  21:15:09,057 - #14 [
INFO  21:15:09,057 - #15 ]
INFO  21:15:09,057 - #18 ;
INFO  21:15:09,057 - #12 {
INFO  21:15:09,057 - #39 void
INFO  21:15:09,057 - #45 putp
INFO  21:15:09,057 - #16 (
INFO  21:15:09,057 - #45 int
INFO  21:15:09,057 - #45 a
INFO  21:15:09,057 - #19 ,
INFO  21:15:09,057 - #45 int
INFO  21:15:09,057 - #45 idx
INFO  21:15:09,057 - #17 )
INFO  21:15:09,057 - #12 {
INFO  21:15:09,057 - #45 this
INFO  21:15:09,057 - #20 .
INFO  21:15:09,057 - #45 pos
INFO  21:15:09,057 - #14 [
INFO  21:15:09,057 - #45 idx
INFO  21:15:09,057 - #15 ]
INFO  21:15:09,057 - #26 =
INFO  21:15:09,057 - #45 a
INFO  21:15:09,057 - #18 ;
INFO  21:15:09,058 - #13 }
INFO  21:15:09,058 - #39 void
INFO  21:15:09,058 - #45 putn
INFO  21:15:09,058 - #16 (
INFO  21:15:09,058 - #45 int
INFO  21:15:09,058 - #45 a
INFO  21:15:09,058 - #19 ,
INFO  21:15:09,058 - #45 int
INFO  21:15:09,058 - #45 idx
INFO  21:15:09,058 - #17 )
INFO  21:15:09,058 - #12 {
INFO  21:15:09,058 - #45 this
INFO  21:15:09,058 - #20 .
INFO  21:15:09,058 - #45 neg
INFO  21:15:09,058 - #14 [
INFO  21:15:09,058 - #45 idx
INFO  21:15:09,058 - #15 ]
INFO  21:15:09,058 - #26 =
INFO  21:15:09,058 - #45 a
INFO  21:15:09,058 - #18 ;
INFO  21:15:09,058 - #13 }
INFO  21:15:09,058 - #45 int
INFO  21:15:09,058 - #45 getp
INFO  21:15:09,058 - #16 (
INFO  21:15:09,058 - #45 int
INFO  21:15:09,058 - #45 idx
INFO  21:15:09,058 - #17 )
INFO  21:15:09,058 - #12 {
INFO  21:15:09,058 - #38 return
INFO  21:15:09,058 - #45 pos
INFO  21:15:09,059 - #14 [
INFO  21:15:09,059 - #45 idx
INFO  21:15:09,059 - #15 ]
INFO  21:15:09,059 - #18 ;
INFO  21:15:09,059 - #13 }
INFO  21:15:09,059 - #45 int
INFO  21:15:09,059 - #45 getn
INFO  21:15:09,059 - #16 (
INFO  21:15:09,059 - #45 int
INFO  21:15:09,059 - #45 idx
INFO  21:15:09,059 - #17 )
INFO  21:15:09,059 - #12 {
INFO  21:15:09,059 - #38 return
INFO  21:15:09,059 - #45 neg
INFO  21:15:09,059 - #14 [
INFO  21:15:09,059 - #45 idx
INFO  21:15:09,059 - #15 ]
INFO  21:15:09,059 - #18 ;
INFO  21:15:09,059 - #13 }
INFO  21:15:09,059 - #13 }
INFO  21:15:09,059 - #13 }
INFO  21:15:09,059 - #45 Table
INFO  21:15:09,059 - #45 val
INFO  21:15:09,059 - #18 ;
INFO  21:15:09,059 - #45 int
INFO  21:15:09,059 - #45 a
INFO  21:15:09,059 - #19 ,
INFO  21:15:09,059 - #45 b
INFO  21:15:09,060 - #19 ,
INFO  21:15:09,060 - #45 c
INFO  21:15:09,060 - #18 ;
INFO  21:15:09,060 - #12 {
INFO  21:15:09,060 - #39 void
INFO  21:15:09,060 - #45 f
INFO  21:15:09,060 - #16 (
INFO  21:15:09,060 - #45 char
INFO  21:15:09,060 - #45 ch
INFO  21:15:09,060 - #19 ,
INFO  21:15:09,060 - #45 int
INFO  21:15:09,060 - #45 a
INFO  21:15:09,060 - #19 ,
INFO  21:15:09,060 - #45 int
INFO  21:15:09,060 - #45 arg
INFO  21:15:09,060 - #17 )
INFO  21:15:09,060 - #45 int
INFO  21:15:09,060 - #45 x
INFO  21:15:09,060 - #18 ;
INFO  21:15:09,060 - #12 {
INFO  21:15:09,060 - #45 x
INFO  21:15:09,060 - #26 =
INFO  21:15:09,060 - #44 5
INFO  21:15:09,060 - #18 ;
INFO  21:15:09,060 - #13 }
INFO  21:15:09,060 - #39 void
INFO  21:15:09,060 - #45 main
INFO  21:15:09,060 - #16 (
INFO  21:15:09,060 - #17 )
INFO  21:15:09,060 - #45 int
INFO  21:15:09,060 - #45 x
INFO  21:15:09,060 - #19 ,
INFO  21:15:09,060 - #45 i
INFO  21:15:09,060 - #18 ;
INFO  21:15:09,060 - #45 char
INFO  21:15:09,060 - #45 c
INFO  21:15:09,060 - #18 ;
INFO  21:15:09,060 - #12 {
INFO  21:15:09,061 - #45 val
INFO  21:15:09,061 - #26 =
INFO  21:15:09,061 - #10 new
INFO  21:15:09,061 - #45 Table
INFO  21:15:09,061 - #18 ;
INFO  21:15:09,061 - #45 val
INFO  21:15:09,061 - #20 .
INFO  21:15:09,061 - #45 pos
INFO  21:15:09,061 - #26 =
INFO  21:15:09,061 - #10 new
INFO  21:15:09,061 - #45 int
INFO  21:15:09,061 - #14 [
INFO  21:15:09,061 - #45 size
INFO  21:15:09,061 - #15 ]
INFO  21:15:09,061 - #18 ;
INFO  21:15:09,061 - #45 val
INFO  21:15:09,061 - #20 .
INFO  21:15:09,061 - #45 neg
INFO  21:15:09,061 - #26 =
INFO  21:15:09,061 - #10 new
INFO  21:15:09,061 - #45 int
INFO  21:15:09,061 - #14 [
INFO  21:15:09,062 - #45 size
INFO  21:15:09,062 - #15 ]
INFO  21:15:09,062 - #18 ;
INFO  21:15:09,062 - #40 for
INFO  21:15:09,062 - #16 (
INFO  21:15:09,062 - #45 i
INFO  21:15:09,062 - #26 =
INFO  21:15:09,062 - #44 0
INFO  21:15:09,063 - #18 ;
INFO  21:15:09,063 - #45 i
INFO  21:15:09,063 - #33 <
INFO  21:15:09,063 - #45 size
INFO  21:15:09,063 - #18 ;
INFO  21:15:09,063 - #45 i
INFO  21:15:09,063 - #27 ++
INFO  21:15:09,063 - #17 )
INFO  21:15:09,063 - #12 {
INFO  21:15:09,063 - #45 val
INFO  21:15:09,063 - #20 .
INFO  21:15:09,063 - #45 putp
INFO  21:15:09,063 - #16 (
INFO  21:15:09,063 - #44 0
INFO  21:15:09,063 - #19 ,
INFO  21:15:09,063 - #45 i
INFO  21:15:09,063 - #17 )
INFO  21:15:09,063 - #18 ;
INFO  21:15:09,063 - #45 val
INFO  21:15:09,063 - #20 .
INFO  21:15:09,063 - #45 putn
INFO  21:15:09,063 - #16 (
INFO  21:15:09,063 - #44 0
INFO  21:15:09,063 - #19 ,
INFO  21:15:09,063 - #45 i
INFO  21:15:09,063 - #17 )
INFO  21:15:09,063 - #18 ;
INFO  21:15:09,063 - #13 }
INFO  21:15:09,063 - #45 f
INFO  21:15:09,063 - #16 (
INFO  21:15:09,063 - #45 c
INFO  21:15:09,063 - #19 ,
INFO  21:15:09,063 - #45 x
INFO  21:15:09,063 - #19 ,
INFO  21:15:09,063 - #45 i
INFO  21:15:09,063 - #17 )
INFO  21:15:09,063 - #18 ;
INFO  21:15:09,064 - #37 read
INFO  21:15:09,064 - #16 (
INFO  21:15:09,064 - #45 x
INFO  21:15:09,064 - #17 )
INFO  21:15:09,064 - #18 ;
INFO  21:15:09,064 - #40 for
INFO  21:15:09,064 - #16 (
INFO  21:15:09,064 - #18 ;
INFO  21:15:09,064 - #45 x
INFO  21:15:09,064 - #31 >
INFO  21:15:09,064 - #44 0
INFO  21:15:09,064 - #18 ;
INFO  21:15:09,064 - #17 )
INFO  21:15:09,064 - #12 {
INFO  21:15:09,064 - #9 if
INFO  21:15:09,064 - #16 (
INFO  21:15:09,064 - #45 Num
INFO  21:15:09,064 - #20 .
INFO  21:15:09,064 - #45 ZERO
INFO  21:15:09,064 - #34 <=
INFO  21:15:09,064 - #45 x
INFO  21:15:09,064 - #35 &&
INFO  21:15:09,064 - #45 x
INFO  21:15:09,064 - #33 <
INFO  21:15:09,064 - #45 size
INFO  21:15:09,064 - #17 )
INFO  21:15:09,064 - #12 {
INFO  21:15:09,064 - #45 val
INFO  21:15:09,064 - #20 .
INFO  21:15:09,064 - #45 putp
INFO  21:15:09,064 - #16 (
INFO  21:15:09,064 - #45 val
INFO  21:15:09,064 - #20 .
INFO  21:15:09,064 - #45 getp
INFO  21:15:09,065 - #16 (
INFO  21:15:09,065 - #45 x
INFO  21:15:09,065 - #17 )
INFO  21:15:09,065 - #21 +
INFO  21:15:09,065 - #45 Num
INFO  21:15:09,065 - #20 .
INFO  21:15:09,065 - #45 ONE
INFO  21:15:09,065 - #17 )
INFO  21:15:09,065 - #18 ;
INFO  21:15:09,065 - #13 }
INFO  21:15:09,065 - #7 else
INFO  21:15:09,065 - #9 if
INFO  21:15:09,065 - #16 (
INFO  21:15:09,065 - #22 -
INFO  21:15:09,065 - #45 size
INFO  21:15:09,065 - #33 <
INFO  21:15:09,065 - #45 x
INFO  21:15:09,065 - #35 &&
INFO  21:15:09,065 - #45 x
INFO  21:15:09,065 - #33 <
INFO  21:15:09,065 - #44 0
INFO  21:15:09,065 - #17 )
INFO  21:15:09,065 - #12 {
INFO  21:15:09,065 - #45 val
INFO  21:15:09,065 - #20 .
INFO  21:15:09,065 - #45 putn
INFO  21:15:09,065 - #16 (
INFO  21:15:09,065 - #45 val
INFO  21:15:09,065 - #20 .
INFO  21:15:09,065 - #45 getn
INFO  21:15:09,065 - #16 (
INFO  21:15:09,065 - #22 -
INFO  21:15:09,065 - #45 x
INFO  21:15:09,065 - #17 )
INFO  21:15:09,065 - #21 +
INFO  21:15:09,065 - #44 1
INFO  21:15:09,065 - #17 )
INFO  21:15:09,065 - #18 ;
INFO  21:15:09,065 - #13 }
INFO  21:15:09,065 - #37 read
INFO  21:15:09,065 - #16 (
INFO  21:15:09,065 - #45 x
INFO  21:15:09,065 - #17 )
INFO  21:15:09,065 - #18 ;
INFO  21:15:09,066 - #13 }
INFO  21:15:09,066 - #13 }
INFO  21:15:09,066 - #13 }
INFO  21:15:09,066 - --EOF.
