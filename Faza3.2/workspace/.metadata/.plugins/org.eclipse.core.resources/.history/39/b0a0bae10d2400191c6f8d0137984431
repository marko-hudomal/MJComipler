INFO  01:51:32,237 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  01:51:32,267 - #2 program
INFO  01:51:32,267 - #45 MojProgram
INFO  01:51:32,267 - #8 const
INFO  01:51:32,268 - #45 int
INFO  01:51:32,268 - #45 test_konstanta
INFO  01:51:32,268 - #26 =
INFO  01:51:32,268 - #44 0
INFO  01:51:32,268 - #18 ;
INFO  01:51:32,268 - #4 class
INFO  01:51:32,268 - #45 Klasa
INFO  01:51:32,268 - #12 {
INFO  01:51:32,269 - #45 char
INFO  01:51:32,269 - #45 prom
INFO  01:51:32,269 - #19 ,
INFO  01:51:32,269 - #45 array
INFO  01:51:32,269 - #14 [
INFO  01:51:32,269 - #15 ]
INFO  01:51:32,270 - #19 ,
INFO  01:51:32,270 - #45 x
INFO  01:51:32,270 - #18 ;
INFO  01:51:32,270 - #45 char
INFO  01:51:32,270 - #45 m
INFO  01:51:32,270 - #18 ;
INFO  01:51:32,270 - #45 bool
INFO  01:51:32,271 - #45 a
INFO  01:51:32,271 - #19 ,
INFO  01:51:32,271 - #45 b
INFO  01:51:32,271 - #18 ;
INFO  01:51:32,271 - #45 Klasa2
INFO  01:51:32,271 - #45 k2
INFO  01:51:32,271 - #18 ;
INFO  01:51:32,271 - #12 {
INFO  01:51:32,271 - #45 char
INFO  01:51:32,271 - #45 funkc
INFO  01:51:32,271 - #16 (
INFO  01:51:32,271 - #45 bool
INFO  01:51:32,271 - #45 b
INFO  01:51:32,271 - #19 ,
INFO  01:51:32,272 - #45 char
INFO  01:51:32,272 - #45 o
INFO  01:51:32,272 - #17 )
INFO  01:51:32,272 - #45 int
INFO  01:51:32,272 - #45 prom_x
INFO  01:51:32,272 - #18 ;
INFO  01:51:32,272 - #45 char
INFO  01:51:32,272 - #45 prom_c1
INFO  01:51:32,272 - #19 ,
INFO  01:51:32,272 - #45 prom_c2
INFO  01:51:32,272 - #18 ;
INFO  01:51:32,272 - #12 {
INFO  01:51:32,272 - #45 prom_x
INFO  01:51:32,273 - #26 =
INFO  01:51:32,273 - #44 1
INFO  01:51:32,274 - #18 ;
INFO  01:51:32,274 - #45 prom_c1
INFO  01:51:32,274 - #26 =
INFO  01:51:32,274 - #46 A
INFO  01:51:32,274 - #21 +
INFO  01:51:32,275 - #44 5
INFO  01:51:32,275 - #18 ;
INFO  01:51:32,275 - #45 prom_c2
INFO  01:51:32,275 - #26 =
INFO  01:51:32,275 - #10 new
INFO  01:51:32,275 - #45 Klasa2
INFO  01:51:32,275 - #18 ;
INFO  01:51:32,276 - #38 return
INFO  01:51:32,276 - #22 -
INFO  01:51:32,276 - #45 metoda1_x
INFO  01:51:32,276 - #23 *
INFO  01:51:32,276 - #45 funkc
INFO  01:51:32,277 - #16 (
INFO  01:51:32,277 - #47 true
INFO  01:51:32,277 - #17 )
INFO  01:51:32,277 - #18 ;
INFO  01:51:32,278 - #13 }
INFO  01:51:32,278 - #39 void
INFO  01:51:32,278 - #45 funkc2
INFO  01:51:32,278 - #16 (
INFO  01:51:32,278 - #17 )
INFO  01:51:32,279 - #12 {
INFO  01:51:32,279 - #45 this
INFO  01:51:32,279 - #20 .
INFO  01:51:32,279 - #45 a
INFO  01:51:32,279 - #26 =
INFO  01:51:32,279 - #47 false
INFO  01:51:32,279 - #18 ;
INFO  01:51:32,279 - #9 if
INFO  01:51:32,279 - #16 (
INFO  01:51:32,279 - #45 this
INFO  01:51:32,279 - #20 .
INFO  01:51:32,279 - #45 a
INFO  01:51:32,279 - #29 ==
INFO  01:51:32,279 - #45 this
INFO  01:51:32,280 - #20 .
INFO  01:51:32,280 - #45 b
INFO  01:51:32,280 - #17 )
INFO  01:51:32,280 - #37 read
INFO  01:51:32,280 - #16 (
INFO  01:51:32,280 - #45 this
INFO  01:51:32,280 - #20 .
INFO  01:51:32,281 - #45 k2
INFO  01:51:32,281 - #20 .
INFO  01:51:32,281 - #45 a
INFO  01:51:32,281 - #14 [
INFO  01:51:32,281 - #44 0
INFO  01:51:32,281 - #15 ]
INFO  01:51:32,281 - #17 )
INFO  01:51:32,281 - #18 ;
INFO  01:51:32,281 - #7 else
INFO  01:51:32,281 - #12 {
INFO  01:51:32,281 - #9 if
INFO  01:51:32,281 - #16 (
INFO  01:51:32,281 - #47 true
INFO  01:51:32,281 - #17 )
INFO  01:51:32,281 - #12 {
INFO  01:51:32,281 - #3 break
INFO  01:51:32,281 - #18 ;
INFO  01:51:32,282 - #43 continue
INFO  01:51:32,282 - #18 ;
INFO  01:51:32,282 - #9 if
INFO  01:51:32,282 - #16 (
INFO  01:51:32,282 - #45 prom_x
INFO  01:51:32,282 - #36 ||
INFO  01:51:32,282 - #45 prom_c1
INFO  01:51:32,282 - #31 >
INFO  01:51:32,282 - #46 A
INFO  01:51:32,283 - #17 )
INFO  01:51:32,283 - #9 if
INFO  01:51:32,283 - #16 (
INFO  01:51:32,283 - #44 1
INFO  01:51:32,283 - #33 <
INFO  01:51:32,283 - #44 2
INFO  01:51:32,284 - #17 )
INFO  01:51:32,285 - #12 {
INFO  01:51:32,285 - #45 prom_x
INFO  01:51:32,285 - #26 =
INFO  01:51:32,285 - #44 15
INFO  01:51:32,285 - #18 ;
INFO  01:51:32,285 - #40 for
INFO  01:51:32,285 - #16 (
INFO  01:51:32,285 - #18 ;
INFO  01:51:32,285 - #18 ;
INFO  01:51:32,285 - #17 )
INFO  01:51:32,285 - #11 print
INFO  01:51:32,285 - #16 (
INFO  01:51:32,286 - #46 i
INFO  01:51:32,286 - #19 ,
INFO  01:51:32,286 - #44 2
INFO  01:51:32,286 - #17 )
INFO  01:51:32,286 - #18 ;
INFO  01:51:32,286 - #13 }
INFO  01:51:32,286 - #13 }
INFO  01:51:32,286 - #13 }
INFO  01:51:32,286 - #40 for
INFO  01:51:32,286 - #16 (
INFO  01:51:32,286 - #45 this
INFO  01:51:32,286 - #20 .
INFO  01:51:32,286 - #45 k2
INFO  01:51:32,286 - #20 .
INFO  01:51:32,286 - #45 a
INFO  01:51:32,286 - #14 [
INFO  01:51:32,287 - #44 0
INFO  01:51:32,287 - #21 +
INFO  01:51:32,287 - #44 0
INFO  01:51:32,287 - #15 ]
INFO  01:51:32,287 - #26 =
INFO  01:51:32,287 - #44 0
INFO  01:51:32,287 - #18 ;
INFO  01:51:32,287 - #45 this
INFO  01:51:32,287 - #20 .
INFO  01:51:32,287 - #45 k2
INFO  01:51:32,287 - #20 .
INFO  01:51:32,287 - #45 a
INFO  01:51:32,287 - #14 [
INFO  01:51:32,287 - #44 0
INFO  01:51:32,287 - #21 +
INFO  01:51:32,287 - #44 0
INFO  01:51:32,287 - #15 ]
INFO  01:51:32,287 - #33 <
INFO  01:51:32,287 - #44 2
INFO  01:51:32,287 - #18 ;
INFO  01:51:32,287 - #45 this
INFO  01:51:32,287 - #20 .
INFO  01:51:32,287 - #45 k2
INFO  01:51:32,287 - #20 .
INFO  01:51:32,287 - #45 a
INFO  01:51:32,287 - #14 [
INFO  01:51:32,287 - #44 0
INFO  01:51:32,287 - #21 +
INFO  01:51:32,287 - #44 0
INFO  01:51:32,287 - #21 +
INFO  01:51:32,288 - #10 new
INFO  01:51:32,288 - #45 Klasa2
INFO  01:51:32,288 - #14 [
INFO  01:51:32,288 - #44 2
INFO  01:51:32,288 - #23 *
INFO  01:51:32,288 - #44 5
INFO  01:51:32,288 - #25 %
INFO  01:51:32,288 - #44 2
INFO  01:51:32,288 - #15 ]
INFO  01:51:32,288 - #15 ]
INFO  01:51:32,288 - #27 ++
INFO  01:51:32,288 - #17 )
INFO  01:51:32,288 - #12 {
INFO  01:51:32,288 - #3 break
INFO  01:51:32,288 - #18 ;
INFO  01:51:32,288 - #43 continue
INFO  01:51:32,288 - #18 ;
INFO  01:51:32,288 - #9 if
INFO  01:51:32,288 - #16 (
INFO  01:51:32,288 - #45 this
INFO  01:51:32,288 - #20 .
INFO  01:51:32,288 - #45 k2
INFO  01:51:32,288 - #20 .
INFO  01:51:32,288 - #45 a
INFO  01:51:32,288 - #14 [
INFO  01:51:32,289 - #44 1
INFO  01:51:32,289 - #15 ]
INFO  01:51:32,289 - #21 +
INFO  01:51:32,289 - #45 funkc
INFO  01:51:32,289 - #16 (
INFO  01:51:32,289 - #47 true
INFO  01:51:32,289 - #17 )
INFO  01:51:32,289 - #31 >
INFO  01:51:32,289 - #44 2
INFO  01:51:32,289 - #17 )
INFO  01:51:32,289 - #37 read
INFO  01:51:32,289 - #16 (
INFO  01:51:32,289 - #45 this
INFO  01:51:32,289 - #20 .
INFO  01:51:32,289 - #45 k2
INFO  01:51:32,289 - #20 .
INFO  01:51:32,289 - #45 a
INFO  01:51:32,289 - #14 [
INFO  01:51:32,289 - #44 2
INFO  01:51:32,289 - #15 ]
INFO  01:51:32,289 - #17 )
INFO  01:51:32,289 - #18 ;
INFO  01:51:32,289 - #13 }
INFO  01:51:32,289 - #38 return
INFO  01:51:32,289 - #18 ;
INFO  01:51:32,290 - #13 }
INFO  01:51:32,290 - #13 }
INFO  01:51:32,290 - #13 }
INFO  01:51:32,290 - #4 class
INFO  01:51:32,290 - #45 Klasa2
INFO  01:51:32,290 - #12 {
INFO  01:51:32,290 - #45 int
INFO  01:51:32,290 - #45 a
INFO  01:51:32,290 - #14 [
INFO  01:51:32,290 - #15 ]
INFO  01:51:32,290 - #18 ;
INFO  01:51:32,290 - #13 }
INFO  01:51:32,290 - #4 class
INFO  01:51:32,290 - #45 Klasa3
INFO  01:51:32,292 - #12 {
INFO  01:51:32,292 - #13 }
INFO  01:51:32,292 - #5 interface
INFO  01:51:32,292 - #45 Interfejs1
INFO  01:51:32,292 - #12 {
INFO  01:51:32,292 - #39 void
INFO  01:51:32,293 - #45 printstr
INFO  01:51:32,293 - #16 (
INFO  01:51:32,293 - #45 char
INFO  01:51:32,293 - #45 str
INFO  01:51:32,293 - #14 [
INFO  01:51:32,293 - #15 ]
INFO  01:51:32,293 - #17 )
INFO  01:51:32,293 - #18 ;
INFO  01:51:32,293 - #13 }
INFO  01:51:32,294 - #5 interface
INFO  01:51:32,294 - #45 Interfejs2
INFO  01:51:32,294 - #12 {
INFO  01:51:32,294 - #45 Klasa3
INFO  01:51:32,294 - #45 vratiK3
INFO  01:51:32,294 - #16 (
INFO  01:51:32,294 - #17 )
INFO  01:51:32,294 - #18 ;
INFO  01:51:32,294 - #13 }
INFO  01:51:32,294 - #5 interface
INFO  01:51:32,294 - #45 Interfejs3
INFO  01:51:32,294 - #12 {
INFO  01:51:32,294 - #13 }
INFO  01:51:32,294 - #45 Klasa
INFO  01:51:32,295 - #45 klasa1
INFO  01:51:32,295 - #18 ;
INFO  01:51:32,295 - #45 int
INFO  01:51:32,295 - #45 konstanta1
INFO  01:51:32,295 - #26 =
ERROR 01:51:32,295 - 
Sintaksna greska na liniji 75
ERROR 01:51:32,295 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 75
