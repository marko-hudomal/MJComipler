INFO  21:27:32,995 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  21:27:33,003 - #2 program
INFO  21:27:33,003 - #45 P
INFO  21:27:33,003 - #8 const
INFO  21:27:33,004 - #45 int
INFO  21:27:33,004 - #45 size
INFO  21:27:33,004 - #26 =
INFO  21:27:33,004 - #44 10
INFO  21:27:33,004 - #18 ;
INFO  21:27:33,004 - #45 int
INFO  21:27:33,004 - #45 a
INFO  21:27:33,004 - #19 ,
INFO  21:27:33,004 - #45 b
INFO  21:27:33,004 - #19 ,
INFO  21:27:33,004 - #45 d
INFO  21:27:33,004 - #18 ;
INFO  21:27:33,004 - #6 enum
INFO  21:27:33,004 - #45 Num
INFO  21:27:33,004 - #12 {
INFO  21:27:33,004 - #45 ZERO
INFO  21:27:33,004 - #19 ,
INFO  21:27:33,004 - #45 ONE
INFO  21:27:33,004 - #19 ,
INFO  21:27:33,005 - #45 TEN
INFO  21:27:33,005 - #26 =
INFO  21:27:33,005 - #44 10
INFO  21:27:33,005 - #13 }
INFO  21:27:33,005 - #5 interface
INFO  21:27:33,005 - #45 I
INFO  21:27:33,005 - #12 {
INFO  21:27:33,005 - #45 int
INFO  21:27:33,005 - #45 getp
INFO  21:27:33,005 - #16 (
INFO  21:27:33,005 - #45 int
INFO  21:27:33,005 - #45 i
INFO  21:27:33,005 - #17 )
INFO  21:27:33,005 - #18 ;
INFO  21:27:33,005 - #45 int
INFO  21:27:33,005 - #45 getn
INFO  21:27:33,005 - #16 (
INFO  21:27:33,005 - #45 int
INFO  21:27:33,005 - #45 i
INFO  21:27:33,005 - #17 )
INFO  21:27:33,005 - #18 ;
INFO  21:27:33,005 - #13 }
INFO  21:27:33,005 - #4 class
INFO  21:27:33,005 - #45 Table
INFO  21:27:33,005 - #42 implements
INFO  21:27:33,005 - #45 I
INFO  21:27:33,006 - #12 {
INFO  21:27:33,006 - #45 int
INFO  21:27:33,006 - #45 pos
INFO  21:27:33,006 - #14 [
INFO  21:27:33,006 - #15 ]
INFO  21:27:33,006 - #19 ,
INFO  21:27:33,006 - #45 neg
INFO  21:27:33,006 - #14 [
INFO  21:27:33,006 - #15 ]
INFO  21:27:33,006 - #18 ;
INFO  21:27:33,006 - #12 {
INFO  21:27:33,006 - #39 void
INFO  21:27:33,006 - #45 putp
INFO  21:27:33,006 - #16 (
INFO  21:27:33,006 - #45 int
INFO  21:27:33,006 - #45 a
INFO  21:27:33,006 - #19 ,
INFO  21:27:33,006 - #45 int
INFO  21:27:33,006 - #45 idx
INFO  21:27:33,006 - #17 )
INFO  21:27:33,006 - #12 {
INFO  21:27:33,006 - #45 this
INFO  21:27:33,006 - #20 .
INFO  21:27:33,006 - #45 pos
INFO  21:27:33,006 - #14 [
INFO  21:27:33,006 - #45 idx
INFO  21:27:33,006 - #15 ]
INFO  21:27:33,006 - #26 =
INFO  21:27:33,006 - #45 a
INFO  21:27:33,006 - #18 ;
INFO  21:27:33,007 - #13 }
INFO  21:27:33,007 - #39 void
INFO  21:27:33,007 - #45 putn
INFO  21:27:33,007 - #16 (
INFO  21:27:33,007 - #45 int
INFO  21:27:33,007 - #45 a
INFO  21:27:33,007 - #19 ,
INFO  21:27:33,007 - #45 int
INFO  21:27:33,007 - #45 idx
INFO  21:27:33,007 - #17 )
INFO  21:27:33,007 - #12 {
INFO  21:27:33,007 - #45 this
INFO  21:27:33,007 - #20 .
INFO  21:27:33,007 - #45 neg
INFO  21:27:33,007 - #14 [
INFO  21:27:33,007 - #45 idx
INFO  21:27:33,007 - #15 ]
INFO  21:27:33,007 - #26 =
INFO  21:27:33,007 - #45 a
INFO  21:27:33,007 - #18 ;
INFO  21:27:33,007 - #13 }
INFO  21:27:33,007 - #45 int
INFO  21:27:33,007 - #45 getp
INFO  21:27:33,007 - #16 (
INFO  21:27:33,007 - #45 int
INFO  21:27:33,007 - #45 idx
INFO  21:27:33,007 - #17 )
INFO  21:27:33,008 - #12 {
INFO  21:27:33,008 - #38 return
INFO  21:27:33,008 - #45 pos
INFO  21:27:33,008 - #14 [
INFO  21:27:33,008 - #45 idx
INFO  21:27:33,008 - #15 ]
INFO  21:27:33,008 - #18 ;
INFO  21:27:33,008 - #13 }
INFO  21:27:33,008 - #45 int
INFO  21:27:33,008 - #45 getn
INFO  21:27:33,008 - #16 (
INFO  21:27:33,008 - #45 int
INFO  21:27:33,008 - #45 idx
INFO  21:27:33,008 - #17 )
INFO  21:27:33,008 - #12 {
INFO  21:27:33,008 - #38 return
INFO  21:27:33,008 - #45 neg
INFO  21:27:33,008 - #14 [
INFO  21:27:33,008 - #45 idx
INFO  21:27:33,008 - #15 ]
INFO  21:27:33,008 - #18 ;
INFO  21:27:33,008 - #13 }
INFO  21:27:33,009 - #13 }
INFO  21:27:33,009 - #13 }
INFO  21:27:33,009 - #45 Table
INFO  21:27:33,009 - #45 val
INFO  21:27:33,009 - #18 ;
INFO  21:27:33,010 - #45 int
INFO  21:27:33,010 - #45 a
INFO  21:27:33,010 - #19 ,
INFO  21:27:33,010 - #45 b
INFO  21:27:33,010 - #19 ,
INFO  21:27:33,010 - #45 c
INFO  21:27:33,010 - #18 ;
INFO  21:27:33,010 - #12 {
INFO  21:27:33,010 - #39 void
INFO  21:27:33,010 - #45 f
INFO  21:27:33,010 - #16 (
INFO  21:27:33,010 - #45 char
INFO  21:27:33,010 - #45 ch
INFO  21:27:33,010 - #19 ,
INFO  21:27:33,010 - #45 int
INFO  21:27:33,010 - #45 a
INFO  21:27:33,010 - #19 ,
INFO  21:27:33,010 - #45 int
INFO  21:27:33,010 - #45 arg
INFO  21:27:33,011 - #17 )
INFO  21:27:33,011 - #45 int
INFO  21:27:33,011 - #45 x
INFO  21:27:33,011 - #18 ;
INFO  21:27:33,011 - #12 {
INFO  21:27:33,011 - #45 x
INFO  21:27:33,011 - #26 =
INFO  21:27:33,011 - #44 5
INFO  21:27:33,011 - #18 ;
INFO  21:27:33,011 - #45 a
INFO  21:27:33,011 - #26 =
INFO  21:27:33,011 - #46 a
INFO  21:27:33,011 - #18 ;
INFO  21:27:33,011 - #45 b
INFO  21:27:33,011 - #26 =
INFO  21:27:33,011 - #46 4
INFO  21:27:33,011 - #18 ;
INFO  21:27:33,011 - #45 c
INFO  21:27:33,011 - #26 =
INFO  21:27:33,011 - #46 !
INFO  21:27:33,011 - #18 ;
INFO  21:27:33,011 - #13 }
INFO  21:27:33,011 - #39 void
INFO  21:27:33,011 - #45 main
INFO  21:27:33,011 - #16 (
INFO  21:27:33,011 - #17 )
INFO  21:27:33,012 - #45 int
INFO  21:27:33,012 - #45 x
INFO  21:27:33,012 - #19 ,
INFO  21:27:33,012 - #45 i
INFO  21:27:33,012 - #18 ;
INFO  21:27:33,012 - #45 char
INFO  21:27:33,012 - #45 c
INFO  21:27:33,012 - #18 ;
INFO  21:27:33,012 - #12 {
INFO  21:27:33,012 - #45 val
INFO  21:27:33,012 - #26 =
INFO  21:27:33,012 - #10 new
INFO  21:27:33,012 - #45 Table
INFO  21:27:33,012 - #18 ;
INFO  21:27:33,012 - #45 val
INFO  21:27:33,012 - #20 .
INFO  21:27:33,012 - #45 pos
INFO  21:27:33,012 - #26 =
INFO  21:27:33,012 - #10 new
INFO  21:27:33,012 - #45 int
INFO  21:27:33,012 - #14 [
INFO  21:27:33,012 - #45 size
INFO  21:27:33,012 - #15 ]
INFO  21:27:33,012 - #18 ;
INFO  21:27:33,012 - #45 val
INFO  21:27:33,012 - #20 .
INFO  21:27:33,012 - #45 neg
INFO  21:27:33,012 - #26 =
INFO  21:27:33,012 - #10 new
INFO  21:27:33,012 - #45 int
INFO  21:27:33,012 - #14 [
INFO  21:27:33,012 - #45 size
INFO  21:27:33,012 - #15 ]
INFO  21:27:33,012 - #18 ;
INFO  21:27:33,012 - #40 for
INFO  21:27:33,012 - #16 (
INFO  21:27:33,012 - #45 i
INFO  21:27:33,012 - #26 =
INFO  21:27:33,012 - #44 0
INFO  21:27:33,013 - #18 ;
INFO  21:27:33,013 - #45 i
INFO  21:27:33,013 - #33 <
INFO  21:27:33,013 - #45 size
INFO  21:27:33,013 - #18 ;
INFO  21:27:33,013 - #45 i
INFO  21:27:33,013 - #27 ++
INFO  21:27:33,013 - #17 )
INFO  21:27:33,013 - #12 {
INFO  21:27:33,013 - #45 val
INFO  21:27:33,013 - #20 .
INFO  21:27:33,013 - #45 putp
INFO  21:27:33,013 - #16 (
INFO  21:27:33,013 - #44 0
INFO  21:27:33,013 - #19 ,
INFO  21:27:33,013 - #45 i
INFO  21:27:33,013 - #17 )
INFO  21:27:33,013 - #18 ;
INFO  21:27:33,013 - #45 val
INFO  21:27:33,013 - #20 .
INFO  21:27:33,013 - #45 putn
INFO  21:27:33,013 - #16 (
INFO  21:27:33,013 - #44 0
INFO  21:27:33,013 - #19 ,
INFO  21:27:33,013 - #45 i
INFO  21:27:33,013 - #17 )
INFO  21:27:33,013 - #18 ;
INFO  21:27:33,013 - #13 }
INFO  21:27:33,013 - #45 f
INFO  21:27:33,013 - #16 (
INFO  21:27:33,013 - #45 c
INFO  21:27:33,013 - #19 ,
INFO  21:27:33,013 - #45 x
INFO  21:27:33,013 - #19 ,
INFO  21:27:33,013 - #45 i
INFO  21:27:33,013 - #17 )
INFO  21:27:33,013 - #18 ;
INFO  21:27:33,013 - #37 read
INFO  21:27:33,014 - #16 (
INFO  21:27:33,014 - #45 x
INFO  21:27:33,014 - #17 )
INFO  21:27:33,014 - #18 ;
INFO  21:27:33,014 - #40 for
INFO  21:27:33,014 - #16 (
INFO  21:27:33,014 - #18 ;
INFO  21:27:33,014 - #45 x
INFO  21:27:33,014 - #31 >
INFO  21:27:33,014 - #44 0
INFO  21:27:33,014 - #18 ;
INFO  21:27:33,014 - #17 )
INFO  21:27:33,014 - #12 {
INFO  21:27:33,014 - #9 if
INFO  21:27:33,014 - #16 (
INFO  21:27:33,014 - #45 Num
INFO  21:27:33,014 - #20 .
INFO  21:27:33,014 - #45 ZERO
INFO  21:27:33,014 - #34 <=
INFO  21:27:33,014 - #45 x
INFO  21:27:33,014 - #35 &&
INFO  21:27:33,014 - #45 x
INFO  21:27:33,014 - #33 <
INFO  21:27:33,014 - #45 size
INFO  21:27:33,014 - #17 )
INFO  21:27:33,014 - #12 {
INFO  21:27:33,014 - #45 val
INFO  21:27:33,014 - #20 .
INFO  21:27:33,014 - #45 putp
INFO  21:27:33,015 - #16 (
INFO  21:27:33,015 - #45 val
INFO  21:27:33,015 - #20 .
INFO  21:27:33,015 - #45 getp
INFO  21:27:33,015 - #16 (
INFO  21:27:33,015 - #45 x
INFO  21:27:33,015 - #17 )
INFO  21:27:33,015 - #21 +
INFO  21:27:33,015 - #45 Num
INFO  21:27:33,015 - #20 .
INFO  21:27:33,015 - #45 ONE
INFO  21:27:33,015 - #17 )
INFO  21:27:33,015 - #18 ;
INFO  21:27:33,015 - #13 }
INFO  21:27:33,015 - #7 else
INFO  21:27:33,015 - #9 if
INFO  21:27:33,015 - #16 (
INFO  21:27:33,015 - #22 -
INFO  21:27:33,015 - #45 size
INFO  21:27:33,015 - #33 <
INFO  21:27:33,015 - #45 x
INFO  21:27:33,015 - #35 &&
INFO  21:27:33,015 - #45 x
INFO  21:27:33,015 - #33 <
INFO  21:27:33,015 - #44 0
INFO  21:27:33,015 - #17 )
INFO  21:27:33,015 - #12 {
INFO  21:27:33,015 - #45 val
INFO  21:27:33,015 - #20 .
INFO  21:27:33,015 - #45 putn
INFO  21:27:33,015 - #16 (
INFO  21:27:33,015 - #45 val
INFO  21:27:33,015 - #20 .
INFO  21:27:33,015 - #45 getn
INFO  21:27:33,015 - #16 (
INFO  21:27:33,015 - #22 -
INFO  21:27:33,015 - #45 x
INFO  21:27:33,015 - #17 )
INFO  21:27:33,015 - #21 +
INFO  21:27:33,015 - #44 1
INFO  21:27:33,015 - #17 )
INFO  21:27:33,015 - #18 ;
INFO  21:27:33,015 - #13 }
INFO  21:27:33,015 - #37 read
INFO  21:27:33,015 - #16 (
INFO  21:27:33,015 - #45 x
INFO  21:27:33,015 - #17 )
INFO  21:27:33,015 - #18 ;
INFO  21:27:33,015 - #13 }
INFO  21:27:33,015 - #13 }
INFO  21:27:33,016 - #13 }
INFO  21:27:33,016 - --EOF.
