INFO  17:03:03,750 - Putanja iz argumenta: test/program.mj
INFO  17:03:03,751 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  17:03:03,782 - #2 program
INFO  17:03:03,782 - #45 MojProgram
INFO  17:03:03,782 - #8 const
INFO  17:03:03,782 - #45 int
INFO  17:03:03,782 - #45 g
INFO  17:03:03,783 - #26 =
INFO  17:03:03,783 - #44 1
INFO  17:03:03,783 - #18 ;
INFO  17:03:03,783 - #12 {
INFO  17:03:03,783 - #39 void
INFO  17:03:03,783 - #45 main
INFO  17:03:03,784 - #16 (
INFO  17:03:03,784 - #17 )
INFO  17:03:03,784 - #45 char
INFO  17:03:03,784 - #45 message
INFO  17:03:03,784 - #18 ;
INFO  17:03:03,785 - #45 int
INFO  17:03:03,785 - #45 c
INFO  17:03:03,785 - #19 ,
INFO  17:03:03,785 - #45 v
INFO  17:03:03,785 - #18 ;
INFO  17:03:03,785 - #12 {
INFO  17:03:03,786 - #45 c
INFO  17:03:03,786 - #26 =
INFO  17:03:03,786 - #44 10
INFO  17:03:03,787 - #18 ;
INFO  17:03:03,787 - #45 c
INFO  17:03:03,787 - #26 =
INFO  17:03:03,787 - #44 5
INFO  17:03:03,787 - #18 ;
INFO  17:03:03,787 - #45 a
INFO  17:03:03,788 - #26 =
INFO  17:03:03,788 - #45 a
INFO  17:03:03,788 - #27 ++
ERROR 17:03:03,788 - 
Sintaksna greska na liniji 10
INFO  17:03:03,788 - #18 ;
INFO  17:03:03,788 - #13 }
INFO  17:03:03,788 - #39 void
INFO  17:03:03,788 - #45 funkcija
ERROR 17:03:03,788 - [Dodela vrednosti] Izvrsen oporavak do sledeceg ';' u liniji 10
INFO  17:03:03,789 - #16 (
INFO  17:03:03,789 - #45 char
INFO  17:03:03,789 - #45 x
INFO  17:03:03,789 - #14 [
INFO  17:03:03,789 - #15 ]
INFO  17:03:03,789 - #19 ,
INFO  17:03:03,789 - #45 int
INFO  17:03:03,789 - #44 1
ERROR 17:03:03,789 - 
Sintaksna greska na liniji 12
INFO  17:03:03,789 - #19 ,
INFO  17:03:03,789 - #45 int
INFO  17:03:03,789 - #45 m
INFO  17:03:03,790 - #17 )
ERROR 17:03:03,790 - [Formalni parametar] Izvrsen oporavak do sledeceg ',')' u liniji 12
INFO  17:03:03,790 - #12 {
INFO  17:03:03,790 - #45 g
INFO  17:03:03,790 - #26 =
INFO  17:03:03,790 - #44 10
INFO  17:03:03,790 - #18 ;
INFO  17:03:03,790 - #9 if
INFO  17:03:03,790 - #16 (
INFO  17:03:03,790 - #45 a
INFO  17:03:03,790 - #23 *
INFO  17:03:03,791 - #44 10
INFO  17:03:03,791 - #31 >
INFO  17:03:03,791 - #17 )
ERROR 17:03:03,791 - 
Sintaksna greska na liniji 15
INFO  17:03:03,791 - #3 break
INFO  17:03:03,791 - #18 ;
INFO  17:03:03,791 - #9 if
ERROR 17:03:03,791 - [IfElse Condition] Izvrsen oporavak do sledeceg ')' u liniji 15
INFO  17:03:03,792 - #16 (
INFO  17:03:03,792 - #45 this
INFO  17:03:03,792 - #20 .
INFO  17:03:03,792 - #45 a
INFO  17:03:03,792 - #29 ==
INFO  17:03:03,792 - #45 this
INFO  17:03:03,793 - #20 .
INFO  17:03:03,793 - #45 b
INFO  17:03:03,793 - #17 )
INFO  17:03:03,793 - #37 read
INFO  17:03:03,793 - #16 (
INFO  17:03:03,793 - #45 this
INFO  17:03:03,793 - #20 .
INFO  17:03:03,793 - #45 k2
INFO  17:03:03,793 - #20 .
INFO  17:03:03,793 - #45 a
INFO  17:03:03,793 - #14 [
INFO  17:03:03,793 - #44 0
INFO  17:03:03,793 - #15 ]
INFO  17:03:03,793 - #17 )
INFO  17:03:03,794 - #18 ;
INFO  17:03:03,794 - #7 else
INFO  17:03:03,794 - #12 {
INFO  17:03:03,794 - #9 if
INFO  17:03:03,794 - #16 (
INFO  17:03:03,794 - #47 true
INFO  17:03:03,794 - #17 )
INFO  17:03:03,794 - #12 {
INFO  17:03:03,794 - #3 break
INFO  17:03:03,794 - #18 ;
INFO  17:03:03,794 - #43 continue
INFO  17:03:03,794 - #18 ;
INFO  17:03:03,794 - #9 if
INFO  17:03:03,795 - #16 (
INFO  17:03:03,795 - #45 prom_x
INFO  17:03:03,795 - #36 ||
INFO  17:03:03,795 - #45 prom_c1
INFO  17:03:03,795 - #31 >
INFO  17:03:03,795 - #46 A
INFO  17:03:03,795 - #17 )
INFO  17:03:03,796 - #9 if
INFO  17:03:03,796 - #16 (
INFO  17:03:03,796 - #44 1
INFO  17:03:03,796 - #33 <
INFO  17:03:03,796 - #44 2
INFO  17:03:03,796 - #17 )
INFO  17:03:03,796 - #12 {
INFO  17:03:03,796 - #45 prom_x
INFO  17:03:03,796 - #26 =
INFO  17:03:03,796 - #44 15
INFO  17:03:03,796 - #18 ;
INFO  17:03:03,796 - #40 for
INFO  17:03:03,796 - #16 (
INFO  17:03:03,796 - #18 ;
INFO  17:03:03,797 - #18 ;
INFO  17:03:03,797 - #17 )
INFO  17:03:03,797 - #11 print
INFO  17:03:03,797 - #16 (
INFO  17:03:03,797 - #46 i
INFO  17:03:03,797 - #19 ,
INFO  17:03:03,798 - #44 2
INFO  17:03:03,798 - #17 )
INFO  17:03:03,798 - #18 ;
INFO  17:03:03,798 - #13 }
INFO  17:03:03,799 - #13 }
INFO  17:03:03,799 - #13 }
INFO  17:03:03,799 - #13 }
INFO  17:03:03,799 - #13 }
INFO  17:03:03,801 - Program(
 MojProgram
  Declarations(
    NoDecl(
    ) [NoDecl]
    ConstDeclaration(
      ConstDeclNode(
        TypeNode(
         int
        ) [TypeNode]
        SingleConstant(
          EqualConstantNode(
           g
            NumberNode(
             1
            ) [NumberNode]
          ) [EqualConstantNode]
        ) [SingleConstant]
      ) [ConstDeclNode]
    ) [ConstDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        VoidType(
        ) [VoidType]
       main
        NoFormalParam(
        ) [NoFormalParam]
        VarDeclarationList(
          VarDeclarationList(
            NoVarDeclaration(
            ) [NoVarDeclaration]
            VarDeclNode(
              TypeNode(
               char
              ) [TypeNode]
              SingleVariable(
                VariableNoBracket(
                 message
                ) [VariableNoBracket]
              ) [SingleVariable]
            ) [VarDeclNode]
          ) [VarDeclarationList]
          VarDeclNode(
            TypeNode(
             int
            ) [TypeNode]
            Variables(
              SingleVariable(
                VariableNoBracket(
                 c
                ) [VariableNoBracket]
              ) [SingleVariable]
              VariableNoBracket(
               v
              ) [VariableNoBracket]
            ) [Variables]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        Statements(
          Statements(
            Statements(
              NoStatement(
              ) [NoStatement]
              DesignatorStatementOnly(
                DesignatorStatementAssignop(
                  DesignatorNode(
                   c
                    NoIdentExpr(
                    ) [NoIdentExpr]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    NoSingleMinus(
                    ) [NoSingleMinus]
                    TermFactor(
                      ConstantNumber(
                       10
                      ) [ConstantNumber]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementOnly]
            ) [Statements]
            DesignatorStatementOnly(
              DesignatorStatementAssignop(
                DesignatorNode(
                 c
                  NoIdentExpr(
                  ) [NoIdentExpr]
                ) [DesignatorNode]
                Assignop(
                ) [Assignop]
                SingleExpression(
                  NoSingleMinus(
                  ) [NoSingleMinus]
                  TermFactor(
                    ConstantNumber(
                     5
                    ) [ConstantNumber]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementOnly]
          ) [Statements]
          ErrorAssign(
          ) [ErrorAssign]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      VoidType(
      ) [VoidType]
     funkcija
      FormalParams(
        FormalParamDecls(
          FormalParamDecls(
            SingleFormalParamDecl(
              FormalParamDeclarationBrackets(
                TypeNode(
                 char
                ) [TypeNode]
               x
              ) [FormalParamDeclarationBrackets]
            ) [SingleFormalParamDecl]
            ErrorFormParam(
            ) [ErrorFormParam]
          ) [FormalParamDecls]
          FormalParamDeclarationNoBrackets(
            TypeNode(
             int
            ) [TypeNode]
           m
          ) [FormalParamDeclarationNoBrackets]
        ) [FormalParamDecls]
      ) [FormalParams]
      NoVarDeclaration(
      ) [NoVarDeclaration]
      Statements(
        Statements(
          Statements(
            NoStatement(
            ) [NoStatement]
            DesignatorStatementOnly(
              DesignatorStatementAssignop(
                DesignatorNode(
                 g
                  NoIdentExpr(
                  ) [NoIdentExpr]
                ) [DesignatorNode]
                Assignop(
                ) [Assignop]
                SingleExpression(
                  NoSingleMinus(
                  ) [NoSingleMinus]
                  TermFactor(
                    ConstantNumber(
                     10
                    ) [ConstantNumber]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementOnly]
          ) [Statements]
          IfStatement(
            ErrorIfElseStatement(
            ) [ErrorIfElseStatement]
            BreakStatement(
            ) [BreakStatement]
          ) [IfStatement]
        ) [Statements]
        IfElseStatement(
          IfConditionNode(
            ConditionNode(
              SingleConditionTerm(
                ConditionTermNode(
                  SingleConditionFact(
                    CondFactExpressionRelopExpression(
                      SingleExpression(
                        NoSingleMinus(
                        ) [NoSingleMinus]
                        TermFactor(
                          DesignatorEmpty(
                            DesignatorNode(
                             this
                              Idents(
                                NoIdentExpr(
                                ) [NoIdentExpr]
                               a
                              ) [Idents]
                            ) [DesignatorNode]
                          ) [DesignatorEmpty]
                        ) [TermFactor]
                      ) [SingleExpression]
                      RelopEqualEqual(
                      ) [RelopEqualEqual]
                      SingleExpression(
                        NoSingleMinus(
                        ) [NoSingleMinus]
                        TermFactor(
                          DesignatorEmpty(
                            DesignatorNode(
                             this
                              Idents(
                                NoIdentExpr(
                                ) [NoIdentExpr]
                               b
                              ) [Idents]
                            ) [DesignatorNode]
                          ) [DesignatorEmpty]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [CondFactExpressionRelopExpression]
                  ) [SingleConditionFact]
                ) [ConditionTermNode]
              ) [SingleConditionTerm]
            ) [ConditionNode]
          ) [IfConditionNode]
          ReadStatement(
            DesignatorNode(
             this
              Exprs(
                Idents(
                  Idents(
                    NoIdentExpr(
                    ) [NoIdentExpr]
                   k2
                  ) [Idents]
                 a
                ) [Idents]
                SingleExpression(
                  NoSingleMinus(
                  ) [NoSingleMinus]
                  TermFactor(
                    ConstantNumber(
                     0
                    ) [ConstantNumber]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [Exprs]
            ) [DesignatorNode]
          ) [ReadStatement]
          InBraceStatement(
            Statements(
              NoStatement(
              ) [NoStatement]
              IfStatement(
                IfConditionNode(
                  ConditionNode(
                    SingleConditionTerm(
                      ConditionTermNode(
                        SingleConditionFact(
                          CondFactExpression(
                            SingleExpression(
                              NoSingleMinus(
                              ) [NoSingleMinus]
                              TermFactor(
                                ConstantBoolean(
                                ) [ConstantBoolean]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [CondFactExpression]
                        ) [SingleConditionFact]
                      ) [ConditionTermNode]
                    ) [SingleConditionTerm]
                  ) [ConditionNode]
                ) [IfConditionNode]
                InBraceStatement(
                  Statements(
                    Statements(
                      Statements(
                        NoStatement(
                        ) [NoStatement]
                        BreakStatement(
                        ) [BreakStatement]
                      ) [Statements]
                      ContinueStatement(
                      ) [ContinueStatement]
                    ) [Statements]
                    IfStatement(
                      IfConditionNode(
                        ConditionNode(
                          ConditionTerms(
                            SingleConditionTerm(
                              ConditionTermNode(
                                SingleConditionFact(
                                  CondFactExpression(
                                    SingleExpression(
                                      NoSingleMinus(
                                      ) [NoSingleMinus]
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                           prom_x
                                            NoIdentExpr(
                                            ) [NoIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [CondFactExpression]
                                ) [SingleConditionFact]
                              ) [ConditionTermNode]
                            ) [SingleConditionTerm]
                            ConditionTermNode(
                              SingleConditionFact(
                                CondFactExpressionRelopExpression(
                                  SingleExpression(
                                    NoSingleMinus(
                                    ) [NoSingleMinus]
                                    TermFactor(
                                      DesignatorEmpty(
                                        DesignatorNode(
                                         prom_c1
                                          NoIdentExpr(
                                          ) [NoIdentExpr]
                                        ) [DesignatorNode]
                                      ) [DesignatorEmpty]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                  RelopGreater(
                                  ) [RelopGreater]
                                  SingleExpression(
                                    NoSingleMinus(
                                    ) [NoSingleMinus]
                                    TermFactor(
                                      ConstantCharacter(
                                       A
                                      ) [ConstantCharacter]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [CondFactExpressionRelopExpression]
                              ) [SingleConditionFact]
                            ) [ConditionTermNode]
                          ) [ConditionTerms]
                        ) [ConditionNode]
                      ) [IfConditionNode]
                      IfStatement(
                        IfConditionNode(
                          ConditionNode(
                            SingleConditionTerm(
                              ConditionTermNode(
                                SingleConditionFact(
                                  CondFactExpressionRelopExpression(
                                    SingleExpression(
                                      NoSingleMinus(
                                      ) [NoSingleMinus]
                                      TermFactor(
                                        ConstantNumber(
                                         1
                                        ) [ConstantNumber]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                    RelopLess(
                                    ) [RelopLess]
                                    SingleExpression(
                                      NoSingleMinus(
                                      ) [NoSingleMinus]
                                      TermFactor(
                                        ConstantNumber(
                                         2
                                        ) [ConstantNumber]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [CondFactExpressionRelopExpression]
                                ) [SingleConditionFact]
                              ) [ConditionTermNode]
                            ) [SingleConditionTerm]
                          ) [ConditionNode]
                        ) [IfConditionNode]
                        InBraceStatement(
                          Statements(
                            Statements(
                              NoStatement(
                              ) [NoStatement]
                              DesignatorStatementOnly(
                                DesignatorStatementAssignop(
                                  DesignatorNode(
                                   prom_x
                                    NoIdentExpr(
                                    ) [NoIdentExpr]
                                  ) [DesignatorNode]
                                  Assignop(
                                  ) [Assignop]
                                  SingleExpression(
                                    NoSingleMinus(
                                    ) [NoSingleMinus]
                                    TermFactor(
                                      ConstantNumber(
                                       15
                                      ) [ConstantNumber]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [DesignatorStatementAssignop]
                              ) [DesignatorStatementOnly]
                            ) [Statements]
                            ForStatement(
                              DesignatorStatementNull(
                              ) [DesignatorStatementNull]
                              ConditionNull(
                              ) [ConditionNull]
                              DesignatorStatementNull(
                              ) [DesignatorStatementNull]
                              PrintWithNumConstStatement(
                                SingleExpression(
                                  NoSingleMinus(
                                  ) [NoSingleMinus]
                                  TermFactor(
                                    ConstantCharacter(
                                     i
                                    ) [ConstantCharacter]
                                  ) [TermFactor]
                                ) [SingleExpression]
                               2
                              ) [PrintWithNumConstStatement]
                            ) [ForStatement]
                          ) [Statements]
                        ) [InBraceStatement]
                      ) [IfStatement]
                    ) [IfStatement]
                  ) [Statements]
                ) [InBraceStatement]
              ) [IfStatement]
            ) [Statements]
          ) [InBraceStatement]
        ) [IfElseStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  17:03:03,801 - ===================================
