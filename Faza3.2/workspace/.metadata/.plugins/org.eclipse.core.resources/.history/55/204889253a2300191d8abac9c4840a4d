INFO  20:50:16,200 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  20:50:16,209 - #2 program
INFO  20:50:16,209 - #45 P
INFO  20:50:16,209 - #8 const
INFO  20:50:16,209 - #45 int
INFO  20:50:16,209 - #45 size
INFO  20:50:16,209 - #26 =
INFO  20:50:16,209 - #44 10
INFO  20:50:16,210 - #18 ;
INFO  20:50:16,210 - #45 int
INFO  20:50:16,210 - #45 a
INFO  20:50:16,210 - #19 ,
INFO  20:50:16,210 - #45 b
INFO  20:50:16,210 - #19 ,
INFO  20:50:16,210 - #45 d
INFO  20:50:16,210 - #18 ;
INFO  20:50:16,210 - #6 enum
INFO  20:50:16,210 - #45 Num
INFO  20:50:16,210 - #12 {
INFO  20:50:16,210 - #45 ZERO
INFO  20:50:16,210 - #19 ,
INFO  20:50:16,210 - #45 ONE
INFO  20:50:16,210 - #19 ,
INFO  20:50:16,211 - #45 TEN
INFO  20:50:16,211 - #26 =
INFO  20:50:16,211 - #44 10
INFO  20:50:16,211 - #13 }
INFO  20:50:16,211 - #5 interface
INFO  20:50:16,211 - #45 I
INFO  20:50:16,211 - #12 {
INFO  20:50:16,211 - #45 int
INFO  20:50:16,211 - #45 getp
INFO  20:50:16,211 - #16 (
INFO  20:50:16,211 - #45 int
INFO  20:50:16,211 - #45 i
INFO  20:50:16,211 - #17 )
INFO  20:50:16,211 - #18 ;
INFO  20:50:16,211 - #45 int
INFO  20:50:16,211 - #45 getn
INFO  20:50:16,211 - #16 (
INFO  20:50:16,211 - #45 int
INFO  20:50:16,211 - #45 i
INFO  20:50:16,211 - #17 )
INFO  20:50:16,211 - #18 ;
INFO  20:50:16,211 - #13 }
INFO  20:50:16,211 - #4 class
INFO  20:50:16,211 - #45 Table
INFO  20:50:16,211 - #42 implements
INFO  20:50:16,211 - #45 I
INFO  20:50:16,211 - #12 {
INFO  20:50:16,212 - #45 int
INFO  20:50:16,212 - #45 pos
INFO  20:50:16,212 - #14 [
INFO  20:50:16,212 - #15 ]
INFO  20:50:16,212 - #19 ,
INFO  20:50:16,212 - #45 neg
INFO  20:50:16,212 - #14 [
INFO  20:50:16,212 - #15 ]
INFO  20:50:16,212 - #18 ;
INFO  20:50:16,212 - #12 {
INFO  20:50:16,212 - #39 void
INFO  20:50:16,212 - #45 putp
INFO  20:50:16,212 - #16 (
INFO  20:50:16,212 - #45 int
INFO  20:50:16,212 - #45 a
INFO  20:50:16,212 - #19 ,
INFO  20:50:16,212 - #45 int
INFO  20:50:16,212 - #45 idx
INFO  20:50:16,212 - #17 )
INFO  20:50:16,214 - #12 {
INFO  20:50:16,214 - #45 this
INFO  20:50:16,214 - #20 .
INFO  20:50:16,214 - #45 pos
INFO  20:50:16,214 - #14 [
INFO  20:50:16,214 - #45 idx
INFO  20:50:16,214 - #15 ]
INFO  20:50:16,214 - #26 =
INFO  20:50:16,214 - #45 a
INFO  20:50:16,214 - #18 ;
INFO  20:50:16,214 - #13 }
INFO  20:50:16,214 - #39 void
INFO  20:50:16,214 - #45 putn
INFO  20:50:16,214 - #16 (
INFO  20:50:16,214 - #45 int
INFO  20:50:16,214 - #45 a
INFO  20:50:16,214 - #19 ,
INFO  20:50:16,214 - #45 int
INFO  20:50:16,214 - #45 idx
INFO  20:50:16,214 - #17 )
INFO  20:50:16,214 - #12 {
INFO  20:50:16,214 - #45 this
INFO  20:50:16,214 - #20 .
INFO  20:50:16,214 - #45 neg
INFO  20:50:16,214 - #14 [
INFO  20:50:16,214 - #45 idx
INFO  20:50:16,214 - #15 ]
INFO  20:50:16,214 - #26 =
INFO  20:50:16,214 - #45 a
INFO  20:50:16,214 - #18 ;
INFO  20:50:16,214 - #13 }
INFO  20:50:16,214 - #45 int
INFO  20:50:16,214 - #45 getp
INFO  20:50:16,214 - #16 (
INFO  20:50:16,215 - #45 int
INFO  20:50:16,215 - #45 idx
INFO  20:50:16,215 - #17 )
INFO  20:50:16,215 - #12 {
INFO  20:50:16,215 - #38 return
INFO  20:50:16,215 - #45 pos
INFO  20:50:16,215 - #14 [
INFO  20:50:16,215 - #45 idx
INFO  20:50:16,215 - #15 ]
INFO  20:50:16,215 - #18 ;
INFO  20:50:16,215 - #13 }
INFO  20:50:16,215 - #45 int
INFO  20:50:16,215 - #45 getn
INFO  20:50:16,215 - #16 (
INFO  20:50:16,215 - #45 int
INFO  20:50:16,215 - #45 idx
INFO  20:50:16,215 - #17 )
INFO  20:50:16,215 - #12 {
INFO  20:50:16,215 - #38 return
INFO  20:50:16,215 - #45 neg
INFO  20:50:16,215 - #14 [
INFO  20:50:16,215 - #45 idx
INFO  20:50:16,215 - #15 ]
INFO  20:50:16,215 - #18 ;
INFO  20:50:16,215 - #13 }
INFO  20:50:16,215 - #13 }
INFO  20:50:16,215 - #13 }
INFO  20:50:16,215 - #45 Table
INFO  20:50:16,215 - #45 val
INFO  20:50:16,215 - #18 ;
INFO  20:50:16,215 - #45 int
INFO  20:50:16,215 - #45 a
INFO  20:50:16,215 - #19 ,
INFO  20:50:16,216 - #45 b
INFO  20:50:16,216 - #19 ,
INFO  20:50:16,216 - #45 c
INFO  20:50:16,216 - #18 ;
INFO  20:50:16,216 - #12 {
INFO  20:50:16,216 - #39 void
INFO  20:50:16,216 - #45 f
INFO  20:50:16,216 - #16 (
INFO  20:50:16,216 - #45 char
INFO  20:50:16,216 - #45 ch
INFO  20:50:16,216 - #19 ,
INFO  20:50:16,216 - #45 int
INFO  20:50:16,216 - #45 a
INFO  20:50:16,216 - #19 ,
INFO  20:50:16,216 - #45 int
INFO  20:50:16,216 - #45 arg
INFO  20:50:16,216 - #17 )
INFO  20:50:16,216 - #45 int
INFO  20:50:16,216 - #45 x
INFO  20:50:16,216 - #18 ;
INFO  20:50:16,216 - #12 {
INFO  20:50:16,216 - #45 x
INFO  20:50:16,216 - #26 =
INFO  20:50:16,216 - #44 5
INFO  20:50:16,216 - #18 ;
INFO  20:50:16,216 - #13 }
INFO  20:50:16,216 - #39 void
INFO  20:50:16,216 - #45 main
INFO  20:50:16,216 - #16 (
INFO  20:50:16,216 - #17 )
INFO  20:50:16,216 - #45 int
INFO  20:50:16,216 - #45 x
INFO  20:50:16,216 - #19 ,
INFO  20:50:16,216 - #45 i
INFO  20:50:16,216 - #18 ;
INFO  20:50:16,216 - #45 char
INFO  20:50:16,217 - #45 c
INFO  20:50:16,217 - #18 ;
INFO  20:50:16,217 - #12 {
INFO  20:50:16,217 - #45 val
INFO  20:50:16,217 - #26 =
INFO  20:50:16,217 - #10 new
INFO  20:50:16,217 - #45 Table
INFO  20:50:16,217 - #18 ;
INFO  20:50:16,217 - #45 val
INFO  20:50:16,217 - #20 .
INFO  20:50:16,217 - #45 pos
INFO  20:50:16,217 - #26 =
INFO  20:50:16,217 - #10 new
INFO  20:50:16,217 - #45 int
INFO  20:50:16,217 - #14 [
INFO  20:50:16,217 - #45 size
INFO  20:50:16,217 - #15 ]
INFO  20:50:16,217 - #18 ;
INFO  20:50:16,217 - #45 val
INFO  20:50:16,217 - #20 .
INFO  20:50:16,217 - #45 neg
INFO  20:50:16,218 - #26 =
INFO  20:50:16,218 - #10 new
INFO  20:50:16,218 - #45 int
INFO  20:50:16,218 - #14 [
INFO  20:50:16,218 - #45 size
INFO  20:50:16,218 - #15 ]
INFO  20:50:16,218 - #18 ;
INFO  20:50:16,218 - #40 for
INFO  20:50:16,218 - #16 (
INFO  20:50:16,218 - #45 i
INFO  20:50:16,218 - #26 =
INFO  20:50:16,218 - #44 0
INFO  20:50:16,218 - #18 ;
INFO  20:50:16,218 - #45 i
INFO  20:50:16,218 - #33 <
INFO  20:50:16,218 - #45 size
INFO  20:50:16,218 - #18 ;
INFO  20:50:16,218 - #45 i
INFO  20:50:16,218 - #27 ++
INFO  20:50:16,218 - #17 )
INFO  20:50:16,218 - #12 {
INFO  20:50:16,218 - #45 val
INFO  20:50:16,218 - #20 .
INFO  20:50:16,218 - #45 putp
INFO  20:50:16,218 - #16 (
INFO  20:50:16,218 - #44 0
INFO  20:50:16,219 - #19 ,
INFO  20:50:16,219 - #45 i
INFO  20:50:16,219 - #17 )
INFO  20:50:16,219 - #18 ;
INFO  20:50:16,219 - #45 val
INFO  20:50:16,219 - #20 .
INFO  20:50:16,219 - #45 putn
INFO  20:50:16,219 - #16 (
INFO  20:50:16,219 - #44 0
INFO  20:50:16,219 - #19 ,
INFO  20:50:16,219 - #45 i
INFO  20:50:16,219 - #17 )
INFO  20:50:16,219 - #18 ;
INFO  20:50:16,219 - #13 }
INFO  20:50:16,219 - #45 f
INFO  20:50:16,219 - #16 (
INFO  20:50:16,219 - #45 c
INFO  20:50:16,219 - #19 ,
INFO  20:50:16,219 - #45 x
INFO  20:50:16,219 - #19 ,
INFO  20:50:16,219 - #45 i
INFO  20:50:16,220 - #17 )
INFO  20:50:16,220 - #18 ;
INFO  20:50:16,220 - #37 read
INFO  20:50:16,220 - #16 (
INFO  20:50:16,220 - #45 x
INFO  20:50:16,220 - #17 )
INFO  20:50:16,220 - #18 ;
INFO  20:50:16,220 - #40 for
INFO  20:50:16,220 - #16 (
INFO  20:50:16,220 - #18 ;
INFO  20:50:16,220 - #45 x
INFO  20:50:16,220 - #31 >
INFO  20:50:16,220 - #44 0
INFO  20:50:16,220 - #18 ;
INFO  20:50:16,220 - #17 )
INFO  20:50:16,220 - #12 {
INFO  20:50:16,220 - #9 if
INFO  20:50:16,220 - #16 (
INFO  20:50:16,220 - #45 Num
INFO  20:50:16,220 - #20 .
INFO  20:50:16,220 - #45 ZERO
INFO  20:50:16,220 - #34 <=
INFO  20:50:16,220 - #45 x
INFO  20:50:16,220 - #35 &&
INFO  20:50:16,220 - #45 x
INFO  20:50:16,220 - #33 <
INFO  20:50:16,220 - #45 size
INFO  20:50:16,220 - #17 )
INFO  20:50:16,220 - #12 {
INFO  20:50:16,220 - #45 val
INFO  20:50:16,220 - #20 .
INFO  20:50:16,220 - #45 putp
INFO  20:50:16,221 - #16 (
INFO  20:50:16,221 - #45 val
INFO  20:50:16,221 - #20 .
INFO  20:50:16,221 - #45 getp
INFO  20:50:16,221 - #16 (
INFO  20:50:16,221 - #45 x
INFO  20:50:16,221 - #17 )
INFO  20:50:16,221 - #21 +
INFO  20:50:16,221 - #45 Num
INFO  20:50:16,221 - #20 .
INFO  20:50:16,221 - #45 ONE
INFO  20:50:16,221 - #17 )
INFO  20:50:16,221 - #18 ;
INFO  20:50:16,221 - #13 }
INFO  20:50:16,221 - #7 else
INFO  20:50:16,221 - #9 if
INFO  20:50:16,221 - #16 (
INFO  20:50:16,221 - #22 -
INFO  20:50:16,221 - #45 size
INFO  20:50:16,221 - #33 <
INFO  20:50:16,221 - #45 x
INFO  20:50:16,221 - #35 &&
INFO  20:50:16,221 - #45 x
INFO  20:50:16,221 - #33 <
INFO  20:50:16,221 - #44 0
INFO  20:50:16,221 - #17 )
INFO  20:50:16,221 - #12 {
INFO  20:50:16,221 - #45 val
INFO  20:50:16,221 - #20 .
INFO  20:50:16,221 - #45 putn
INFO  20:50:16,221 - #16 (
INFO  20:50:16,221 - #45 val
INFO  20:50:16,221 - #20 .
INFO  20:50:16,221 - #45 getn
INFO  20:50:16,221 - #16 (
INFO  20:50:16,221 - #22 -
INFO  20:50:16,221 - #45 x
INFO  20:50:16,221 - #17 )
INFO  20:50:16,221 - #21 +
INFO  20:50:16,221 - #44 1
INFO  20:50:16,221 - #17 )
INFO  20:50:16,221 - #18 ;
INFO  20:50:16,221 - #13 }
INFO  20:50:16,221 - #37 read
INFO  20:50:16,221 - #16 (
INFO  20:50:16,221 - #45 x
INFO  20:50:16,222 - #17 )
INFO  20:50:16,222 - #18 ;
INFO  20:50:16,222 - #13 }
INFO  20:50:16,222 - #13 }
INFO  20:50:16,222 - #13 }
INFO  20:50:16,222 - --EOF.
