INFO  18:50:38,244 - Putanja iz argumenta: test/program.mj
INFO  18:50:38,244 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  18:50:38,275 - #2 program
INFO  18:50:38,276 - #45 MojProgram
INFO  18:50:38,276 - #8 const
INFO  18:50:38,276 - #45 int
INFO  18:50:38,276 - #45 g
INFO  18:50:38,276 - #26 =
INFO  18:50:38,276 - #44 1
INFO  18:50:38,276 - #18 ;
INFO  18:50:38,276 - #4 class
INFO  18:50:38,277 - #45 Table
INFO  18:50:38,277 - #42 implements
INFO  18:50:38,277 - #45 I
INFO  18:50:38,277 - #12 {
INFO  18:50:38,277 - #45 int
INFO  18:50:38,278 - #45 ab
INFO  18:50:38,278 - #21 +
ERROR 18:50:38,278 - 
Sintaksna greska na liniji 5
INFO  18:50:38,278 - #18 ;
INFO  18:50:38,278 - #12 {
INFO  18:50:38,278 - #39 void
INFO  18:50:38,278 - #45 putp
INFO  18:50:38,278 - #16 (
ERROR 18:50:38,279 - [Deklaracija prom. u klasi] Izvrsen oporavak do sledeceg ';' u liniji 24
INFO  18:50:38,279 - #45 int
INFO  18:50:38,279 - #45 a
INFO  18:50:38,280 - #19 ,
INFO  18:50:38,280 - #45 int
INFO  18:50:38,280 - #45 idx
INFO  18:50:38,280 - #17 )
INFO  18:50:38,280 - #12 {
INFO  18:50:38,280 - #45 this
INFO  18:50:38,281 - #20 .
INFO  18:50:38,281 - #45 pos
INFO  18:50:38,281 - #14 [
INFO  18:50:38,281 - #45 idx
INFO  18:50:38,281 - #15 ]
INFO  18:50:38,282 - #26 =
INFO  18:50:38,282 - #45 a
INFO  18:50:38,282 - #18 ;
INFO  18:50:38,282 - #13 }
INFO  18:50:38,282 - #13 }
INFO  18:50:38,283 - #13 }
INFO  18:50:38,283 - #12 {
INFO  18:50:38,283 - #39 void
INFO  18:50:38,283 - #45 main
INFO  18:50:38,283 - #16 (
INFO  18:50:38,283 - #17 )
INFO  18:50:38,284 - #45 char
INFO  18:50:38,284 - #45 message
INFO  18:50:38,284 - #18 ;
INFO  18:50:38,284 - #45 int
INFO  18:50:38,284 - #45 c
INFO  18:50:38,284 - #19 ,
INFO  18:50:38,284 - #45 v
INFO  18:50:38,284 - #18 ;
INFO  18:50:38,284 - #12 {
INFO  18:50:38,284 - #45 c
INFO  18:50:38,284 - #26 =
INFO  18:50:38,285 - #44 10
INFO  18:50:38,285 - #18 ;
INFO  18:50:38,285 - #45 c
INFO  18:50:38,285 - #26 =
INFO  18:50:38,285 - #44 5
INFO  18:50:38,285 - #18 ;
INFO  18:50:38,285 - #45 a
INFO  18:50:38,285 - #26 =
INFO  18:50:38,285 - #45 a
INFO  18:50:38,285 - #21 +
INFO  18:50:38,285 - #44 1
INFO  18:50:38,286 - #18 ;
INFO  18:50:38,286 - #13 }
INFO  18:50:38,286 - #39 void
INFO  18:50:38,286 - #45 funkcija
INFO  18:50:38,286 - #16 (
INFO  18:50:38,286 - #45 char
INFO  18:50:38,286 - #45 x
INFO  18:50:38,286 - #14 [
INFO  18:50:38,286 - #15 ]
INFO  18:50:38,286 - #19 ,
INFO  18:50:38,286 - #45 int
INFO  18:50:38,286 - #45 a
INFO  18:50:38,286 - #19 ,
INFO  18:50:38,286 - #45 int
INFO  18:50:38,286 - #45 m
INFO  18:50:38,286 - #17 )
INFO  18:50:38,286 - #12 {
INFO  18:50:38,286 - #45 g
INFO  18:50:38,286 - #26 =
INFO  18:50:38,286 - #44 10
INFO  18:50:38,286 - #18 ;
INFO  18:50:38,287 - #40 for
INFO  18:50:38,287 - #16 (
INFO  18:50:38,287 - #45 i
INFO  18:50:38,287 - #26 =
INFO  18:50:38,287 - #44 0
INFO  18:50:38,287 - #18 ;
INFO  18:50:38,287 - #45 i
INFO  18:50:38,287 - #33 <
INFO  18:50:38,287 - #44 5
INFO  18:50:38,287 - #18 ;
INFO  18:50:38,288 - #45 i
INFO  18:50:38,288 - #27 ++
INFO  18:50:38,288 - #17 )
INFO  18:50:38,288 - #9 if
INFO  18:50:38,288 - #16 (
INFO  18:50:38,288 - #45 i
INFO  18:50:38,288 - #33 <
INFO  18:50:38,288 - #44 2
INFO  18:50:38,288 - #17 )
INFO  18:50:38,288 - #45 i
INFO  18:50:38,288 - #27 ++
INFO  18:50:38,288 - #18 ;
INFO  18:50:38,288 - #13 }
INFO  18:50:38,289 - #13 }
INFO  18:50:38,291 - Program(
 MojProgram
  Declarations(
    Declarations(
      NoDecl(
      ) [NoDecl]
      ConstDeclaration(
        ConstDeclNode(
          TypeNode(
           int
          ) [TypeNode]
          SingleConstant(
            EqualConstantNode(
             g
              NumberNode(
               1
              ) [NumberNode]
            ) [EqualConstantNode]
          ) [SingleConstant]
        ) [ConstDeclNode]
      ) [ConstDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDeclarationWithMethods(
       Table
        NoExtension(
        ) [NoExtension]
        Implementation(
          SinglType(
            TypeNode(
             I
            ) [TypeNode]
          ) [SinglType]
        ) [Implementation]
        ClassVarDeclarationList(
          NoClassVarDeclaration(
          ) [NoClassVarDeclaration]
          ErrorClassVarDecl(
          ) [ErrorClassVarDecl]
        ) [ClassVarDeclarationList]
        MethodDeclarations(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecl(
            VoidType(
            ) [VoidType]
           putp
            FormalParams(
              FormalParamDecls(
                SingleFormalParamDecl(
                  FormalParamDeclarationNoBrackets(
                    TypeNode(
                     int
                    ) [TypeNode]
                   a
                  ) [FormalParamDeclarationNoBrackets]
                ) [SingleFormalParamDecl]
                FormalParamDeclarationNoBrackets(
                  TypeNode(
                   int
                  ) [TypeNode]
                 idx
                ) [FormalParamDeclarationNoBrackets]
              ) [FormalParamDecls]
            ) [FormalParams]
            NoVarDeclaration(
            ) [NoVarDeclaration]
            Statements(
              NoStatement(
              ) [NoStatement]
              DesignatorStatementOnly(
                DesignatorStatementAssignop(
                  DesignatorNode(
                   this
                    Exprs(
                      Idents(
                        NoIdentExpr(
                        ) [NoIdentExpr]
                       pos
                      ) [Idents]
                      SingleExpression(
                        NoSingleMinus(
                        ) [NoSingleMinus]
                        TermFactor(
                          DesignatorEmpty(
                            DesignatorNode(
                             idx
                              NoIdentExpr(
                              ) [NoIdentExpr]
                            ) [DesignatorNode]
                          ) [DesignatorEmpty]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [Exprs]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    NoSingleMinus(
                    ) [NoSingleMinus]
                    TermFactor(
                      DesignatorEmpty(
                        DesignatorNode(
                         a
                          NoIdentExpr(
                          ) [NoIdentExpr]
                        ) [DesignatorNode]
                      ) [DesignatorEmpty]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementOnly]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
      ) [ClassDeclarationWithMethods]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        VoidType(
        ) [VoidType]
       main
        NoFormalParam(
        ) [NoFormalParam]
        VarDeclarationList(
          VarDeclarationList(
            NoVarDeclaration(
            ) [NoVarDeclaration]
            VarDeclNode(
              TypeNode(
               char
              ) [TypeNode]
              SingleVariable(
                VariableNoBracket(
                 message
                ) [VariableNoBracket]
              ) [SingleVariable]
            ) [VarDeclNode]
          ) [VarDeclarationList]
          VarDeclNode(
            TypeNode(
             int
            ) [TypeNode]
            Variables(
              SingleVariable(
                VariableNoBracket(
                 c
                ) [VariableNoBracket]
              ) [SingleVariable]
              VariableNoBracket(
               v
              ) [VariableNoBracket]
            ) [Variables]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        Statements(
          Statements(
            Statements(
              NoStatement(
              ) [NoStatement]
              DesignatorStatementOnly(
                DesignatorStatementAssignop(
                  DesignatorNode(
                   c
                    NoIdentExpr(
                    ) [NoIdentExpr]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    NoSingleMinus(
                    ) [NoSingleMinus]
                    TermFactor(
                      ConstantNumber(
                       10
                      ) [ConstantNumber]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementOnly]
            ) [Statements]
            DesignatorStatementOnly(
              DesignatorStatementAssignop(
                DesignatorNode(
                 c
                  NoIdentExpr(
                  ) [NoIdentExpr]
                ) [DesignatorNode]
                Assignop(
                ) [Assignop]
                SingleExpression(
                  NoSingleMinus(
                  ) [NoSingleMinus]
                  TermFactor(
                    ConstantNumber(
                     5
                    ) [ConstantNumber]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementOnly]
          ) [Statements]
          DesignatorStatementOnly(
            DesignatorStatementAssignop(
              DesignatorNode(
               a
                NoIdentExpr(
                ) [NoIdentExpr]
              ) [DesignatorNode]
              Assignop(
              ) [Assignop]
              ExpressionNode(
                SingleExpression(
                  NoSingleMinus(
                  ) [NoSingleMinus]
                  TermFactor(
                    DesignatorEmpty(
                      DesignatorNode(
                       a
                        NoIdentExpr(
                        ) [NoIdentExpr]
                      ) [DesignatorNode]
                    ) [DesignatorEmpty]
                  ) [TermFactor]
                ) [SingleExpression]
                AddopPlus(
                ) [AddopPlus]
                TermFactor(
                  ConstantNumber(
                   1
                  ) [ConstantNumber]
                ) [TermFactor]
              ) [ExpressionNode]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementOnly]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      VoidType(
      ) [VoidType]
     funkcija
      FormalParams(
        FormalParamDecls(
          FormalParamDecls(
            SingleFormalParamDecl(
              FormalParamDeclarationBrackets(
                TypeNode(
                 char
                ) [TypeNode]
               x
              ) [FormalParamDeclarationBrackets]
            ) [SingleFormalParamDecl]
            FormalParamDeclarationNoBrackets(
              TypeNode(
               int
              ) [TypeNode]
             a
            ) [FormalParamDeclarationNoBrackets]
          ) [FormalParamDecls]
          FormalParamDeclarationNoBrackets(
            TypeNode(
             int
            ) [TypeNode]
           m
          ) [FormalParamDeclarationNoBrackets]
        ) [FormalParamDecls]
      ) [FormalParams]
      NoVarDeclaration(
      ) [NoVarDeclaration]
      Statements(
        Statements(
          NoStatement(
          ) [NoStatement]
          DesignatorStatementOnly(
            DesignatorStatementAssignop(
              DesignatorNode(
               g
                NoIdentExpr(
                ) [NoIdentExpr]
              ) [DesignatorNode]
              Assignop(
              ) [Assignop]
              SingleExpression(
                NoSingleMinus(
                ) [NoSingleMinus]
                TermFactor(
                  ConstantNumber(
                   10
                  ) [ConstantNumber]
                ) [TermFactor]
              ) [SingleExpression]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementOnly]
        ) [Statements]
        ForStatement(
          DesignatorStatementNotNull(
            DesignatorStatementAssignop(
              DesignatorNode(
               i
                NoIdentExpr(
                ) [NoIdentExpr]
              ) [DesignatorNode]
              Assignop(
              ) [Assignop]
              SingleExpression(
                NoSingleMinus(
                ) [NoSingleMinus]
                TermFactor(
                  ConstantNumber(
                   0
                  ) [ConstantNumber]
                ) [TermFactor]
              ) [SingleExpression]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementNotNull]
          ConditionNotNull(
            ConditionNode(
              SingleConditionTerm(
                ConditionTermNode(
                  SingleConditionFact(
                    CondFactExpressionRelopExpression(
                      SingleExpression(
                        NoSingleMinus(
                        ) [NoSingleMinus]
                        TermFactor(
                          DesignatorEmpty(
                            DesignatorNode(
                             i
                              NoIdentExpr(
                              ) [NoIdentExpr]
                            ) [DesignatorNode]
                          ) [DesignatorEmpty]
                        ) [TermFactor]
                      ) [SingleExpression]
                      RelopLess(
                      ) [RelopLess]
                      SingleExpression(
                        NoSingleMinus(
                        ) [NoSingleMinus]
                        TermFactor(
                          ConstantNumber(
                           5
                          ) [ConstantNumber]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [CondFactExpressionRelopExpression]
                  ) [SingleConditionFact]
                ) [ConditionTermNode]
              ) [SingleConditionTerm]
            ) [ConditionNode]
          ) [ConditionNotNull]
          DesignatorStatementNotNull(
            DesignatorStatementPlusPlus(
              DesignatorNode(
               i
                NoIdentExpr(
                ) [NoIdentExpr]
              ) [DesignatorNode]
            ) [DesignatorStatementPlusPlus]
          ) [DesignatorStatementNotNull]
          IfStatement(
            IfConditionNode(
              ConditionNode(
                SingleConditionTerm(
                  ConditionTermNode(
                    SingleConditionFact(
                      CondFactExpressionRelopExpression(
                        SingleExpression(
                          NoSingleMinus(
                          ) [NoSingleMinus]
                          TermFactor(
                            DesignatorEmpty(
                              DesignatorNode(
                               i
                                NoIdentExpr(
                                ) [NoIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermFactor]
                        ) [SingleExpression]
                        RelopLess(
                        ) [RelopLess]
                        SingleExpression(
                          NoSingleMinus(
                          ) [NoSingleMinus]
                          TermFactor(
                            ConstantNumber(
                             2
                            ) [ConstantNumber]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [CondFactExpressionRelopExpression]
                    ) [SingleConditionFact]
                  ) [ConditionTermNode]
                ) [SingleConditionTerm]
              ) [ConditionNode]
            ) [IfConditionNode]
            DesignatorStatementOnly(
              DesignatorStatementPlusPlus(
                DesignatorNode(
                 i
                  NoIdentExpr(
                  ) [NoIdentExpr]
                ) [DesignatorNode]
              ) [DesignatorStatementPlusPlus]
            ) [DesignatorStatementOnly]
          ) [IfStatement]
        ) [ForStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  18:50:38,291 - ===================================
