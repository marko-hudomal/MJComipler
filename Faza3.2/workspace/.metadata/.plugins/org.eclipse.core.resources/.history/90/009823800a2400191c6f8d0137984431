INFO  01:55:20,115 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  01:55:20,144 - #2 program
INFO  01:55:20,145 - #45 MojProgram
INFO  01:55:20,145 - #8 const
INFO  01:55:20,145 - #45 int
INFO  01:55:20,145 - #45 test_konstanta
INFO  01:55:20,145 - #26 =
INFO  01:55:20,145 - #44 0
INFO  01:55:20,145 - #18 ;
INFO  01:55:20,145 - #45 int
INFO  01:55:20,146 - #45 test_variabla
INFO  01:55:20,146 - #14 [
INFO  01:55:20,146 - #15 ]
INFO  01:55:20,146 - #18 ;
INFO  01:55:20,146 - #4 class
INFO  01:55:20,146 - #45 Klasa
INFO  01:55:20,146 - #12 {
INFO  01:55:20,147 - #45 char
INFO  01:55:20,147 - #45 prom
INFO  01:55:20,147 - #19 ,
INFO  01:55:20,147 - #45 array
INFO  01:55:20,147 - #14 [
INFO  01:55:20,148 - #15 ]
INFO  01:55:20,148 - #19 ,
INFO  01:55:20,148 - #45 x
INFO  01:55:20,148 - #18 ;
INFO  01:55:20,148 - #45 char
INFO  01:55:20,148 - #45 m
INFO  01:55:20,148 - #18 ;
INFO  01:55:20,148 - #45 bool
INFO  01:55:20,148 - #45 a
INFO  01:55:20,148 - #19 ,
INFO  01:55:20,148 - #45 b
INFO  01:55:20,148 - #18 ;
INFO  01:55:20,148 - #45 Klasa2
INFO  01:55:20,148 - #45 k2
INFO  01:55:20,148 - #18 ;
INFO  01:55:20,148 - #12 {
INFO  01:55:20,149 - #45 char
INFO  01:55:20,149 - #45 funkc
INFO  01:55:20,149 - #16 (
INFO  01:55:20,149 - #45 bool
INFO  01:55:20,149 - #45 b
INFO  01:55:20,149 - #19 ,
INFO  01:55:20,149 - #45 char
INFO  01:55:20,149 - #45 o
INFO  01:55:20,149 - #17 )
INFO  01:55:20,150 - #45 int
INFO  01:55:20,150 - #45 prom_x
INFO  01:55:20,150 - #18 ;
INFO  01:55:20,150 - #45 char
INFO  01:55:20,150 - #45 prom_c1
INFO  01:55:20,150 - #19 ,
INFO  01:55:20,150 - #45 prom_c2
INFO  01:55:20,150 - #18 ;
INFO  01:55:20,150 - #12 {
INFO  01:55:20,150 - #45 prom_x
INFO  01:55:20,150 - #26 =
INFO  01:55:20,151 - #44 1
INFO  01:55:20,151 - #18 ;
INFO  01:55:20,152 - #45 prom_c1
INFO  01:55:20,152 - #26 =
INFO  01:55:20,152 - #46 A
INFO  01:55:20,152 - #21 +
INFO  01:55:20,152 - #44 5
INFO  01:55:20,153 - #18 ;
INFO  01:55:20,153 - #45 prom_c2
INFO  01:55:20,153 - #26 =
INFO  01:55:20,153 - #10 new
INFO  01:55:20,153 - #45 Klasa2
INFO  01:55:20,153 - #18 ;
INFO  01:55:20,153 - #38 return
INFO  01:55:20,154 - #22 -
INFO  01:55:20,154 - #45 metoda1_x
INFO  01:55:20,154 - #23 *
INFO  01:55:20,154 - #45 funkc
INFO  01:55:20,154 - #16 (
INFO  01:55:20,154 - #47 true
INFO  01:55:20,154 - #17 )
INFO  01:55:20,155 - #18 ;
INFO  01:55:20,155 - #13 }
INFO  01:55:20,155 - #39 void
INFO  01:55:20,156 - #45 funkc2
INFO  01:55:20,156 - #16 (
INFO  01:55:20,156 - #17 )
INFO  01:55:20,156 - #12 {
INFO  01:55:20,156 - #45 this
INFO  01:55:20,156 - #20 .
INFO  01:55:20,156 - #45 a
INFO  01:55:20,156 - #26 =
INFO  01:55:20,157 - #47 false
INFO  01:55:20,157 - #18 ;
INFO  01:55:20,157 - #9 if
INFO  01:55:20,157 - #16 (
INFO  01:55:20,157 - #45 this
INFO  01:55:20,157 - #20 .
INFO  01:55:20,157 - #45 a
INFO  01:55:20,157 - #29 ==
INFO  01:55:20,157 - #45 this
INFO  01:55:20,157 - #20 .
INFO  01:55:20,157 - #45 b
INFO  01:55:20,157 - #17 )
INFO  01:55:20,158 - #37 read
INFO  01:55:20,158 - #16 (
INFO  01:55:20,158 - #45 this
INFO  01:55:20,158 - #20 .
INFO  01:55:20,158 - #45 k2
INFO  01:55:20,158 - #20 .
INFO  01:55:20,158 - #45 a
INFO  01:55:20,158 - #14 [
INFO  01:55:20,158 - #44 0
INFO  01:55:20,158 - #15 ]
INFO  01:55:20,158 - #17 )
INFO  01:55:20,158 - #18 ;
INFO  01:55:20,158 - #7 else
INFO  01:55:20,159 - #12 {
INFO  01:55:20,159 - #9 if
INFO  01:55:20,159 - #16 (
INFO  01:55:20,159 - #47 true
INFO  01:55:20,159 - #17 )
INFO  01:55:20,159 - #12 {
INFO  01:55:20,159 - #3 break
INFO  01:55:20,159 - #18 ;
INFO  01:55:20,159 - #43 continue
INFO  01:55:20,159 - #18 ;
INFO  01:55:20,159 - #9 if
INFO  01:55:20,159 - #16 (
INFO  01:55:20,159 - #45 prom_x
INFO  01:55:20,160 - #36 ||
INFO  01:55:20,160 - #45 prom_c1
INFO  01:55:20,160 - #31 >
INFO  01:55:20,160 - #46 A
INFO  01:55:20,160 - #17 )
INFO  01:55:20,161 - #9 if
INFO  01:55:20,161 - #16 (
INFO  01:55:20,161 - #44 1
INFO  01:55:20,161 - #33 <
INFO  01:55:20,161 - #44 2
INFO  01:55:20,162 - #17 )
INFO  01:55:20,162 - #12 {
INFO  01:55:20,162 - #45 prom_x
INFO  01:55:20,162 - #26 =
INFO  01:55:20,162 - #44 15
INFO  01:55:20,162 - #18 ;
INFO  01:55:20,162 - #40 for
INFO  01:55:20,162 - #16 (
INFO  01:55:20,162 - #18 ;
INFO  01:55:20,162 - #18 ;
INFO  01:55:20,163 - #17 )
INFO  01:55:20,163 - #11 print
INFO  01:55:20,163 - #16 (
INFO  01:55:20,163 - #46 i
INFO  01:55:20,163 - #19 ,
INFO  01:55:20,163 - #44 2
INFO  01:55:20,163 - #17 )
INFO  01:55:20,163 - #18 ;
INFO  01:55:20,163 - #13 }
INFO  01:55:20,163 - #13 }
INFO  01:55:20,163 - #13 }
INFO  01:55:20,163 - #40 for
INFO  01:55:20,163 - #16 (
INFO  01:55:20,163 - #45 this
INFO  01:55:20,163 - #20 .
INFO  01:55:20,163 - #45 k2
INFO  01:55:20,163 - #20 .
INFO  01:55:20,163 - #45 a
INFO  01:55:20,163 - #14 [
INFO  01:55:20,163 - #44 0
INFO  01:55:20,163 - #21 +
INFO  01:55:20,164 - #44 0
INFO  01:55:20,164 - #15 ]
INFO  01:55:20,164 - #26 =
INFO  01:55:20,164 - #44 0
INFO  01:55:20,164 - #18 ;
INFO  01:55:20,164 - #45 this
INFO  01:55:20,164 - #20 .
INFO  01:55:20,164 - #45 k2
INFO  01:55:20,164 - #20 .
INFO  01:55:20,164 - #45 a
INFO  01:55:20,164 - #14 [
INFO  01:55:20,164 - #44 0
INFO  01:55:20,164 - #21 +
INFO  01:55:20,164 - #44 0
INFO  01:55:20,164 - #15 ]
INFO  01:55:20,164 - #33 <
INFO  01:55:20,164 - #44 2
INFO  01:55:20,164 - #18 ;
INFO  01:55:20,164 - #45 this
INFO  01:55:20,164 - #20 .
INFO  01:55:20,164 - #45 k2
INFO  01:55:20,164 - #20 .
INFO  01:55:20,164 - #45 a
INFO  01:55:20,164 - #14 [
INFO  01:55:20,164 - #44 0
INFO  01:55:20,164 - #21 +
INFO  01:55:20,164 - #44 0
INFO  01:55:20,164 - #21 +
INFO  01:55:20,164 - #10 new
INFO  01:55:20,164 - #45 Klasa2
INFO  01:55:20,165 - #14 [
INFO  01:55:20,165 - #44 2
INFO  01:55:20,165 - #23 *
INFO  01:55:20,165 - #44 5
INFO  01:55:20,165 - #25 %
INFO  01:55:20,165 - #44 2
INFO  01:55:20,165 - #15 ]
INFO  01:55:20,165 - #15 ]
INFO  01:55:20,165 - #27 ++
INFO  01:55:20,165 - #17 )
INFO  01:55:20,165 - #12 {
INFO  01:55:20,165 - #3 break
INFO  01:55:20,165 - #18 ;
INFO  01:55:20,165 - #43 continue
INFO  01:55:20,165 - #18 ;
INFO  01:55:20,165 - #9 if
INFO  01:55:20,165 - #16 (
INFO  01:55:20,165 - #45 this
INFO  01:55:20,165 - #20 .
INFO  01:55:20,165 - #45 k2
INFO  01:55:20,165 - #20 .
INFO  01:55:20,165 - #45 a
INFO  01:55:20,165 - #14 [
INFO  01:55:20,165 - #44 1
INFO  01:55:20,165 - #15 ]
INFO  01:55:20,165 - #21 +
INFO  01:55:20,165 - #45 funkc
INFO  01:55:20,165 - #16 (
INFO  01:55:20,166 - #47 true
INFO  01:55:20,166 - #17 )
INFO  01:55:20,166 - #31 >
INFO  01:55:20,166 - #44 2
INFO  01:55:20,166 - #17 )
INFO  01:55:20,166 - #37 read
INFO  01:55:20,166 - #16 (
INFO  01:55:20,166 - #45 this
INFO  01:55:20,166 - #20 .
INFO  01:55:20,166 - #45 k2
INFO  01:55:20,166 - #20 .
INFO  01:55:20,166 - #45 a
INFO  01:55:20,166 - #14 [
INFO  01:55:20,166 - #44 2
INFO  01:55:20,166 - #15 ]
INFO  01:55:20,166 - #17 )
INFO  01:55:20,166 - #18 ;
INFO  01:55:20,166 - #13 }
INFO  01:55:20,166 - #38 return
INFO  01:55:20,166 - #18 ;
INFO  01:55:20,167 - #13 }
INFO  01:55:20,167 - #13 }
INFO  01:55:20,167 - #13 }
INFO  01:55:20,167 - #4 class
INFO  01:55:20,167 - #45 Klasa2
INFO  01:55:20,167 - #12 {
INFO  01:55:20,167 - #45 int
INFO  01:55:20,167 - #45 a
INFO  01:55:20,167 - #14 [
INFO  01:55:20,167 - #15 ]
INFO  01:55:20,167 - #18 ;
INFO  01:55:20,167 - #13 }
INFO  01:55:20,167 - #4 class
INFO  01:55:20,168 - #45 Klasa3
INFO  01:55:20,168 - #12 {
INFO  01:55:20,168 - #13 }
INFO  01:55:20,168 - #5 interface
INFO  01:55:20,168 - #45 Interfejs1
INFO  01:55:20,168 - #12 {
INFO  01:55:20,168 - #39 void
INFO  01:55:20,168 - #45 printstr
INFO  01:55:20,168 - #16 (
INFO  01:55:20,168 - #45 char
INFO  01:55:20,168 - #45 str
INFO  01:55:20,168 - #14 [
INFO  01:55:20,168 - #15 ]
INFO  01:55:20,168 - #17 )
INFO  01:55:20,168 - #18 ;
INFO  01:55:20,168 - #13 }
INFO  01:55:20,168 - #5 interface
INFO  01:55:20,169 - #45 Interfejs2
INFO  01:55:20,169 - #12 {
INFO  01:55:20,169 - #45 Klasa3
INFO  01:55:20,169 - #45 vratiK3
INFO  01:55:20,169 - #16 (
INFO  01:55:20,169 - #17 )
INFO  01:55:20,169 - #18 ;
INFO  01:55:20,169 - #13 }
INFO  01:55:20,169 - #5 interface
INFO  01:55:20,169 - #45 Interfejs3
INFO  01:55:20,169 - #12 {
INFO  01:55:20,169 - #13 }
INFO  01:55:20,169 - #45 Klasa
INFO  01:55:20,169 - #45 klasa1
INFO  01:55:20,169 - #18 ;
INFO  01:55:20,169 - #8 const
INFO  01:55:20,169 - #45 int
INFO  01:55:20,169 - #45 konstanta1
INFO  01:55:20,169 - #26 =
INFO  01:55:20,169 - #44 5
INFO  01:55:20,169 - #19 ,
INFO  01:55:20,169 - #45 konstanta2
INFO  01:55:20,169 - #26 =
INFO  01:55:20,169 - #46 a
INFO  01:55:20,169 - #18 ;
INFO  01:55:20,169 - #45 bool
INFO  01:55:20,169 - #45 m
INFO  01:55:20,169 - #18 ;
INFO  01:55:20,169 - #8 const
INFO  01:55:20,170 - #45 bool
INFO  01:55:20,170 - #45 konstanta_m
INFO  01:55:20,170 - #26 =
INFO  01:55:20,170 - #47 false
INFO  01:55:20,170 - #18 ;
INFO  01:55:20,170 - #45 char
INFO  01:55:20,170 - #45 arr
INFO  01:55:20,170 - #14 [
INFO  01:55:20,170 - #15 ]
INFO  01:55:20,170 - #18 ;
INFO  01:55:20,170 - #4 class
INFO  01:55:20,170 - #45 Util
INFO  01:55:20,170 - #42 implements
INFO  01:55:20,170 - #45 Interfejs1
INFO  01:55:20,170 - #19 ,
INFO  01:55:20,170 - #45 Interfejs2
INFO  01:55:20,170 - #19 ,
INFO  01:55:20,171 - #45 Interfejs3
INFO  01:55:20,171 - #12 {
INFO  01:55:20,171 - #12 {
INFO  01:55:20,171 - #39 void
INFO  01:55:20,171 - #45 printstr
INFO  01:55:20,171 - #16 (
INFO  01:55:20,171 - #45 char
INFO  01:55:20,171 - #45 s
INFO  01:55:20,171 - #14 [
INFO  01:55:20,171 - #15 ]
INFO  01:55:20,171 - #17 )
INFO  01:55:20,171 - #45 Klasa2
INFO  01:55:20,171 - #45 k2
INFO  01:55:20,171 - #18 ;
INFO  01:55:20,171 - #45 char
INFO  01:55:20,171 - #45 chr
INFO  01:55:20,171 - #14 [
INFO  01:55:20,171 - #15 ]
INFO  01:55:20,171 - #18 ;
INFO  01:55:20,171 - #12 {
INFO  01:55:20,171 - #45 chr
INFO  01:55:20,171 - #26 =
INFO  01:55:20,171 - #10 new
INFO  01:55:20,171 - #45 char
INFO  01:55:20,171 - #14 [
INFO  01:55:20,171 - #44 3
INFO  01:55:20,171 - #15 ]
INFO  01:55:20,171 - #18 ;
INFO  01:55:20,171 - #45 chr
INFO  01:55:20,171 - #14 [
INFO  01:55:20,171 - #44 0
INFO  01:55:20,171 - #15 ]
INFO  01:55:20,171 - #26 =
INFO  01:55:20,171 - #46 I
INFO  01:55:20,171 - #18 ;
INFO  01:55:20,171 - #45 chr
INFO  01:55:20,171 - #14 [
INFO  01:55:20,171 - #44 1
INFO  01:55:20,171 - #15 ]
INFO  01:55:20,171 - #26 =
INFO  01:55:20,171 - #46 m
INFO  01:55:20,171 - #18 ;
INFO  01:55:20,171 - #45 chr
INFO  01:55:20,172 - #14 [
INFO  01:55:20,172 - #44 2
INFO  01:55:20,172 - #15 ]
INFO  01:55:20,172 - #26 =
INFO  01:55:20,172 - #46 a
INFO  01:55:20,172 - #18 ;
INFO  01:55:20,172 - #45 pca
INFO  01:55:20,172 - #26 =
INFO  01:55:20,172 - #10 new
INFO  01:55:20,172 - #45 PackedCharArray
INFO  01:55:20,172 - #18 ;
INFO  01:55:20,172 - #45 pca
INFO  01:55:20,172 - #20 .
INFO  01:55:20,172 - #45 array
INFO  01:55:20,172 - #26 =
INFO  01:55:20,172 - #45 chr
INFO  01:55:20,172 - #18 ;
INFO  01:55:20,172 - #38 return
INFO  01:55:20,172 - #45 pca
INFO  01:55:20,172 - #18 ;
INFO  01:55:20,172 - #13 }
INFO  01:55:20,172 - #45 Klasa3
INFO  01:55:20,172 - #45 vratiK3
INFO  01:55:20,172 - #16 (
INFO  01:55:20,172 - #17 )
INFO  01:55:20,172 - #12 {
INFO  01:55:20,172 - #38 return
INFO  01:55:20,172 - #22 -
INFO  01:55:20,172 - #10 new
INFO  01:55:20,172 - #45 Klasa3
INFO  01:55:20,172 - #16 (
ERROR 01:55:20,172 - 
Sintaksna greska na liniji 99
ERROR 01:55:20,172 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 99
