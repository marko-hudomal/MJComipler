// generated with ast extension for cup
// version 0.8
// 7/0/2019 4:14:13


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(EnumDecl EnumDecl);
    public void visit(Mulop Mulop);
    public void visit(InterfaceMethodDeclList InterfaceMethodDeclList);
    public void visit(InterfaceDecl InterfaceDecl);
    public void visit(Constant Constant);
    public void visit(Matched Matched);
    public void visit(Relop Relop);
    public void visit(MulopFactorList MulopFactorList);
    public void visit(CondTermList CondTermList);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(ExprOrNull ExprOrNull);
    public void visit(NewNode NewNode);
    public void visit(ConditionOrNull ConditionOrNull);
    public void visit(Variable Variable);
    public void visit(StatementList StatementList);
    public void visit(Addop Addop);
    public void visit(TypeList TypeList);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(VarList VarList);
    public void visit(MinusOrNull MinusOrNull);
    public void visit(CondFactList CondFactList);
    public void visit(ConstList ConstList);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(InterfaceMethodDecl InterfaceMethodDecl);
    public void visit(Term Term);
    public void visit(Condition Condition);
    public void visit(ActParsList ActParsList);
    public void visit(EnumList EnumList);
    public void visit(ActualParamList ActualParamList);
    public void visit(ExprList ExprList);
    public void visit(Ext Ext);
    public void visit(Impl Impl);
    public void visit(VarDeclList VarDeclList);
    public void visit(FormalParamList FormalParamList);
    public void visit(Expr Expr);
    public void visit(ActPars ActPars);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(ActualPars ActualPars);
    public void visit(Decl Decl);
    public void visit(DesignatorStatementOrNull DesignatorStatementOrNull);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(Type Type);
    public void visit(ClassDecl ClassDecl);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(SemiOrComma SemiOrComma);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(FormPars FormPars);
    public void visit(Enumeration Enumeration);
    public void visit(ReturnTypes ReturnTypes);
    public void visit(IdentExprList IdentExprList);
    public void visit(AddopTermList AddopTermList);
    public void visit(AddopPerc AddopPerc);
    public void visit(AddopDiv AddopDiv);
    public void visit(AddopMul AddopMul);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(RelopLessEqual RelopLessEqual);
    public void visit(RelopLess RelopLess);
    public void visit(RelopGreaterEqual RelopGreaterEqual);
    public void visit(RelopGreater RelopGreater);
    public void visit(RelopNotEqual RelopNotEqual);
    public void visit(RelopEqualEqual RelopEqualEqual);
    public void visit(Assignop Assignop);
    public void visit(NoIdentExpr NoIdentExpr);
    public void visit(Exprs Exprs);
    public void visit(Idents Idents);
    public void visit(DesignatorNode DesignatorNode);
    public void visit(NodeEmpty NodeEmpty);
    public void visit(Node Node);
    public void visit(ExprParenNode ExprParenNode);
    public void visit(NewEmpty NewEmpty);
    public void visit(ConstantBoolean ConstantBoolean);
    public void visit(ConstantCharacter ConstantCharacter);
    public void visit(ConstantNumber ConstantNumber);
    public void visit(DesignatorBraceActPars DesignatorBraceActPars);
    public void visit(DesignatorEmpty DesignatorEmpty);
    public void visit(TermFactor TermFactor);
    public void visit(TermNode TermNode);
    public void visit(NoSingleMinus NoSingleMinus);
    public void visit(SingleMinus SingleMinus);
    public void visit(SingleExpression SingleExpression);
    public void visit(ExpressionNode ExpressionNode);
    public void visit(CondFactExpressionRelopExpression CondFactExpressionRelopExpression);
    public void visit(CondFactExpression CondFactExpression);
    public void visit(SingleConditionFact SingleConditionFact);
    public void visit(ConditionFacts ConditionFacts);
    public void visit(ConditionTermNode ConditionTermNode);
    public void visit(SingleConditionTerm SingleConditionTerm);
    public void visit(ConditionTerms ConditionTerms);
    public void visit(ConditionNode ConditionNode);
    public void visit(SingleActualParam SingleActualParam);
    public void visit(ActualParametres ActualParametres);
    public void visit(NoActAprsNode NoActAprsNode);
    public void visit(ActParsNode ActParsNode);
    public void visit(DesignatorStatementMinusMinus DesignatorStatementMinusMinus);
    public void visit(DesignatorStatementPlusPlus DesignatorStatementPlusPlus);
    public void visit(DesignatorStatementActPars DesignatorStatementActPars);
    public void visit(DesignatorStatementAssignop DesignatorStatementAssignop);
    public void visit(ExprNull ExprNull);
    public void visit(ExprNotNull ExprNotNull);
    public void visit(ConditionNull ConditionNull);
    public void visit(ConditionNotNull ConditionNotNull);
    public void visit(DesignatorStatementNull DesignatorStatementNull);
    public void visit(DesignatorStatementNotNull DesignatorStatementNotNull);
    public void visit(InBraceStatement InBraceStatement);
    public void visit(PrintWithNumConstStatement PrintWithNumConstStatement);
    public void visit(PrintStatement PrintStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(ReturnStatement ReturnStatement);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(ForStatement ForStatement);
    public void visit(IfElseStatement IfElseStatement);
    public void visit(ErrorStmt ErrorStmt);
    public void visit(IfStatement IfStatement);
    public void visit(DesignatorStatementOnly DesignatorStatementOnly);
    public void visit(NoStatement NoStatement);
    public void visit(Statements Statements);
    public void visit(FormalParamDeclarationNoBrackets FormalParamDeclarationNoBrackets);
    public void visit(FormalParamDeclarationBrackets FormalParamDeclarationBrackets);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamDecls FormalParamDecls);
    public void visit(NoFormalParam NoFormalParam);
    public void visit(FormalParams FormalParams);
    public void visit(VoidType VoidType);
    public void visit(NoVoidType NoVoidType);
    public void visit(InterfaceMethodDeclarationWithParams InterfaceMethodDeclarationWithParams);
    public void visit(NoInterfaceMethodDeclaration NoInterfaceMethodDeclaration);
    public void visit(InterfaceMethodDeclarations InterfaceMethodDeclarations);
    public void visit(InterfaceDeclarationNode InterfaceDeclarationNode);
    public void visit(EnumerationVal EnumerationVal);
    public void visit(EnumerationNoVal EnumerationNoVal);
    public void visit(SingleEnumeration SingleEnumeration);
    public void visit(Enumerations Enumerations);
    public void visit(EnumDeclarationNode EnumDeclarationNode);
    public void visit(NoVarDeclaration NoVarDeclaration);
    public void visit(VarDeclarationList VarDeclarationList);
    public void visit(SinglType SinglType);
    public void visit(TypeListNode TypeListNode);
    public void visit(NoImplementation NoImplementation);
    public void visit(Implementation Implementation);
    public void visit(NoExtension NoExtension);
    public void visit(Extension Extension);
    public void visit(ClassDeclarationWithMethods ClassDeclarationWithMethods);
    public void visit(ClassDeclarationWithoutMethods ClassDeclarationWithoutMethods);
    public void visit(VariableBracket VariableBracket);
    public void visit(VariableNoBracket VariableNoBracket);
    public void visit(CommaE CommaE);
    public void visit(SemiE SemiE);
    public void visit(SingleVariable SingleVariable);
    public void visit(Variables Variables);
    public void visit(VarDeclNode VarDeclNode);
    public void visit(BooleanNode BooleanNode);
    public void visit(CharNode CharNode);
    public void visit(NumberNode NumberNode);
    public void visit(SingleConstant SingleConstant);
    public void visit(Constants Constants);
    public void visit(ConstDeclNode ConstDeclNode);
    public void visit(InterfaceDeclaration InterfaceDeclaration);
    public void visit(EnumDeclaration EnumDeclaration);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(NoDecl NoDecl);
    public void visit(Declarations Declarations);
    public void visit(TypeNode TypeNode);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(Program Program);

}
