INFO  02:47:03,843 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  02:47:03,872 - #2 program
INFO  02:47:03,872 - #45 P
INFO  02:47:03,872 - #8 const
INFO  02:47:03,873 - #45 int
INFO  02:47:03,873 - #45 size
INFO  02:47:03,873 - #26 =
INFO  02:47:03,873 - #44 10
INFO  02:47:03,873 - #18 ;
INFO  02:47:03,874 - #6 enum
INFO  02:47:03,874 - #45 Num
INFO  02:47:03,874 - #12 {
INFO  02:47:03,874 - #45 ZERO
INFO  02:47:03,874 - #19 ,
INFO  02:47:03,874 - #45 ONE
INFO  02:47:03,874 - #19 ,
INFO  02:47:03,874 - #45 TEN
INFO  02:47:03,874 - #26 =
INFO  02:47:03,875 - #44 10
INFO  02:47:03,875 - #13 }
INFO  02:47:03,875 - #5 interface
INFO  02:47:03,875 - #45 I
INFO  02:47:03,875 - #12 {
INFO  02:47:03,875 - #45 int
INFO  02:47:03,875 - #45 getp
INFO  02:47:03,876 - #16 (
INFO  02:47:03,876 - #45 int
INFO  02:47:03,876 - #45 i
INFO  02:47:03,876 - #17 )
INFO  02:47:03,876 - #18 ;
INFO  02:47:03,876 - #45 int
INFO  02:47:03,876 - #45 getn
INFO  02:47:03,876 - #16 (
INFO  02:47:03,876 - #45 int
INFO  02:47:03,876 - #45 i
INFO  02:47:03,876 - #17 )
INFO  02:47:03,876 - #18 ;
INFO  02:47:03,876 - #13 }
INFO  02:47:03,876 - #4 class
INFO  02:47:03,877 - #45 Table
INFO  02:47:03,877 - #41 implements
INFO  02:47:03,877 - #45 I
INFO  02:47:03,877 - #12 {
INFO  02:47:03,877 - #45 int
INFO  02:47:03,877 - #45 pos
INFO  02:47:03,878 - #14 [
INFO  02:47:03,878 - #15 ]
INFO  02:47:03,878 - #19 ,
INFO  02:47:03,878 - #45 neg
INFO  02:47:03,878 - #14 [
INFO  02:47:03,878 - #15 ]
INFO  02:47:03,878 - #18 ;
INFO  02:47:03,878 - #12 {
INFO  02:47:03,878 - #39 void
INFO  02:47:03,878 - #45 putp
INFO  02:47:03,879 - #16 (
INFO  02:47:03,879 - #45 int
INFO  02:47:03,879 - #45 a
INFO  02:47:03,879 - #19 ,
INFO  02:47:03,879 - #45 int
INFO  02:47:03,879 - #45 idx
INFO  02:47:03,879 - #17 )
INFO  02:47:03,879 - #12 {
INFO  02:47:03,879 - #45 this
INFO  02:47:03,879 - #20 .
INFO  02:47:03,880 - #45 pos
INFO  02:47:03,880 - #14 [
INFO  02:47:03,880 - #45 idx
INFO  02:47:03,880 - #15 ]
INFO  02:47:03,882 - #26 =
INFO  02:47:03,882 - #45 a
INFO  02:47:03,882 - #18 ;
INFO  02:47:03,882 - #13 }
INFO  02:47:03,883 - #39 void
INFO  02:47:03,883 - #45 putn
INFO  02:47:03,883 - #16 (
INFO  02:47:03,883 - #45 int
INFO  02:47:03,883 - #45 a
INFO  02:47:03,883 - #19 ,
INFO  02:47:03,883 - #45 int
INFO  02:47:03,883 - #45 idx
INFO  02:47:03,883 - #17 )
INFO  02:47:03,883 - #12 {
INFO  02:47:03,883 - #45 this
INFO  02:47:03,883 - #20 .
INFO  02:47:03,883 - #45 neg
INFO  02:47:03,883 - #14 [
INFO  02:47:03,883 - #45 idx
INFO  02:47:03,883 - #15 ]
INFO  02:47:03,884 - #26 =
INFO  02:47:03,884 - #45 a
INFO  02:47:03,884 - #18 ;
INFO  02:47:03,884 - #13 }
INFO  02:47:03,884 - #45 int
INFO  02:47:03,884 - #45 getp
INFO  02:47:03,884 - #16 (
INFO  02:47:03,884 - #45 int
INFO  02:47:03,884 - #45 idx
INFO  02:47:03,884 - #17 )
INFO  02:47:03,884 - #12 {
INFO  02:47:03,884 - #38 return
INFO  02:47:03,884 - #45 pos
INFO  02:47:03,884 - #14 [
INFO  02:47:03,884 - #45 idx
INFO  02:47:03,884 - #15 ]
INFO  02:47:03,884 - #18 ;
INFO  02:47:03,884 - #13 }
INFO  02:47:03,884 - #45 int
INFO  02:47:03,884 - #45 getn
INFO  02:47:03,885 - #16 (
INFO  02:47:03,885 - #45 int
INFO  02:47:03,885 - #45 idx
INFO  02:47:03,885 - #17 )
INFO  02:47:03,885 - #12 {
INFO  02:47:03,885 - #38 return
INFO  02:47:03,885 - #45 neg
INFO  02:47:03,885 - #14 [
INFO  02:47:03,885 - #45 idx
INFO  02:47:03,885 - #15 ]
INFO  02:47:03,885 - #18 ;
INFO  02:47:03,885 - #13 }
INFO  02:47:03,885 - #13 }
INFO  02:47:03,885 - #13 }
INFO  02:47:03,885 - #45 Table
INFO  02:47:03,885 - #45 val
INFO  02:47:03,885 - #18 ;
INFO  02:47:03,885 - #12 {
INFO  02:47:03,886 - #39 void
INFO  02:47:03,886 - #45 f
INFO  02:47:03,886 - #16 (
INFO  02:47:03,886 - #45 char
INFO  02:47:03,886 - #45 ch
INFO  02:47:03,886 - #19 ,
INFO  02:47:03,886 - #45 int
INFO  02:47:03,886 - #45 a
INFO  02:47:03,886 - #19 ,
INFO  02:47:03,886 - #45 int
INFO  02:47:03,886 - #45 arg
INFO  02:47:03,886 - #17 )
INFO  02:47:03,886 - #45 int
INFO  02:47:03,886 - #45 x
INFO  02:47:03,886 - #18 ;
INFO  02:47:03,886 - #12 {
INFO  02:47:03,886 - #45 x
INFO  02:47:03,886 - #26 =
INFO  02:47:03,886 - #45 arg
INFO  02:47:03,886 - #18 ;
INFO  02:47:03,886 - #13 }
INFO  02:47:03,886 - #39 void
INFO  02:47:03,886 - #45 main
INFO  02:47:03,886 - #16 (
INFO  02:47:03,886 - #17 )
INFO  02:47:03,887 - #45 int
INFO  02:47:03,887 - #45 x
INFO  02:47:03,887 - #19 ,
INFO  02:47:03,887 - #45 i
INFO  02:47:03,887 - #18 ;
INFO  02:47:03,887 - #45 char
INFO  02:47:03,887 - #45 c
INFO  02:47:03,887 - #18 ;
INFO  02:47:03,887 - #12 {
INFO  02:47:03,887 - #45 val
INFO  02:47:03,887 - #26 =
INFO  02:47:03,887 - #10 new
INFO  02:47:03,887 - #45 Table
INFO  02:47:03,887 - #18 ;
INFO  02:47:03,888 - #45 val
INFO  02:47:03,888 - #20 .
INFO  02:47:03,888 - #45 pos
INFO  02:47:03,888 - #26 =
INFO  02:47:03,888 - #10 new
INFO  02:47:03,888 - #45 int
INFO  02:47:03,888 - #14 [
INFO  02:47:03,888 - #45 size
INFO  02:47:03,888 - #15 ]
INFO  02:47:03,888 - #18 ;
INFO  02:47:03,888 - #45 val
INFO  02:47:03,888 - #20 .
INFO  02:47:03,888 - #45 neg
INFO  02:47:03,888 - #26 =
INFO  02:47:03,888 - #10 new
INFO  02:47:03,888 - #45 int
INFO  02:47:03,888 - #14 [
INFO  02:47:03,888 - #45 size
INFO  02:47:03,888 - #15 ]
INFO  02:47:03,888 - #18 ;
INFO  02:47:03,888 - #40 for
INFO  02:47:03,888 - #16 (
INFO  02:47:03,888 - #45 i
INFO  02:47:03,888 - #26 =
INFO  02:47:03,888 - #44 0
INFO  02:47:03,889 - #18 ;
INFO  02:47:03,889 - #45 i
INFO  02:47:03,889 - #33 <
INFO  02:47:03,889 - #45 size
INFO  02:47:03,889 - #18 ;
INFO  02:47:03,890 - #45 i
INFO  02:47:03,890 - #27 ++
ERROR 02:47:03,890 - 
Sintaksna greska na liniji 31
ERROR 02:47:03,890 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 31
