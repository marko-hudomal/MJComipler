INFO  02:46:02,273 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  02:46:02,304 - #2 program
INFO  02:46:02,304 - #45 P
INFO  02:46:02,304 - #8 const
INFO  02:46:02,304 - #45 int
INFO  02:46:02,304 - #45 size
INFO  02:46:02,305 - #26 =
INFO  02:46:02,305 - #44 10
INFO  02:46:02,305 - #18 ;
INFO  02:46:02,305 - #6 enum
INFO  02:46:02,305 - #45 Num
INFO  02:46:02,305 - #12 {
INFO  02:46:02,305 - #45 ZERO
INFO  02:46:02,305 - #19 ,
INFO  02:46:02,306 - #45 ONE
INFO  02:46:02,306 - #19 ,
INFO  02:46:02,306 - #45 TEN
INFO  02:46:02,306 - #26 =
INFO  02:46:02,306 - #44 10
INFO  02:46:02,306 - #13 }
INFO  02:46:02,306 - #5 interface
INFO  02:46:02,306 - #45 I
INFO  02:46:02,306 - #12 {
INFO  02:46:02,306 - #45 int
INFO  02:46:02,307 - #45 getp
INFO  02:46:02,307 - #16 (
INFO  02:46:02,307 - #45 int
INFO  02:46:02,307 - #45 i
INFO  02:46:02,307 - #17 )
INFO  02:46:02,307 - #18 ;
INFO  02:46:02,307 - #45 int
INFO  02:46:02,308 - #45 getn
INFO  02:46:02,308 - #16 (
INFO  02:46:02,308 - #45 int
INFO  02:46:02,308 - #45 i
INFO  02:46:02,308 - #17 )
INFO  02:46:02,308 - #18 ;
INFO  02:46:02,308 - #13 }
INFO  02:46:02,308 - #4 class
INFO  02:46:02,308 - #45 Table
INFO  02:46:02,308 - #41 implements
INFO  02:46:02,308 - #45 I
INFO  02:46:02,308 - #12 {
INFO  02:46:02,309 - #45 int
INFO  02:46:02,309 - #45 pos
INFO  02:46:02,309 - #14 [
INFO  02:46:02,309 - #15 ]
INFO  02:46:02,309 - #19 ,
INFO  02:46:02,309 - #45 neg
INFO  02:46:02,309 - #14 [
INFO  02:46:02,309 - #15 ]
INFO  02:46:02,309 - #18 ;
INFO  02:46:02,310 - #12 {
INFO  02:46:02,310 - #39 void
INFO  02:46:02,310 - #45 putp
INFO  02:46:02,310 - #16 (
INFO  02:46:02,310 - #45 int
INFO  02:46:02,310 - #45 a
INFO  02:46:02,310 - #19 ,
INFO  02:46:02,310 - #45 int
INFO  02:46:02,311 - #45 idx
INFO  02:46:02,311 - #17 )
INFO  02:46:02,311 - #12 {
INFO  02:46:02,311 - #45 this
INFO  02:46:02,311 - #20 .
INFO  02:46:02,311 - #45 pos
INFO  02:46:02,312 - #14 [
INFO  02:46:02,312 - #45 idx
INFO  02:46:02,312 - #15 ]
INFO  02:46:02,313 - #26 =
INFO  02:46:02,313 - #45 a
INFO  02:46:02,314 - #18 ;
INFO  02:46:02,314 - #13 }
INFO  02:46:02,314 - #39 void
INFO  02:46:02,314 - #45 putn
INFO  02:46:02,314 - #16 (
INFO  02:46:02,315 - #45 int
INFO  02:46:02,315 - #45 a
INFO  02:46:02,315 - #19 ,
INFO  02:46:02,315 - #45 int
INFO  02:46:02,315 - #45 idx
INFO  02:46:02,315 - #17 )
INFO  02:46:02,315 - #12 {
INFO  02:46:02,315 - #45 this
INFO  02:46:02,315 - #20 .
INFO  02:46:02,315 - #45 neg
INFO  02:46:02,315 - #14 [
INFO  02:46:02,315 - #45 idx
INFO  02:46:02,315 - #15 ]
INFO  02:46:02,315 - #26 =
INFO  02:46:02,315 - #45 a
INFO  02:46:02,315 - #18 ;
INFO  02:46:02,315 - #13 }
INFO  02:46:02,315 - #45 int
INFO  02:46:02,315 - #45 getp
INFO  02:46:02,315 - #16 (
INFO  02:46:02,315 - #45 int
INFO  02:46:02,315 - #45 idx
INFO  02:46:02,315 - #17 )
INFO  02:46:02,315 - #12 {
INFO  02:46:02,315 - #38 return
INFO  02:46:02,315 - #45 pos
INFO  02:46:02,315 - #14 [
INFO  02:46:02,315 - #45 idx
INFO  02:46:02,316 - #15 ]
INFO  02:46:02,316 - #18 ;
INFO  02:46:02,316 - #13 }
INFO  02:46:02,316 - #45 int
INFO  02:46:02,316 - #45 getn
INFO  02:46:02,316 - #16 (
INFO  02:46:02,316 - #45 int
INFO  02:46:02,316 - #45 idx
INFO  02:46:02,316 - #17 )
INFO  02:46:02,316 - #12 {
INFO  02:46:02,316 - #38 return
INFO  02:46:02,316 - #45 neg
INFO  02:46:02,316 - #14 [
INFO  02:46:02,316 - #45 idx
INFO  02:46:02,316 - #15 ]
INFO  02:46:02,316 - #18 ;
INFO  02:46:02,316 - #13 }
INFO  02:46:02,316 - #13 }
INFO  02:46:02,316 - #13 }
INFO  02:46:02,316 - #45 Table
INFO  02:46:02,317 - #45 val
INFO  02:46:02,317 - #18 ;
INFO  02:46:02,317 - #12 {
INFO  02:46:02,317 - #39 void
INFO  02:46:02,317 - #45 f
INFO  02:46:02,317 - #16 (
INFO  02:46:02,317 - #45 char
INFO  02:46:02,317 - #45 ch
INFO  02:46:02,317 - #19 ,
INFO  02:46:02,317 - #45 int
INFO  02:46:02,317 - #45 a
INFO  02:46:02,317 - #19 ,
INFO  02:46:02,317 - #45 int
INFO  02:46:02,317 - #45 arg
INFO  02:46:02,317 - #17 )
INFO  02:46:02,317 - #45 int
INFO  02:46:02,317 - #45 x
INFO  02:46:02,317 - #18 ;
INFO  02:46:02,317 - #12 {
INFO  02:46:02,317 - #45 x
INFO  02:46:02,317 - #26 =
INFO  02:46:02,317 - #45 arg
INFO  02:46:02,318 - #18 ;
INFO  02:46:02,318 - #13 }
INFO  02:46:02,318 - #39 void
INFO  02:46:02,318 - #45 main
INFO  02:46:02,318 - #16 (
INFO  02:46:02,318 - #17 )
INFO  02:46:02,318 - #45 int
INFO  02:46:02,318 - #45 x
INFO  02:46:02,318 - #19 ,
INFO  02:46:02,318 - #45 i
INFO  02:46:02,318 - #18 ;
INFO  02:46:02,318 - #45 char
INFO  02:46:02,318 - #45 c
INFO  02:46:02,318 - #18 ;
INFO  02:46:02,318 - #12 {
INFO  02:46:02,318 - #45 val
INFO  02:46:02,318 - #26 =
INFO  02:46:02,318 - #10 new
INFO  02:46:02,318 - #45 Table
INFO  02:46:02,318 - #18 ;
INFO  02:46:02,319 - #45 val
INFO  02:46:02,319 - #20 .
INFO  02:46:02,319 - #45 pos
INFO  02:46:02,319 - #26 =
INFO  02:46:02,319 - #10 new
INFO  02:46:02,319 - #45 int
INFO  02:46:02,319 - #14 [
INFO  02:46:02,319 - #45 size
INFO  02:46:02,319 - #15 ]
INFO  02:46:02,319 - #18 ;
INFO  02:46:02,319 - #45 val
INFO  02:46:02,319 - #20 .
INFO  02:46:02,319 - #45 neg
INFO  02:46:02,319 - #26 =
INFO  02:46:02,319 - #10 new
INFO  02:46:02,319 - #45 int
INFO  02:46:02,319 - #14 [
INFO  02:46:02,319 - #45 size
INFO  02:46:02,319 - #15 ]
INFO  02:46:02,319 - #18 ;
INFO  02:46:02,319 - #40 for
INFO  02:46:02,320 - #16 (
INFO  02:46:02,320 - #45 i
INFO  02:46:02,320 - #26 =
INFO  02:46:02,320 - #44 0
INFO  02:46:02,320 - #18 ;
INFO  02:46:02,320 - #45 i
INFO  02:46:02,320 - #33 <
INFO  02:46:02,320 - #45 size
INFO  02:46:02,320 - #18 ;
INFO  02:46:02,321 - #45 i
INFO  02:46:02,321 - #27 ++
ERROR 02:46:02,321 - 
Sintaksna greska na liniji 31
ERROR 02:46:02,321 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 31
