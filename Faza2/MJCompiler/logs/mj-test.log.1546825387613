INFO  02:42:31,198 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  02:42:31,226 - #2 program
INFO  02:42:31,226 - #45 P
INFO  02:42:31,226 - #8 const
INFO  02:42:31,227 - #45 int
INFO  02:42:31,227 - #45 size
INFO  02:42:31,227 - #26 =
INFO  02:42:31,227 - #44 10
INFO  02:42:31,227 - #18 ;
INFO  02:42:31,227 - #6 enum
INFO  02:42:31,228 - #45 Num
INFO  02:42:31,228 - #12 {
INFO  02:42:31,228 - #45 ZERO
INFO  02:42:31,228 - #19 ,
INFO  02:42:31,228 - #45 ONE
INFO  02:42:31,228 - #19 ,
INFO  02:42:31,228 - #45 TEN
INFO  02:42:31,228 - #26 =
INFO  02:42:31,228 - #44 10
INFO  02:42:31,228 - #13 }
INFO  02:42:31,228 - #5 interface
INFO  02:42:31,228 - #45 I
INFO  02:42:31,229 - #12 {
INFO  02:42:31,229 - #45 int
INFO  02:42:31,229 - #45 getp
INFO  02:42:31,229 - #16 (
INFO  02:42:31,229 - #45 int
INFO  02:42:31,229 - #45 i
INFO  02:42:31,229 - #17 )
INFO  02:42:31,230 - #18 ;
INFO  02:42:31,230 - #45 int
INFO  02:42:31,230 - #45 getn
INFO  02:42:31,230 - #16 (
INFO  02:42:31,230 - #45 int
INFO  02:42:31,230 - #45 i
INFO  02:42:31,230 - #17 )
INFO  02:42:31,230 - #18 ;
INFO  02:42:31,230 - #13 }
INFO  02:42:31,230 - #4 class
INFO  02:42:31,230 - #45 Table
INFO  02:42:31,230 - #41 implements
INFO  02:42:31,230 - #45 I
INFO  02:42:31,231 - #12 {
INFO  02:42:31,231 - #45 int
INFO  02:42:31,231 - #45 pos
INFO  02:42:31,231 - #14 [
INFO  02:42:31,231 - #15 ]
INFO  02:42:31,231 - #19 ,
INFO  02:42:31,231 - #45 neg
INFO  02:42:31,231 - #14 [
INFO  02:42:31,232 - #15 ]
INFO  02:42:31,232 - #18 ;
INFO  02:42:31,232 - #12 {
INFO  02:42:31,232 - #39 void
INFO  02:42:31,232 - #45 putp
INFO  02:42:31,232 - #16 (
INFO  02:42:31,232 - #45 int
INFO  02:42:31,232 - #45 a
INFO  02:42:31,232 - #19 ,
INFO  02:42:31,233 - #45 int
INFO  02:42:31,233 - #45 idx
INFO  02:42:31,233 - #17 )
INFO  02:42:31,233 - #12 {
INFO  02:42:31,233 - #45 this
INFO  02:42:31,233 - #20 .
INFO  02:42:31,233 - #45 pos
INFO  02:42:31,233 - #14 [
INFO  02:42:31,234 - #45 idx
INFO  02:42:31,234 - #15 ]
INFO  02:42:31,235 - #26 =
INFO  02:42:31,236 - #45 a
INFO  02:42:31,236 - #18 ;
INFO  02:42:31,236 - #13 }
INFO  02:42:31,236 - #39 void
INFO  02:42:31,237 - #45 putn
INFO  02:42:31,237 - #16 (
INFO  02:42:31,237 - #45 int
INFO  02:42:31,237 - #45 a
INFO  02:42:31,237 - #19 ,
INFO  02:42:31,237 - #45 int
INFO  02:42:31,237 - #45 idx
INFO  02:42:31,237 - #17 )
INFO  02:42:31,237 - #12 {
INFO  02:42:31,237 - #45 this
INFO  02:42:31,237 - #20 .
INFO  02:42:31,237 - #45 neg
INFO  02:42:31,237 - #14 [
INFO  02:42:31,237 - #45 idx
INFO  02:42:31,237 - #15 ]
INFO  02:42:31,237 - #26 =
INFO  02:42:31,237 - #45 a
INFO  02:42:31,237 - #18 ;
INFO  02:42:31,237 - #13 }
INFO  02:42:31,237 - #45 int
INFO  02:42:31,237 - #45 getp
INFO  02:42:31,238 - #16 (
INFO  02:42:31,238 - #45 int
INFO  02:42:31,238 - #45 idx
INFO  02:42:31,238 - #17 )
INFO  02:42:31,238 - #12 {
INFO  02:42:31,238 - #38 return
INFO  02:42:31,238 - #45 pos
INFO  02:42:31,238 - #14 [
INFO  02:42:31,238 - #45 idx
INFO  02:42:31,238 - #15 ]
INFO  02:42:31,238 - #18 ;
INFO  02:42:31,238 - #13 }
INFO  02:42:31,238 - #45 int
INFO  02:42:31,238 - #45 getn
INFO  02:42:31,238 - #16 (
INFO  02:42:31,238 - #45 int
INFO  02:42:31,238 - #45 idx
INFO  02:42:31,238 - #17 )
INFO  02:42:31,238 - #12 {
INFO  02:42:31,238 - #38 return
INFO  02:42:31,238 - #45 neg
INFO  02:42:31,238 - #14 [
INFO  02:42:31,239 - #45 idx
INFO  02:42:31,239 - #15 ]
INFO  02:42:31,239 - #18 ;
INFO  02:42:31,239 - #13 }
INFO  02:42:31,239 - #13 }
INFO  02:42:31,239 - #13 }
INFO  02:42:31,239 - #45 Table
INFO  02:42:31,239 - #45 val
INFO  02:42:31,239 - #18 ;
INFO  02:42:31,239 - #12 {
INFO  02:42:31,239 - #39 void
INFO  02:42:31,239 - #45 f
INFO  02:42:31,239 - #16 (
INFO  02:42:31,239 - #45 char
INFO  02:42:31,239 - #45 ch
INFO  02:42:31,239 - #19 ,
INFO  02:42:31,239 - #45 int
INFO  02:42:31,239 - #45 a
INFO  02:42:31,240 - #19 ,
INFO  02:42:31,240 - #45 int
INFO  02:42:31,240 - #45 arg
INFO  02:42:31,240 - #17 )
INFO  02:42:31,240 - #45 int
INFO  02:42:31,240 - #45 x
INFO  02:42:31,240 - #18 ;
INFO  02:42:31,240 - #12 {
INFO  02:42:31,240 - #45 x
INFO  02:42:31,240 - #26 =
INFO  02:42:31,240 - #45 arg
INFO  02:42:31,240 - #18 ;
INFO  02:42:31,240 - #13 }
INFO  02:42:31,240 - #39 void
INFO  02:42:31,240 - #45 main
INFO  02:42:31,240 - #16 (
INFO  02:42:31,240 - #17 )
INFO  02:42:31,240 - #45 int
INFO  02:42:31,240 - #45 x
INFO  02:42:31,240 - #19 ,
INFO  02:42:31,240 - #45 i
INFO  02:42:31,240 - #18 ;
INFO  02:42:31,240 - #45 char
INFO  02:42:31,241 - #45 c
INFO  02:42:31,241 - #18 ;
INFO  02:42:31,241 - #12 {
INFO  02:42:31,241 - #45 val
INFO  02:42:31,241 - #26 =
INFO  02:42:31,241 - #10 new
INFO  02:42:31,241 - #45 Table
INFO  02:42:31,241 - #18 ;
INFO  02:42:31,241 - #45 val
INFO  02:42:31,241 - #20 .
INFO  02:42:31,241 - #45 pos
INFO  02:42:31,241 - #26 =
INFO  02:42:31,241 - #10 new
INFO  02:42:31,241 - #45 int
INFO  02:42:31,241 - #14 [
INFO  02:42:31,241 - #45 size
INFO  02:42:31,241 - #15 ]
INFO  02:42:31,241 - #18 ;
INFO  02:42:31,241 - #45 val
INFO  02:42:31,241 - #20 .
INFO  02:42:31,242 - #45 neg
INFO  02:42:31,242 - #26 =
INFO  02:42:31,242 - #10 new
INFO  02:42:31,242 - #45 int
INFO  02:42:31,242 - #14 [
INFO  02:42:31,242 - #45 size
INFO  02:42:31,242 - #15 ]
INFO  02:42:31,242 - #18 ;
INFO  02:42:31,242 - #40 for
INFO  02:42:31,242 - #16 (
INFO  02:42:31,242 - #45 i
INFO  02:42:31,242 - #26 =
INFO  02:42:31,242 - #44 0
INFO  02:42:31,242 - #18 ;
INFO  02:42:31,242 - #45 i
INFO  02:42:31,242 - #33 <
INFO  02:42:31,242 - #45 size
INFO  02:42:31,243 - #18 ;
INFO  02:42:31,243 - #45 i
INFO  02:42:31,243 - #27 ++
ERROR 02:42:31,243 - 
Sintaksna greska na liniji 31
ERROR 02:42:31,243 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 31
