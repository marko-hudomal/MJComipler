INFO  02:17:27,034 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  02:17:27,043 - #2 program
INFO  02:17:27,043 - #45 P
INFO  02:17:27,043 - #8 const
INFO  02:17:27,043 - #45 int
INFO  02:17:27,043 - #45 size
INFO  02:17:27,043 - #26 =
INFO  02:17:27,043 - #44 10
INFO  02:17:27,043 - #18 ;
INFO  02:17:27,043 - #6 enum
INFO  02:17:27,044 - #45 Num
INFO  02:17:27,044 - #12 {
INFO  02:17:27,044 - #45 ZERO
INFO  02:17:27,044 - #19 ,
INFO  02:17:27,044 - #45 ONE
INFO  02:17:27,044 - #19 ,
INFO  02:17:27,044 - #45 TEN
INFO  02:17:27,044 - #26 =
INFO  02:17:27,044 - #44 10
INFO  02:17:27,044 - #13 }
INFO  02:17:27,044 - #5 interface
INFO  02:17:27,044 - #45 I
INFO  02:17:27,044 - #12 {
INFO  02:17:27,044 - #45 int
INFO  02:17:27,044 - #45 getp
INFO  02:17:27,045 - #16 (
INFO  02:17:27,045 - #45 int
INFO  02:17:27,045 - #45 i
INFO  02:17:27,045 - #17 )
INFO  02:17:27,045 - #18 ;
INFO  02:17:27,045 - #45 int
INFO  02:17:27,045 - #45 getn
INFO  02:17:27,045 - #16 (
INFO  02:17:27,045 - #45 int
INFO  02:17:27,045 - #45 i
INFO  02:17:27,045 - #17 )
INFO  02:17:27,045 - #18 ;
INFO  02:17:27,045 - #13 }
INFO  02:17:27,045 - #4 class
INFO  02:17:27,045 - #45 Table
INFO  02:17:27,045 - #45 implements
INFO  02:17:27,045 - #45 I
INFO  02:17:27,045 - #12 {
INFO  02:17:27,045 - #45 int
INFO  02:17:27,045 - #45 pos
INFO  02:17:27,045 - #14 [
INFO  02:17:27,045 - #15 ]
INFO  02:17:27,045 - #19 ,
INFO  02:17:27,046 - #45 neg
INFO  02:17:27,046 - #14 [
INFO  02:17:27,046 - #15 ]
INFO  02:17:27,046 - #18 ;
INFO  02:17:27,046 - #12 {
INFO  02:17:27,046 - #39 void
INFO  02:17:27,046 - #45 putp
INFO  02:17:27,046 - #16 (
INFO  02:17:27,046 - #45 int
INFO  02:17:27,046 - #45 a
INFO  02:17:27,046 - #19 ,
INFO  02:17:27,046 - #45 int
INFO  02:17:27,046 - #45 idx
INFO  02:17:27,046 - #17 )
INFO  02:17:27,046 - #12 {
INFO  02:17:27,046 - #45 this
INFO  02:17:27,046 - #20 .
INFO  02:17:27,046 - #45 pos
INFO  02:17:27,046 - #14 [
INFO  02:17:27,046 - #45 idx
INFO  02:17:27,046 - #15 ]
INFO  02:17:27,046 - #26 =
INFO  02:17:27,046 - #45 a
INFO  02:17:27,046 - #18 ;
INFO  02:17:27,046 - #13 }
INFO  02:17:27,047 - #39 void
INFO  02:17:27,047 - #45 putn
INFO  02:17:27,047 - #16 (
INFO  02:17:27,047 - #45 int
INFO  02:17:27,047 - #45 a
INFO  02:17:27,047 - #19 ,
INFO  02:17:27,047 - #45 int
INFO  02:17:27,047 - #45 idx
INFO  02:17:27,047 - #17 )
INFO  02:17:27,047 - #12 {
INFO  02:17:27,047 - #45 this
INFO  02:17:27,047 - #20 .
INFO  02:17:27,047 - #45 neg
INFO  02:17:27,047 - #14 [
INFO  02:17:27,047 - #45 idx
INFO  02:17:27,047 - #15 ]
INFO  02:17:27,047 - #26 =
INFO  02:17:27,047 - #45 a
INFO  02:17:27,047 - #18 ;
INFO  02:17:27,047 - #13 }
INFO  02:17:27,047 - #45 int
INFO  02:17:27,047 - #45 getp
INFO  02:17:27,047 - #16 (
INFO  02:17:27,047 - #45 int
INFO  02:17:27,047 - #45 idx
INFO  02:17:27,047 - #17 )
INFO  02:17:27,047 - #12 {
INFO  02:17:27,047 - #38 return
INFO  02:17:27,047 - #45 pos
INFO  02:17:27,048 - #14 [
INFO  02:17:27,048 - #45 idx
INFO  02:17:27,048 - #15 ]
INFO  02:17:27,048 - #18 ;
INFO  02:17:27,048 - #13 }
INFO  02:17:27,048 - #45 int
INFO  02:17:27,048 - #45 getn
INFO  02:17:27,048 - #16 (
INFO  02:17:27,048 - #45 int
INFO  02:17:27,048 - #45 idx
INFO  02:17:27,048 - #17 )
INFO  02:17:27,048 - #12 {
INFO  02:17:27,048 - #38 return
INFO  02:17:27,048 - #45 neg
INFO  02:17:27,048 - #14 [
INFO  02:17:27,048 - #45 idx
INFO  02:17:27,048 - #15 ]
INFO  02:17:27,048 - #18 ;
INFO  02:17:27,049 - #13 }
INFO  02:17:27,049 - #13 }
INFO  02:17:27,049 - #13 }
INFO  02:17:27,049 - #45 Table
INFO  02:17:27,049 - #45 val
INFO  02:17:27,049 - #18 ;
INFO  02:17:27,049 - #12 {
INFO  02:17:27,049 - #39 void
INFO  02:17:27,049 - #45 f
INFO  02:17:27,049 - #16 (
INFO  02:17:27,049 - #45 char
INFO  02:17:27,049 - #45 ch
INFO  02:17:27,049 - #19 ,
INFO  02:17:27,050 - #45 int
INFO  02:17:27,050 - #45 a
INFO  02:17:27,050 - #19 ,
INFO  02:17:27,050 - #45 int
INFO  02:17:27,050 - #45 arg
INFO  02:17:27,050 - #17 )
INFO  02:17:27,050 - #45 int
INFO  02:17:27,051 - #45 x
INFO  02:17:27,051 - #18 ;
INFO  02:17:27,051 - #12 {
INFO  02:17:27,051 - #45 x
INFO  02:17:27,051 - #26 =
INFO  02:17:27,051 - #45 arg
INFO  02:17:27,051 - #18 ;
INFO  02:17:27,051 - #13 }
INFO  02:17:27,051 - #39 void
INFO  02:17:27,051 - #45 main
INFO  02:17:27,051 - #16 (
INFO  02:17:27,051 - #17 )
INFO  02:17:27,051 - #45 int
INFO  02:17:27,051 - #45 x
INFO  02:17:27,051 - #19 ,
INFO  02:17:27,051 - #45 i
INFO  02:17:27,051 - #18 ;
INFO  02:17:27,051 - #45 char
INFO  02:17:27,051 - #45 c
INFO  02:17:27,051 - #18 ;
INFO  02:17:27,051 - #12 {
INFO  02:17:27,051 - #45 val
INFO  02:17:27,051 - #26 =
INFO  02:17:27,051 - #10 new
INFO  02:17:27,051 - #45 Table
INFO  02:17:27,051 - #18 ;
INFO  02:17:27,051 - #45 val
INFO  02:17:27,051 - #20 .
INFO  02:17:27,051 - #45 pos
INFO  02:17:27,051 - #26 =
INFO  02:17:27,052 - #10 new
INFO  02:17:27,052 - #45 int
INFO  02:17:27,052 - #14 [
INFO  02:17:27,052 - #45 size
INFO  02:17:27,052 - #15 ]
INFO  02:17:27,052 - #18 ;
INFO  02:17:27,052 - #45 val
INFO  02:17:27,052 - #20 .
INFO  02:17:27,052 - #45 neg
INFO  02:17:27,052 - #26 =
INFO  02:17:27,052 - #10 new
INFO  02:17:27,052 - #45 int
INFO  02:17:27,052 - #14 [
INFO  02:17:27,052 - #45 size
INFO  02:17:27,052 - #15 ]
INFO  02:17:27,052 - #18 ;
INFO  02:17:27,052 - #40 for
INFO  02:17:27,052 - #16 (
INFO  02:17:27,052 - #45 i
INFO  02:17:27,052 - #26 =
INFO  02:17:27,052 - #44 0
INFO  02:17:27,052 - #18 ;
INFO  02:17:27,052 - #45 i
INFO  02:17:27,052 - #33 <
INFO  02:17:27,052 - #45 size
INFO  02:17:27,052 - #18 ;
INFO  02:17:27,052 - #45 i
INFO  02:17:27,052 - #27 ++
INFO  02:17:27,052 - #17 )
INFO  02:17:27,052 - #12 {
INFO  02:17:27,052 - #45 val
INFO  02:17:27,052 - #20 .
INFO  02:17:27,052 - #45 putp
INFO  02:17:27,052 - #16 (
INFO  02:17:27,053 - #44 0
INFO  02:17:27,053 - #19 ,
INFO  02:17:27,053 - #45 i
INFO  02:17:27,053 - #17 )
INFO  02:17:27,053 - #18 ;
INFO  02:17:27,053 - #45 val
INFO  02:17:27,053 - #20 .
INFO  02:17:27,053 - #45 putn
INFO  02:17:27,053 - #16 (
INFO  02:17:27,053 - #44 0
INFO  02:17:27,053 - #19 ,
INFO  02:17:27,053 - #45 i
INFO  02:17:27,053 - #17 )
INFO  02:17:27,053 - #18 ;
INFO  02:17:27,053 - #13 }
INFO  02:17:27,053 - #45 f
INFO  02:17:27,053 - #16 (
INFO  02:17:27,053 - #45 c
INFO  02:17:27,053 - #19 ,
INFO  02:17:27,053 - #45 x
INFO  02:17:27,053 - #19 ,
INFO  02:17:27,053 - #45 i
INFO  02:17:27,053 - #17 )
INFO  02:17:27,053 - #18 ;
INFO  02:17:27,053 - #37 read
INFO  02:17:27,053 - #16 (
INFO  02:17:27,053 - #45 x
INFO  02:17:27,053 - #17 )
INFO  02:17:27,053 - #18 ;
INFO  02:17:27,053 - #40 for
INFO  02:17:27,053 - #16 (
INFO  02:17:27,053 - #18 ;
INFO  02:17:27,053 - #45 x
INFO  02:17:27,053 - #31 >
INFO  02:17:27,053 - #44 0
INFO  02:17:27,053 - #18 ;
INFO  02:17:27,053 - #17 )
INFO  02:17:27,053 - #12 {
INFO  02:17:27,053 - #9 if
INFO  02:17:27,053 - #16 (
INFO  02:17:27,053 - #45 Num
INFO  02:17:27,054 - #20 .
INFO  02:17:27,054 - #45 ZERO
INFO  02:17:27,054 - #34 <=
INFO  02:17:27,054 - #45 x
INFO  02:17:27,054 - #35 &&
INFO  02:17:27,054 - #45 x
INFO  02:17:27,054 - #33 <
INFO  02:17:27,054 - #45 size
INFO  02:17:27,054 - #17 )
INFO  02:17:27,054 - #12 {
INFO  02:17:27,054 - #45 val
INFO  02:17:27,054 - #20 .
INFO  02:17:27,054 - #45 putp
INFO  02:17:27,054 - #16 (
INFO  02:17:27,054 - #45 val
INFO  02:17:27,054 - #20 .
INFO  02:17:27,054 - #45 getp
INFO  02:17:27,054 - #16 (
INFO  02:17:27,054 - #45 x
INFO  02:17:27,054 - #17 )
INFO  02:17:27,054 - #21 +
INFO  02:17:27,054 - #45 Num
INFO  02:17:27,054 - #20 .
INFO  02:17:27,054 - #45 ONE
INFO  02:17:27,054 - #17 )
INFO  02:17:27,054 - #18 ;
INFO  02:17:27,054 - #13 }
INFO  02:17:27,054 - #7 else
INFO  02:17:27,054 - #9 if
INFO  02:17:27,054 - #16 (
INFO  02:17:27,054 - #22 -
INFO  02:17:27,054 - #45 size
INFO  02:17:27,054 - #33 <
INFO  02:17:27,054 - #45 x
INFO  02:17:27,054 - #35 &&
INFO  02:17:27,054 - #45 x
INFO  02:17:27,055 - #33 <
INFO  02:17:27,055 - #44 0
INFO  02:17:27,055 - #17 )
INFO  02:17:27,055 - #12 {
INFO  02:17:27,055 - #45 val
INFO  02:17:27,055 - #20 .
INFO  02:17:27,055 - #45 putn
INFO  02:17:27,055 - #16 (
INFO  02:17:27,055 - #45 val
INFO  02:17:27,055 - #20 .
INFO  02:17:27,055 - #45 getn
INFO  02:17:27,055 - #16 (
INFO  02:17:27,055 - #22 -
INFO  02:17:27,055 - #45 x
INFO  02:17:27,055 - #17 )
INFO  02:17:27,055 - #21 +
INFO  02:17:27,055 - #44 1
INFO  02:17:27,055 - #17 )
INFO  02:17:27,055 - #18 ;
INFO  02:17:27,055 - #13 }
INFO  02:17:27,055 - #37 read
INFO  02:17:27,055 - #16 (
INFO  02:17:27,055 - #45 x
INFO  02:17:27,055 - #17 )
INFO  02:17:27,055 - #18 ;
INFO  02:17:27,055 - #13 }
INFO  02:17:27,055 - #13 }
INFO  02:17:27,055 - #13 }
INFO  02:17:27,055 - --EOF.
