INFO  02:46:55,592 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  02:46:55,621 - #2 program
INFO  02:46:55,621 - #45 P
INFO  02:46:55,621 - #8 const
INFO  02:46:55,621 - #45 int
INFO  02:46:55,621 - #45 size
INFO  02:46:55,622 - #26 =
INFO  02:46:55,622 - #44 10
INFO  02:46:55,622 - #18 ;
INFO  02:46:55,622 - #6 enum
INFO  02:46:55,622 - #45 Num
INFO  02:46:55,622 - #12 {
INFO  02:46:55,622 - #45 ZERO
INFO  02:46:55,622 - #19 ,
INFO  02:46:55,623 - #45 ONE
INFO  02:46:55,623 - #19 ,
INFO  02:46:55,623 - #45 TEN
INFO  02:46:55,623 - #26 =
INFO  02:46:55,623 - #44 10
INFO  02:46:55,623 - #13 }
INFO  02:46:55,623 - #5 interface
INFO  02:46:55,623 - #45 I
INFO  02:46:55,623 - #12 {
INFO  02:46:55,624 - #45 int
INFO  02:46:55,624 - #45 getp
INFO  02:46:55,624 - #16 (
INFO  02:46:55,624 - #45 int
INFO  02:46:55,624 - #45 i
INFO  02:46:55,624 - #17 )
INFO  02:46:55,624 - #18 ;
INFO  02:46:55,625 - #45 int
INFO  02:46:55,625 - #45 getn
INFO  02:46:55,625 - #16 (
INFO  02:46:55,625 - #45 int
INFO  02:46:55,625 - #45 i
INFO  02:46:55,625 - #17 )
INFO  02:46:55,625 - #18 ;
INFO  02:46:55,625 - #13 }
INFO  02:46:55,625 - #4 class
INFO  02:46:55,625 - #45 Table
INFO  02:46:55,625 - #41 implements
INFO  02:46:55,625 - #45 I
INFO  02:46:55,625 - #12 {
INFO  02:46:55,626 - #45 int
INFO  02:46:55,626 - #45 pos
INFO  02:46:55,626 - #14 [
INFO  02:46:55,626 - #15 ]
INFO  02:46:55,626 - #19 ,
INFO  02:46:55,627 - #45 neg
INFO  02:46:55,627 - #14 [
INFO  02:46:55,627 - #15 ]
INFO  02:46:55,627 - #18 ;
INFO  02:46:55,627 - #12 {
INFO  02:46:55,627 - #39 void
INFO  02:46:55,627 - #45 putp
INFO  02:46:55,627 - #16 (
INFO  02:46:55,628 - #45 int
INFO  02:46:55,628 - #45 a
INFO  02:46:55,628 - #19 ,
INFO  02:46:55,628 - #45 int
INFO  02:46:55,628 - #45 idx
INFO  02:46:55,628 - #17 )
INFO  02:46:55,628 - #12 {
INFO  02:46:55,628 - #45 this
INFO  02:46:55,628 - #20 .
INFO  02:46:55,629 - #45 pos
INFO  02:46:55,629 - #14 [
INFO  02:46:55,629 - #45 idx
INFO  02:46:55,629 - #15 ]
INFO  02:46:55,631 - #26 =
INFO  02:46:55,631 - #45 a
INFO  02:46:55,631 - #18 ;
INFO  02:46:55,631 - #13 }
INFO  02:46:55,631 - #39 void
INFO  02:46:55,632 - #45 putn
INFO  02:46:55,632 - #16 (
INFO  02:46:55,632 - #45 int
INFO  02:46:55,632 - #45 a
INFO  02:46:55,632 - #19 ,
INFO  02:46:55,632 - #45 int
INFO  02:46:55,632 - #45 idx
INFO  02:46:55,632 - #17 )
INFO  02:46:55,632 - #12 {
INFO  02:46:55,632 - #45 this
INFO  02:46:55,632 - #20 .
INFO  02:46:55,632 - #45 neg
INFO  02:46:55,632 - #14 [
INFO  02:46:55,632 - #45 idx
INFO  02:46:55,632 - #15 ]
INFO  02:46:55,632 - #26 =
INFO  02:46:55,632 - #45 a
INFO  02:46:55,633 - #18 ;
INFO  02:46:55,633 - #13 }
INFO  02:46:55,633 - #45 int
INFO  02:46:55,633 - #45 getp
INFO  02:46:55,633 - #16 (
INFO  02:46:55,633 - #45 int
INFO  02:46:55,633 - #45 idx
INFO  02:46:55,633 - #17 )
INFO  02:46:55,633 - #12 {
INFO  02:46:55,633 - #38 return
INFO  02:46:55,633 - #45 pos
INFO  02:46:55,633 - #14 [
INFO  02:46:55,633 - #45 idx
INFO  02:46:55,633 - #15 ]
INFO  02:46:55,633 - #18 ;
INFO  02:46:55,633 - #13 }
INFO  02:46:55,633 - #45 int
INFO  02:46:55,633 - #45 getn
INFO  02:46:55,634 - #16 (
INFO  02:46:55,634 - #45 int
INFO  02:46:55,634 - #45 idx
INFO  02:46:55,634 - #17 )
INFO  02:46:55,634 - #12 {
INFO  02:46:55,634 - #38 return
INFO  02:46:55,634 - #45 neg
INFO  02:46:55,634 - #14 [
INFO  02:46:55,634 - #45 idx
INFO  02:46:55,634 - #15 ]
INFO  02:46:55,634 - #18 ;
INFO  02:46:55,634 - #13 }
INFO  02:46:55,634 - #13 }
INFO  02:46:55,634 - #13 }
INFO  02:46:55,634 - #45 Table
INFO  02:46:55,634 - #45 val
INFO  02:46:55,634 - #18 ;
INFO  02:46:55,634 - #12 {
INFO  02:46:55,634 - #39 void
INFO  02:46:55,634 - #45 f
INFO  02:46:55,635 - #16 (
INFO  02:46:55,635 - #45 char
INFO  02:46:55,635 - #45 ch
INFO  02:46:55,635 - #19 ,
INFO  02:46:55,635 - #45 int
INFO  02:46:55,635 - #45 a
INFO  02:46:55,635 - #19 ,
INFO  02:46:55,635 - #45 int
INFO  02:46:55,635 - #45 arg
INFO  02:46:55,635 - #17 )
INFO  02:46:55,635 - #45 int
INFO  02:46:55,635 - #45 x
INFO  02:46:55,635 - #18 ;
INFO  02:46:55,635 - #12 {
INFO  02:46:55,635 - #45 x
INFO  02:46:55,635 - #26 =
INFO  02:46:55,635 - #45 arg
INFO  02:46:55,635 - #18 ;
INFO  02:46:55,635 - #13 }
INFO  02:46:55,635 - #39 void
INFO  02:46:55,635 - #45 main
INFO  02:46:55,635 - #16 (
INFO  02:46:55,635 - #17 )
INFO  02:46:55,636 - #45 int
INFO  02:46:55,636 - #45 x
INFO  02:46:55,636 - #19 ,
INFO  02:46:55,636 - #45 i
INFO  02:46:55,636 - #18 ;
INFO  02:46:55,636 - #45 char
INFO  02:46:55,636 - #45 c
INFO  02:46:55,636 - #18 ;
INFO  02:46:55,636 - #12 {
INFO  02:46:55,636 - #45 val
INFO  02:46:55,636 - #26 =
INFO  02:46:55,636 - #10 new
INFO  02:46:55,636 - #45 Table
INFO  02:46:55,636 - #18 ;
INFO  02:46:55,636 - #45 val
INFO  02:46:55,636 - #20 .
INFO  02:46:55,636 - #45 pos
INFO  02:46:55,636 - #26 =
INFO  02:46:55,637 - #10 new
INFO  02:46:55,637 - #45 int
INFO  02:46:55,637 - #14 [
INFO  02:46:55,637 - #45 size
INFO  02:46:55,637 - #15 ]
INFO  02:46:55,637 - #18 ;
INFO  02:46:55,637 - #45 val
INFO  02:46:55,637 - #20 .
INFO  02:46:55,637 - #45 neg
INFO  02:46:55,637 - #26 =
INFO  02:46:55,637 - #10 new
INFO  02:46:55,637 - #45 int
INFO  02:46:55,637 - #14 [
INFO  02:46:55,637 - #45 size
INFO  02:46:55,637 - #15 ]
INFO  02:46:55,637 - #18 ;
INFO  02:46:55,637 - #40 for
INFO  02:46:55,637 - #16 (
INFO  02:46:55,637 - #45 i
INFO  02:46:55,637 - #26 =
INFO  02:46:55,637 - #44 0
INFO  02:46:55,637 - #18 ;
INFO  02:46:55,637 - #45 i
INFO  02:46:55,637 - #33 <
INFO  02:46:55,637 - #45 size
INFO  02:46:55,638 - #18 ;
INFO  02:46:55,638 - #17 )
INFO  02:46:55,639 - #12 {
INFO  02:46:55,639 - #45 val
INFO  02:46:55,639 - #20 .
INFO  02:46:55,639 - #45 putp
INFO  02:46:55,639 - #16 (
INFO  02:46:55,639 - #44 0
INFO  02:46:55,639 - #19 ,
INFO  02:46:55,639 - #45 i
INFO  02:46:55,639 - #17 )
INFO  02:46:55,639 - #18 ;
INFO  02:46:55,639 - #45 val
INFO  02:46:55,639 - #20 .
INFO  02:46:55,639 - #45 putn
INFO  02:46:55,639 - #16 (
INFO  02:46:55,639 - #44 0
INFO  02:46:55,639 - #19 ,
INFO  02:46:55,639 - #45 i
INFO  02:46:55,639 - #17 )
INFO  02:46:55,639 - #18 ;
INFO  02:46:55,639 - #13 }
INFO  02:46:55,639 - #45 f
INFO  02:46:55,640 - #16 (
INFO  02:46:55,640 - #45 c
INFO  02:46:55,640 - #19 ,
INFO  02:46:55,640 - #45 x
INFO  02:46:55,640 - #19 ,
INFO  02:46:55,640 - #45 i
INFO  02:46:55,640 - #17 )
INFO  02:46:55,640 - #18 ;
INFO  02:46:55,640 - #37 read
INFO  02:46:55,640 - #16 (
INFO  02:46:55,640 - #45 x
INFO  02:46:55,640 - #17 )
INFO  02:46:55,640 - #18 ;
INFO  02:46:55,640 - #40 for
INFO  02:46:55,640 - #16 (
INFO  02:46:55,640 - #18 ;
INFO  02:46:55,640 - #45 x
INFO  02:46:55,640 - #31 >
INFO  02:46:55,640 - #44 0
INFO  02:46:55,640 - #18 ;
INFO  02:46:55,640 - #17 )
INFO  02:46:55,640 - #12 {
INFO  02:46:55,640 - #9 if
INFO  02:46:55,640 - #16 (
INFO  02:46:55,640 - #45 Num
INFO  02:46:55,640 - #20 .
INFO  02:46:55,640 - #45 ZERO
INFO  02:46:55,640 - #34 <=
INFO  02:46:55,641 - #45 x
INFO  02:46:55,641 - #35 &&
INFO  02:46:55,641 - #45 x
INFO  02:46:55,641 - #33 <
INFO  02:46:55,642 - #45 size
INFO  02:46:55,642 - #17 )
INFO  02:46:55,642 - #12 {
INFO  02:46:55,642 - #45 val
INFO  02:46:55,642 - #20 .
INFO  02:46:55,642 - #45 putp
INFO  02:46:55,643 - #16 (
INFO  02:46:55,643 - #45 val
INFO  02:46:55,643 - #20 .
INFO  02:46:55,643 - #45 getp
INFO  02:46:55,643 - #16 (
INFO  02:46:55,643 - #45 x
INFO  02:46:55,643 - #17 )
INFO  02:46:55,643 - #21 +
INFO  02:46:55,643 - #45 Num
INFO  02:46:55,643 - #20 .
INFO  02:46:55,643 - #45 ONE
INFO  02:46:55,643 - #17 )
INFO  02:46:55,644 - #18 ;
INFO  02:46:55,644 - #13 }
INFO  02:46:55,644 - #7 else
INFO  02:46:55,644 - #9 if
INFO  02:46:55,644 - #16 (
INFO  02:46:55,644 - #22 -
INFO  02:46:55,644 - #45 size
INFO  02:46:55,644 - #33 <
INFO  02:46:55,644 - #45 x
INFO  02:46:55,644 - #35 &&
INFO  02:46:55,644 - #45 x
INFO  02:46:55,644 - #33 <
INFO  02:46:55,644 - #44 0
INFO  02:46:55,644 - #17 )
INFO  02:46:55,644 - #12 {
INFO  02:46:55,644 - #45 val
INFO  02:46:55,644 - #20 .
INFO  02:46:55,644 - #45 putn
INFO  02:46:55,644 - #16 (
INFO  02:46:55,644 - #45 val
INFO  02:46:55,644 - #20 .
INFO  02:46:55,644 - #45 getn
INFO  02:46:55,644 - #16 (
INFO  02:46:55,644 - #22 -
INFO  02:46:55,644 - #45 x
INFO  02:46:55,645 - #17 )
INFO  02:46:55,645 - #21 +
INFO  02:46:55,645 - #44 1
INFO  02:46:55,645 - #17 )
INFO  02:46:55,645 - #18 ;
INFO  02:46:55,645 - #13 }
INFO  02:46:55,645 - #37 read
INFO  02:46:55,645 - #16 (
INFO  02:46:55,645 - #45 x
INFO  02:46:55,645 - #17 )
INFO  02:46:55,645 - #18 ;
INFO  02:46:55,645 - #13 }
INFO  02:46:55,645 - #13 }
INFO  02:46:55,645 - #13 }
INFO  02:46:55,649 - Program(
 P
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDecl(
            ) [NoDecl]
            ConstDeclaration(
              ConstDeclNode(
                Type(
                 int
                ) [Type]
                SingleConstant(
                 size
                  NumberNode(
                   10
                  ) [NumberNode]
                ) [SingleConstant]
              ) [ConstDeclNode]
            ) [ConstDeclaration]
          ) [Declarations]
          EnumDeclaration(
            EnumDeclarationNode(
             Num
              Enumerations(
                Enumerations(
                  SingleEnumeration(
                    EnumerationNoVal(
                     ZERO
                    ) [EnumerationNoVal]
                  ) [SingleEnumeration]
                  EnumerationNoVal(
                   ONE
                  ) [EnumerationNoVal]
                ) [Enumerations]
                EnumerationVal(
                 TEN
                 10
                ) [EnumerationVal]
              ) [Enumerations]
            ) [EnumDeclarationNode]
          ) [EnumDeclaration]
        ) [Declarations]
        InterfaceDeclaration(
          InterfaceDeclarationNode(
           I
            InterfaceMethodDeclarations(
              InterfaceMethodDeclarations(
                NoInterfaceMethodDeclaration(
                ) [NoInterfaceMethodDeclaration]
                InterfaceMethodDeclarationWithParams(
                  NoVoidType(
                    Type(
                     int
                    ) [Type]
                  ) [NoVoidType]
                 getp
                  FormalParams(
                    SingleFormalParamDecl(
                      FormalParamDeclarationNoBrackets(
                        Type(
                         int
                        ) [Type]
                       i
                      ) [FormalParamDeclarationNoBrackets]
                    ) [SingleFormalParamDecl]
                  ) [FormalParams]
                ) [InterfaceMethodDeclarationWithParams]
              ) [InterfaceMethodDeclarations]
              InterfaceMethodDeclarationWithParams(
                NoVoidType(
                  Type(
                   int
                  ) [Type]
                ) [NoVoidType]
               getn
                FormalParams(
                  SingleFormalParamDecl(
                    FormalParamDeclarationNoBrackets(
                      Type(
                       int
                      ) [Type]
                     i
                    ) [FormalParamDeclarationNoBrackets]
                  ) [SingleFormalParamDecl]
                ) [FormalParams]
              ) [InterfaceMethodDeclarationWithParams]
            ) [InterfaceMethodDeclarations]
          ) [InterfaceDeclarationNode]
        ) [InterfaceDeclaration]
      ) [Declarations]
      ClassDeclaration(
        ClassDeclarationWithMethods(
         Table
          Extension(
            Type(
             I
            ) [Type]
          ) [Extension]
          NoImplementation(
          ) [NoImplementation]
          VarDeclarationList(
            NoVarDeclaration(
            ) [NoVarDeclaration]
            VarDeclNode(
              Type(
               int
              ) [Type]
              Variables(
                SingleVariable(
                  VariableBracket(
                   pos
                  ) [VariableBracket]
                ) [SingleVariable]
                VariableBracket(
                 neg
                ) [VariableBracket]
              ) [Variables]
            ) [VarDeclNode]
          ) [VarDeclarationList]
          MethodDeclarations(
            MethodDeclarations(
              MethodDeclarations(
                MethodDeclarations(
                  NoMethodDecl(
                  ) [NoMethodDecl]
                  MethodDecl(
                    VoidType(
                    ) [VoidType]
                   putp
                    FormalParams(
                      FormalParamDecls(
                        SingleFormalParamDecl(
                          FormalParamDeclarationNoBrackets(
                            Type(
                             int
                            ) [Type]
                           a
                          ) [FormalParamDeclarationNoBrackets]
                        ) [SingleFormalParamDecl]
                        FormalParamDeclarationNoBrackets(
                          Type(
                           int
                          ) [Type]
                         idx
                        ) [FormalParamDeclarationNoBrackets]
                      ) [FormalParamDecls]
                    ) [FormalParams]
                    NoVarDeclaration(
                    ) [NoVarDeclaration]
                    Statements(
                      NoStatement(
                      ) [NoStatement]
                      DesignatorStatementOnly(
                        DesignatorStatementAssignop(
                          DesignatorNode(
                           this
                            Exprs(
                              Idents(
                                NoIdentExpr(
                                ) [NoIdentExpr]
                               pos
                              ) [Idents]
                              SingleExpression(
                                NoSingleMinus(
                                ) [NoSingleMinus]
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                     idx
                                      NoIdentExpr(
                                      ) [NoIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [Exprs]
                          ) [DesignatorNode]
                          Assignop(
                          ) [Assignop]
                          SingleExpression(
                            NoSingleMinus(
                            ) [NoSingleMinus]
                            TermFactor(
                              DesignatorEmpty(
                                DesignatorNode(
                                 a
                                  NoIdentExpr(
                                  ) [NoIdentExpr]
                                ) [DesignatorNode]
                              ) [DesignatorEmpty]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementOnly]
                    ) [Statements]
                  ) [MethodDecl]
                ) [MethodDeclarations]
                MethodDecl(
                  VoidType(
                  ) [VoidType]
                 putn
                  FormalParams(
                    FormalParamDecls(
                      SingleFormalParamDecl(
                        FormalParamDeclarationNoBrackets(
                          Type(
                           int
                          ) [Type]
                         a
                        ) [FormalParamDeclarationNoBrackets]
                      ) [SingleFormalParamDecl]
                      FormalParamDeclarationNoBrackets(
                        Type(
                         int
                        ) [Type]
                       idx
                      ) [FormalParamDeclarationNoBrackets]
                    ) [FormalParamDecls]
                  ) [FormalParams]
                  NoVarDeclaration(
                  ) [NoVarDeclaration]
                  Statements(
                    NoStatement(
                    ) [NoStatement]
                    DesignatorStatementOnly(
                      DesignatorStatementAssignop(
                        DesignatorNode(
                         this
                          Exprs(
                            Idents(
                              NoIdentExpr(
                              ) [NoIdentExpr]
                             neg
                            ) [Idents]
                            SingleExpression(
                              NoSingleMinus(
                              ) [NoSingleMinus]
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                   idx
                                    NoIdentExpr(
                                    ) [NoIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [Exprs]
                        ) [DesignatorNode]
                        Assignop(
                        ) [Assignop]
                        SingleExpression(
                          NoSingleMinus(
                          ) [NoSingleMinus]
                          TermFactor(
                            DesignatorEmpty(
                              DesignatorNode(
                               a
                                NoIdentExpr(
                                ) [NoIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementOnly]
                  ) [Statements]
                ) [MethodDecl]
              ) [MethodDeclarations]
              MethodDecl(
                NoVoidType(
                  Type(
                   int
                  ) [Type]
                ) [NoVoidType]
               getp
                FormalParams(
                  SingleFormalParamDecl(
                    FormalParamDeclarationNoBrackets(
                      Type(
                       int
                      ) [Type]
                     idx
                    ) [FormalParamDeclarationNoBrackets]
                  ) [SingleFormalParamDecl]
                ) [FormalParams]
                NoVarDeclaration(
                ) [NoVarDeclaration]
                Statements(
                  NoStatement(
                  ) [NoStatement]
                  ReturnStatement(
                    ExprNotNull(
                      SingleExpression(
                        NoSingleMinus(
                        ) [NoSingleMinus]
                        TermFactor(
                          DesignatorEmpty(
                            DesignatorNode(
                             pos
                              Exprs(
                                NoIdentExpr(
                                ) [NoIdentExpr]
                                SingleExpression(
                                  NoSingleMinus(
                                  ) [NoSingleMinus]
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                       idx
                                        NoIdentExpr(
                                        ) [NoIdentExpr]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [Exprs]
                            ) [DesignatorNode]
                          ) [DesignatorEmpty]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [ExprNotNull]
                  ) [ReturnStatement]
                ) [Statements]
              ) [MethodDecl]
            ) [MethodDeclarations]
            MethodDecl(
              NoVoidType(
                Type(
                 int
                ) [Type]
              ) [NoVoidType]
             getn
              FormalParams(
                SingleFormalParamDecl(
                  FormalParamDeclarationNoBrackets(
                    Type(
                     int
                    ) [Type]
                   idx
                  ) [FormalParamDeclarationNoBrackets]
                ) [SingleFormalParamDecl]
              ) [FormalParams]
              NoVarDeclaration(
              ) [NoVarDeclaration]
              Statements(
                NoStatement(
                ) [NoStatement]
                ReturnStatement(
                  ExprNotNull(
                    SingleExpression(
                      NoSingleMinus(
                      ) [NoSingleMinus]
                      TermFactor(
                        DesignatorEmpty(
                          DesignatorNode(
                           neg
                            Exprs(
                              NoIdentExpr(
                              ) [NoIdentExpr]
                              SingleExpression(
                                NoSingleMinus(
                                ) [NoSingleMinus]
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                     idx
                                      NoIdentExpr(
                                      ) [NoIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [Exprs]
                          ) [DesignatorNode]
                        ) [DesignatorEmpty]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [ExprNotNull]
                ) [ReturnStatement]
              ) [Statements]
            ) [MethodDecl]
          ) [MethodDeclarations]
        ) [ClassDeclarationWithMethods]
      ) [ClassDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclNode(
        Type(
         Table
        ) [Type]
        SingleVariable(
          VariableNoBracket(
           val
          ) [VariableNoBracket]
        ) [SingleVariable]
      ) [VarDeclNode]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        VoidType(
        ) [VoidType]
       f
        FormalParams(
          FormalParamDecls(
            FormalParamDecls(
              SingleFormalParamDecl(
                FormalParamDeclarationNoBrackets(
                  Type(
                   char
                  ) [Type]
                 ch
                ) [FormalParamDeclarationNoBrackets]
              ) [SingleFormalParamDecl]
              FormalParamDeclarationNoBrackets(
                Type(
                 int
                ) [Type]
               a
              ) [FormalParamDeclarationNoBrackets]
            ) [FormalParamDecls]
            FormalParamDeclarationNoBrackets(
              Type(
               int
              ) [Type]
             arg
            ) [FormalParamDeclarationNoBrackets]
          ) [FormalParamDecls]
        ) [FormalParams]
        VarDeclarationList(
          NoVarDeclaration(
          ) [NoVarDeclaration]
          VarDeclNode(
            Type(
             int
            ) [Type]
            SingleVariable(
              VariableNoBracket(
               x
              ) [VariableNoBracket]
            ) [SingleVariable]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        Statements(
          NoStatement(
          ) [NoStatement]
          DesignatorStatementOnly(
            DesignatorStatementAssignop(
              DesignatorNode(
               x
                NoIdentExpr(
                ) [NoIdentExpr]
              ) [DesignatorNode]
              Assignop(
              ) [Assignop]
              SingleExpression(
                NoSingleMinus(
                ) [NoSingleMinus]
                TermFactor(
                  DesignatorEmpty(
                    DesignatorNode(
                     arg
                      NoIdentExpr(
                      ) [NoIdentExpr]
                    ) [DesignatorNode]
                  ) [DesignatorEmpty]
                ) [TermFactor]
              ) [SingleExpression]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementOnly]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      VoidType(
      ) [VoidType]
     main
      NoFormalParam(
      ) [NoFormalParam]
      VarDeclarationList(
        VarDeclarationList(
          NoVarDeclaration(
          ) [NoVarDeclaration]
          VarDeclNode(
            Type(
             int
            ) [Type]
            Variables(
              SingleVariable(
                VariableNoBracket(
                 x
                ) [VariableNoBracket]
              ) [SingleVariable]
              VariableNoBracket(
               i
              ) [VariableNoBracket]
            ) [Variables]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        VarDeclNode(
          Type(
           char
          ) [Type]
          SingleVariable(
            VariableNoBracket(
             c
            ) [VariableNoBracket]
          ) [SingleVariable]
        ) [VarDeclNode]
      ) [VarDeclarationList]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStatement(
                    ) [NoStatement]
                    DesignatorStatementOnly(
                      DesignatorStatementAssignop(
                        DesignatorNode(
                         val
                          NoIdentExpr(
                          ) [NoIdentExpr]
                        ) [DesignatorNode]
                        Assignop(
                        ) [Assignop]
                        SingleExpression(
                          NoSingleMinus(
                          ) [NoSingleMinus]
                          TermFactor(
                            NewEmpty(
                              Type(
                               Table
                              ) [Type]
                              NodeEmpty(
                              ) [NodeEmpty]
                            ) [NewEmpty]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementOnly]
                  ) [Statements]
                  DesignatorStatementOnly(
                    DesignatorStatementAssignop(
                      DesignatorNode(
                       val
                        Idents(
                          NoIdentExpr(
                          ) [NoIdentExpr]
                         pos
                        ) [Idents]
                      ) [DesignatorNode]
                      Assignop(
                      ) [Assignop]
                      SingleExpression(
                        NoSingleMinus(
                        ) [NoSingleMinus]
                        TermFactor(
                          NewEmpty(
                            Type(
                             int
                            ) [Type]
                            Node(
                              SingleExpression(
                                NoSingleMinus(
                                ) [NoSingleMinus]
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                     size
                                      NoIdentExpr(
                                      ) [NoIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [Node]
                          ) [NewEmpty]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementOnly]
                ) [Statements]
                DesignatorStatementOnly(
                  DesignatorStatementAssignop(
                    DesignatorNode(
                     val
                      Idents(
                        NoIdentExpr(
                        ) [NoIdentExpr]
                       neg
                      ) [Idents]
                    ) [DesignatorNode]
                    Assignop(
                    ) [Assignop]
                    SingleExpression(
                      NoSingleMinus(
                      ) [NoSingleMinus]
                      TermFactor(
                        NewEmpty(
                          Type(
                           int
                          ) [Type]
                          Node(
                            SingleExpression(
                              NoSingleMinus(
                              ) [NoSingleMinus]
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                   size
                                    NoIdentExpr(
                                    ) [NoIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [Node]
                        ) [NewEmpty]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementOnly]
              ) [Statements]
              ForStatement(
                DesignatorStatementNotNull(
                  DesignatorStatementAssignop(
                    DesignatorNode(
                     i
                      NoIdentExpr(
                      ) [NoIdentExpr]
                    ) [DesignatorNode]
                    Assignop(
                    ) [Assignop]
                    SingleExpression(
                      NoSingleMinus(
                      ) [NoSingleMinus]
                      TermFactor(
                        ConstantNumber(
                         0
                        ) [ConstantNumber]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementNotNull]
                ConditionNotNull(
                  ConditionNode(
                    SingleConditionTerm(
                      ConditionTermNode(
                        SingleConditionFact(
                          CondFactExpressionRelopExpression(
                            SingleExpression(
                              NoSingleMinus(
                              ) [NoSingleMinus]
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                   i
                                    NoIdentExpr(
                                    ) [NoIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                            RelopLess(
                            ) [RelopLess]
                            SingleExpression(
                              NoSingleMinus(
                              ) [NoSingleMinus]
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                   size
                                    NoIdentExpr(
                                    ) [NoIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [CondFactExpressionRelopExpression]
                        ) [SingleConditionFact]
                      ) [ConditionTermNode]
                    ) [SingleConditionTerm]
                  ) [ConditionNode]
                ) [ConditionNotNull]
                DesignatorStatementNull(
                ) [DesignatorStatementNull]
                InBraceStatement(
                  Statements(
                    Statements(
                      NoStatement(
                      ) [NoStatement]
                      DesignatorStatementOnly(
                        DesignatorStatementActPars(
                          DesignatorNode(
                           val
                            Idents(
                              NoIdentExpr(
                              ) [NoIdentExpr]
                             putp
                            ) [Idents]
                          ) [DesignatorNode]
                          ActParsNode(
                            ActualParametres(
                              SingleActualParam(
                                SingleExpression(
                                  NoSingleMinus(
                                  ) [NoSingleMinus]
                                  TermFactor(
                                    ConstantNumber(
                                     0
                                    ) [ConstantNumber]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [SingleActualParam]
                              SingleExpression(
                                NoSingleMinus(
                                ) [NoSingleMinus]
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                     i
                                      NoIdentExpr(
                                      ) [NoIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [ActualParametres]
                          ) [ActParsNode]
                        ) [DesignatorStatementActPars]
                      ) [DesignatorStatementOnly]
                    ) [Statements]
                    DesignatorStatementOnly(
                      DesignatorStatementActPars(
                        DesignatorNode(
                         val
                          Idents(
                            NoIdentExpr(
                            ) [NoIdentExpr]
                           putn
                          ) [Idents]
                        ) [DesignatorNode]
                        ActParsNode(
                          ActualParametres(
                            SingleActualParam(
                              SingleExpression(
                                NoSingleMinus(
                                ) [NoSingleMinus]
                                TermFactor(
                                  ConstantNumber(
                                   0
                                  ) [ConstantNumber]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [SingleActualParam]
                            SingleExpression(
                              NoSingleMinus(
                              ) [NoSingleMinus]
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                   i
                                    NoIdentExpr(
                                    ) [NoIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [ActualParametres]
                        ) [ActParsNode]
                      ) [DesignatorStatementActPars]
                    ) [DesignatorStatementOnly]
                  ) [Statements]
                ) [InBraceStatement]
              ) [ForStatement]
            ) [Statements]
            DesignatorStatementOnly(
              DesignatorStatementActPars(
                DesignatorNode(
                 f
                  NoIdentExpr(
                  ) [NoIdentExpr]
                ) [DesignatorNode]
                ActParsNode(
                  ActualParametres(
                    ActualParametres(
                      SingleActualParam(
                        SingleExpression(
                          NoSingleMinus(
                          ) [NoSingleMinus]
                          TermFactor(
                            DesignatorEmpty(
                              DesignatorNode(
                               c
                                NoIdentExpr(
                                ) [NoIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [SingleActualParam]
                      SingleExpression(
                        NoSingleMinus(
                        ) [NoSingleMinus]
                        TermFactor(
                          DesignatorEmpty(
                            DesignatorNode(
                             x
                              NoIdentExpr(
                              ) [NoIdentExpr]
                            ) [DesignatorNode]
                          ) [DesignatorEmpty]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [ActualParametres]
                    SingleExpression(
                      NoSingleMinus(
                      ) [NoSingleMinus]
                      TermFactor(
                        DesignatorEmpty(
                          DesignatorNode(
                           i
                            NoIdentExpr(
                            ) [NoIdentExpr]
                          ) [DesignatorNode]
                        ) [DesignatorEmpty]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [ActualParametres]
                ) [ActParsNode]
              ) [DesignatorStatementActPars]
            ) [DesignatorStatementOnly]
          ) [Statements]
          ReadStatement(
            DesignatorNode(
             x
              NoIdentExpr(
              ) [NoIdentExpr]
            ) [DesignatorNode]
          ) [ReadStatement]
        ) [Statements]
        ForStatement(
          DesignatorStatementNull(
          ) [DesignatorStatementNull]
          ConditionNotNull(
            ConditionNode(
              SingleConditionTerm(
                ConditionTermNode(
                  SingleConditionFact(
                    CondFactExpressionRelopExpression(
                      SingleExpression(
                        NoSingleMinus(
                        ) [NoSingleMinus]
                        TermFactor(
                          DesignatorEmpty(
                            DesignatorNode(
                             x
                              NoIdentExpr(
                              ) [NoIdentExpr]
                            ) [DesignatorNode]
                          ) [DesignatorEmpty]
                        ) [TermFactor]
                      ) [SingleExpression]
                      RelopGreater(
                      ) [RelopGreater]
                      SingleExpression(
                        NoSingleMinus(
                        ) [NoSingleMinus]
                        TermFactor(
                          ConstantNumber(
                           0
                          ) [ConstantNumber]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [CondFactExpressionRelopExpression]
                  ) [SingleConditionFact]
                ) [ConditionTermNode]
              ) [SingleConditionTerm]
            ) [ConditionNode]
          ) [ConditionNotNull]
          DesignatorStatementNull(
          ) [DesignatorStatementNull]
          InBraceStatement(
            Statements(
              Statements(
                NoStatement(
                ) [NoStatement]
                IfElseStatement(
                  ConditionNode(
                    SingleConditionTerm(
                      ConditionTermNode(
                        ConditionFacts(
                          SingleConditionFact(
                            CondFactExpressionRelopExpression(
                              SingleExpression(
                                NoSingleMinus(
                                ) [NoSingleMinus]
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                     Num
                                      Idents(
                                        NoIdentExpr(
                                        ) [NoIdentExpr]
                                       ZERO
                                      ) [Idents]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                              RelopLessEqual(
                              ) [RelopLessEqual]
                              SingleExpression(
                                NoSingleMinus(
                                ) [NoSingleMinus]
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                     x
                                      NoIdentExpr(
                                      ) [NoIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [CondFactExpressionRelopExpression]
                          ) [SingleConditionFact]
                          CondFactExpressionRelopExpression(
                            SingleExpression(
                              NoSingleMinus(
                              ) [NoSingleMinus]
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                   x
                                    NoIdentExpr(
                                    ) [NoIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                            RelopLess(
                            ) [RelopLess]
                            SingleExpression(
                              NoSingleMinus(
                              ) [NoSingleMinus]
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                   size
                                    NoIdentExpr(
                                    ) [NoIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [CondFactExpressionRelopExpression]
                        ) [ConditionFacts]
                      ) [ConditionTermNode]
                    ) [SingleConditionTerm]
                  ) [ConditionNode]
                  InBraceStatement(
                    Statements(
                      NoStatement(
                      ) [NoStatement]
                      DesignatorStatementOnly(
                        DesignatorStatementActPars(
                          DesignatorNode(
                           val
                            Idents(
                              NoIdentExpr(
                              ) [NoIdentExpr]
                             putp
                            ) [Idents]
                          ) [DesignatorNode]
                          ActParsNode(
                            SingleActualParam(
                              ExpressionNode(
                                SingleExpression(
                                  NoSingleMinus(
                                  ) [NoSingleMinus]
                                  TermFactor(
                                    DesignatorBraceActPars(
                                      DesignatorNode(
                                       val
                                        Idents(
                                          NoIdentExpr(
                                          ) [NoIdentExpr]
                                         getp
                                        ) [Idents]
                                      ) [DesignatorNode]
                                      ActParsNode(
                                        SingleActualParam(
                                          SingleExpression(
                                            NoSingleMinus(
                                            ) [NoSingleMinus]
                                            TermFactor(
                                              DesignatorEmpty(
                                                DesignatorNode(
                                                 x
                                                  NoIdentExpr(
                                                  ) [NoIdentExpr]
                                                ) [DesignatorNode]
                                              ) [DesignatorEmpty]
                                            ) [TermFactor]
                                          ) [SingleExpression]
                                        ) [SingleActualParam]
                                      ) [ActParsNode]
                                    ) [DesignatorBraceActPars]
                                  ) [TermFactor]
                                ) [SingleExpression]
                                AddopPlus(
                                ) [AddopPlus]
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                     Num
                                      Idents(
                                        NoIdentExpr(
                                        ) [NoIdentExpr]
                                       ONE
                                      ) [Idents]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [ExpressionNode]
                            ) [SingleActualParam]
                          ) [ActParsNode]
                        ) [DesignatorStatementActPars]
                      ) [DesignatorStatementOnly]
                    ) [Statements]
                  ) [InBraceStatement]
                  IfStatement(
                    ConditionNode(
                      SingleConditionTerm(
                        ConditionTermNode(
                          ConditionFacts(
                            SingleConditionFact(
                              CondFactExpressionRelopExpression(
                                SingleExpression(
                                  SingleMinus(
                                  ) [SingleMinus]
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                       size
                                        NoIdentExpr(
                                        ) [NoIdentExpr]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                                RelopLess(
                                ) [RelopLess]
                                SingleExpression(
                                  NoSingleMinus(
                                  ) [NoSingleMinus]
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                       x
                                        NoIdentExpr(
                                        ) [NoIdentExpr]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [CondFactExpressionRelopExpression]
                            ) [SingleConditionFact]
                            CondFactExpressionRelopExpression(
                              SingleExpression(
                                NoSingleMinus(
                                ) [NoSingleMinus]
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                     x
                                      NoIdentExpr(
                                      ) [NoIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                              RelopLess(
                              ) [RelopLess]
                              SingleExpression(
                                NoSingleMinus(
                                ) [NoSingleMinus]
                                TermFactor(
                                  ConstantNumber(
                                   0
                                  ) [ConstantNumber]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [CondFactExpressionRelopExpression]
                          ) [ConditionFacts]
                        ) [ConditionTermNode]
                      ) [SingleConditionTerm]
                    ) [ConditionNode]
                    InBraceStatement(
                      Statements(
                        NoStatement(
                        ) [NoStatement]
                        DesignatorStatementOnly(
                          DesignatorStatementActPars(
                            DesignatorNode(
                             val
                              Idents(
                                NoIdentExpr(
                                ) [NoIdentExpr]
                               putn
                              ) [Idents]
                            ) [DesignatorNode]
                            ActParsNode(
                              SingleActualParam(
                                ExpressionNode(
                                  SingleExpression(
                                    NoSingleMinus(
                                    ) [NoSingleMinus]
                                    TermFactor(
                                      DesignatorBraceActPars(
                                        DesignatorNode(
                                         val
                                          Idents(
                                            NoIdentExpr(
                                            ) [NoIdentExpr]
                                           getn
                                          ) [Idents]
                                        ) [DesignatorNode]
                                        ActParsNode(
                                          SingleActualParam(
                                            SingleExpression(
                                              SingleMinus(
                                              ) [SingleMinus]
                                              TermFactor(
                                                DesignatorEmpty(
                                                  DesignatorNode(
                                                   x
                                                    NoIdentExpr(
                                                    ) [NoIdentExpr]
                                                  ) [DesignatorNode]
                                                ) [DesignatorEmpty]
                                              ) [TermFactor]
                                            ) [SingleExpression]
                                          ) [SingleActualParam]
                                        ) [ActParsNode]
                                      ) [DesignatorBraceActPars]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermFactor(
                                    ConstantNumber(
                                     1
                                    ) [ConstantNumber]
                                  ) [TermFactor]
                                ) [ExpressionNode]
                              ) [SingleActualParam]
                            ) [ActParsNode]
                          ) [DesignatorStatementActPars]
                        ) [DesignatorStatementOnly]
                      ) [Statements]
                    ) [InBraceStatement]
                  ) [IfStatement]
                ) [IfElseStatement]
              ) [Statements]
              ReadStatement(
                DesignatorNode(
                 x
                  NoIdentExpr(
                  ) [NoIdentExpr]
                ) [DesignatorNode]
              ) [ReadStatement]
            ) [Statements]
          ) [InBraceStatement]
        ) [ForStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  02:46:55,650 - ===================================
