INFO  02:54:23,305 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  02:54:23,333 - #2 program
INFO  02:54:23,333 - #45 P
INFO  02:54:23,333 - #8 const
INFO  02:54:23,333 - #45 int
INFO  02:54:23,333 - #45 size
INFO  02:54:23,334 - #26 =
INFO  02:54:23,334 - #44 10
INFO  02:54:23,334 - #18 ;
INFO  02:54:23,334 - #6 enum
INFO  02:54:23,334 - #45 Num
INFO  02:54:23,334 - #12 {
INFO  02:54:23,334 - #45 ZERO
INFO  02:54:23,334 - #19 ,
INFO  02:54:23,335 - #45 ONE
INFO  02:54:23,335 - #19 ,
INFO  02:54:23,335 - #45 TEN
INFO  02:54:23,335 - #26 =
INFO  02:54:23,335 - #44 10
INFO  02:54:23,335 - #13 }
INFO  02:54:23,335 - #5 interface
INFO  02:54:23,335 - #45 I
INFO  02:54:23,335 - #12 {
INFO  02:54:23,336 - #45 int
INFO  02:54:23,336 - #45 getp
INFO  02:54:23,336 - #16 (
INFO  02:54:23,336 - #45 int
INFO  02:54:23,336 - #45 i
INFO  02:54:23,336 - #17 )
INFO  02:54:23,336 - #18 ;
INFO  02:54:23,336 - #45 int
INFO  02:54:23,337 - #45 getn
INFO  02:54:23,337 - #16 (
INFO  02:54:23,337 - #45 int
INFO  02:54:23,337 - #45 i
INFO  02:54:23,337 - #17 )
INFO  02:54:23,337 - #18 ;
INFO  02:54:23,337 - #13 }
INFO  02:54:23,337 - #4 class
INFO  02:54:23,337 - #45 Table
INFO  02:54:23,337 - #41 implements
INFO  02:54:23,337 - #45 I
INFO  02:54:23,337 - #12 {
INFO  02:54:23,338 - #45 int
INFO  02:54:23,338 - #45 pos
INFO  02:54:23,338 - #14 [
INFO  02:54:23,338 - #15 ]
INFO  02:54:23,338 - #19 ,
INFO  02:54:23,338 - #45 neg
INFO  02:54:23,338 - #14 [
INFO  02:54:23,338 - #15 ]
INFO  02:54:23,338 - #18 ;
INFO  02:54:23,338 - #12 {
INFO  02:54:23,339 - #39 void
INFO  02:54:23,339 - #45 putp
INFO  02:54:23,339 - #16 (
INFO  02:54:23,339 - #45 int
INFO  02:54:23,339 - #45 a
INFO  02:54:23,339 - #19 ,
INFO  02:54:23,339 - #45 int
INFO  02:54:23,339 - #45 idx
INFO  02:54:23,339 - #17 )
INFO  02:54:23,340 - #12 {
INFO  02:54:23,340 - #45 this
INFO  02:54:23,340 - #20 .
INFO  02:54:23,340 - #45 pos
INFO  02:54:23,340 - #14 [
INFO  02:54:23,340 - #45 idx
INFO  02:54:23,341 - #15 ]
INFO  02:54:23,342 - #26 =
INFO  02:54:23,342 - #45 a
INFO  02:54:23,343 - #18 ;
INFO  02:54:23,343 - #13 }
INFO  02:54:23,343 - #39 void
INFO  02:54:23,343 - #45 putn
INFO  02:54:23,343 - #16 (
INFO  02:54:23,343 - #45 int
INFO  02:54:23,344 - #45 a
INFO  02:54:23,344 - #19 ,
INFO  02:54:23,344 - #45 int
INFO  02:54:23,344 - #45 idx
INFO  02:54:23,344 - #17 )
INFO  02:54:23,344 - #12 {
INFO  02:54:23,344 - #45 this
INFO  02:54:23,344 - #20 .
INFO  02:54:23,344 - #45 neg
INFO  02:54:23,344 - #14 [
INFO  02:54:23,344 - #45 idx
INFO  02:54:23,344 - #15 ]
INFO  02:54:23,344 - #26 =
INFO  02:54:23,344 - #45 a
INFO  02:54:23,344 - #18 ;
INFO  02:54:23,344 - #13 }
INFO  02:54:23,344 - #45 int
INFO  02:54:23,344 - #45 getp
INFO  02:54:23,344 - #16 (
INFO  02:54:23,344 - #45 int
INFO  02:54:23,344 - #45 idx
INFO  02:54:23,344 - #17 )
INFO  02:54:23,344 - #12 {
INFO  02:54:23,344 - #38 return
INFO  02:54:23,344 - #45 pos
INFO  02:54:23,344 - #14 [
INFO  02:54:23,344 - #45 idx
INFO  02:54:23,344 - #15 ]
INFO  02:54:23,345 - #18 ;
INFO  02:54:23,345 - #13 }
INFO  02:54:23,345 - #45 int
INFO  02:54:23,345 - #45 getn
INFO  02:54:23,345 - #16 (
INFO  02:54:23,345 - #45 int
INFO  02:54:23,345 - #45 idx
INFO  02:54:23,345 - #17 )
INFO  02:54:23,345 - #12 {
INFO  02:54:23,345 - #38 return
INFO  02:54:23,345 - #45 neg
INFO  02:54:23,345 - #14 [
INFO  02:54:23,345 - #45 idx
INFO  02:54:23,345 - #15 ]
INFO  02:54:23,345 - #18 ;
INFO  02:54:23,345 - #13 }
INFO  02:54:23,345 - #13 }
INFO  02:54:23,345 - #13 }
INFO  02:54:23,345 - #45 Table
INFO  02:54:23,346 - #45 val
INFO  02:54:23,346 - #18 ;
INFO  02:54:23,346 - #12 {
INFO  02:54:23,346 - #39 void
INFO  02:54:23,346 - #45 f
INFO  02:54:23,346 - #16 (
INFO  02:54:23,346 - #45 char
INFO  02:54:23,346 - #45 ch
INFO  02:54:23,346 - #19 ,
INFO  02:54:23,346 - #45 int
INFO  02:54:23,346 - #45 a
INFO  02:54:23,346 - #19 ,
INFO  02:54:23,346 - #45 int
INFO  02:54:23,346 - #45 arg
INFO  02:54:23,346 - #17 )
INFO  02:54:23,346 - #45 int
INFO  02:54:23,346 - #45 x
INFO  02:54:23,346 - #18 ;
INFO  02:54:23,346 - #12 {
INFO  02:54:23,346 - #45 x
INFO  02:54:23,346 - #26 =
INFO  02:54:23,346 - #45 arg
INFO  02:54:23,346 - #18 ;
INFO  02:54:23,347 - #13 }
INFO  02:54:23,347 - #39 void
INFO  02:54:23,347 - #45 main
INFO  02:54:23,347 - #16 (
INFO  02:54:23,347 - #17 )
INFO  02:54:23,347 - #45 int
INFO  02:54:23,347 - #45 x
INFO  02:54:23,347 - #19 ,
INFO  02:54:23,347 - #45 i
INFO  02:54:23,347 - #18 ;
INFO  02:54:23,347 - #45 char
INFO  02:54:23,347 - #45 c
INFO  02:54:23,347 - #18 ;
INFO  02:54:23,347 - #12 {
INFO  02:54:23,347 - #45 val
INFO  02:54:23,347 - #26 =
INFO  02:54:23,347 - #10 new
INFO  02:54:23,347 - #45 Table
INFO  02:54:23,347 - #18 ;
INFO  02:54:23,348 - #45 val
INFO  02:54:23,348 - #20 .
INFO  02:54:23,348 - #45 pos
INFO  02:54:23,348 - #26 =
INFO  02:54:23,348 - #10 new
INFO  02:54:23,348 - #45 int
INFO  02:54:23,348 - #14 [
INFO  02:54:23,348 - #45 size
INFO  02:54:23,348 - #15 ]
INFO  02:54:23,348 - #18 ;
INFO  02:54:23,348 - #45 val
INFO  02:54:23,348 - #20 .
INFO  02:54:23,348 - #45 neg
INFO  02:54:23,348 - #26 =
INFO  02:54:23,348 - #10 new
INFO  02:54:23,348 - #45 int
INFO  02:54:23,348 - #14 [
INFO  02:54:23,349 - #45 size
INFO  02:54:23,349 - #15 ]
INFO  02:54:23,349 - #18 ;
INFO  02:54:23,349 - #40 for
INFO  02:54:23,349 - #16 (
INFO  02:54:23,349 - #45 i
INFO  02:54:23,349 - #26 =
INFO  02:54:23,349 - #44 0
INFO  02:54:23,349 - #18 ;
INFO  02:54:23,349 - #45 i
INFO  02:54:23,349 - #33 <
INFO  02:54:23,349 - #45 size
INFO  02:54:23,349 - #18 ;
INFO  02:54:23,350 - #45 i
INFO  02:54:23,350 - #27 ++
ERROR 02:54:23,350 - 
Sintaksna greska na liniji 31
ERROR 02:54:23,350 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 31
