INFO  19:52:35,135 - Putanja iz argumenta: test/program.mj
INFO  19:52:35,135 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  19:52:35,167 - #2 program
INFO  19:52:35,167 - #45 MojProgram
INFO  19:52:35,167 - #8 const
INFO  19:52:35,168 - #45 int
INFO  19:52:35,168 - #45 size
INFO  19:52:35,168 - #26 =
INFO  19:52:35,168 - #44 10
INFO  19:52:35,168 - #19 ,
INFO  19:52:35,168 - #45 const1
INFO  19:52:35,169 - #26 =
INFO  19:52:35,169 - #44 1
INFO  19:52:35,169 - #19 ,
INFO  19:52:35,169 - #45 const2
INFO  19:52:35,169 - #26 =
INFO  19:52:35,169 - #44 2
INFO  19:52:35,169 - #18 ;
INFO  19:52:35,169 - #8 const
INFO  19:52:35,169 - #45 bool
INFO  19:52:35,169 - #45 b1
INFO  19:52:35,170 - #26 =
INFO  19:52:35,170 - #47 1
INFO  19:52:35,170 - #19 ,
INFO  19:52:35,170 - #45 b2
INFO  19:52:35,170 - #26 =
INFO  19:52:35,170 - #47 0
INFO  19:52:35,170 - #18 ;
INFO  19:52:35,170 - #8 const
INFO  19:52:35,170 - #45 char
INFO  19:52:35,170 - #45 x
INFO  19:52:35,170 - #26 =
INFO  19:52:35,170 - #46 a
INFO  19:52:35,170 - #18 ;
INFO  19:52:35,170 - #8 const
INFO  19:52:35,170 - #45 bool
INFO  19:52:35,170 - #45 bb
INFO  19:52:35,171 - #26 =
INFO  19:52:35,171 - #47 1
INFO  19:52:35,171 - #18 ;
INFO  19:52:35,171 - #45 int
INFO  19:52:35,171 - #45 niz
INFO  19:52:35,171 - #14 [
INFO  19:52:35,171 - #15 ]
INFO  19:52:35,171 - #19 ,
INFO  19:52:35,171 - #45 d
INFO  19:52:35,171 - #18 ;
INFO  19:52:35,171 - #6 enum
INFO  19:52:35,172 - #45 Num
INFO  19:52:35,172 - #12 {
INFO  19:52:35,172 - #45 ZERO
INFO  19:52:35,172 - #26 =
INFO  19:52:35,172 - #44 0
INFO  19:52:35,172 - #19 ,
INFO  19:52:35,172 - #45 ONE
INFO  19:52:35,172 - #19 ,
INFO  19:52:35,173 - #45 TEN
INFO  19:52:35,173 - #26 =
INFO  19:52:35,173 - #44 10
INFO  19:52:35,173 - #19 ,
INFO  19:52:35,173 - #45 ELEVEN
INFO  19:52:35,173 - #26 =
INFO  19:52:35,173 - #44 11
INFO  19:52:35,173 - #13 }
INFO  19:52:35,173 - #45 int
INFO  19:52:35,173 - #45 a
INFO  19:52:35,173 - #19 ,
INFO  19:52:35,173 - #45 b
INFO  19:52:35,173 - #19 ,
INFO  19:52:35,173 - #45 c
INFO  19:52:35,173 - #18 ;
INFO  19:52:35,173 - #45 bool
INFO  19:52:35,173 - #45 bo
INFO  19:52:35,174 - #18 ;
INFO  19:52:35,174 - #8 const
INFO  19:52:35,174 - #45 bool
INFO  19:52:35,174 - #45 b_const
INFO  19:52:35,174 - #26 =
INFO  19:52:35,174 - #47 0
INFO  19:52:35,174 - #18 ;
INFO  19:52:35,174 - #45 int
INFO  19:52:35,174 - #45 xx
INFO  19:52:35,174 - #19 ,
INFO  19:52:35,174 - #45 aa
INFO  19:52:35,174 - #14 [
INFO  19:52:35,174 - #15 ]
INFO  19:52:35,174 - #19 ,
INFO  19:52:35,174 - #45 i
INFO  19:52:35,174 - #18 ;
INFO  19:52:35,174 - #12 {
INFO  19:52:35,174 - #45 int
INFO  19:52:35,175 - #45 fibo
INFO  19:52:35,175 - #16 (
INFO  19:52:35,175 - #45 int
INFO  19:52:35,175 - #45 n
INFO  19:52:35,175 - #17 )
INFO  19:52:35,175 - #12 {
INFO  19:52:35,176 - #9 if
INFO  19:52:35,176 - #16 (
INFO  19:52:35,176 - #45 n
INFO  19:52:35,176 - #33 <
INFO  19:52:35,177 - #44 2
INFO  19:52:35,177 - #17 )
INFO  19:52:35,178 - #38 return
INFO  19:52:35,178 - #44 1
INFO  19:52:35,178 - #18 ;
INFO  19:52:35,178 - #38 return
INFO  19:52:35,178 - #45 fibo
INFO  19:52:35,178 - #16 (
INFO  19:52:35,179 - #45 n
INFO  19:52:35,179 - #22 -
INFO  19:52:35,179 - #44 1
INFO  19:52:35,179 - #17 )
INFO  19:52:35,179 - #21 +
INFO  19:52:35,180 - #45 fibo
INFO  19:52:35,180 - #16 (
INFO  19:52:35,180 - #45 n
INFO  19:52:35,180 - #22 -
INFO  19:52:35,180 - #44 2
INFO  19:52:35,180 - #17 )
INFO  19:52:35,180 - #18 ;
INFO  19:52:35,180 - #13 }
INFO  19:52:35,180 - #39 void
INFO  19:52:35,181 - #45 main
INFO  19:52:35,181 - #16 (
INFO  19:52:35,181 - #17 )
INFO  19:52:35,181 - #45 int
INFO  19:52:35,181 - #45 x
INFO  19:52:35,181 - #19 ,
INFO  19:52:35,182 - #45 i
INFO  19:52:35,182 - #18 ;
INFO  19:52:35,182 - #45 char
INFO  19:52:35,182 - #45 c
INFO  19:52:35,182 - #18 ;
INFO  19:52:35,182 - #45 int
INFO  19:52:35,182 - #45 val
INFO  19:52:35,182 - #18 ;
INFO  19:52:35,182 - #45 char
INFO  19:52:35,182 - #45 l
INFO  19:52:35,182 - #14 [
INFO  19:52:35,182 - #15 ]
INFO  19:52:35,182 - #18 ;
INFO  19:52:35,182 - #45 bool
INFO  19:52:35,182 - #45 bbb
INFO  19:52:35,182 - #14 [
INFO  19:52:35,183 - #15 ]
INFO  19:52:35,183 - #18 ;
INFO  19:52:35,183 - #45 Num
INFO  19:52:35,183 - #45 test1
INFO  19:52:35,183 - #19 ,
INFO  19:52:35,183 - #45 test2
INFO  19:52:35,183 - #18 ;
INFO  19:52:35,183 - #12 {
INFO  19:52:35,183 - #45 aa
INFO  19:52:35,183 - #26 =
INFO  19:52:35,183 - #10 new
INFO  19:52:35,183 - #45 int
INFO  19:52:35,183 - #14 [
INFO  19:52:35,183 - #44 20
INFO  19:52:35,183 - #15 ]
INFO  19:52:35,184 - #18 ;
INFO  19:52:35,184 - #45 i
INFO  19:52:35,184 - #26 =
INFO  19:52:35,184 - #44 0
INFO  19:52:35,184 - #18 ;
INFO  19:52:35,184 - #40 for
INFO  19:52:35,184 - #16 (
INFO  19:52:35,184 - #18 ;
INFO  19:52:35,184 - #45 i
INFO  19:52:35,184 - #33 <
INFO  19:52:35,185 - #44 10
INFO  19:52:35,185 - #18 ;
INFO  19:52:35,185 - #45 i
INFO  19:52:35,185 - #27 ++
INFO  19:52:35,185 - #17 )
INFO  19:52:35,186 - #12 {
INFO  19:52:35,186 - #40 for
INFO  19:52:35,186 - #16 (
INFO  19:52:35,186 - #45 b
INFO  19:52:35,186 - #26 =
INFO  19:52:35,186 - #45 i
INFO  19:52:35,186 - #18 ;
INFO  19:52:35,186 - #45 b
INFO  19:52:35,186 - #33 <
INFO  19:52:35,186 - #44 10
INFO  19:52:35,186 - #18 ;
INFO  19:52:35,186 - #17 )
INFO  19:52:35,186 - #12 {
INFO  19:52:35,186 - #11 print
INFO  19:52:35,186 - #16 (
INFO  19:52:35,186 - #45 fibo
INFO  19:52:35,186 - #16 (
INFO  19:52:35,186 - #45 i
INFO  19:52:35,186 - #17 )
INFO  19:52:35,186 - #17 )
INFO  19:52:35,186 - #18 ;
INFO  19:52:35,186 - #45 b
INFO  19:52:35,188 - #27 ++
INFO  19:52:35,188 - #18 ;
INFO  19:52:35,188 - #13 }
INFO  19:52:35,188 - #11 print
INFO  19:52:35,188 - #16 (
INFO  19:52:35,188 - #45 eol
INFO  19:52:35,188 - #17 )
INFO  19:52:35,188 - #18 ;
INFO  19:52:35,188 - #13 }
INFO  19:52:35,188 - #13 }
INFO  19:52:35,188 - #13 }
INFO  19:52:35,194 - Program(
  ProgName(
   MojProgram
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                Declarations(
                  Declarations(
                    Declarations(
                      NoDecl(
                      ) [NoDecl]
                      ConstDeclaration(
                        ConstDeclNode(
                          ConstDeclType(
                            TypeNode(
                             int
                            ) [TypeNode]
                          ) [ConstDeclType]
                          Constants(
                            Constants(
                              SingleConstant(
                                IdentEqualConstantNode(
                                 size
                                  NumberNode(
                                   10
                                  ) [NumberNode]
                                ) [IdentEqualConstantNode]
                              ) [SingleConstant]
                              IdentEqualConstantNode(
                               const1
                                NumberNode(
                                 1
                                ) [NumberNode]
                              ) [IdentEqualConstantNode]
                            ) [Constants]
                            IdentEqualConstantNode(
                             const2
                              NumberNode(
                               2
                              ) [NumberNode]
                            ) [IdentEqualConstantNode]
                          ) [Constants]
                        ) [ConstDeclNode]
                      ) [ConstDeclaration]
                    ) [Declarations]
                    ConstDeclaration(
                      ConstDeclNode(
                        ConstDeclType(
                          TypeNode(
                           bool
                          ) [TypeNode]
                        ) [ConstDeclType]
                        Constants(
                          SingleConstant(
                            IdentEqualConstantNode(
                             b1
                              BooleanNode(
                               1
                              ) [BooleanNode]
                            ) [IdentEqualConstantNode]
                          ) [SingleConstant]
                          IdentEqualConstantNode(
                           b2
                            BooleanNode(
                             0
                            ) [BooleanNode]
                          ) [IdentEqualConstantNode]
                        ) [Constants]
                      ) [ConstDeclNode]
                    ) [ConstDeclaration]
                  ) [Declarations]
                  ConstDeclaration(
                    ConstDeclNode(
                      ConstDeclType(
                        TypeNode(
                         char
                        ) [TypeNode]
                      ) [ConstDeclType]
                      SingleConstant(
                        IdentEqualConstantNode(
                         x
                          CharNode(
                           a
                          ) [CharNode]
                        ) [IdentEqualConstantNode]
                      ) [SingleConstant]
                    ) [ConstDeclNode]
                  ) [ConstDeclaration]
                ) [Declarations]
                ConstDeclaration(
                  ConstDeclNode(
                    ConstDeclType(
                      TypeNode(
                       bool
                      ) [TypeNode]
                    ) [ConstDeclType]
                    SingleConstant(
                      IdentEqualConstantNode(
                       bb
                        BooleanNode(
                         1
                        ) [BooleanNode]
                      ) [IdentEqualConstantNode]
                    ) [SingleConstant]
                  ) [ConstDeclNode]
                ) [ConstDeclaration]
              ) [Declarations]
              VarDeclaration(
                VarDeclNode(
                  VarDeclType(
                    TypeNode(
                     int
                    ) [TypeNode]
                  ) [VarDeclType]
                  Variables(
                    SingleVariable(
                      VariableBracket(
                       niz
                      ) [VariableBracket]
                    ) [SingleVariable]
                    VariableNoBracket(
                     d
                    ) [VariableNoBracket]
                  ) [Variables]
                ) [VarDeclNode]
              ) [VarDeclaration]
            ) [Declarations]
            EnumDeclaration(
              EnumDeclarationNode(
                EnumIdent(
                 Num
                ) [EnumIdent]
                Enumerations(
                  Enumerations(
                    Enumerations(
                      SingleEnumeration(
                        EnumerationVal(
                         ZERO
                         0
                        ) [EnumerationVal]
                      ) [SingleEnumeration]
                      EnumerationNoVal(
                       ONE
                      ) [EnumerationNoVal]
                    ) [Enumerations]
                    EnumerationVal(
                     TEN
                     10
                    ) [EnumerationVal]
                  ) [Enumerations]
                  EnumerationVal(
                   ELEVEN
                   11
                  ) [EnumerationVal]
                ) [Enumerations]
              ) [EnumDeclarationNode]
            ) [EnumDeclaration]
          ) [Declarations]
          VarDeclaration(
            VarDeclNode(
              VarDeclType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [VarDeclType]
              Variables(
                Variables(
                  SingleVariable(
                    VariableNoBracket(
                     a
                    ) [VariableNoBracket]
                  ) [SingleVariable]
                  VariableNoBracket(
                   b
                  ) [VariableNoBracket]
                ) [Variables]
                VariableNoBracket(
                 c
                ) [VariableNoBracket]
              ) [Variables]
            ) [VarDeclNode]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclNode(
            VarDeclType(
              TypeNode(
               bool
              ) [TypeNode]
            ) [VarDeclType]
            SingleVariable(
              VariableNoBracket(
               bo
              ) [VariableNoBracket]
            ) [SingleVariable]
          ) [VarDeclNode]
        ) [VarDeclaration]
      ) [Declarations]
      ConstDeclaration(
        ConstDeclNode(
          ConstDeclType(
            TypeNode(
             bool
            ) [TypeNode]
          ) [ConstDeclType]
          SingleConstant(
            IdentEqualConstantNode(
             b_const
              BooleanNode(
               0
              ) [BooleanNode]
            ) [IdentEqualConstantNode]
          ) [SingleConstant]
        ) [ConstDeclNode]
      ) [ConstDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclNode(
        VarDeclType(
          TypeNode(
           int
          ) [TypeNode]
        ) [VarDeclType]
        Variables(
          Variables(
            SingleVariable(
              VariableNoBracket(
               xx
              ) [VariableNoBracket]
            ) [SingleVariable]
            VariableBracket(
             aa
            ) [VariableBracket]
          ) [Variables]
          VariableNoBracket(
           i
          ) [VariableNoBracket]
        ) [Variables]
      ) [VarDeclNode]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          NoVoidType(
            TypeNode(
             int
            ) [TypeNode]
          ) [NoVoidType]
         fibo
        ) [MethodTypeName]
        FormalParams(
          SingleFormalParamDecl(
            FormalParamDeclarationNoBrackets(
              TypeNode(
               int
              ) [TypeNode]
             n
            ) [FormalParamDeclarationNoBrackets]
          ) [SingleFormalParamDecl]
        ) [FormalParams]
        NoVarDeclaration(
        ) [NoVarDeclaration]
        MethodLBRACE(
        ) [MethodLBRACE]
        Statements(
          Statements(
            NoStatement(
            ) [NoStatement]
            IfStatement(
              IfConditionNode(
                ConditionNode(
                  SingleConditionTerm(
                    ConditionTermNode(
                      SingleConditionFact(
                        CondFactExpressionRelopExpression(
                          SingleExpression(
                            TermFactor(
                              DesignatorEmpty(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   n
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                              ) [DesignatorEmpty]
                            ) [TermFactor]
                          ) [SingleExpression]
                          RelopLess(
                          ) [RelopLess]
                          SingleExpression(
                            TermFactor(
                              ConstantNumber(
                               2
                              ) [ConstantNumber]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [CondFactExpressionRelopExpression]
                      ) [SingleConditionFact]
                    ) [ConditionTermNode]
                  ) [SingleConditionTerm]
                ) [ConditionNode]
              ) [IfConditionNode]
              IfStatementThen(
                ReturnStatementExpr(
                  SingleExpression(
                    TermFactor(
                      ConstantNumber(
                       1
                      ) [ConstantNumber]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [ReturnStatementExpr]
              ) [IfStatementThen]
            ) [IfStatement]
          ) [Statements]
          ReturnStatementExpr(
            ExpressionNode(
              SingleExpression(
                TermFactor(
                  DesignatorBraceActPars(
                    DesignatorNode(
                      SingleIdentExpr(
                       fibo
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                    ActParsNode(
                      SingleActualParam(
                        ExpressionNode(
                          SingleExpression(
                            TermFactor(
                              DesignatorEmpty(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   n
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                              ) [DesignatorEmpty]
                            ) [TermFactor]
                          ) [SingleExpression]
                          AddopMinus(
                          ) [AddopMinus]
                          TermFactor(
                            ConstantNumber(
                             1
                            ) [ConstantNumber]
                          ) [TermFactor]
                        ) [ExpressionNode]
                      ) [SingleActualParam]
                    ) [ActParsNode]
                  ) [DesignatorBraceActPars]
                ) [TermFactor]
              ) [SingleExpression]
              AddopPlus(
              ) [AddopPlus]
              TermFactor(
                DesignatorBraceActPars(
                  DesignatorNode(
                    SingleIdentExpr(
                     fibo
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                  ActParsNode(
                    SingleActualParam(
                      ExpressionNode(
                        SingleExpression(
                          TermFactor(
                            DesignatorEmpty(
                              DesignatorNode(
                                SingleIdentExpr(
                                 n
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermFactor]
                        ) [SingleExpression]
                        AddopMinus(
                        ) [AddopMinus]
                        TermFactor(
                          ConstantNumber(
                           2
                          ) [ConstantNumber]
                        ) [TermFactor]
                      ) [ExpressionNode]
                    ) [SingleActualParam]
                  ) [ActParsNode]
                ) [DesignatorBraceActPars]
              ) [TermFactor]
            ) [ExpressionNode]
          ) [ReturnStatementExpr]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      VarDeclarationList(
        VarDeclarationList(
          VarDeclarationList(
            VarDeclarationList(
              VarDeclarationList(
                VarDeclarationList(
                  NoVarDeclaration(
                  ) [NoVarDeclaration]
                  VarDeclNode(
                    VarDeclType(
                      TypeNode(
                       int
                      ) [TypeNode]
                    ) [VarDeclType]
                    Variables(
                      SingleVariable(
                        VariableNoBracket(
                         x
                        ) [VariableNoBracket]
                      ) [SingleVariable]
                      VariableNoBracket(
                       i
                      ) [VariableNoBracket]
                    ) [Variables]
                  ) [VarDeclNode]
                ) [VarDeclarationList]
                VarDeclNode(
                  VarDeclType(
                    TypeNode(
                     char
                    ) [TypeNode]
                  ) [VarDeclType]
                  SingleVariable(
                    VariableNoBracket(
                     c
                    ) [VariableNoBracket]
                  ) [SingleVariable]
                ) [VarDeclNode]
              ) [VarDeclarationList]
              VarDeclNode(
                VarDeclType(
                  TypeNode(
                   int
                  ) [TypeNode]
                ) [VarDeclType]
                SingleVariable(
                  VariableNoBracket(
                   val
                  ) [VariableNoBracket]
                ) [SingleVariable]
              ) [VarDeclNode]
            ) [VarDeclarationList]
            VarDeclNode(
              VarDeclType(
                TypeNode(
                 char
                ) [TypeNode]
              ) [VarDeclType]
              SingleVariable(
                VariableBracket(
                 l
                ) [VariableBracket]
              ) [SingleVariable]
            ) [VarDeclNode]
          ) [VarDeclarationList]
          VarDeclNode(
            VarDeclType(
              TypeNode(
               bool
              ) [TypeNode]
            ) [VarDeclType]
            SingleVariable(
              VariableBracket(
               bbb
              ) [VariableBracket]
            ) [SingleVariable]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        VarDeclNode(
          VarDeclType(
            TypeNode(
             Num
            ) [TypeNode]
          ) [VarDeclType]
          Variables(
            SingleVariable(
              VariableNoBracket(
               test1
              ) [VariableNoBracket]
            ) [SingleVariable]
            VariableNoBracket(
             test2
            ) [VariableNoBracket]
          ) [Variables]
        ) [VarDeclNode]
      ) [VarDeclarationList]
      MethodLBRACE(
      ) [MethodLBRACE]
      Statements(
        Statements(
          Statements(
            NoStatement(
            ) [NoStatement]
            DesignatorStatementOnly(
              DesignatorStatementAssignop(
                DesignatorNode(
                  SingleIdentExpr(
                   aa
                  ) [SingleIdentExpr]
                ) [DesignatorNode]
                Assignop(
                ) [Assignop]
                SingleExpression(
                  TermFactor(
                    NewArray(
                      NewArrayType(
                        TypeNode(
                         int
                        ) [TypeNode]
                      ) [NewArrayType]
                      SingleExpression(
                        TermFactor(
                          ConstantNumber(
                           20
                          ) [ConstantNumber]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [NewArray]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementOnly]
          ) [Statements]
          DesignatorStatementOnly(
            DesignatorStatementAssignop(
              DesignatorNode(
                SingleIdentExpr(
                 i
                ) [SingleIdentExpr]
              ) [DesignatorNode]
              Assignop(
              ) [Assignop]
              SingleExpression(
                TermFactor(
                  ConstantNumber(
                   0
                  ) [ConstantNumber]
                ) [TermFactor]
              ) [SingleExpression]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementOnly]
        ) [Statements]
        ForStatement(
          ForHeader(
            ForStatement1(
              DesignatorStatementNull(
              ) [DesignatorStatementNull]
            ) [ForStatement1]
            ForCondition(
              ConditionNotNull(
                ConditionNode(
                  SingleConditionTerm(
                    ConditionTermNode(
                      SingleConditionFact(
                        CondFactExpressionRelopExpression(
                          SingleExpression(
                            TermFactor(
                              DesignatorEmpty(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   i
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                              ) [DesignatorEmpty]
                            ) [TermFactor]
                          ) [SingleExpression]
                          RelopLess(
                          ) [RelopLess]
                          SingleExpression(
                            TermFactor(
                              ConstantNumber(
                               10
                              ) [ConstantNumber]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [CondFactExpressionRelopExpression]
                      ) [SingleConditionFact]
                    ) [ConditionTermNode]
                  ) [SingleConditionTerm]
                ) [ConditionNode]
              ) [ConditionNotNull]
            ) [ForCondition]
            ForStatement2(
              DesignatorStatementNotNull(
                DesignatorStatementPlusPlus(
                  DesignatorNode(
                    SingleIdentExpr(
                     i
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                ) [DesignatorStatementPlusPlus]
              ) [DesignatorStatementNotNull]
            ) [ForStatement2]
          ) [ForHeader]
          InBraceStatement(
            Statements(
              Statements(
                NoStatement(
                ) [NoStatement]
                ForStatement(
                  ForHeader(
                    ForStatement1(
                      DesignatorStatementNotNull(
                        DesignatorStatementAssignop(
                          DesignatorNode(
                            SingleIdentExpr(
                             b
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                          Assignop(
                          ) [Assignop]
                          SingleExpression(
                            TermFactor(
                              DesignatorEmpty(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   i
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                              ) [DesignatorEmpty]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementNotNull]
                    ) [ForStatement1]
                    ForCondition(
                      ConditionNotNull(
                        ConditionNode(
                          SingleConditionTerm(
                            ConditionTermNode(
                              SingleConditionFact(
                                CondFactExpressionRelopExpression(
                                  SingleExpression(
                                    TermFactor(
                                      DesignatorEmpty(
                                        DesignatorNode(
                                          SingleIdentExpr(
                                           b
                                          ) [SingleIdentExpr]
                                        ) [DesignatorNode]
                                      ) [DesignatorEmpty]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                  RelopLess(
                                  ) [RelopLess]
                                  SingleExpression(
                                    TermFactor(
                                      ConstantNumber(
                                       10
                                      ) [ConstantNumber]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [CondFactExpressionRelopExpression]
                              ) [SingleConditionFact]
                            ) [ConditionTermNode]
                          ) [SingleConditionTerm]
                        ) [ConditionNode]
                      ) [ConditionNotNull]
                    ) [ForCondition]
                    ForStatement2(
                      DesignatorStatementNull(
                      ) [DesignatorStatementNull]
                    ) [ForStatement2]
                  ) [ForHeader]
                  InBraceStatement(
                    Statements(
                      Statements(
                        NoStatement(
                        ) [NoStatement]
                        PrintStatement(
                          SingleExpression(
                            TermFactor(
                              DesignatorBraceActPars(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   fibo
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                                ActParsNode(
                                  SingleActualParam(
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             i
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [SingleActualParam]
                                ) [ActParsNode]
                              ) [DesignatorBraceActPars]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [PrintStatement]
                      ) [Statements]
                      DesignatorStatementOnly(
                        DesignatorStatementPlusPlus(
                          DesignatorNode(
                            SingleIdentExpr(
                             b
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                        ) [DesignatorStatementPlusPlus]
                      ) [DesignatorStatementOnly]
                    ) [Statements]
                  ) [InBraceStatement]
                ) [ForStatement]
              ) [Statements]
              PrintStatement(
                SingleExpression(
                  TermFactor(
                    DesignatorEmpty(
                      DesignatorNode(
                        SingleIdentExpr(
                         eol
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                    ) [DesignatorEmpty]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [PrintStatement]
            ) [Statements]
          ) [InBraceStatement]
        ) [ForStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:52:35,195 - ===================================
INFO  19:52:35,198 - Definisana konstanta (10)size na liniji 4
INFO  19:52:35,198 - Definisana konstanta (1)const1 na liniji 4
INFO  19:52:35,198 - Definisana konstanta (2)const2 na liniji 4
INFO  19:52:35,198 - Definisana konstanta (1)b1 na liniji 5
INFO  19:52:35,198 - Definisana konstanta (0)b2 na liniji 5
INFO  19:52:35,198 - Definisana konstanta (97)x na liniji 6
INFO  19:52:35,198 - Definisana konstanta (1)bb na liniji 7
INFO  19:52:35,198 - Deklarisana array promenljiva niz na liniji 9
INFO  19:52:35,198 - Deklarisana single promenljiva d na liniji 9
INFO  19:52:35,198 - Deklarisan novi enum tip: Num na liniji 11
INFO  19:52:35,198 - Definisana enum konstanta ZERO sa vrednoscu 0 na liniji 11
INFO  19:52:35,198 - Definisana enum konstanta ONE sa vrednoscu 1 na liniji 11
INFO  19:52:35,198 - Definisana enum konstanta TEN sa vrednoscu 10 na liniji 11
INFO  19:52:35,198 - Definisana enum konstanta ELEVEN sa vrednoscu 11 na liniji 11
INFO  19:52:35,198 - Deklarisana single promenljiva a na liniji 13
INFO  19:52:35,198 - Deklarisana single promenljiva b na liniji 13
INFO  19:52:35,198 - Deklarisana single promenljiva c na liniji 13
INFO  19:52:35,198 - Deklarisana single promenljiva bo na liniji 15
INFO  19:52:35,198 - Definisana konstanta (0)b_const na liniji 16
INFO  19:52:35,198 - Deklarisana single promenljiva xx na liniji 18
INFO  19:52:35,199 - Deklarisana array promenljiva aa na liniji 18
INFO  19:52:35,199 - Deklarisana single promenljiva i na liniji 18
INFO  19:52:35,199 - Definisana funkcija fibo na liniji 20
INFO  19:52:35,199 - Deklarisan single argument n na liniji 20
INFO  19:52:35,199 - Pronadjen poziv promenljive n na liniji 22
INFO  19:52:35,199 - Pronadjen poziv promenljive n na liniji 23
INFO  19:52:35,199 - 1. >>>>>>>>>>[PRONADJEN] PARAMETAR FUNKCIJE tip[1] na liniji 23
