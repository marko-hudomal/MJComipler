INFO  17:41:14,279 - Putanja iz argumenta: test/program.mj
INFO  17:41:14,279 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  17:41:14,312 - #2 program
INFO  17:41:14,312 - #45 MojProgram
INFO  17:41:14,312 - #8 const
INFO  17:41:14,312 - #45 int
INFO  17:41:14,313 - #45 size
INFO  17:41:14,313 - #26 =
INFO  17:41:14,313 - #44 10
INFO  17:41:14,313 - #19 ,
INFO  17:41:14,313 - #45 const1
INFO  17:41:14,313 - #26 =
INFO  17:41:14,313 - #44 1
INFO  17:41:14,313 - #19 ,
INFO  17:41:14,314 - #45 const2
INFO  17:41:14,314 - #26 =
INFO  17:41:14,314 - #44 2
INFO  17:41:14,314 - #18 ;
INFO  17:41:14,314 - #8 const
INFO  17:41:14,314 - #45 bool
INFO  17:41:14,314 - #45 b1
INFO  17:41:14,314 - #26 =
INFO  17:41:14,315 - #47 1
INFO  17:41:14,315 - #19 ,
INFO  17:41:14,315 - #45 b2
INFO  17:41:14,315 - #26 =
INFO  17:41:14,315 - #47 0
INFO  17:41:14,315 - #18 ;
INFO  17:41:14,315 - #8 const
INFO  17:41:14,315 - #45 char
INFO  17:41:14,315 - #45 x
INFO  17:41:14,315 - #26 =
INFO  17:41:14,315 - #46 a
INFO  17:41:14,315 - #18 ;
INFO  17:41:14,315 - #8 const
INFO  17:41:14,316 - #45 bool
INFO  17:41:14,316 - #45 bb
INFO  17:41:14,316 - #26 =
INFO  17:41:14,316 - #47 1
INFO  17:41:14,316 - #18 ;
INFO  17:41:14,316 - #45 int
INFO  17:41:14,316 - #45 niz
INFO  17:41:14,316 - #14 [
INFO  17:41:14,316 - #15 ]
INFO  17:41:14,316 - #19 ,
INFO  17:41:14,316 - #45 d
INFO  17:41:14,316 - #18 ;
INFO  17:41:14,317 - #6 enum
INFO  17:41:14,317 - #45 Num
INFO  17:41:14,317 - #12 {
INFO  17:41:14,317 - #45 ZERO
INFO  17:41:14,317 - #26 =
INFO  17:41:14,317 - #44 0
INFO  17:41:14,317 - #19 ,
INFO  17:41:14,317 - #45 ONE
INFO  17:41:14,317 - #19 ,
INFO  17:41:14,318 - #45 TEN
INFO  17:41:14,318 - #26 =
INFO  17:41:14,318 - #44 10
INFO  17:41:14,318 - #19 ,
INFO  17:41:14,318 - #45 ELEVEN
INFO  17:41:14,318 - #26 =
INFO  17:41:14,318 - #44 11
INFO  17:41:14,318 - #13 }
INFO  17:41:14,318 - #45 int
INFO  17:41:14,318 - #45 a
INFO  17:41:14,318 - #19 ,
INFO  17:41:14,318 - #45 b
INFO  17:41:14,318 - #19 ,
INFO  17:41:14,318 - #45 c
INFO  17:41:14,318 - #18 ;
INFO  17:41:14,319 - #45 bool
INFO  17:41:14,319 - #45 bo
INFO  17:41:14,319 - #18 ;
INFO  17:41:14,319 - #8 const
INFO  17:41:14,319 - #45 bool
INFO  17:41:14,319 - #45 b_const
INFO  17:41:14,319 - #26 =
INFO  17:41:14,319 - #47 0
INFO  17:41:14,319 - #18 ;
INFO  17:41:14,319 - #45 int
INFO  17:41:14,319 - #45 xx
INFO  17:41:14,319 - #19 ,
INFO  17:41:14,319 - #45 aa
INFO  17:41:14,319 - #14 [
INFO  17:41:14,319 - #15 ]
INFO  17:41:14,319 - #18 ;
INFO  17:41:14,319 - #12 {
INFO  17:41:14,319 - #39 void
INFO  17:41:14,320 - #45 main
INFO  17:41:14,320 - #16 (
INFO  17:41:14,320 - #17 )
INFO  17:41:14,321 - #45 int
INFO  17:41:14,321 - #45 x
INFO  17:41:14,321 - #19 ,
INFO  17:41:14,321 - #45 i
INFO  17:41:14,322 - #18 ;
INFO  17:41:14,322 - #45 char
INFO  17:41:14,322 - #45 c
INFO  17:41:14,322 - #18 ;
INFO  17:41:14,322 - #45 int
INFO  17:41:14,322 - #45 val
INFO  17:41:14,322 - #18 ;
INFO  17:41:14,322 - #45 char
INFO  17:41:14,322 - #45 l
INFO  17:41:14,322 - #14 [
INFO  17:41:14,322 - #15 ]
INFO  17:41:14,322 - #18 ;
INFO  17:41:14,323 - #45 bool
INFO  17:41:14,323 - #45 bbb
INFO  17:41:14,323 - #14 [
INFO  17:41:14,323 - #15 ]
INFO  17:41:14,323 - #18 ;
INFO  17:41:14,323 - #45 Num
INFO  17:41:14,323 - #45 test1
INFO  17:41:14,323 - #19 ,
INFO  17:41:14,323 - #45 test2
INFO  17:41:14,323 - #18 ;
INFO  17:41:14,323 - #12 {
INFO  17:41:14,323 - #45 aa
INFO  17:41:14,324 - #26 =
INFO  17:41:14,324 - #10 new
INFO  17:41:14,325 - #45 int
INFO  17:41:14,325 - #14 [
INFO  17:41:14,325 - #44 20
INFO  17:41:14,325 - #15 ]
INFO  17:41:14,326 - #18 ;
INFO  17:41:14,326 - #37 read
INFO  17:41:14,326 - #16 (
INFO  17:41:14,326 - #45 xx
INFO  17:41:14,327 - #17 )
INFO  17:41:14,327 - #18 ;
INFO  17:41:14,327 - #11 print
INFO  17:41:14,329 - #16 (
INFO  17:41:14,329 - #45 ord
INFO  17:41:14,329 - #16 (
INFO  17:41:14,329 - #45 chr
INFO  17:41:14,329 - #16 (
INFO  17:41:14,329 - #44 65
INFO  17:41:14,329 - #17 )
INFO  17:41:14,329 - #17 )
INFO  17:41:14,329 - #17 )
INFO  17:41:14,330 - #18 ;
INFO  17:41:14,330 - #11 print
INFO  17:41:14,330 - #16 (
INFO  17:41:14,330 - #45 xx
INFO  17:41:14,330 - #17 )
INFO  17:41:14,330 - #18 ;
INFO  17:41:14,330 - #11 print
INFO  17:41:14,330 - #16 (
INFO  17:41:14,330 - #45 arr
INFO  17:41:14,330 - #17 )
INFO  17:41:14,330 - #18 ;
INFO  17:41:14,330 - #13 }
INFO  17:41:14,330 - #13 }
INFO  17:41:14,338 - Program(
  ProgName(
   MojProgram
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                Declarations(
                  Declarations(
                    Declarations(
                      NoDecl(
                      ) [NoDecl]
                      ConstDeclaration(
                        ConstDeclNode(
                          ConstDeclType(
                            TypeNode(
                             int
                            ) [TypeNode]
                          ) [ConstDeclType]
                          Constants(
                            Constants(
                              SingleConstant(
                                IdentEqualConstantNode(
                                 size
                                  NumberNode(
                                   10
                                  ) [NumberNode]
                                ) [IdentEqualConstantNode]
                              ) [SingleConstant]
                              IdentEqualConstantNode(
                               const1
                                NumberNode(
                                 1
                                ) [NumberNode]
                              ) [IdentEqualConstantNode]
                            ) [Constants]
                            IdentEqualConstantNode(
                             const2
                              NumberNode(
                               2
                              ) [NumberNode]
                            ) [IdentEqualConstantNode]
                          ) [Constants]
                        ) [ConstDeclNode]
                      ) [ConstDeclaration]
                    ) [Declarations]
                    ConstDeclaration(
                      ConstDeclNode(
                        ConstDeclType(
                          TypeNode(
                           bool
                          ) [TypeNode]
                        ) [ConstDeclType]
                        Constants(
                          SingleConstant(
                            IdentEqualConstantNode(
                             b1
                              BooleanNode(
                               1
                              ) [BooleanNode]
                            ) [IdentEqualConstantNode]
                          ) [SingleConstant]
                          IdentEqualConstantNode(
                           b2
                            BooleanNode(
                             0
                            ) [BooleanNode]
                          ) [IdentEqualConstantNode]
                        ) [Constants]
                      ) [ConstDeclNode]
                    ) [ConstDeclaration]
                  ) [Declarations]
                  ConstDeclaration(
                    ConstDeclNode(
                      ConstDeclType(
                        TypeNode(
                         char
                        ) [TypeNode]
                      ) [ConstDeclType]
                      SingleConstant(
                        IdentEqualConstantNode(
                         x
                          CharNode(
                           a
                          ) [CharNode]
                        ) [IdentEqualConstantNode]
                      ) [SingleConstant]
                    ) [ConstDeclNode]
                  ) [ConstDeclaration]
                ) [Declarations]
                ConstDeclaration(
                  ConstDeclNode(
                    ConstDeclType(
                      TypeNode(
                       bool
                      ) [TypeNode]
                    ) [ConstDeclType]
                    SingleConstant(
                      IdentEqualConstantNode(
                       bb
                        BooleanNode(
                         1
                        ) [BooleanNode]
                      ) [IdentEqualConstantNode]
                    ) [SingleConstant]
                  ) [ConstDeclNode]
                ) [ConstDeclaration]
              ) [Declarations]
              VarDeclaration(
                VarDeclNode(
                  VarDeclType(
                    TypeNode(
                     int
                    ) [TypeNode]
                  ) [VarDeclType]
                  Variables(
                    SingleVariable(
                      VariableBracket(
                       niz
                      ) [VariableBracket]
                    ) [SingleVariable]
                    VariableNoBracket(
                     d
                    ) [VariableNoBracket]
                  ) [Variables]
                ) [VarDeclNode]
              ) [VarDeclaration]
            ) [Declarations]
            EnumDeclaration(
              EnumDeclarationNode(
                EnumIdent(
                 Num
                ) [EnumIdent]
                Enumerations(
                  Enumerations(
                    Enumerations(
                      SingleEnumeration(
                        EnumerationVal(
                         ZERO
                         0
                        ) [EnumerationVal]
                      ) [SingleEnumeration]
                      EnumerationNoVal(
                       ONE
                      ) [EnumerationNoVal]
                    ) [Enumerations]
                    EnumerationVal(
                     TEN
                     10
                    ) [EnumerationVal]
                  ) [Enumerations]
                  EnumerationVal(
                   ELEVEN
                   11
                  ) [EnumerationVal]
                ) [Enumerations]
              ) [EnumDeclarationNode]
            ) [EnumDeclaration]
          ) [Declarations]
          VarDeclaration(
            VarDeclNode(
              VarDeclType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [VarDeclType]
              Variables(
                Variables(
                  SingleVariable(
                    VariableNoBracket(
                     a
                    ) [VariableNoBracket]
                  ) [SingleVariable]
                  VariableNoBracket(
                   b
                  ) [VariableNoBracket]
                ) [Variables]
                VariableNoBracket(
                 c
                ) [VariableNoBracket]
              ) [Variables]
            ) [VarDeclNode]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclNode(
            VarDeclType(
              TypeNode(
               bool
              ) [TypeNode]
            ) [VarDeclType]
            SingleVariable(
              VariableNoBracket(
               bo
              ) [VariableNoBracket]
            ) [SingleVariable]
          ) [VarDeclNode]
        ) [VarDeclaration]
      ) [Declarations]
      ConstDeclaration(
        ConstDeclNode(
          ConstDeclType(
            TypeNode(
             bool
            ) [TypeNode]
          ) [ConstDeclType]
          SingleConstant(
            IdentEqualConstantNode(
             b_const
              BooleanNode(
               0
              ) [BooleanNode]
            ) [IdentEqualConstantNode]
          ) [SingleConstant]
        ) [ConstDeclNode]
      ) [ConstDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclNode(
        VarDeclType(
          TypeNode(
           int
          ) [TypeNode]
        ) [VarDeclType]
        Variables(
          SingleVariable(
            VariableNoBracket(
             xx
            ) [VariableNoBracket]
          ) [SingleVariable]
          VariableBracket(
           aa
          ) [VariableBracket]
        ) [Variables]
      ) [VarDeclNode]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      VarDeclarationList(
        VarDeclarationList(
          VarDeclarationList(
            VarDeclarationList(
              VarDeclarationList(
                VarDeclarationList(
                  NoVarDeclaration(
                  ) [NoVarDeclaration]
                  VarDeclNode(
                    VarDeclType(
                      TypeNode(
                       int
                      ) [TypeNode]
                    ) [VarDeclType]
                    Variables(
                      SingleVariable(
                        VariableNoBracket(
                         x
                        ) [VariableNoBracket]
                      ) [SingleVariable]
                      VariableNoBracket(
                       i
                      ) [VariableNoBracket]
                    ) [Variables]
                  ) [VarDeclNode]
                ) [VarDeclarationList]
                VarDeclNode(
                  VarDeclType(
                    TypeNode(
                     char
                    ) [TypeNode]
                  ) [VarDeclType]
                  SingleVariable(
                    VariableNoBracket(
                     c
                    ) [VariableNoBracket]
                  ) [SingleVariable]
                ) [VarDeclNode]
              ) [VarDeclarationList]
              VarDeclNode(
                VarDeclType(
                  TypeNode(
                   int
                  ) [TypeNode]
                ) [VarDeclType]
                SingleVariable(
                  VariableNoBracket(
                   val
                  ) [VariableNoBracket]
                ) [SingleVariable]
              ) [VarDeclNode]
            ) [VarDeclarationList]
            VarDeclNode(
              VarDeclType(
                TypeNode(
                 char
                ) [TypeNode]
              ) [VarDeclType]
              SingleVariable(
                VariableBracket(
                 l
                ) [VariableBracket]
              ) [SingleVariable]
            ) [VarDeclNode]
          ) [VarDeclarationList]
          VarDeclNode(
            VarDeclType(
              TypeNode(
               bool
              ) [TypeNode]
            ) [VarDeclType]
            SingleVariable(
              VariableBracket(
               bbb
              ) [VariableBracket]
            ) [SingleVariable]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        VarDeclNode(
          VarDeclType(
            TypeNode(
             Num
            ) [TypeNode]
          ) [VarDeclType]
          Variables(
            SingleVariable(
              VariableNoBracket(
               test1
              ) [VariableNoBracket]
            ) [SingleVariable]
            VariableNoBracket(
             test2
            ) [VariableNoBracket]
          ) [Variables]
        ) [VarDeclNode]
      ) [VarDeclarationList]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStatement(
                ) [NoStatement]
                DesignatorStatementOnly(
                  DesignatorStatementAssignop(
                    DesignatorNode(
                      SingleIdentExpr(
                       aa
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                    Assignop(
                    ) [Assignop]
                    SingleExpression(
                      TermFactor(
                        NewArray(
                          NewArrayType(
                            TypeNode(
                             int
                            ) [TypeNode]
                          ) [NewArrayType]
                          SingleExpression(
                            TermFactor(
                              ConstantNumber(
                               20
                              ) [ConstantNumber]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [NewArray]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementOnly]
              ) [Statements]
              ReadStatement(
                DesignatorNode(
                  SingleIdentExpr(
                   xx
                  ) [SingleIdentExpr]
                ) [DesignatorNode]
              ) [ReadStatement]
            ) [Statements]
            PrintStatement(
              SingleExpression(
                TermFactor(
                  DesignatorBraceActPars(
                    DesignatorNode(
                      SingleIdentExpr(
                       ord
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                    ActParsNode(
                      SingleActualParam(
                        SingleExpression(
                          TermFactor(
                            DesignatorBraceActPars(
                              DesignatorNode(
                                SingleIdentExpr(
                                 chr
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                              ActParsNode(
                                SingleActualParam(
                                  SingleExpression(
                                    TermFactor(
                                      ConstantNumber(
                                       65
                                      ) [ConstantNumber]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [SingleActualParam]
                              ) [ActParsNode]
                            ) [DesignatorBraceActPars]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [SingleActualParam]
                    ) [ActParsNode]
                  ) [DesignatorBraceActPars]
                ) [TermFactor]
              ) [SingleExpression]
            ) [PrintStatement]
          ) [Statements]
          PrintStatement(
            SingleExpression(
              TermFactor(
                DesignatorEmpty(
                  DesignatorNode(
                    SingleIdentExpr(
                     xx
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                ) [DesignatorEmpty]
              ) [TermFactor]
            ) [SingleExpression]
          ) [PrintStatement]
        ) [Statements]
        PrintStatement(
          SingleExpression(
            TermFactor(
              DesignatorEmpty(
                DesignatorNode(
                  SingleIdentExpr(
                   arr
                  ) [SingleIdentExpr]
                ) [DesignatorNode]
              ) [DesignatorEmpty]
            ) [TermFactor]
          ) [SingleExpression]
        ) [PrintStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  17:41:14,338 - ===================================
INFO  17:41:14,341 - Definisana konstanta (10)size na liniji 4
INFO  17:41:14,341 - Definisana konstanta (1)const1 na liniji 4
INFO  17:41:14,341 - Definisana konstanta (2)const2 na liniji 4
INFO  17:41:14,341 - Definisana konstanta (1)b1 na liniji 5
INFO  17:41:14,341 - Definisana konstanta (0)b2 na liniji 5
INFO  17:41:14,342 - Definisana konstanta (97)x na liniji 6
INFO  17:41:14,342 - Definisana konstanta (1)bb na liniji 7
INFO  17:41:14,342 - Deklarisana array promenljiva niz na liniji 9
INFO  17:41:14,342 - Deklarisana single promenljiva d na liniji 9
INFO  17:41:14,342 - Deklarisan novi enum tip: Num na liniji 11
INFO  17:41:14,342 - Definisana enum konstanta ZERO sa vrednoscu 0 na liniji 11
INFO  17:41:14,342 - Definisana enum konstanta ONE sa vrednoscu 1 na liniji 11
INFO  17:41:14,342 - Definisana enum konstanta TEN sa vrednoscu 10 na liniji 11
INFO  17:41:14,342 - Definisana enum konstanta ELEVEN sa vrednoscu 11 na liniji 11
INFO  17:41:14,342 - Deklarisana single promenljiva a na liniji 13
INFO  17:41:14,342 - Deklarisana single promenljiva b na liniji 13
INFO  17:41:14,342 - Deklarisana single promenljiva c na liniji 13
INFO  17:41:14,342 - Deklarisana single promenljiva bo na liniji 15
INFO  17:41:14,342 - Definisana konstanta (0)b_const na liniji 16
INFO  17:41:14,342 - Deklarisana single promenljiva xx na liniji 18
INFO  17:41:14,342 - Deklarisana array promenljiva aa na liniji 18
INFO  17:41:14,342 - Definisana funkcija main na liniji 21
INFO  17:41:14,342 - Deklarisana single promenljiva x na liniji 22
INFO  17:41:14,342 - Deklarisana single promenljiva i na liniji 22
INFO  17:41:14,342 - Deklarisana single promenljiva c na liniji 22
INFO  17:41:14,342 - Deklarisana single promenljiva val na liniji 22
INFO  17:41:14,342 - Deklarisana array promenljiva l na liniji 23
INFO  17:41:14,343 - Deklarisana array promenljiva bbb na liniji 24
INFO  17:41:14,343 - Deklarisana single promenljiva test1 na liniji 25
INFO  17:41:14,343 - Deklarisana single promenljiva test2 na liniji 25
INFO  17:41:14,343 - Dodela vrednosti za aa na liniji 27
INFO  17:41:14,343 - Pronadjen poziv funkcije chr sa 1/1 argumenta na liniji 29
INFO  17:41:14,343 - Pronadjen poziv funkcije ord sa 1/1 argumenta na liniji 29
INFO  17:41:14,343 - Pronadjen poziv promenljive xx na liniji 30
ERROR 17:41:14,343 - Greska na liniji 31 : ime arr nije deklarisano! 
ERROR 17:41:14,343 - Greska na liniji 31 : Nekompatibilan tip izraza u print funkciji. 
INFO  17:41:14,343 - main funkcija je korektna.  na liniji 21
INFO  17:41:14,343 - ===================================
ERROR 17:41:14,344 - Parsiranje NIJE uspesno zavrseno!
