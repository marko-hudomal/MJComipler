INFO  01:22:18,417 - Putanja iz argumenta: test/program.mj
INFO  01:22:18,417 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  01:22:18,449 - #2 program
INFO  01:22:18,449 - #45 P
INFO  01:22:18,449 - #8 const
INFO  01:22:18,449 - #45 int
INFO  01:22:18,449 - #45 size
INFO  01:22:18,450 - #26 =
INFO  01:22:18,450 - #44 10
INFO  01:22:18,450 - #18 ;
INFO  01:22:18,450 - #6 enum
INFO  01:22:18,450 - #45 Num
INFO  01:22:18,450 - #12 {
INFO  01:22:18,451 - #45 ZERO
INFO  01:22:18,451 - #19 ,
INFO  01:22:18,451 - #45 ONE
INFO  01:22:18,451 - #19 ,
INFO  01:22:18,451 - #45 TEN
INFO  01:22:18,451 - #26 =
INFO  01:22:18,451 - #44 10
INFO  01:22:18,451 - #13 }
INFO  01:22:18,451 - #4 class
INFO  01:22:18,452 - #45 Table
INFO  01:22:18,452 - #12 {
INFO  01:22:18,453 - #45 int
INFO  01:22:18,453 - #45 pos
INFO  01:22:18,453 - #14 [
INFO  01:22:18,453 - #15 ]
INFO  01:22:18,453 - #19 ,
INFO  01:22:18,453 - #45 neg
INFO  01:22:18,453 - #14 [
INFO  01:22:18,453 - #15 ]
INFO  01:22:18,454 - #18 ;
INFO  01:22:18,454 - #12 {
INFO  01:22:18,454 - #39 void
INFO  01:22:18,454 - #45 putp
INFO  01:22:18,454 - #16 (
INFO  01:22:18,455 - #45 int
INFO  01:22:18,455 - #45 a
INFO  01:22:18,455 - #19 ,
INFO  01:22:18,455 - #45 int
INFO  01:22:18,455 - #45 idx
INFO  01:22:18,455 - #17 )
INFO  01:22:18,455 - #12 {
INFO  01:22:18,455 - #45 this
INFO  01:22:18,456 - #20 .
INFO  01:22:18,456 - #45 pos
INFO  01:22:18,456 - #14 [
INFO  01:22:18,456 - #45 idx
INFO  01:22:18,457 - #15 ]
INFO  01:22:18,457 - #26 =
INFO  01:22:18,457 - #45 a
INFO  01:22:18,457 - #18 ;
INFO  01:22:18,457 - #13 }
INFO  01:22:18,458 - #39 void
INFO  01:22:18,458 - #45 putn
INFO  01:22:18,458 - #16 (
INFO  01:22:18,458 - #45 int
INFO  01:22:18,458 - #45 a
INFO  01:22:18,458 - #19 ,
INFO  01:22:18,458 - #45 int
INFO  01:22:18,458 - #45 idx
INFO  01:22:18,458 - #17 )
INFO  01:22:18,458 - #12 {
INFO  01:22:18,459 - #45 this
INFO  01:22:18,459 - #20 .
INFO  01:22:18,459 - #45 neg
INFO  01:22:18,459 - #14 [
INFO  01:22:18,459 - #45 idx
INFO  01:22:18,459 - #15 ]
INFO  01:22:18,459 - #26 =
INFO  01:22:18,459 - #45 a
INFO  01:22:18,459 - #18 ;
INFO  01:22:18,459 - #13 }
INFO  01:22:18,459 - #45 int
INFO  01:22:18,459 - #45 getp
INFO  01:22:18,459 - #16 (
INFO  01:22:18,459 - #45 int
INFO  01:22:18,459 - #45 idx
INFO  01:22:18,459 - #17 )
INFO  01:22:18,459 - #12 {
INFO  01:22:18,459 - #38 return
INFO  01:22:18,459 - #45 pos
INFO  01:22:18,459 - #14 [
INFO  01:22:18,460 - #45 idx
INFO  01:22:18,460 - #15 ]
INFO  01:22:18,460 - #18 ;
INFO  01:22:18,460 - #13 }
INFO  01:22:18,460 - #45 int
INFO  01:22:18,460 - #45 getn
INFO  01:22:18,460 - #16 (
INFO  01:22:18,460 - #45 int
INFO  01:22:18,460 - #45 idx
INFO  01:22:18,460 - #17 )
INFO  01:22:18,460 - #12 {
INFO  01:22:18,460 - #38 return
INFO  01:22:18,460 - #45 neg
INFO  01:22:18,460 - #14 [
INFO  01:22:18,460 - #45 idx
INFO  01:22:18,460 - #15 ]
INFO  01:22:18,460 - #18 ;
INFO  01:22:18,460 - #13 }
INFO  01:22:18,460 - #13 }
INFO  01:22:18,460 - #13 }
INFO  01:22:18,460 - #45 Table
INFO  01:22:18,461 - #45 val
INFO  01:22:18,461 - #18 ;
INFO  01:22:18,461 - #12 {
INFO  01:22:18,461 - #39 void
INFO  01:22:18,461 - #45 f
INFO  01:22:18,461 - #16 (
INFO  01:22:18,461 - #45 char
INFO  01:22:18,461 - #45 ch
INFO  01:22:18,462 - #19 ,
INFO  01:22:18,462 - #45 int
INFO  01:22:18,462 - #45 a
INFO  01:22:18,462 - #19 ,
INFO  01:22:18,462 - #45 int
INFO  01:22:18,462 - #45 arg
INFO  01:22:18,462 - #17 )
INFO  01:22:18,462 - #45 int
INFO  01:22:18,462 - #45 x
INFO  01:22:18,462 - #18 ;
INFO  01:22:18,462 - #12 {
INFO  01:22:18,462 - #45 x
INFO  01:22:18,462 - #26 =
INFO  01:22:18,462 - #45 arg
INFO  01:22:18,462 - #18 ;
INFO  01:22:18,462 - #13 }
INFO  01:22:18,462 - #39 void
INFO  01:22:18,462 - #45 main
INFO  01:22:18,462 - #16 (
INFO  01:22:18,462 - #17 )
INFO  01:22:18,464 - #45 int
INFO  01:22:18,464 - #45 x
INFO  01:22:18,464 - #19 ,
INFO  01:22:18,464 - #45 i
INFO  01:22:18,464 - #18 ;
INFO  01:22:18,464 - #45 char
INFO  01:22:18,464 - #45 c
INFO  01:22:18,464 - #18 ;
INFO  01:22:18,464 - #12 {
INFO  01:22:18,464 - #45 val
INFO  01:22:18,464 - #26 =
INFO  01:22:18,464 - #10 new
INFO  01:22:18,464 - #45 Table
INFO  01:22:18,464 - #18 ;
INFO  01:22:18,464 - #45 val
INFO  01:22:18,464 - #20 .
INFO  01:22:18,464 - #45 pos
INFO  01:22:18,464 - #26 =
INFO  01:22:18,464 - #10 new
INFO  01:22:18,465 - #45 int
INFO  01:22:18,465 - #14 [
INFO  01:22:18,465 - #45 size
INFO  01:22:18,465 - #15 ]
INFO  01:22:18,465 - #18 ;
INFO  01:22:18,465 - #45 val
INFO  01:22:18,465 - #20 .
INFO  01:22:18,465 - #45 neg
INFO  01:22:18,465 - #26 =
INFO  01:22:18,465 - #10 new
INFO  01:22:18,465 - #45 int
INFO  01:22:18,465 - #14 [
INFO  01:22:18,465 - #45 size
INFO  01:22:18,465 - #15 ]
INFO  01:22:18,465 - #18 ;
INFO  01:22:18,465 - #40 for
INFO  01:22:18,466 - #16 (
INFO  01:22:18,466 - #45 i
INFO  01:22:18,466 - #26 =
INFO  01:22:18,466 - #44 0
INFO  01:22:18,466 - #18 ;
INFO  01:22:18,466 - #45 i
INFO  01:22:18,466 - #33 <
INFO  01:22:18,466 - #45 size
INFO  01:22:18,467 - #18 ;
INFO  01:22:18,467 - #45 i
INFO  01:22:18,467 - #27 ++
INFO  01:22:18,467 - #17 )
INFO  01:22:18,468 - #12 {
INFO  01:22:18,468 - #45 val
INFO  01:22:18,468 - #20 .
INFO  01:22:18,468 - #45 putp
INFO  01:22:18,468 - #16 (
INFO  01:22:18,468 - #44 0
INFO  01:22:18,468 - #19 ,
INFO  01:22:18,468 - #45 i
INFO  01:22:18,468 - #17 )
INFO  01:22:18,469 - #18 ;
INFO  01:22:18,469 - #45 val
INFO  01:22:18,469 - #20 .
INFO  01:22:18,469 - #45 putn
INFO  01:22:18,469 - #16 (
INFO  01:22:18,469 - #44 0
INFO  01:22:18,469 - #19 ,
INFO  01:22:18,469 - #45 i
INFO  01:22:18,469 - #17 )
INFO  01:22:18,469 - #18 ;
INFO  01:22:18,469 - #13 }
INFO  01:22:18,469 - #45 f
INFO  01:22:18,469 - #16 (
INFO  01:22:18,469 - #45 c
INFO  01:22:18,469 - #19 ,
INFO  01:22:18,469 - #45 x
INFO  01:22:18,469 - #19 ,
INFO  01:22:18,469 - #45 i
INFO  01:22:18,469 - #17 )
INFO  01:22:18,469 - #18 ;
INFO  01:22:18,469 - #37 read
INFO  01:22:18,469 - #16 (
INFO  01:22:18,470 - #45 x
INFO  01:22:18,470 - #17 )
INFO  01:22:18,470 - #18 ;
INFO  01:22:18,470 - #40 for
INFO  01:22:18,470 - #16 (
INFO  01:22:18,470 - #18 ;
INFO  01:22:18,470 - #45 x
INFO  01:22:18,470 - #31 >
INFO  01:22:18,470 - #44 0
INFO  01:22:18,470 - #18 ;
INFO  01:22:18,470 - #17 )
INFO  01:22:18,470 - #12 {
INFO  01:22:18,470 - #9 if
INFO  01:22:18,470 - #16 (
INFO  01:22:18,470 - #45 Num
INFO  01:22:18,470 - #20 .
INFO  01:22:18,471 - #45 ZERO
INFO  01:22:18,471 - #34 <=
INFO  01:22:18,471 - #45 x
INFO  01:22:18,471 - #35 &&
INFO  01:22:18,471 - #45 x
INFO  01:22:18,471 - #33 <
INFO  01:22:18,471 - #45 size
INFO  01:22:18,471 - #17 )
INFO  01:22:18,471 - #12 {
INFO  01:22:18,471 - #45 val
INFO  01:22:18,471 - #20 .
INFO  01:22:18,471 - #45 putp
INFO  01:22:18,471 - #16 (
INFO  01:22:18,471 - #45 val
INFO  01:22:18,471 - #20 .
INFO  01:22:18,471 - #45 getp
INFO  01:22:18,471 - #16 (
INFO  01:22:18,471 - #45 x
INFO  01:22:18,471 - #17 )
INFO  01:22:18,471 - #21 +
INFO  01:22:18,472 - #45 Num
INFO  01:22:18,472 - #20 .
INFO  01:22:18,472 - #45 ONE
INFO  01:22:18,472 - #17 )
INFO  01:22:18,472 - #18 ;
INFO  01:22:18,472 - #13 }
INFO  01:22:18,472 - #7 else
INFO  01:22:18,473 - #9 if
INFO  01:22:18,473 - #16 (
INFO  01:22:18,473 - #45 size
INFO  01:22:18,473 - #33 <
INFO  01:22:18,473 - #45 x
INFO  01:22:18,473 - #35 &&
INFO  01:22:18,473 - #45 x
INFO  01:22:18,473 - #33 <
INFO  01:22:18,473 - #44 0
INFO  01:22:18,473 - #17 )
INFO  01:22:18,473 - #12 {
INFO  01:22:18,473 - #45 val
INFO  01:22:18,473 - #20 .
INFO  01:22:18,473 - #45 putn
INFO  01:22:18,473 - #16 (
INFO  01:22:18,473 - #45 val
INFO  01:22:18,473 - #20 .
INFO  01:22:18,473 - #45 getn
INFO  01:22:18,473 - #16 (
INFO  01:22:18,474 - #45 x
INFO  01:22:18,474 - #17 )
INFO  01:22:18,474 - #21 +
INFO  01:22:18,474 - #44 1
INFO  01:22:18,474 - #17 )
INFO  01:22:18,474 - #18 ;
INFO  01:22:18,474 - #13 }
INFO  01:22:18,474 - #37 read
INFO  01:22:18,474 - #16 (
INFO  01:22:18,474 - #45 x
INFO  01:22:18,474 - #17 )
INFO  01:22:18,474 - #18 ;
INFO  01:22:18,474 - #13 }
INFO  01:22:18,475 - #13 }
INFO  01:22:18,475 - #13 }
INFO  01:22:18,484 - Program(
  ProgName(
   P
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDecl(
          ) [NoDecl]
          ConstDeclaration(
            ConstDeclNode(
              ConstDeclType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [ConstDeclType]
              SingleConstant(
                IdentEqualConstantNode(
                 size
                  NumberNode(
                   10
                  ) [NumberNode]
                ) [IdentEqualConstantNode]
              ) [SingleConstant]
            ) [ConstDeclNode]
          ) [ConstDeclaration]
        ) [Declarations]
        EnumDeclaration(
          EnumDeclarationNode(
            EnumIdent(
             Num
            ) [EnumIdent]
            Enumerations(
              Enumerations(
                SingleEnumeration(
                  EnumerationNoVal(
                   ZERO
                  ) [EnumerationNoVal]
                ) [SingleEnumeration]
                EnumerationNoVal(
                 ONE
                ) [EnumerationNoVal]
              ) [Enumerations]
              EnumerationVal(
               TEN
               10
              ) [EnumerationVal]
            ) [Enumerations]
          ) [EnumDeclarationNode]
        ) [EnumDeclaration]
      ) [Declarations]
      ClassDeclaration(
        ClassDeclarationWithMethods(
          ClassDeclIdent(
           Table
          ) [ClassDeclIdent]
          NoExtension(
          ) [NoExtension]
          NoImplementation(
          ) [NoImplementation]
          ClassVarDeclarationList(
            NoClassVarDeclaration(
            ) [NoClassVarDeclaration]
            ClassVarDeclNode(
              ClassVarDeclType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [ClassVarDeclType]
              Variables(
                SingleVariable(
                  VariableBracket(
                   pos
                  ) [VariableBracket]
                ) [SingleVariable]
                VariableBracket(
                 neg
                ) [VariableBracket]
              ) [Variables]
            ) [ClassVarDeclNode]
          ) [ClassVarDeclarationList]
          MethodDeclarations(
            MethodDeclarations(
              MethodDeclarations(
                MethodDeclarations(
                  NoMethodDecl(
                  ) [NoMethodDecl]
                  MethodDecl(
                    MethodTypeName(
                      VoidType(
                      ) [VoidType]
                     putp
                    ) [MethodTypeName]
                    FormalParams(
                      FormalParamDecls(
                        SingleFormalParamDecl(
                          FormalParamDeclarationNoBrackets(
                            TypeNode(
                             int
                            ) [TypeNode]
                           a
                          ) [FormalParamDeclarationNoBrackets]
                        ) [SingleFormalParamDecl]
                        FormalParamDeclarationNoBrackets(
                          TypeNode(
                           int
                          ) [TypeNode]
                         idx
                        ) [FormalParamDeclarationNoBrackets]
                      ) [FormalParamDecls]
                    ) [FormalParams]
                    NoVarDeclaration(
                    ) [NoVarDeclaration]
                    MethodLBRACE(
                    ) [MethodLBRACE]
                    Statements(
                      NoStatement(
                      ) [NoStatement]
                      DesignatorStatementOnly(
                        DesignatorStatementAssignop(
                          DesignatorNode(
                            Exprs(
                              IdentExprListArray(
                                Idents(
                                  SingleIdentExpr(
                                   this
                                  ) [SingleIdentExpr]
                                 pos
                                ) [Idents]
                              ) [IdentExprListArray]
                              SingleExpression(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      SingleIdentExpr(
                                       idx
                                      ) [SingleIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [Exprs]
                          ) [DesignatorNode]
                          Assignop(
                          ) [Assignop]
                          SingleExpression(
                            TermFactor(
                              DesignatorEmpty(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   a
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                              ) [DesignatorEmpty]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementOnly]
                    ) [Statements]
                  ) [MethodDecl]
                ) [MethodDeclarations]
                MethodDecl(
                  MethodTypeName(
                    VoidType(
                    ) [VoidType]
                   putn
                  ) [MethodTypeName]
                  FormalParams(
                    FormalParamDecls(
                      SingleFormalParamDecl(
                        FormalParamDeclarationNoBrackets(
                          TypeNode(
                           int
                          ) [TypeNode]
                         a
                        ) [FormalParamDeclarationNoBrackets]
                      ) [SingleFormalParamDecl]
                      FormalParamDeclarationNoBrackets(
                        TypeNode(
                         int
                        ) [TypeNode]
                       idx
                      ) [FormalParamDeclarationNoBrackets]
                    ) [FormalParamDecls]
                  ) [FormalParams]
                  NoVarDeclaration(
                  ) [NoVarDeclaration]
                  MethodLBRACE(
                  ) [MethodLBRACE]
                  Statements(
                    NoStatement(
                    ) [NoStatement]
                    DesignatorStatementOnly(
                      DesignatorStatementAssignop(
                        DesignatorNode(
                          Exprs(
                            IdentExprListArray(
                              Idents(
                                SingleIdentExpr(
                                 this
                                ) [SingleIdentExpr]
                               neg
                              ) [Idents]
                            ) [IdentExprListArray]
                            SingleExpression(
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     idx
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [Exprs]
                        ) [DesignatorNode]
                        Assignop(
                        ) [Assignop]
                        SingleExpression(
                          TermFactor(
                            DesignatorEmpty(
                              DesignatorNode(
                                SingleIdentExpr(
                                 a
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementOnly]
                  ) [Statements]
                ) [MethodDecl]
              ) [MethodDeclarations]
              MethodDecl(
                MethodTypeName(
                  NoVoidType(
                    TypeNode(
                     int
                    ) [TypeNode]
                  ) [NoVoidType]
                 getp
                ) [MethodTypeName]
                FormalParams(
                  SingleFormalParamDecl(
                    FormalParamDeclarationNoBrackets(
                      TypeNode(
                       int
                      ) [TypeNode]
                     idx
                    ) [FormalParamDeclarationNoBrackets]
                  ) [SingleFormalParamDecl]
                ) [FormalParams]
                NoVarDeclaration(
                ) [NoVarDeclaration]
                MethodLBRACE(
                ) [MethodLBRACE]
                Statements(
                  NoStatement(
                  ) [NoStatement]
                  ReturnStatementExpr(
                    SingleExpression(
                      TermFactor(
                        DesignatorEmpty(
                          DesignatorNode(
                            Exprs(
                              IdentExprListArray(
                                SingleIdentExpr(
                                 pos
                                ) [SingleIdentExpr]
                              ) [IdentExprListArray]
                              SingleExpression(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      SingleIdentExpr(
                                       idx
                                      ) [SingleIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [Exprs]
                          ) [DesignatorNode]
                        ) [DesignatorEmpty]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [ReturnStatementExpr]
                ) [Statements]
              ) [MethodDecl]
            ) [MethodDeclarations]
            MethodDecl(
              MethodTypeName(
                NoVoidType(
                  TypeNode(
                   int
                  ) [TypeNode]
                ) [NoVoidType]
               getn
              ) [MethodTypeName]
              FormalParams(
                SingleFormalParamDecl(
                  FormalParamDeclarationNoBrackets(
                    TypeNode(
                     int
                    ) [TypeNode]
                   idx
                  ) [FormalParamDeclarationNoBrackets]
                ) [SingleFormalParamDecl]
              ) [FormalParams]
              NoVarDeclaration(
              ) [NoVarDeclaration]
              MethodLBRACE(
              ) [MethodLBRACE]
              Statements(
                NoStatement(
                ) [NoStatement]
                ReturnStatementExpr(
                  SingleExpression(
                    TermFactor(
                      DesignatorEmpty(
                        DesignatorNode(
                          Exprs(
                            IdentExprListArray(
                              SingleIdentExpr(
                               neg
                              ) [SingleIdentExpr]
                            ) [IdentExprListArray]
                            SingleExpression(
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     idx
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [Exprs]
                        ) [DesignatorNode]
                      ) [DesignatorEmpty]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [ReturnStatementExpr]
              ) [Statements]
            ) [MethodDecl]
          ) [MethodDeclarations]
        ) [ClassDeclarationWithMethods]
      ) [ClassDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclNode(
        VarDeclType(
          TypeNode(
           Table
          ) [TypeNode]
        ) [VarDeclType]
        SingleVariable(
          VariableNoBracket(
           val
          ) [VariableNoBracket]
        ) [SingleVariable]
      ) [VarDeclNode]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          VoidType(
          ) [VoidType]
         f
        ) [MethodTypeName]
        FormalParams(
          FormalParamDecls(
            FormalParamDecls(
              SingleFormalParamDecl(
                FormalParamDeclarationNoBrackets(
                  TypeNode(
                   char
                  ) [TypeNode]
                 ch
                ) [FormalParamDeclarationNoBrackets]
              ) [SingleFormalParamDecl]
              FormalParamDeclarationNoBrackets(
                TypeNode(
                 int
                ) [TypeNode]
               a
              ) [FormalParamDeclarationNoBrackets]
            ) [FormalParamDecls]
            FormalParamDeclarationNoBrackets(
              TypeNode(
               int
              ) [TypeNode]
             arg
            ) [FormalParamDeclarationNoBrackets]
          ) [FormalParamDecls]
        ) [FormalParams]
        VarDeclarationList(
          NoVarDeclaration(
          ) [NoVarDeclaration]
          VarDeclNode(
            VarDeclType(
              TypeNode(
               int
              ) [TypeNode]
            ) [VarDeclType]
            SingleVariable(
              VariableNoBracket(
               x
              ) [VariableNoBracket]
            ) [SingleVariable]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        MethodLBRACE(
        ) [MethodLBRACE]
        Statements(
          NoStatement(
          ) [NoStatement]
          DesignatorStatementOnly(
            DesignatorStatementAssignop(
              DesignatorNode(
                SingleIdentExpr(
                 x
                ) [SingleIdentExpr]
              ) [DesignatorNode]
              Assignop(
              ) [Assignop]
              SingleExpression(
                TermFactor(
                  DesignatorEmpty(
                    DesignatorNode(
                      SingleIdentExpr(
                       arg
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                  ) [DesignatorEmpty]
                ) [TermFactor]
              ) [SingleExpression]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementOnly]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      VarDeclarationList(
        VarDeclarationList(
          NoVarDeclaration(
          ) [NoVarDeclaration]
          VarDeclNode(
            VarDeclType(
              TypeNode(
               int
              ) [TypeNode]
            ) [VarDeclType]
            Variables(
              SingleVariable(
                VariableNoBracket(
                 x
                ) [VariableNoBracket]
              ) [SingleVariable]
              VariableNoBracket(
               i
              ) [VariableNoBracket]
            ) [Variables]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        VarDeclNode(
          VarDeclType(
            TypeNode(
             char
            ) [TypeNode]
          ) [VarDeclType]
          SingleVariable(
            VariableNoBracket(
             c
            ) [VariableNoBracket]
          ) [SingleVariable]
        ) [VarDeclNode]
      ) [VarDeclarationList]
      MethodLBRACE(
      ) [MethodLBRACE]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStatement(
                    ) [NoStatement]
                    DesignatorStatementOnly(
                      DesignatorStatementAssignop(
                        DesignatorNode(
                          SingleIdentExpr(
                           val
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                        Assignop(
                        ) [Assignop]
                        SingleExpression(
                          TermFactor(
                            NewType(
                              TypeNode(
                               Table
                              ) [TypeNode]
                            ) [NewType]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementOnly]
                  ) [Statements]
                  DesignatorStatementOnly(
                    DesignatorStatementAssignop(
                      DesignatorNode(
                        Idents(
                          SingleIdentExpr(
                           val
                          ) [SingleIdentExpr]
                         pos
                        ) [Idents]
                      ) [DesignatorNode]
                      Assignop(
                      ) [Assignop]
                      SingleExpression(
                        TermFactor(
                          NewArray(
                            NewArrayType(
                              TypeNode(
                               int
                              ) [TypeNode]
                            ) [NewArrayType]
                            SingleExpression(
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     size
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [NewArray]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementOnly]
                ) [Statements]
                DesignatorStatementOnly(
                  DesignatorStatementAssignop(
                    DesignatorNode(
                      Idents(
                        SingleIdentExpr(
                         val
                        ) [SingleIdentExpr]
                       neg
                      ) [Idents]
                    ) [DesignatorNode]
                    Assignop(
                    ) [Assignop]
                    SingleExpression(
                      TermFactor(
                        NewArray(
                          NewArrayType(
                            TypeNode(
                             int
                            ) [TypeNode]
                          ) [NewArrayType]
                          SingleExpression(
                            TermFactor(
                              DesignatorEmpty(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   size
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                              ) [DesignatorEmpty]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [NewArray]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementOnly]
              ) [Statements]
              ForStatement(
                ForHeader(
                  ForStatement1(
                    DesignatorStatementNotNull(
                      DesignatorStatementAssignop(
                        DesignatorNode(
                          SingleIdentExpr(
                           i
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                        Assignop(
                        ) [Assignop]
                        SingleExpression(
                          TermFactor(
                            ConstantNumber(
                             0
                            ) [ConstantNumber]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementNotNull]
                  ) [ForStatement1]
                  ForCondition(
                    ConditionNotNull(
                      ConditionNode(
                        SingleConditionTerm(
                          ConditionTermNode(
                            SingleConditionFact(
                              CondFactExpressionRelopExpression(
                                SingleExpression(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        SingleIdentExpr(
                                         i
                                        ) [SingleIdentExpr]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                                RelopLess(
                                ) [RelopLess]
                                SingleExpression(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        SingleIdentExpr(
                                         size
                                        ) [SingleIdentExpr]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [CondFactExpressionRelopExpression]
                            ) [SingleConditionFact]
                          ) [ConditionTermNode]
                        ) [SingleConditionTerm]
                      ) [ConditionNode]
                    ) [ConditionNotNull]
                  ) [ForCondition]
                  ForStatement2(
                    DesignatorStatementNotNull(
                      DesignatorStatementPlusPlus(
                        DesignatorNode(
                          SingleIdentExpr(
                           i
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                      ) [DesignatorStatementPlusPlus]
                    ) [DesignatorStatementNotNull]
                  ) [ForStatement2]
                ) [ForHeader]
                InBraceStatement(
                  Statements(
                    Statements(
                      NoStatement(
                      ) [NoStatement]
                      DesignatorStatementOnly(
                        DesignatorStatementActPars(
                          DesignatorNode(
                            Idents(
                              SingleIdentExpr(
                               val
                              ) [SingleIdentExpr]
                             putp
                            ) [Idents]
                          ) [DesignatorNode]
                          ActParsNode(
                            ActualParametres(
                              SingleActualParam(
                                SingleExpression(
                                  TermFactor(
                                    ConstantNumber(
                                     0
                                    ) [ConstantNumber]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [SingleActualParam]
                              SingleExpression(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      SingleIdentExpr(
                                       i
                                      ) [SingleIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [ActualParametres]
                          ) [ActParsNode]
                        ) [DesignatorStatementActPars]
                      ) [DesignatorStatementOnly]
                    ) [Statements]
                    DesignatorStatementOnly(
                      DesignatorStatementActPars(
                        DesignatorNode(
                          Idents(
                            SingleIdentExpr(
                             val
                            ) [SingleIdentExpr]
                           putn
                          ) [Idents]
                        ) [DesignatorNode]
                        ActParsNode(
                          ActualParametres(
                            SingleActualParam(
                              SingleExpression(
                                TermFactor(
                                  ConstantNumber(
                                   0
                                  ) [ConstantNumber]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [SingleActualParam]
                            SingleExpression(
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     i
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [ActualParametres]
                        ) [ActParsNode]
                      ) [DesignatorStatementActPars]
                    ) [DesignatorStatementOnly]
                  ) [Statements]
                ) [InBraceStatement]
              ) [ForStatement]
            ) [Statements]
            DesignatorStatementOnly(
              DesignatorStatementActPars(
                DesignatorNode(
                  SingleIdentExpr(
                   f
                  ) [SingleIdentExpr]
                ) [DesignatorNode]
                ActParsNode(
                  ActualParametres(
                    ActualParametres(
                      SingleActualParam(
                        SingleExpression(
                          TermFactor(
                            DesignatorEmpty(
                              DesignatorNode(
                                SingleIdentExpr(
                                 c
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [SingleActualParam]
                      SingleExpression(
                        TermFactor(
                          DesignatorEmpty(
                            DesignatorNode(
                              SingleIdentExpr(
                               x
                              ) [SingleIdentExpr]
                            ) [DesignatorNode]
                          ) [DesignatorEmpty]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [ActualParametres]
                    SingleExpression(
                      TermFactor(
                        DesignatorEmpty(
                          DesignatorNode(
                            SingleIdentExpr(
                             i
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                        ) [DesignatorEmpty]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [ActualParametres]
                ) [ActParsNode]
              ) [DesignatorStatementActPars]
            ) [DesignatorStatementOnly]
          ) [Statements]
          ReadStatement(
            DesignatorNode(
              SingleIdentExpr(
               x
              ) [SingleIdentExpr]
            ) [DesignatorNode]
          ) [ReadStatement]
        ) [Statements]
        ForStatement(
          ForHeader(
            ForStatement1(
              DesignatorStatementNull(
              ) [DesignatorStatementNull]
            ) [ForStatement1]
            ForCondition(
              ConditionNotNull(
                ConditionNode(
                  SingleConditionTerm(
                    ConditionTermNode(
                      SingleConditionFact(
                        CondFactExpressionRelopExpression(
                          SingleExpression(
                            TermFactor(
                              DesignatorEmpty(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   x
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                              ) [DesignatorEmpty]
                            ) [TermFactor]
                          ) [SingleExpression]
                          RelopGreater(
                          ) [RelopGreater]
                          SingleExpression(
                            TermFactor(
                              ConstantNumber(
                               0
                              ) [ConstantNumber]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [CondFactExpressionRelopExpression]
                      ) [SingleConditionFact]
                    ) [ConditionTermNode]
                  ) [SingleConditionTerm]
                ) [ConditionNode]
              ) [ConditionNotNull]
            ) [ForCondition]
            ForStatement2(
              DesignatorStatementNull(
              ) [DesignatorStatementNull]
            ) [ForStatement2]
          ) [ForHeader]
          InBraceStatement(
            Statements(
              Statements(
                NoStatement(
                ) [NoStatement]
                IfElseStatement(
                  IfConditionNode(
                    ConditionNode(
                      SingleConditionTerm(
                        ConditionTermNode(
                          ConditionFacts(
                            SingleConditionFact(
                              CondFactExpressionRelopExpression(
                                SingleExpression(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        Idents(
                                          SingleIdentExpr(
                                           Num
                                          ) [SingleIdentExpr]
                                         ZERO
                                        ) [Idents]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                                RelopLessEqual(
                                ) [RelopLessEqual]
                                SingleExpression(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        SingleIdentExpr(
                                         x
                                        ) [SingleIdentExpr]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [CondFactExpressionRelopExpression]
                            ) [SingleConditionFact]
                            CondFactExpressionRelopExpression(
                              SingleExpression(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      SingleIdentExpr(
                                       x
                                      ) [SingleIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                              RelopLess(
                              ) [RelopLess]
                              SingleExpression(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      SingleIdentExpr(
                                       size
                                      ) [SingleIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [CondFactExpressionRelopExpression]
                          ) [ConditionFacts]
                        ) [ConditionTermNode]
                      ) [SingleConditionTerm]
                    ) [ConditionNode]
                  ) [IfConditionNode]
                  IfStatementThen(
                    InBraceStatement(
                      Statements(
                        NoStatement(
                        ) [NoStatement]
                        DesignatorStatementOnly(
                          DesignatorStatementActPars(
                            DesignatorNode(
                              Idents(
                                SingleIdentExpr(
                                 val
                                ) [SingleIdentExpr]
                               putp
                              ) [Idents]
                            ) [DesignatorNode]
                            ActParsNode(
                              SingleActualParam(
                                ExpressionNode(
                                  SingleExpression(
                                    TermFactor(
                                      DesignatorBraceActPars(
                                        DesignatorNode(
                                          Idents(
                                            SingleIdentExpr(
                                             val
                                            ) [SingleIdentExpr]
                                           getp
                                          ) [Idents]
                                        ) [DesignatorNode]
                                        ActParsNode(
                                          SingleActualParam(
                                            SingleExpression(
                                              TermFactor(
                                                DesignatorEmpty(
                                                  DesignatorNode(
                                                    SingleIdentExpr(
                                                     x
                                                    ) [SingleIdentExpr]
                                                  ) [DesignatorNode]
                                                ) [DesignatorEmpty]
                                              ) [TermFactor]
                                            ) [SingleExpression]
                                          ) [SingleActualParam]
                                        ) [ActParsNode]
                                      ) [DesignatorBraceActPars]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        Idents(
                                          SingleIdentExpr(
                                           Num
                                          ) [SingleIdentExpr]
                                         ONE
                                        ) [Idents]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [ExpressionNode]
                              ) [SingleActualParam]
                            ) [ActParsNode]
                          ) [DesignatorStatementActPars]
                        ) [DesignatorStatementOnly]
                      ) [Statements]
                    ) [InBraceStatement]
                  ) [IfStatementThen]
                  IfStatementElse(
                    IfStatement(
                      IfConditionNode(
                        ConditionNode(
                          SingleConditionTerm(
                            ConditionTermNode(
                              ConditionFacts(
                                SingleConditionFact(
                                  CondFactExpressionRelopExpression(
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             size
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                    RelopLess(
                                    ) [RelopLess]
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             x
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [CondFactExpressionRelopExpression]
                                ) [SingleConditionFact]
                                CondFactExpressionRelopExpression(
                                  SingleExpression(
                                    TermFactor(
                                      DesignatorEmpty(
                                        DesignatorNode(
                                          SingleIdentExpr(
                                           x
                                          ) [SingleIdentExpr]
                                        ) [DesignatorNode]
                                      ) [DesignatorEmpty]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                  RelopLess(
                                  ) [RelopLess]
                                  SingleExpression(
                                    TermFactor(
                                      ConstantNumber(
                                       0
                                      ) [ConstantNumber]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [CondFactExpressionRelopExpression]
                              ) [ConditionFacts]
                            ) [ConditionTermNode]
                          ) [SingleConditionTerm]
                        ) [ConditionNode]
                      ) [IfConditionNode]
                      IfStatementThen(
                        InBraceStatement(
                          Statements(
                            NoStatement(
                            ) [NoStatement]
                            DesignatorStatementOnly(
                              DesignatorStatementActPars(
                                DesignatorNode(
                                  Idents(
                                    SingleIdentExpr(
                                     val
                                    ) [SingleIdentExpr]
                                   putn
                                  ) [Idents]
                                ) [DesignatorNode]
                                ActParsNode(
                                  SingleActualParam(
                                    ExpressionNode(
                                      SingleExpression(
                                        TermFactor(
                                          DesignatorBraceActPars(
                                            DesignatorNode(
                                              Idents(
                                                SingleIdentExpr(
                                                 val
                                                ) [SingleIdentExpr]
                                               getn
                                              ) [Idents]
                                            ) [DesignatorNode]
                                            ActParsNode(
                                              SingleActualParam(
                                                SingleExpression(
                                                  TermFactor(
                                                    DesignatorEmpty(
                                                      DesignatorNode(
                                                        SingleIdentExpr(
                                                         x
                                                        ) [SingleIdentExpr]
                                                      ) [DesignatorNode]
                                                    ) [DesignatorEmpty]
                                                  ) [TermFactor]
                                                ) [SingleExpression]
                                              ) [SingleActualParam]
                                            ) [ActParsNode]
                                          ) [DesignatorBraceActPars]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                      AddopPlus(
                                      ) [AddopPlus]
                                      TermFactor(
                                        ConstantNumber(
                                         1
                                        ) [ConstantNumber]
                                      ) [TermFactor]
                                    ) [ExpressionNode]
                                  ) [SingleActualParam]
                                ) [ActParsNode]
                              ) [DesignatorStatementActPars]
                            ) [DesignatorStatementOnly]
                          ) [Statements]
                        ) [InBraceStatement]
                      ) [IfStatementThen]
                    ) [IfStatement]
                  ) [IfStatementElse]
                ) [IfElseStatement]
              ) [Statements]
              ReadStatement(
                DesignatorNode(
                  SingleIdentExpr(
                   x
                  ) [SingleIdentExpr]
                ) [DesignatorNode]
              ) [ReadStatement]
            ) [Statements]
          ) [InBraceStatement]
        ) [ForStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  01:22:18,485 - ===================================
INFO  01:22:18,488 - Definisana konstanta (10)size na liniji 2
INFO  01:22:18,488 - Deklarisan novi enum tip: Num na liniji 3
INFO  01:22:18,488 - Definisana enum konstanta ZERO sa vrednoscu 0 na liniji 3
INFO  01:22:18,488 - Definisana enum konstanta ONE sa vrednoscu 1 na liniji 3
INFO  01:22:18,488 - Definisana enum konstanta TEN sa vrednoscu 10 na liniji 3
INFO  01:22:18,488 - Deklarisana array promenljiva pos na liniji 6
INFO  01:22:18,488 - Deklarisana array promenljiva neg na liniji 6
INFO  01:22:18,489 - Definisana funkcija putp na liniji 8
INFO  01:22:18,489 - Deklarisan single argument a na liniji 8
INFO  01:22:18,489 - Deklarisan single argument idx na liniji 8
ERROR 01:22:18,489 - Greska na liniji 8 : podrzani samo Enum tipovi. 
INFO  01:22:18,489 - Pronadjen poziv promenljive idx na liniji 8
INFO  01:22:18,489 - Pronadjen poziv promenljive a na liniji 8
ERROR 01:22:18,489 - Greska na liniji 8 : nekompatibilni tipovi u dodeli vrednosti! 
INFO  01:22:18,489 - Definisana funkcija putn na liniji 9
INFO  01:22:18,489 - Deklarisan single argument a na liniji 9
INFO  01:22:18,489 - Deklarisan single argument idx na liniji 9
ERROR 01:22:18,489 - Greska na liniji 9 : podrzani samo Enum tipovi. 
INFO  01:22:18,489 - Pronadjen poziv promenljive idx na liniji 9
INFO  01:22:18,489 - Pronadjen poziv promenljive a na liniji 9
ERROR 01:22:18,489 - Greska na liniji 9 : nekompatibilni tipovi u dodeli vrednosti! 
INFO  01:22:18,489 - Definisana funkcija getp na liniji 10
INFO  01:22:18,489 - Deklarisan single argument idx na liniji 10
INFO  01:22:18,489 - Pronadjen poziv promenljive idx na liniji 10
INFO  01:22:18,489 - Pronadjen poziv promenljive $elem na liniji 10
INFO  01:22:18,489 - Definisana funkcija getn na liniji 11
INFO  01:22:18,489 - Deklarisan single argument idx na liniji 11
INFO  01:22:18,489 - Pronadjen poziv promenljive idx na liniji 11
INFO  01:22:18,489 - Pronadjen poziv promenljive $elem na liniji 11
INFO  01:22:18,489 - Deklarisana single promenljiva val na liniji 14
INFO  01:22:18,489 - Definisana funkcija f na liniji 16
INFO  01:22:18,490 - Deklarisan single argument ch na liniji 16
INFO  01:22:18,490 - Deklarisan single argument a na liniji 16
INFO  01:22:18,490 - Deklarisan single argument arg na liniji 16
INFO  01:22:18,490 - Deklarisana single promenljiva x na liniji 17
INFO  01:22:18,490 - Pronadjen poziv promenljive arg na liniji 19
INFO  01:22:18,490 - Dodela vrednosti za x na liniji 19
INFO  01:22:18,490 - Definisana funkcija main na liniji 21
INFO  01:22:18,490 - Deklarisana single promenljiva x na liniji 21
INFO  01:22:18,490 - Deklarisana single promenljiva i na liniji 21
INFO  01:22:18,490 - Deklarisana single promenljiva c na liniji 21
INFO  01:22:18,490 - Dodela vrednosti za val na liniji 24
ERROR 01:22:18,490 - Greska na liniji 25 : podrzani samo Enum tipovi. 
INFO  01:22:18,490 - Pronadjen poziv promenljive size na liniji 25
ERROR 01:22:18,490 - Greska na liniji 25 : nekompatibilni tipovi u dodeli vrednosti! 
ERROR 01:22:18,490 - Greska na liniji 26 : podrzani samo Enum tipovi. 
INFO  01:22:18,490 - Pronadjen poziv promenljive size na liniji 26
ERROR 01:22:18,490 - Greska na liniji 26 : nekompatibilni tipovi u dodeli vrednosti! 
INFO  01:22:18,490 - Dodela vrednosti za i na liniji 27
INFO  01:22:18,490 - Pronadjen poziv promenljive i na liniji 27
INFO  01:22:18,490 - Pronadjen poziv promenljive size na liniji 27
ERROR 01:22:18,490 - Greska na liniji 29 : podrzani samo Enum tipovi. 
INFO  01:22:18,490 - Pronadjen poziv promenljive i na liniji 29
ERROR 01:22:18,490 - Greska na liniji 29 : ime noObj nije funkcija!
ERROR 01:22:18,490 - Greska na liniji 30 : podrzani samo Enum tipovi. 
INFO  01:22:18,490 - Pronadjen poziv promenljive i na liniji 30
ERROR 01:22:18,490 - Greska na liniji 30 : ime noObj nije funkcija!
INFO  01:22:18,490 - Pronadjen poziv promenljive c na liniji 32
INFO  01:22:18,490 - Pronadjen poziv promenljive x na liniji 32
INFO  01:22:18,490 - Pronadjen poziv promenljive i na liniji 32
INFO  01:22:18,490 - Pronadjen poziv funkcije f sa 3/3 argumenta na liniji 32
INFO  01:22:18,491 - Pronadjen poziv promenljive x na liniji 35
INFO  01:22:18,491 - Izabrano polje : .ZERO
INFO  01:22:18,491 - Pronadjen poziv promenljive ZERO na liniji 37
INFO  01:22:18,491 - Pronadjen poziv promenljive x na liniji 37
INFO  01:22:18,491 - Pronadjen poziv promenljive x na liniji 37
INFO  01:22:18,491 - Pronadjen poziv promenljive size na liniji 37
ERROR 01:22:18,491 - Greska na liniji 39 : podrzani samo Enum tipovi. 
ERROR 01:22:18,491 - Greska na liniji 39 : podrzani samo Enum tipovi. 
INFO  01:22:18,491 - Pronadjen poziv promenljive x na liniji 39
ERROR 01:22:18,491 - Greska na liniji 39 : ime noObj nije funkcija!
INFO  01:22:18,491 - Izabrano polje : .ONE
INFO  01:22:18,491 - Pronadjen poziv promenljive ONE na liniji 39
ERROR 01:22:18,491 - Greska na liniji 39 : nekompatibilni tipovi u izrazu za sabiranje.
ERROR 01:22:18,491 - Greska na liniji 39 : ime noObj nije funkcija!
INFO  01:22:18,491 - Pronadjen poziv promenljive size na liniji 41
INFO  01:22:18,491 - Pronadjen poziv promenljive x na liniji 41
INFO  01:22:18,491 - Pronadjen poziv promenljive x na liniji 41
ERROR 01:22:18,491 - Greska na liniji 43 : podrzani samo Enum tipovi. 
ERROR 01:22:18,491 - Greska na liniji 43 : podrzani samo Enum tipovi. 
INFO  01:22:18,491 - Pronadjen poziv promenljive x na liniji 43
ERROR 01:22:18,491 - Greska na liniji 43 : ime noObj nije funkcija!
ERROR 01:22:18,491 - Greska na liniji 43 : nekompatibilni tipovi u izrazu za sabiranje.
ERROR 01:22:18,491 - Greska na liniji 43 : ime noObj nije funkcija!
INFO  01:22:18,491 - main funkcija je korektna.  na liniji 21
INFO  01:22:18,491 - ===================================
ERROR 01:22:18,492 - Parsiranje NIJE uspesno zavrseno!
