INFO  20:50:23,404 - Putanja iz argumenta: test/program.mj
INFO  20:50:23,405 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  20:50:23,483 - #2 program
INFO  20:50:23,483 - #45 MojProgram
INFO  20:50:23,483 - #8 const
INFO  20:50:23,484 - #45 int
INFO  20:50:23,484 - #45 size
INFO  20:50:23,484 - #26 =
INFO  20:50:23,484 - #44 10
INFO  20:50:23,485 - #18 ;
INFO  20:50:23,485 - #45 int
INFO  20:50:23,485 - #45 a
INFO  20:50:23,486 - #19 ,
INFO  20:50:23,486 - #45 b
INFO  20:50:23,486 - #19 ,
INFO  20:50:23,486 - #45 d
INFO  20:50:23,487 - #18 ;
INFO  20:50:23,487 - #6 enum
INFO  20:50:23,487 - #45 Num
INFO  20:50:23,487 - #12 {
INFO  20:50:23,487 - #45 ZERO
INFO  20:50:23,487 - #19 ,
INFO  20:50:23,488 - #45 ONE
INFO  20:50:23,488 - #19 ,
INFO  20:50:23,488 - #45 TEN
INFO  20:50:23,488 - #26 =
INFO  20:50:23,488 - #44 10
INFO  20:50:23,488 - #13 }
INFO  20:50:23,488 - #45 int
INFO  20:50:23,489 - #45 a2
INFO  20:50:23,489 - #19 ,
INFO  20:50:23,489 - #45 b2
INFO  20:50:23,489 - #19 ,
INFO  20:50:23,489 - #45 c2
INFO  20:50:23,489 - #18 ;
INFO  20:50:23,489 - #12 {
INFO  20:50:23,489 - #45 int
INFO  20:50:23,490 - #45 f
INFO  20:50:23,490 - #16 (
INFO  20:50:23,491 - #45 char
INFO  20:50:23,491 - #45 ch
INFO  20:50:23,492 - #19 ,
INFO  20:50:23,492 - #45 int
INFO  20:50:23,492 - #45 a
INFO  20:50:23,492 - #19 ,
INFO  20:50:23,493 - #45 int
INFO  20:50:23,493 - #45 arg
INFO  20:50:23,493 - #17 )
INFO  20:50:23,494 - #45 int
INFO  20:50:23,495 - #45 x
INFO  20:50:23,495 - #18 ;
INFO  20:50:23,495 - #12 {
INFO  20:50:23,495 - #45 x
INFO  20:50:23,496 - #26 =
INFO  20:50:23,498 - #44 5
INFO  20:50:23,500 - #18 ;
INFO  20:50:23,500 - #45 a
INFO  20:50:23,501 - #26 =
INFO  20:50:23,502 - #46 a
INFO  20:50:23,502 - #18 ;
INFO  20:50:23,502 - #45 b
INFO  20:50:23,503 - #26 =
INFO  20:50:23,503 - #46 4
INFO  20:50:23,503 - #18 ;
INFO  20:50:23,503 - #45 c
INFO  20:50:23,503 - #26 =
INFO  20:50:23,504 - #46 !
INFO  20:50:23,504 - #18 ;
INFO  20:50:23,504 - #13 }
INFO  20:50:23,507 - #45 int
INFO  20:50:23,509 - #45 main
INFO  20:50:23,509 - #16 (
INFO  20:50:23,509 - #17 )
INFO  20:50:23,510 - #45 int
INFO  20:50:23,510 - #45 x
INFO  20:50:23,511 - #19 ,
INFO  20:50:23,511 - #45 i
INFO  20:50:23,511 - #18 ;
INFO  20:50:23,511 - #45 char
INFO  20:50:23,511 - #45 c
INFO  20:50:23,511 - #18 ;
INFO  20:50:23,511 - #12 {
INFO  20:50:23,511 - #45 val
INFO  20:50:23,512 - #26 =
INFO  20:50:23,512 - #10 new
INFO  20:50:23,513 - #45 int
INFO  20:50:23,513 - #18 ;
INFO  20:50:23,514 - #45 val
INFO  20:50:23,514 - #20 .
INFO  20:50:23,514 - #45 pos
INFO  20:50:23,514 - #26 =
INFO  20:50:23,515 - #10 new
INFO  20:50:23,515 - #45 int
INFO  20:50:23,515 - #14 [
INFO  20:50:23,515 - #45 size
INFO  20:50:23,516 - #15 ]
INFO  20:50:23,516 - #18 ;
INFO  20:50:23,517 - #45 val
INFO  20:50:23,517 - #20 .
INFO  20:50:23,517 - #45 neg
INFO  20:50:23,517 - #26 =
INFO  20:50:23,517 - #10 new
INFO  20:50:23,517 - #45 int
INFO  20:50:23,517 - #14 [
INFO  20:50:23,517 - #45 size
INFO  20:50:23,518 - #15 ]
INFO  20:50:23,518 - #18 ;
INFO  20:50:23,518 - #40 for
INFO  20:50:23,518 - #16 (
INFO  20:50:23,518 - #45 i
INFO  20:50:23,519 - #26 =
INFO  20:50:23,519 - #44 0
INFO  20:50:23,519 - #18 ;
INFO  20:50:23,519 - #45 i
INFO  20:50:23,519 - #33 <
INFO  20:50:23,519 - #45 size
INFO  20:50:23,522 - #18 ;
INFO  20:50:23,523 - #45 i
INFO  20:50:23,524 - #27 ++
INFO  20:50:23,524 - #17 )
INFO  20:50:23,524 - #12 {
INFO  20:50:23,524 - #45 val
INFO  20:50:23,524 - #20 .
INFO  20:50:23,524 - #45 putp
INFO  20:50:23,524 - #16 (
INFO  20:50:23,524 - #44 0
INFO  20:50:23,524 - #19 ,
INFO  20:50:23,525 - #45 i
INFO  20:50:23,525 - #17 )
INFO  20:50:23,525 - #18 ;
INFO  20:50:23,525 - #45 val
INFO  20:50:23,525 - #20 .
INFO  20:50:23,525 - #45 putn
INFO  20:50:23,525 - #16 (
INFO  20:50:23,525 - #44 0
INFO  20:50:23,526 - #19 ,
INFO  20:50:23,526 - #45 i
INFO  20:50:23,526 - #17 )
INFO  20:50:23,526 - #18 ;
INFO  20:50:23,526 - #13 }
INFO  20:50:23,526 - #45 f
INFO  20:50:23,526 - #16 (
INFO  20:50:23,526 - #45 c
INFO  20:50:23,526 - #19 ,
INFO  20:50:23,526 - #45 x
INFO  20:50:23,526 - #19 ,
INFO  20:50:23,526 - #45 i
INFO  20:50:23,526 - #17 )
INFO  20:50:23,527 - #18 ;
INFO  20:50:23,527 - #37 read
INFO  20:50:23,527 - #16 (
INFO  20:50:23,527 - #45 x
INFO  20:50:23,527 - #17 )
INFO  20:50:23,527 - #18 ;
INFO  20:50:23,527 - #40 for
INFO  20:50:23,527 - #16 (
INFO  20:50:23,527 - #18 ;
INFO  20:50:23,528 - #45 x
INFO  20:50:23,528 - #31 >
INFO  20:50:23,528 - #44 0
INFO  20:50:23,528 - #18 ;
INFO  20:50:23,528 - #17 )
INFO  20:50:23,528 - #12 {
INFO  20:50:23,528 - #9 if
INFO  20:50:23,528 - #16 (
INFO  20:50:23,528 - #45 Num
INFO  20:50:23,528 - #20 .
INFO  20:50:23,528 - #45 ZERO
INFO  20:50:23,529 - #34 <=
INFO  20:50:23,529 - #45 x
INFO  20:50:23,529 - #35 &&
INFO  20:50:23,529 - #45 x
INFO  20:50:23,529 - #33 <
INFO  20:50:23,529 - #45 size
INFO  20:50:23,529 - #17 )
INFO  20:50:23,529 - #12 {
INFO  20:50:23,530 - #45 val
INFO  20:50:23,530 - #20 .
INFO  20:50:23,530 - #45 putp
INFO  20:50:23,530 - #16 (
INFO  20:50:23,530 - #45 val
INFO  20:50:23,530 - #20 .
INFO  20:50:23,530 - #45 getp
INFO  20:50:23,530 - #16 (
INFO  20:50:23,530 - #45 x
INFO  20:50:23,530 - #17 )
INFO  20:50:23,530 - #21 +
INFO  20:50:23,530 - #45 Num
INFO  20:50:23,531 - #20 .
INFO  20:50:23,531 - #45 ONE
INFO  20:50:23,531 - #17 )
INFO  20:50:23,531 - #18 ;
INFO  20:50:23,531 - #13 }
INFO  20:50:23,531 - #7 else
INFO  20:50:23,531 - #9 if
INFO  20:50:23,531 - #16 (
INFO  20:50:23,532 - #22 -
INFO  20:50:23,532 - #45 size
INFO  20:50:23,532 - #33 <
INFO  20:50:23,532 - #45 x
INFO  20:50:23,532 - #35 &&
INFO  20:50:23,532 - #45 x
INFO  20:50:23,532 - #33 <
INFO  20:50:23,532 - #44 0
INFO  20:50:23,532 - #17 )
INFO  20:50:23,532 - #12 {
INFO  20:50:23,532 - #45 val
INFO  20:50:23,532 - #20 .
INFO  20:50:23,532 - #45 putn
INFO  20:50:23,532 - #16 (
INFO  20:50:23,533 - #45 val
INFO  20:50:23,533 - #20 .
INFO  20:50:23,533 - #45 getn
INFO  20:50:23,533 - #16 (
INFO  20:50:23,533 - #22 -
INFO  20:50:23,533 - #45 x
INFO  20:50:23,533 - #17 )
INFO  20:50:23,533 - #21 +
INFO  20:50:23,533 - #44 1
INFO  20:50:23,533 - #17 )
INFO  20:50:23,533 - #18 ;
INFO  20:50:23,533 - #13 }
INFO  20:50:23,533 - #37 read
INFO  20:50:23,533 - #16 (
INFO  20:50:23,533 - #45 x
INFO  20:50:23,534 - #17 )
INFO  20:50:23,534 - #18 ;
INFO  20:50:23,534 - #13 }
INFO  20:50:23,534 - #38 return
INFO  20:50:23,534 - #44 0
INFO  20:50:23,534 - #18 ;
INFO  20:50:23,534 - #13 }
INFO  20:50:23,534 - #13 }
INFO  20:50:23,547 - Program(
  ProgName(
   MojProgram
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDecl(
          ) [NoDecl]
          ConstDeclaration(
            ConstDeclNode(
              TypeNode(
               int
              ) [TypeNode]
              SingleConstant(
                IdentEqualConstantNode(
                 size
                  NumberNode(
                   10
                  ) [NumberNode]
                ) [IdentEqualConstantNode]
              ) [SingleConstant]
            ) [ConstDeclNode]
          ) [ConstDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclNode(
            VarDeclType(
              TypeNode(
               int
              ) [TypeNode]
            ) [VarDeclType]
            Variables(
              Variables(
                SingleVariable(
                  VariableNoBracket(
                   a
                  ) [VariableNoBracket]
                ) [SingleVariable]
                VariableNoBracket(
                 b
                ) [VariableNoBracket]
              ) [Variables]
              VariableNoBracket(
               d
              ) [VariableNoBracket]
            ) [Variables]
          ) [VarDeclNode]
        ) [VarDeclaration]
      ) [Declarations]
      EnumDeclaration(
        EnumDeclarationNode(
         Num
          Enumerations(
            Enumerations(
              SingleEnumeration(
                EnumerationNoVal(
                 ZERO
                ) [EnumerationNoVal]
              ) [SingleEnumeration]
              EnumerationNoVal(
               ONE
              ) [EnumerationNoVal]
            ) [Enumerations]
            EnumerationVal(
             TEN
             10
            ) [EnumerationVal]
          ) [Enumerations]
        ) [EnumDeclarationNode]
      ) [EnumDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclNode(
        VarDeclType(
          TypeNode(
           int
          ) [TypeNode]
        ) [VarDeclType]
        Variables(
          Variables(
            SingleVariable(
              VariableNoBracket(
               a2
              ) [VariableNoBracket]
            ) [SingleVariable]
            VariableNoBracket(
             b2
            ) [VariableNoBracket]
          ) [Variables]
          VariableNoBracket(
           c2
          ) [VariableNoBracket]
        ) [Variables]
      ) [VarDeclNode]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          NoVoidType(
            TypeNode(
             int
            ) [TypeNode]
          ) [NoVoidType]
         f
        ) [MethodTypeName]
        FormalParams(
          FormalParamDecls(
            FormalParamDecls(
              SingleFormalParamDecl(
                FormalParamDeclarationNoBrackets(
                  TypeNode(
                   char
                  ) [TypeNode]
                 ch
                ) [FormalParamDeclarationNoBrackets]
              ) [SingleFormalParamDecl]
              FormalParamDeclarationNoBrackets(
                TypeNode(
                 int
                ) [TypeNode]
               a
              ) [FormalParamDeclarationNoBrackets]
            ) [FormalParamDecls]
            FormalParamDeclarationNoBrackets(
              TypeNode(
               int
              ) [TypeNode]
             arg
            ) [FormalParamDeclarationNoBrackets]
          ) [FormalParamDecls]
        ) [FormalParams]
        VarDeclarationList(
          NoVarDeclaration(
          ) [NoVarDeclaration]
          VarDeclNode(
            VarDeclType(
              TypeNode(
               int
              ) [TypeNode]
            ) [VarDeclType]
            SingleVariable(
              VariableNoBracket(
               x
              ) [VariableNoBracket]
            ) [SingleVariable]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        Statements(
          Statements(
            Statements(
              Statements(
                NoStatement(
                ) [NoStatement]
                DesignatorStatementOnly(
                  DesignatorStatementAssignop(
                    DesignatorNode(
                     x
                      NoIdentExpr(
                      ) [NoIdentExpr]
                    ) [DesignatorNode]
                    Assignop(
                    ) [Assignop]
                    SingleExpression(
                      NoSingleMinus(
                      ) [NoSingleMinus]
                      TermFactor(
                        ConstantNumber(
                         5
                        ) [ConstantNumber]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementOnly]
              ) [Statements]
              DesignatorStatementOnly(
                DesignatorStatementAssignop(
                  DesignatorNode(
                   a
                    NoIdentExpr(
                    ) [NoIdentExpr]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    NoSingleMinus(
                    ) [NoSingleMinus]
                    TermFactor(
                      ConstantCharacter(
                       a
                      ) [ConstantCharacter]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementOnly]
            ) [Statements]
            DesignatorStatementOnly(
              DesignatorStatementAssignop(
                DesignatorNode(
                 b
                  NoIdentExpr(
                  ) [NoIdentExpr]
                ) [DesignatorNode]
                Assignop(
                ) [Assignop]
                SingleExpression(
                  NoSingleMinus(
                  ) [NoSingleMinus]
                  TermFactor(
                    ConstantCharacter(
                     4
                    ) [ConstantCharacter]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementOnly]
          ) [Statements]
          DesignatorStatementOnly(
            DesignatorStatementAssignop(
              DesignatorNode(
               c
                NoIdentExpr(
                ) [NoIdentExpr]
              ) [DesignatorNode]
              Assignop(
              ) [Assignop]
              SingleExpression(
                NoSingleMinus(
                ) [NoSingleMinus]
                TermFactor(
                  ConstantCharacter(
                   !
                  ) [ConstantCharacter]
                ) [TermFactor]
              ) [SingleExpression]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementOnly]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        NoVoidType(
          TypeNode(
           int
          ) [TypeNode]
        ) [NoVoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      VarDeclarationList(
        VarDeclarationList(
          NoVarDeclaration(
          ) [NoVarDeclaration]
          VarDeclNode(
            VarDeclType(
              TypeNode(
               int
              ) [TypeNode]
            ) [VarDeclType]
            Variables(
              SingleVariable(
                VariableNoBracket(
                 x
                ) [VariableNoBracket]
              ) [SingleVariable]
              VariableNoBracket(
               i
              ) [VariableNoBracket]
            ) [Variables]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        VarDeclNode(
          VarDeclType(
            TypeNode(
             char
            ) [TypeNode]
          ) [VarDeclType]
          SingleVariable(
            VariableNoBracket(
             c
            ) [VariableNoBracket]
          ) [SingleVariable]
        ) [VarDeclNode]
      ) [VarDeclarationList]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStatement(
                      ) [NoStatement]
                      DesignatorStatementOnly(
                        DesignatorStatementAssignop(
                          DesignatorNode(
                           val
                            NoIdentExpr(
                            ) [NoIdentExpr]
                          ) [DesignatorNode]
                          Assignop(
                          ) [Assignop]
                          SingleExpression(
                            NoSingleMinus(
                            ) [NoSingleMinus]
                            TermFactor(
                              NewEmpty(
                                TypeNode(
                                 int
                                ) [TypeNode]
                                NodeEmpty(
                                ) [NodeEmpty]
                              ) [NewEmpty]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementOnly]
                    ) [Statements]
                    DesignatorStatementOnly(
                      DesignatorStatementAssignop(
                        DesignatorNode(
                         val
                          Idents(
                            NoIdentExpr(
                            ) [NoIdentExpr]
                           pos
                          ) [Idents]
                        ) [DesignatorNode]
                        Assignop(
                        ) [Assignop]
                        SingleExpression(
                          NoSingleMinus(
                          ) [NoSingleMinus]
                          TermFactor(
                            NewEmpty(
                              TypeNode(
                               int
                              ) [TypeNode]
                              Node(
                                SingleExpression(
                                  NoSingleMinus(
                                  ) [NoSingleMinus]
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                       size
                                        NoIdentExpr(
                                        ) [NoIdentExpr]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [Node]
                            ) [NewEmpty]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementOnly]
                  ) [Statements]
                  DesignatorStatementOnly(
                    DesignatorStatementAssignop(
                      DesignatorNode(
                       val
                        Idents(
                          NoIdentExpr(
                          ) [NoIdentExpr]
                         neg
                        ) [Idents]
                      ) [DesignatorNode]
                      Assignop(
                      ) [Assignop]
                      SingleExpression(
                        NoSingleMinus(
                        ) [NoSingleMinus]
                        TermFactor(
                          NewEmpty(
                            TypeNode(
                             int
                            ) [TypeNode]
                            Node(
                              SingleExpression(
                                NoSingleMinus(
                                ) [NoSingleMinus]
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                     size
                                      NoIdentExpr(
                                      ) [NoIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [Node]
                          ) [NewEmpty]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementOnly]
                ) [Statements]
                ForStatement(
                  DesignatorStatementNotNull(
                    DesignatorStatementAssignop(
                      DesignatorNode(
                       i
                        NoIdentExpr(
                        ) [NoIdentExpr]
                      ) [DesignatorNode]
                      Assignop(
                      ) [Assignop]
                      SingleExpression(
                        NoSingleMinus(
                        ) [NoSingleMinus]
                        TermFactor(
                          ConstantNumber(
                           0
                          ) [ConstantNumber]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementNotNull]
                  ConditionNotNull(
                    ConditionNode(
                      SingleConditionTerm(
                        ConditionTermNode(
                          SingleConditionFact(
                            CondFactExpressionRelopExpression(
                              SingleExpression(
                                NoSingleMinus(
                                ) [NoSingleMinus]
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                     i
                                      NoIdentExpr(
                                      ) [NoIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                              RelopLess(
                              ) [RelopLess]
                              SingleExpression(
                                NoSingleMinus(
                                ) [NoSingleMinus]
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                     size
                                      NoIdentExpr(
                                      ) [NoIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [CondFactExpressionRelopExpression]
                          ) [SingleConditionFact]
                        ) [ConditionTermNode]
                      ) [SingleConditionTerm]
                    ) [ConditionNode]
                  ) [ConditionNotNull]
                  DesignatorStatementNotNull(
                    DesignatorStatementPlusPlus(
                      DesignatorNode(
                       i
                        NoIdentExpr(
                        ) [NoIdentExpr]
                      ) [DesignatorNode]
                    ) [DesignatorStatementPlusPlus]
                  ) [DesignatorStatementNotNull]
                  InBraceStatement(
                    Statements(
                      Statements(
                        NoStatement(
                        ) [NoStatement]
                        DesignatorStatementOnly(
                          DesignatorStatementActPars(
                            DesignatorNode(
                             val
                              Idents(
                                NoIdentExpr(
                                ) [NoIdentExpr]
                               putp
                              ) [Idents]
                            ) [DesignatorNode]
                            ActParsNode(
                              ActualParametres(
                                SingleActualParam(
                                  SingleExpression(
                                    NoSingleMinus(
                                    ) [NoSingleMinus]
                                    TermFactor(
                                      ConstantNumber(
                                       0
                                      ) [ConstantNumber]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [SingleActualParam]
                                SingleExpression(
                                  NoSingleMinus(
                                  ) [NoSingleMinus]
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                       i
                                        NoIdentExpr(
                                        ) [NoIdentExpr]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [ActualParametres]
                            ) [ActParsNode]
                          ) [DesignatorStatementActPars]
                        ) [DesignatorStatementOnly]
                      ) [Statements]
                      DesignatorStatementOnly(
                        DesignatorStatementActPars(
                          DesignatorNode(
                           val
                            Idents(
                              NoIdentExpr(
                              ) [NoIdentExpr]
                             putn
                            ) [Idents]
                          ) [DesignatorNode]
                          ActParsNode(
                            ActualParametres(
                              SingleActualParam(
                                SingleExpression(
                                  NoSingleMinus(
                                  ) [NoSingleMinus]
                                  TermFactor(
                                    ConstantNumber(
                                     0
                                    ) [ConstantNumber]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [SingleActualParam]
                              SingleExpression(
                                NoSingleMinus(
                                ) [NoSingleMinus]
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                     i
                                      NoIdentExpr(
                                      ) [NoIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [ActualParametres]
                          ) [ActParsNode]
                        ) [DesignatorStatementActPars]
                      ) [DesignatorStatementOnly]
                    ) [Statements]
                  ) [InBraceStatement]
                ) [ForStatement]
              ) [Statements]
              DesignatorStatementOnly(
                DesignatorStatementActPars(
                  DesignatorNode(
                   f
                    NoIdentExpr(
                    ) [NoIdentExpr]
                  ) [DesignatorNode]
                  ActParsNode(
                    ActualParametres(
                      ActualParametres(
                        SingleActualParam(
                          SingleExpression(
                            NoSingleMinus(
                            ) [NoSingleMinus]
                            TermFactor(
                              DesignatorEmpty(
                                DesignatorNode(
                                 c
                                  NoIdentExpr(
                                  ) [NoIdentExpr]
                                ) [DesignatorNode]
                              ) [DesignatorEmpty]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [SingleActualParam]
                        SingleExpression(
                          NoSingleMinus(
                          ) [NoSingleMinus]
                          TermFactor(
                            DesignatorEmpty(
                              DesignatorNode(
                               x
                                NoIdentExpr(
                                ) [NoIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [ActualParametres]
                      SingleExpression(
                        NoSingleMinus(
                        ) [NoSingleMinus]
                        TermFactor(
                          DesignatorEmpty(
                            DesignatorNode(
                             i
                              NoIdentExpr(
                              ) [NoIdentExpr]
                            ) [DesignatorNode]
                          ) [DesignatorEmpty]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [ActualParametres]
                  ) [ActParsNode]
                ) [DesignatorStatementActPars]
              ) [DesignatorStatementOnly]
            ) [Statements]
            ReadStatement(
              DesignatorNode(
               x
                NoIdentExpr(
                ) [NoIdentExpr]
              ) [DesignatorNode]
            ) [ReadStatement]
          ) [Statements]
          ForStatement(
            DesignatorStatementNull(
            ) [DesignatorStatementNull]
            ConditionNotNull(
              ConditionNode(
                SingleConditionTerm(
                  ConditionTermNode(
                    SingleConditionFact(
                      CondFactExpressionRelopExpression(
                        SingleExpression(
                          NoSingleMinus(
                          ) [NoSingleMinus]
                          TermFactor(
                            DesignatorEmpty(
                              DesignatorNode(
                               x
                                NoIdentExpr(
                                ) [NoIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermFactor]
                        ) [SingleExpression]
                        RelopGreater(
                        ) [RelopGreater]
                        SingleExpression(
                          NoSingleMinus(
                          ) [NoSingleMinus]
                          TermFactor(
                            ConstantNumber(
                             0
                            ) [ConstantNumber]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [CondFactExpressionRelopExpression]
                    ) [SingleConditionFact]
                  ) [ConditionTermNode]
                ) [SingleConditionTerm]
              ) [ConditionNode]
            ) [ConditionNotNull]
            DesignatorStatementNull(
            ) [DesignatorStatementNull]
            InBraceStatement(
              Statements(
                Statements(
                  NoStatement(
                  ) [NoStatement]
                  IfElseStatement(
                    IfConditionNode(
                      ConditionNode(
                        SingleConditionTerm(
                          ConditionTermNode(
                            ConditionFacts(
                              SingleConditionFact(
                                CondFactExpressionRelopExpression(
                                  SingleExpression(
                                    NoSingleMinus(
                                    ) [NoSingleMinus]
                                    TermFactor(
                                      DesignatorEmpty(
                                        DesignatorNode(
                                         Num
                                          Idents(
                                            NoIdentExpr(
                                            ) [NoIdentExpr]
                                           ZERO
                                          ) [Idents]
                                        ) [DesignatorNode]
                                      ) [DesignatorEmpty]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                  RelopLessEqual(
                                  ) [RelopLessEqual]
                                  SingleExpression(
                                    NoSingleMinus(
                                    ) [NoSingleMinus]
                                    TermFactor(
                                      DesignatorEmpty(
                                        DesignatorNode(
                                         x
                                          NoIdentExpr(
                                          ) [NoIdentExpr]
                                        ) [DesignatorNode]
                                      ) [DesignatorEmpty]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [CondFactExpressionRelopExpression]
                              ) [SingleConditionFact]
                              CondFactExpressionRelopExpression(
                                SingleExpression(
                                  NoSingleMinus(
                                  ) [NoSingleMinus]
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                       x
                                        NoIdentExpr(
                                        ) [NoIdentExpr]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                                RelopLess(
                                ) [RelopLess]
                                SingleExpression(
                                  NoSingleMinus(
                                  ) [NoSingleMinus]
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                       size
                                        NoIdentExpr(
                                        ) [NoIdentExpr]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [CondFactExpressionRelopExpression]
                            ) [ConditionFacts]
                          ) [ConditionTermNode]
                        ) [SingleConditionTerm]
                      ) [ConditionNode]
                    ) [IfConditionNode]
                    InBraceStatement(
                      Statements(
                        NoStatement(
                        ) [NoStatement]
                        DesignatorStatementOnly(
                          DesignatorStatementActPars(
                            DesignatorNode(
                             val
                              Idents(
                                NoIdentExpr(
                                ) [NoIdentExpr]
                               putp
                              ) [Idents]
                            ) [DesignatorNode]
                            ActParsNode(
                              SingleActualParam(
                                ExpressionNode(
                                  SingleExpression(
                                    NoSingleMinus(
                                    ) [NoSingleMinus]
                                    TermFactor(
                                      DesignatorBraceActPars(
                                        DesignatorNode(
                                         val
                                          Idents(
                                            NoIdentExpr(
                                            ) [NoIdentExpr]
                                           getp
                                          ) [Idents]
                                        ) [DesignatorNode]
                                        ActParsNode(
                                          SingleActualParam(
                                            SingleExpression(
                                              NoSingleMinus(
                                              ) [NoSingleMinus]
                                              TermFactor(
                                                DesignatorEmpty(
                                                  DesignatorNode(
                                                   x
                                                    NoIdentExpr(
                                                    ) [NoIdentExpr]
                                                  ) [DesignatorNode]
                                                ) [DesignatorEmpty]
                                              ) [TermFactor]
                                            ) [SingleExpression]
                                          ) [SingleActualParam]
                                        ) [ActParsNode]
                                      ) [DesignatorBraceActPars]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                       Num
                                        Idents(
                                          NoIdentExpr(
                                          ) [NoIdentExpr]
                                         ONE
                                        ) [Idents]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [ExpressionNode]
                              ) [SingleActualParam]
                            ) [ActParsNode]
                          ) [DesignatorStatementActPars]
                        ) [DesignatorStatementOnly]
                      ) [Statements]
                    ) [InBraceStatement]
                    IfStatement(
                      IfConditionNode(
                        ConditionNode(
                          SingleConditionTerm(
                            ConditionTermNode(
                              ConditionFacts(
                                SingleConditionFact(
                                  CondFactExpressionRelopExpression(
                                    SingleExpression(
                                      SingleMinus(
                                      ) [SingleMinus]
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                           size
                                            NoIdentExpr(
                                            ) [NoIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                    RelopLess(
                                    ) [RelopLess]
                                    SingleExpression(
                                      NoSingleMinus(
                                      ) [NoSingleMinus]
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                           x
                                            NoIdentExpr(
                                            ) [NoIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [CondFactExpressionRelopExpression]
                                ) [SingleConditionFact]
                                CondFactExpressionRelopExpression(
                                  SingleExpression(
                                    NoSingleMinus(
                                    ) [NoSingleMinus]
                                    TermFactor(
                                      DesignatorEmpty(
                                        DesignatorNode(
                                         x
                                          NoIdentExpr(
                                          ) [NoIdentExpr]
                                        ) [DesignatorNode]
                                      ) [DesignatorEmpty]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                  RelopLess(
                                  ) [RelopLess]
                                  SingleExpression(
                                    NoSingleMinus(
                                    ) [NoSingleMinus]
                                    TermFactor(
                                      ConstantNumber(
                                       0
                                      ) [ConstantNumber]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [CondFactExpressionRelopExpression]
                              ) [ConditionFacts]
                            ) [ConditionTermNode]
                          ) [SingleConditionTerm]
                        ) [ConditionNode]
                      ) [IfConditionNode]
                      InBraceStatement(
                        Statements(
                          NoStatement(
                          ) [NoStatement]
                          DesignatorStatementOnly(
                            DesignatorStatementActPars(
                              DesignatorNode(
                               val
                                Idents(
                                  NoIdentExpr(
                                  ) [NoIdentExpr]
                                 putn
                                ) [Idents]
                              ) [DesignatorNode]
                              ActParsNode(
                                SingleActualParam(
                                  ExpressionNode(
                                    SingleExpression(
                                      NoSingleMinus(
                                      ) [NoSingleMinus]
                                      TermFactor(
                                        DesignatorBraceActPars(
                                          DesignatorNode(
                                           val
                                            Idents(
                                              NoIdentExpr(
                                              ) [NoIdentExpr]
                                             getn
                                            ) [Idents]
                                          ) [DesignatorNode]
                                          ActParsNode(
                                            SingleActualParam(
                                              SingleExpression(
                                                SingleMinus(
                                                ) [SingleMinus]
                                                TermFactor(
                                                  DesignatorEmpty(
                                                    DesignatorNode(
                                                     x
                                                      NoIdentExpr(
                                                      ) [NoIdentExpr]
                                                    ) [DesignatorNode]
                                                  ) [DesignatorEmpty]
                                                ) [TermFactor]
                                              ) [SingleExpression]
                                            ) [SingleActualParam]
                                          ) [ActParsNode]
                                        ) [DesignatorBraceActPars]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                    AddopPlus(
                                    ) [AddopPlus]
                                    TermFactor(
                                      ConstantNumber(
                                       1
                                      ) [ConstantNumber]
                                    ) [TermFactor]
                                  ) [ExpressionNode]
                                ) [SingleActualParam]
                              ) [ActParsNode]
                            ) [DesignatorStatementActPars]
                          ) [DesignatorStatementOnly]
                        ) [Statements]
                      ) [InBraceStatement]
                    ) [IfStatement]
                  ) [IfElseStatement]
                ) [Statements]
                ReadStatement(
                  DesignatorNode(
                   x
                    NoIdentExpr(
                    ) [NoIdentExpr]
                  ) [DesignatorNode]
                ) [ReadStatement]
              ) [Statements]
            ) [InBraceStatement]
          ) [ForStatement]
        ) [Statements]
        ReturnStatement(
          ExprNotNull(
            SingleExpression(
              NoSingleMinus(
              ) [NoSingleMinus]
              TermFactor(
                ConstantNumber(
                 0
                ) [ConstantNumber]
              ) [TermFactor]
            ) [SingleExpression]
          ) [ExprNotNull]
        ) [ReturnStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  20:50:23,549 - ===================================
INFO  20:50:23,552 - Deklarisana single promenljiva a na liniji 5
INFO  20:50:23,552 - Deklarisana single promenljiva b na liniji 5
INFO  20:50:23,552 - Deklarisana single promenljiva d na liniji 5
INFO  20:50:23,552 - Deklarisana single promenljiva a2 na liniji 9
INFO  20:50:23,552 - Deklarisana single promenljiva b2 na liniji 9
INFO  20:50:23,552 - Deklarisana single promenljiva c2 na liniji 9
INFO  20:50:23,552 - NoVoidType detektovan  na liniji 12
INFO  20:50:23,553 - Method >> scope start | 
INFO  20:50:23,553 - Deklarisana single promenljiva x na liniji 13
INFO  20:50:23,553 - Method >> scope end | f
INFO  20:50:23,553 - NoVoidType detektovan  na liniji 21
INFO  20:50:23,553 - Method >> scope start | 
INFO  20:50:23,553 - Deklarisana single promenljiva x na liniji 21
INFO  20:50:23,553 - Deklarisana single promenljiva i na liniji 21
INFO  20:50:23,553 - Deklarisana single promenljiva c na liniji 21
INFO  20:50:23,553 - Method >> scope end | main
INFO  20:50:23,553 - ===================================
INFO  20:50:23,554 - Parsiranje uspesno zavrseno!
