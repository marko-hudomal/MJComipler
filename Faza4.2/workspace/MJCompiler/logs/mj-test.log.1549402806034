INFO  22:39:55,713 - Putanja iz argumenta: test/program.mj
INFO  22:39:55,713 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  22:39:55,748 - #2 program
INFO  22:39:55,748 - #45 MJProgram
INFO  22:39:55,748 - #45 int
INFO  22:39:55,749 - #45 g
INFO  22:39:55,749 - #18 ;
INFO  22:39:55,749 - #4 class
INFO  22:39:55,749 - #45 U
INFO  22:39:55,749 - #12 {
INFO  22:39:55,750 - #45 int
INFO  22:39:55,751 - #45 m1
INFO  22:39:55,751 - #19 ,
INFO  22:39:55,751 - #45 m2
INFO  22:39:55,751 - #18 ;
INFO  22:39:55,751 - #13 }
INFO  22:39:55,751 - #4 class
INFO  22:39:55,752 - #45 Klasa
INFO  22:39:55,752 - #12 {
INFO  22:39:55,752 - #45 U
INFO  22:39:55,752 - #45 u
INFO  22:39:55,752 - #18 ;
INFO  22:39:55,752 - #45 int
INFO  22:39:55,752 - #45 k1
INFO  22:39:55,752 - #19 ,
INFO  22:39:55,752 - #45 k2
INFO  22:39:55,752 - #19 ,
INFO  22:39:55,752 - #45 k3
INFO  22:39:55,752 - #18 ;
INFO  22:39:55,752 - #45 bool
INFO  22:39:55,753 - #45 b1
INFO  22:39:55,753 - #19 ,
INFO  22:39:55,753 - #45 b2
INFO  22:39:55,753 - #18 ;
INFO  22:39:55,753 - #45 char
INFO  22:39:55,753 - #45 x
INFO  22:39:55,753 - #18 ;
INFO  22:39:55,753 - #12 {
INFO  22:39:55,753 - #39 void
INFO  22:39:55,753 - #45 f
INFO  22:39:55,753 - #16 (
INFO  22:39:55,754 - #45 int
INFO  22:39:55,754 - #45 x
INFO  22:39:55,754 - #17 )
INFO  22:39:55,754 - #12 {
INFO  22:39:55,754 - #11 print
INFO  22:39:55,755 - #16 (
INFO  22:39:55,755 - #45 k1
INFO  22:39:55,755 - #17 )
INFO  22:39:55,755 - #18 ;
INFO  22:39:55,756 - #13 }
INFO  22:39:55,756 - #39 void
INFO  22:39:55,756 - #45 f2
INFO  22:39:55,756 - #16 (
INFO  22:39:55,756 - #45 int
INFO  22:39:55,756 - #45 x
INFO  22:39:55,756 - #17 )
INFO  22:39:55,757 - #12 {
INFO  22:39:55,757 - #13 }
INFO  22:39:55,757 - #13 }
INFO  22:39:55,757 - #13 }
INFO  22:39:55,757 - #45 Klasa
INFO  22:39:55,757 - #45 a
INFO  22:39:55,757 - #18 ;
INFO  22:39:55,757 - #12 {
INFO  22:39:55,757 - #39 void
INFO  22:39:55,757 - #45 main
INFO  22:39:55,757 - #16 (
INFO  22:39:55,757 - #17 )
INFO  22:39:55,759 - #12 {
INFO  22:39:55,759 - #45 a
INFO  22:39:55,759 - #26 =
INFO  22:39:55,759 - #10 new
INFO  22:39:55,759 - #45 Klasa
INFO  22:39:55,759 - #18 ;
INFO  22:39:55,760 - #45 a
INFO  22:39:55,760 - #20 .
INFO  22:39:55,760 - #45 u
INFO  22:39:55,760 - #26 =
INFO  22:39:55,760 - #10 new
INFO  22:39:55,760 - #45 U
INFO  22:39:55,760 - #18 ;
INFO  22:39:55,760 - #45 a
INFO  22:39:55,760 - #20 .
INFO  22:39:55,760 - #45 k1
INFO  22:39:55,760 - #26 =
INFO  22:39:55,760 - #44 25
INFO  22:39:55,760 - #18 ;
INFO  22:39:55,760 - #11 print
INFO  22:39:55,761 - #16 (
INFO  22:39:55,761 - #45 eol
INFO  22:39:55,761 - #17 )
INFO  22:39:55,761 - #18 ;
INFO  22:39:55,761 - #45 a
INFO  22:39:55,761 - #20 .
INFO  22:39:55,761 - #45 f
INFO  22:39:55,761 - #16 (
INFO  22:39:55,761 - #44 1
INFO  22:39:55,761 - #17 )
INFO  22:39:55,761 - #18 ;
INFO  22:39:55,761 - #13 }
INFO  22:39:55,761 - #13 }
INFO  22:39:55,766 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDecl(
          ) [NoDecl]
          VarDeclaration(
            GlobalVarDeclNode(
              VarDeclType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [VarDeclType]
              SingleVariable(
                VariableNoBracket(
                 g
                ) [VariableNoBracket]
              ) [SingleVariable]
            ) [GlobalVarDeclNode]
          ) [VarDeclaration]
        ) [Declarations]
        ClassDeclaration(
          ClassDeclarationWithoutMethods(
            ClassDeclIdent(
             U
            ) [ClassDeclIdent]
            NoExtension(
            ) [NoExtension]
            NoImplementation(
            ) [NoImplementation]
            ClassVarDeclarationList(
              NoClassVarDeclaration(
              ) [NoClassVarDeclaration]
              ClassVarDeclNode(
                ClassVarDeclType(
                  TypeNode(
                   int
                  ) [TypeNode]
                ) [ClassVarDeclType]
                ClassVariables(
                  SingleClassVariable(
                    VariableNoBracket(
                     m1
                    ) [VariableNoBracket]
                  ) [SingleClassVariable]
                  VariableNoBracket(
                   m2
                  ) [VariableNoBracket]
                ) [ClassVariables]
              ) [ClassVarDeclNode]
            ) [ClassVarDeclarationList]
          ) [ClassDeclarationWithoutMethods]
        ) [ClassDeclaration]
      ) [Declarations]
      ClassDeclaration(
        ClassDeclarationWithMethods(
          ClassDeclIdent(
           Klasa
          ) [ClassDeclIdent]
          NoExtension(
          ) [NoExtension]
          NoImplementation(
          ) [NoImplementation]
          ClassVarDeclarationList(
            ClassVarDeclarationList(
              ClassVarDeclarationList(
                ClassVarDeclarationList(
                  NoClassVarDeclaration(
                  ) [NoClassVarDeclaration]
                  ClassVarDeclNode(
                    ClassVarDeclType(
                      TypeNode(
                       U
                      ) [TypeNode]
                    ) [ClassVarDeclType]
                    SingleClassVariable(
                      VariableNoBracket(
                       u
                      ) [VariableNoBracket]
                    ) [SingleClassVariable]
                  ) [ClassVarDeclNode]
                ) [ClassVarDeclarationList]
                ClassVarDeclNode(
                  ClassVarDeclType(
                    TypeNode(
                     int
                    ) [TypeNode]
                  ) [ClassVarDeclType]
                  ClassVariables(
                    ClassVariables(
                      SingleClassVariable(
                        VariableNoBracket(
                         k1
                        ) [VariableNoBracket]
                      ) [SingleClassVariable]
                      VariableNoBracket(
                       k2
                      ) [VariableNoBracket]
                    ) [ClassVariables]
                    VariableNoBracket(
                     k3
                    ) [VariableNoBracket]
                  ) [ClassVariables]
                ) [ClassVarDeclNode]
              ) [ClassVarDeclarationList]
              ClassVarDeclNode(
                ClassVarDeclType(
                  TypeNode(
                   bool
                  ) [TypeNode]
                ) [ClassVarDeclType]
                ClassVariables(
                  SingleClassVariable(
                    VariableNoBracket(
                     b1
                    ) [VariableNoBracket]
                  ) [SingleClassVariable]
                  VariableNoBracket(
                   b2
                  ) [VariableNoBracket]
                ) [ClassVariables]
              ) [ClassVarDeclNode]
            ) [ClassVarDeclarationList]
            ClassVarDeclNode(
              ClassVarDeclType(
                TypeNode(
                 char
                ) [TypeNode]
              ) [ClassVarDeclType]
              SingleClassVariable(
                VariableNoBracket(
                 x
                ) [VariableNoBracket]
              ) [SingleClassVariable]
            ) [ClassVarDeclNode]
          ) [ClassVarDeclarationList]
          ClassMethodDeclarations(
            ClassMethodDeclarations(
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
              MethodDecl(
                MethodTypeName(
                  VoidType(
                  ) [VoidType]
                 f
                ) [MethodTypeName]
                FormalParams(
                  SingleFormalParamDecl(
                    FormalParamDeclarationNoBrackets(
                      TypeNode(
                       int
                      ) [TypeNode]
                     x
                    ) [FormalParamDeclarationNoBrackets]
                  ) [SingleFormalParamDecl]
                ) [FormalParams]
                NoVarDeclaration(
                ) [NoVarDeclaration]
                MethodLBRACE(
                ) [MethodLBRACE]
                Statements(
                  NoStatement(
                  ) [NoStatement]
                  PrintStatement(
                    SingleExpression(
                      TermFactor(
                        DesignatorEmpty(
                          DesignatorNode(
                            SingleIdentExpr(
                             k1
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                        ) [DesignatorEmpty]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [PrintStatement]
                ) [Statements]
              ) [MethodDecl]
            ) [ClassMethodDeclarations]
            MethodDecl(
              MethodTypeName(
                VoidType(
                ) [VoidType]
               f2
              ) [MethodTypeName]
              FormalParams(
                SingleFormalParamDecl(
                  FormalParamDeclarationNoBrackets(
                    TypeNode(
                     int
                    ) [TypeNode]
                   x
                  ) [FormalParamDeclarationNoBrackets]
                ) [SingleFormalParamDecl]
              ) [FormalParams]
              NoVarDeclaration(
              ) [NoVarDeclaration]
              MethodLBRACE(
              ) [MethodLBRACE]
              NoStatement(
              ) [NoStatement]
            ) [MethodDecl]
          ) [ClassMethodDeclarations]
        ) [ClassDeclarationWithMethods]
      ) [ClassDeclaration]
    ) [Declarations]
    VarDeclaration(
      GlobalVarDeclNode(
        VarDeclType(
          TypeNode(
           Klasa
          ) [TypeNode]
        ) [VarDeclType]
        SingleVariable(
          VariableNoBracket(
           a
          ) [VariableNoBracket]
        ) [SingleVariable]
      ) [GlobalVarDeclNode]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      NoVarDeclaration(
      ) [NoVarDeclaration]
      MethodLBRACE(
      ) [MethodLBRACE]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStatement(
                ) [NoStatement]
                DesignatorStatementOnly(
                  DesignatorStatementAssignop(
                    DesignatorNode(
                      SingleIdentExpr(
                       a
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                    Assignop(
                    ) [Assignop]
                    SingleExpression(
                      TermFactor(
                        NewType(
                          TypeNode(
                           Klasa
                          ) [TypeNode]
                        ) [NewType]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementOnly]
              ) [Statements]
              DesignatorStatementOnly(
                DesignatorStatementAssignop(
                  DesignatorNode(
                    Idents(
                      SingleIdentExpr(
                       a
                      ) [SingleIdentExpr]
                     u
                    ) [Idents]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    TermFactor(
                      NewType(
                        TypeNode(
                         U
                        ) [TypeNode]
                      ) [NewType]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementOnly]
            ) [Statements]
            DesignatorStatementOnly(
              DesignatorStatementAssignop(
                DesignatorNode(
                  Idents(
                    SingleIdentExpr(
                     a
                    ) [SingleIdentExpr]
                   k1
                  ) [Idents]
                ) [DesignatorNode]
                Assignop(
                ) [Assignop]
                SingleExpression(
                  TermFactor(
                    ConstantNumber(
                     25
                    ) [ConstantNumber]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementOnly]
          ) [Statements]
          PrintStatement(
            SingleExpression(
              TermFactor(
                DesignatorEmpty(
                  DesignatorNode(
                    SingleIdentExpr(
                     eol
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                ) [DesignatorEmpty]
              ) [TermFactor]
            ) [SingleExpression]
          ) [PrintStatement]
        ) [Statements]
        DesignatorStatementOnly(
          DesignatorStatementActPars(
            DesignatorNode(
              Idents(
                SingleIdentExpr(
                 a
                ) [SingleIdentExpr]
               f
              ) [Idents]
            ) [DesignatorNode]
            ActParsNode(
              SingleActualParam(
                SingleExpression(
                  TermFactor(
                    ConstantNumber(
                     1
                    ) [ConstantNumber]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [SingleActualParam]
            ) [ActParsNode]
          ) [DesignatorStatementActPars]
        ) [DesignatorStatementOnly]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:39:55,767 - ===================================
INFO  22:39:55,770 - Deklarisana single promenljiva g na liniji 5
INFO  22:39:55,770 - Deklarisano single polje m1 na liniji 7
INFO  22:39:55,770 - Deklarisano single polje m2 na liniji 7
INFO  22:39:55,770 - Deklarisana nova klasa: U na liniji 6
INFO  22:39:55,770 - Deklarisano single polje u na liniji 10
INFO  22:39:55,770 - Deklarisano single polje k1 na liniji 11
INFO  22:39:55,770 - Deklarisano single polje k2 na liniji 11
INFO  22:39:55,770 - Deklarisano single polje k3 na liniji 11
INFO  22:39:55,770 - Deklarisano single polje b1 na liniji 12
INFO  22:39:55,771 - Deklarisano single polje b2 na liniji 12
INFO  22:39:55,771 - Deklarisano single polje x na liniji 13
INFO  22:39:55,771 - Deklarisana metoda f u okviru klase Klasa na liniji 15
INFO  22:39:55,771 - Deklarisan single argument x na liniji 15
INFO  22:39:55,771 - Pronadjen poziv promenljive [Fld k1: int, 1, 1 ] na liniji 16
INFO  22:39:55,771 - Deklarisana metoda f2 u okviru klase Klasa na liniji 18
INFO  22:39:55,771 - Deklarisan single argument x na liniji 18
INFO  22:39:55,771 - Deklarisana nova klasa: Klasa na liniji 9
INFO  22:39:55,771 - Deklarisana single promenljiva a na liniji 24
INFO  22:39:55,771 - Definisana funkcija main na liniji 27
INFO  22:39:55,771 - Dodela vrednosti za a na liniji 28
INFO  22:39:55,771 - Izabrano polje : .u
INFO  22:39:55,771 - Dodela vrednosti za u na liniji 29
INFO  22:39:55,772 - Izabrano polje : .k1
INFO  22:39:55,772 - Dodela vrednosti za k1 na liniji 31
INFO  22:39:55,772 - Pronadjen poziv promenljive [Con eol: char, 10, 0 ] na liniji 32
INFO  22:39:55,772 - Izabrano polje : .f
INFO  22:39:55,772 - Pronadjen poziv funkcije f sa 1/1 argumenta na liniji 33
INFO  22:39:55,772 - main funkcija je korektna.  na liniji 27
INFO  22:39:55,772 - ===================================
INFO  22:39:55,781 - Parsiranje uspesno zavrseno!
