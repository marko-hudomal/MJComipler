INFO  03:50:20,471 - Putanja iz argumenta: test/program.mj
INFO  03:50:20,471 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  03:50:20,505 - #2 program
INFO  03:50:20,505 - #45 MojProgram
INFO  03:50:20,505 - #8 const
INFO  03:50:20,506 - #45 int
INFO  03:50:20,506 - #45 size
INFO  03:50:20,507 - #26 =
INFO  03:50:20,507 - #44 10
INFO  03:50:20,507 - #19 ,
INFO  03:50:20,507 - #45 const1
INFO  03:50:20,507 - #26 =
INFO  03:50:20,507 - #44 1
INFO  03:50:20,507 - #19 ,
INFO  03:50:20,507 - #45 const2
INFO  03:50:20,507 - #26 =
INFO  03:50:20,507 - #44 2
INFO  03:50:20,507 - #18 ;
INFO  03:50:20,508 - #8 const
INFO  03:50:20,508 - #45 bool
INFO  03:50:20,508 - #45 b1
INFO  03:50:20,508 - #26 =
INFO  03:50:20,508 - #47 1
INFO  03:50:20,508 - #19 ,
INFO  03:50:20,508 - #45 b2
INFO  03:50:20,508 - #26 =
INFO  03:50:20,508 - #47 0
INFO  03:50:20,509 - #18 ;
INFO  03:50:20,509 - #8 const
INFO  03:50:20,509 - #45 char
INFO  03:50:20,509 - #45 x
INFO  03:50:20,509 - #26 =
INFO  03:50:20,509 - #46 a
INFO  03:50:20,509 - #18 ;
INFO  03:50:20,509 - #8 const
INFO  03:50:20,509 - #45 bool
INFO  03:50:20,509 - #45 bb
INFO  03:50:20,509 - #26 =
INFO  03:50:20,509 - #47 1
INFO  03:50:20,509 - #18 ;
INFO  03:50:20,509 - #45 int
INFO  03:50:20,509 - #45 niz
INFO  03:50:20,510 - #14 [
INFO  03:50:20,510 - #15 ]
INFO  03:50:20,510 - #19 ,
INFO  03:50:20,510 - #45 d
INFO  03:50:20,510 - #18 ;
INFO  03:50:20,510 - #6 enum
INFO  03:50:20,510 - #45 Num
INFO  03:50:20,510 - #12 {
INFO  03:50:20,511 - #45 ZERO
INFO  03:50:20,511 - #26 =
INFO  03:50:20,511 - #44 0
INFO  03:50:20,511 - #19 ,
INFO  03:50:20,511 - #45 ONE
INFO  03:50:20,511 - #19 ,
INFO  03:50:20,511 - #45 TEN
INFO  03:50:20,511 - #26 =
INFO  03:50:20,511 - #44 10
INFO  03:50:20,511 - #19 ,
INFO  03:50:20,511 - #45 ELEVEN
INFO  03:50:20,511 - #26 =
INFO  03:50:20,512 - #44 11
INFO  03:50:20,512 - #13 }
INFO  03:50:20,512 - #45 int
INFO  03:50:20,512 - #45 a
INFO  03:50:20,512 - #19 ,
INFO  03:50:20,512 - #45 b
INFO  03:50:20,512 - #19 ,
INFO  03:50:20,512 - #45 c
INFO  03:50:20,512 - #18 ;
INFO  03:50:20,512 - #45 bool
INFO  03:50:20,512 - #45 bo
INFO  03:50:20,512 - #18 ;
INFO  03:50:20,512 - #8 const
INFO  03:50:20,512 - #45 bool
INFO  03:50:20,512 - #45 b_const
INFO  03:50:20,512 - #26 =
INFO  03:50:20,512 - #47 0
INFO  03:50:20,513 - #18 ;
INFO  03:50:20,513 - #45 int
INFO  03:50:20,513 - #45 xx
INFO  03:50:20,513 - #19 ,
INFO  03:50:20,513 - #45 aa
INFO  03:50:20,513 - #14 [
INFO  03:50:20,513 - #15 ]
INFO  03:50:20,513 - #18 ;
INFO  03:50:20,513 - #4 class
INFO  03:50:20,513 - #45 Klasa
INFO  03:50:20,513 - #12 {
INFO  03:50:20,514 - #45 char
INFO  03:50:20,514 - #45 a
INFO  03:50:20,515 - #18 ;
INFO  03:50:20,515 - #12 {
INFO  03:50:20,515 - #45 int
INFO  03:50:20,515 - #45 sqr
INFO  03:50:20,515 - #16 (
INFO  03:50:20,516 - #45 int
INFO  03:50:20,516 - #45 x
INFO  03:50:20,516 - #17 )
INFO  03:50:20,516 - #12 {
INFO  03:50:20,516 - #38 return
INFO  03:50:20,517 - #45 x
INFO  03:50:20,517 - #23 *
INFO  03:50:20,517 - #45 x
INFO  03:50:20,518 - #18 ;
INFO  03:50:20,519 - #13 }
INFO  03:50:20,519 - #13 }
INFO  03:50:20,520 - #13 }
INFO  03:50:20,520 - #12 {
INFO  03:50:20,520 - #39 void
INFO  03:50:20,520 - #45 f1
INFO  03:50:20,521 - #16 (
INFO  03:50:20,521 - #45 char
INFO  03:50:20,521 - #45 ch1
INFO  03:50:20,521 - #19 ,
INFO  03:50:20,521 - #45 int
INFO  03:50:20,521 - #45 a1
INFO  03:50:20,521 - #19 ,
INFO  03:50:20,521 - #45 int
INFO  03:50:20,521 - #45 arg1
INFO  03:50:20,521 - #19 ,
INFO  03:50:20,521 - #45 bool
INFO  03:50:20,521 - #45 b1
INFO  03:50:20,521 - #17 )
INFO  03:50:20,521 - #45 int
INFO  03:50:20,521 - #45 x
INFO  03:50:20,521 - #18 ;
INFO  03:50:20,521 - #45 bool
INFO  03:50:20,522 - #45 c
INFO  03:50:20,522 - #18 ;
INFO  03:50:20,522 - #45 Num
INFO  03:50:20,522 - #45 broj
INFO  03:50:20,523 - #19 ,
INFO  03:50:20,523 - #45 broj2
INFO  03:50:20,523 - #18 ;
INFO  03:50:20,523 - #12 {
INFO  03:50:20,523 - #45 x
INFO  03:50:20,523 - #26 =
INFO  03:50:20,523 - #45 Num
INFO  03:50:20,524 - #20 .
INFO  03:50:20,524 - #45 ZERO
INFO  03:50:20,524 - #18 ;
INFO  03:50:20,524 - #45 broj
INFO  03:50:20,524 - #26 =
INFO  03:50:20,524 - #45 Num
INFO  03:50:20,524 - #20 .
INFO  03:50:20,524 - #45 ZERO
INFO  03:50:20,524 - #18 ;
INFO  03:50:20,524 - #45 broj2
INFO  03:50:20,524 - #26 =
INFO  03:50:20,524 - #44 10
INFO  03:50:20,524 - #18 ;
INFO  03:50:20,524 - #45 x
INFO  03:50:20,524 - #26 =
INFO  03:50:20,524 - #45 a
INFO  03:50:20,524 - #21 +
INFO  03:50:20,524 - #44 1
INFO  03:50:20,525 - #18 ;
INFO  03:50:20,525 - #45 c
INFO  03:50:20,525 - #26 =
INFO  03:50:20,525 - #47 0
INFO  03:50:20,525 - #18 ;
INFO  03:50:20,525 - #45 bo
INFO  03:50:20,525 - #26 =
INFO  03:50:20,525 - #47 1
INFO  03:50:20,525 - #18 ;
INFO  03:50:20,525 - #45 ch1
INFO  03:50:20,525 - #26 =
INFO  03:50:20,525 - #46 1
INFO  03:50:20,525 - #18 ;
INFO  03:50:20,526 - #13 }
INFO  03:50:20,526 - #45 int
INFO  03:50:20,526 - #45 f2
INFO  03:50:20,526 - #16 (
INFO  03:50:20,526 - #45 char
INFO  03:50:20,526 - #45 ch2
INFO  03:50:20,526 - #19 ,
INFO  03:50:20,526 - #45 int
INFO  03:50:20,526 - #45 a
INFO  03:50:20,526 - #19 ,
INFO  03:50:20,526 - #45 int
INFO  03:50:20,526 - #45 arg
INFO  03:50:20,526 - #17 )
INFO  03:50:20,526 - #45 int
INFO  03:50:20,526 - #45 ff
INFO  03:50:20,526 - #18 ;
INFO  03:50:20,526 - #45 int
INFO  03:50:20,526 - #45 i
INFO  03:50:20,526 - #18 ;
INFO  03:50:20,526 - #45 Num
INFO  03:50:20,526 - #45 broj
INFO  03:50:20,526 - #18 ;
INFO  03:50:20,526 - #12 {
INFO  03:50:20,526 - #45 f1
INFO  03:50:20,526 - #16 (
INFO  03:50:20,526 - #45 ch2
INFO  03:50:20,526 - #19 ,
INFO  03:50:20,526 - #45 b
INFO  03:50:20,526 - #19 ,
INFO  03:50:20,527 - #45 broj
INFO  03:50:20,527 - #19 ,
INFO  03:50:20,527 - #45 bo
INFO  03:50:20,527 - #17 )
INFO  03:50:20,527 - #18 ;
INFO  03:50:20,527 - #45 niz
INFO  03:50:20,527 - #26 =
INFO  03:50:20,527 - #10 new
INFO  03:50:20,527 - #45 int
INFO  03:50:20,527 - #14 [
INFO  03:50:20,527 - #44 20
INFO  03:50:20,527 - #15 ]
INFO  03:50:20,527 - #18 ;
INFO  03:50:20,527 - #45 ff
INFO  03:50:20,527 - #26 =
INFO  03:50:20,528 - #45 niz
INFO  03:50:20,528 - #14 [
INFO  03:50:20,528 - #44 1
INFO  03:50:20,528 - #15 ]
INFO  03:50:20,528 - #18 ;
INFO  03:50:20,528 - #45 niz
INFO  03:50:20,528 - #14 [
INFO  03:50:20,528 - #22 -
INFO  03:50:20,528 - #45 niz
INFO  03:50:20,528 - #14 [
INFO  03:50:20,528 - #45 niz
INFO  03:50:20,528 - #14 [
INFO  03:50:20,528 - #45 broj
INFO  03:50:20,528 - #15 ]
INFO  03:50:20,528 - #15 ]
INFO  03:50:20,528 - #21 +
INFO  03:50:20,528 - #44 5
INFO  03:50:20,528 - #23 *
INFO  03:50:20,528 - #44 9
INFO  03:50:20,528 - #15 ]
INFO  03:50:20,528 - #26 =
INFO  03:50:20,528 - #45 Num
INFO  03:50:20,529 - #20 .
INFO  03:50:20,529 - #45 ZERO
INFO  03:50:20,529 - #23 *
INFO  03:50:20,529 - #44 2
INFO  03:50:20,529 - #22 -
INFO  03:50:20,529 - #45 broj
INFO  03:50:20,529 - #18 ;
INFO  03:50:20,529 - #45 ff
INFO  03:50:20,529 - #26 =
INFO  03:50:20,529 - #44 0
INFO  03:50:20,529 - #18 ;
INFO  03:50:20,529 - #45 i
INFO  03:50:20,529 - #26 =
INFO  03:50:20,529 - #44 10
INFO  03:50:20,529 - #18 ;
INFO  03:50:20,529 - #40 for
INFO  03:50:20,529 - #16 (
INFO  03:50:20,532 - #45 i
INFO  03:50:20,532 - #26 =
INFO  03:50:20,532 - #44 0
INFO  03:50:20,532 - #18 ;
INFO  03:50:20,532 - #45 niz
INFO  03:50:20,533 - #30 !=
INFO  03:50:20,533 - #45 niz
INFO  03:50:20,533 - #18 ;
INFO  03:50:20,534 - #45 i
INFO  03:50:20,534 - #27 ++
INFO  03:50:20,534 - #17 )
INFO  03:50:20,535 - #12 {
INFO  03:50:20,535 - #3 break
INFO  03:50:20,535 - #18 ;
INFO  03:50:20,535 - #13 }
INFO  03:50:20,535 - #38 return
INFO  03:50:20,535 - #45 ff
INFO  03:50:20,535 - #18 ;
INFO  03:50:20,535 - #13 }
INFO  03:50:20,535 - #45 int
INFO  03:50:20,535 - #45 fa
INFO  03:50:20,536 - #16 (
INFO  03:50:20,536 - #45 char
INFO  03:50:20,536 - #45 arr
INFO  03:50:20,536 - #14 [
INFO  03:50:20,536 - #15 ]
INFO  03:50:20,536 - #19 ,
INFO  03:50:20,536 - #45 char
INFO  03:50:20,536 - #45 arr2
INFO  03:50:20,536 - #14 [
INFO  03:50:20,536 - #15 ]
INFO  03:50:20,536 - #19 ,
INFO  03:50:20,536 - #45 bool
INFO  03:50:20,536 - #45 a
INFO  03:50:20,536 - #14 [
INFO  03:50:20,536 - #15 ]
INFO  03:50:20,536 - #17 )
INFO  03:50:20,536 - #12 {
INFO  03:50:20,536 - #38 return
INFO  03:50:20,536 - #44 2
INFO  03:50:20,536 - #18 ;
INFO  03:50:20,536 - #13 }
INFO  03:50:20,536 - #45 int
INFO  03:50:20,536 - #45 putp
INFO  03:50:20,536 - #16 (
INFO  03:50:20,536 - #45 char
INFO  03:50:20,536 - #45 ch
INFO  03:50:20,536 - #17 )
INFO  03:50:20,536 - #45 int
INFO  03:50:20,536 - #45 x
INFO  03:50:20,536 - #18 ;
INFO  03:50:20,536 - #12 {
INFO  03:50:20,536 - #45 x
INFO  03:50:20,536 - #26 =
INFO  03:50:20,537 - #44 5
INFO  03:50:20,537 - #18 ;
INFO  03:50:20,537 - #45 bo
INFO  03:50:20,537 - #26 =
INFO  03:50:20,537 - #47 0
INFO  03:50:20,537 - #18 ;
INFO  03:50:20,537 - #45 x
INFO  03:50:20,537 - #26 =
INFO  03:50:20,537 - #45 f2
INFO  03:50:20,537 - #16 (
INFO  03:50:20,537 - #46 a
INFO  03:50:20,537 - #19 ,
INFO  03:50:20,537 - #45 Num
INFO  03:50:20,537 - #20 .
INFO  03:50:20,537 - #45 ZERO
INFO  03:50:20,537 - #19 ,
INFO  03:50:20,537 - #44 3
INFO  03:50:20,537 - #17 )
INFO  03:50:20,537 - #18 ;
INFO  03:50:20,537 - #38 return
INFO  03:50:20,537 - #45 x
INFO  03:50:20,537 - #18 ;
INFO  03:50:20,537 - #13 }
INFO  03:50:20,537 - #45 char
INFO  03:50:20,537 - #45 getp
INFO  03:50:20,537 - #16 (
INFO  03:50:20,537 - #45 char
INFO  03:50:20,537 - #45 ch
INFO  03:50:20,537 - #17 )
INFO  03:50:20,537 - #45 int
INFO  03:50:20,537 - #45 x
INFO  03:50:20,537 - #18 ;
INFO  03:50:20,537 - #12 {
INFO  03:50:20,537 - #45 x
INFO  03:50:20,537 - #26 =
INFO  03:50:20,537 - #22 -
INFO  03:50:20,538 - #44 2
INFO  03:50:20,538 - #23 *
INFO  03:50:20,538 - #45 a
INFO  03:50:20,538 - #21 +
INFO  03:50:20,538 - #44 5
INFO  03:50:20,538 - #23 *
INFO  03:50:20,538 - #16 (
INFO  03:50:20,538 - #45 x
INFO  03:50:20,538 - #24 /
INFO  03:50:20,538 - #44 2
INFO  03:50:20,538 - #17 )
INFO  03:50:20,538 - #18 ;
INFO  03:50:20,538 - #45 a
INFO  03:50:20,538 - #26 =
INFO  03:50:20,538 - #44 1
INFO  03:50:20,538 - #18 ;
INFO  03:50:20,538 - #45 b
INFO  03:50:20,538 - #26 =
INFO  03:50:20,538 - #44 1
INFO  03:50:20,538 - #23 *
INFO  03:50:20,538 - #45 a
INFO  03:50:20,538 - #18 ;
INFO  03:50:20,538 - #45 c
INFO  03:50:20,538 - #26 =
INFO  03:50:20,538 - #44 2
INFO  03:50:20,538 - #18 ;
INFO  03:50:20,538 - #38 return
INFO  03:50:20,538 - #46 x
INFO  03:50:20,538 - #18 ;
INFO  03:50:20,538 - #13 }
INFO  03:50:20,538 - #39 void
INFO  03:50:20,538 - #45 main
INFO  03:50:20,538 - #16 (
INFO  03:50:20,539 - #17 )
INFO  03:50:20,539 - #45 int
INFO  03:50:20,539 - #45 x
INFO  03:50:20,539 - #19 ,
INFO  03:50:20,539 - #45 i
INFO  03:50:20,539 - #18 ;
INFO  03:50:20,539 - #45 char
INFO  03:50:20,539 - #45 c
INFO  03:50:20,539 - #18 ;
INFO  03:50:20,539 - #45 int
INFO  03:50:20,539 - #45 val
INFO  03:50:20,539 - #18 ;
INFO  03:50:20,539 - #45 char
INFO  03:50:20,539 - #45 l
INFO  03:50:20,539 - #14 [
INFO  03:50:20,539 - #15 ]
INFO  03:50:20,539 - #18 ;
INFO  03:50:20,539 - #45 bool
INFO  03:50:20,539 - #45 bbb
INFO  03:50:20,539 - #14 [
INFO  03:50:20,539 - #15 ]
INFO  03:50:20,539 - #18 ;
INFO  03:50:20,539 - #45 Num
INFO  03:50:20,539 - #45 test1
INFO  03:50:20,539 - #19 ,
INFO  03:50:20,539 - #45 test2
INFO  03:50:20,539 - #18 ;
INFO  03:50:20,539 - #12 {
INFO  03:50:20,539 - #45 l
INFO  03:50:20,539 - #26 =
INFO  03:50:20,539 - #10 new
INFO  03:50:20,539 - #45 char
INFO  03:50:20,539 - #14 [
INFO  03:50:20,539 - #44 2
INFO  03:50:20,539 - #15 ]
INFO  03:50:20,539 - #18 ;
INFO  03:50:20,539 - #45 bbb
INFO  03:50:20,539 - #26 =
INFO  03:50:20,540 - #10 new
INFO  03:50:20,540 - #45 bool
INFO  03:50:20,540 - #14 [
INFO  03:50:20,540 - #22 -
INFO  03:50:20,540 - #44 4
INFO  03:50:20,540 - #23 *
INFO  03:50:20,540 - #44 2
INFO  03:50:20,540 - #21 +
INFO  03:50:20,540 - #44 2
INFO  03:50:20,540 - #15 ]
INFO  03:50:20,540 - #18 ;
INFO  03:50:20,540 - #45 niz
INFO  03:50:20,540 - #26 =
INFO  03:50:20,540 - #10 new
INFO  03:50:20,540 - #45 int
INFO  03:50:20,540 - #14 [
INFO  03:50:20,540 - #45 x
INFO  03:50:20,540 - #15 ]
INFO  03:50:20,540 - #18 ;
INFO  03:50:20,540 - #45 val
INFO  03:50:20,540 - #26 =
INFO  03:50:20,540 - #44 5
INFO  03:50:20,540 - #18 ;
INFO  03:50:20,540 - #40 for
INFO  03:50:20,540 - #16 (
INFO  03:50:20,540 - #45 i
INFO  03:50:20,540 - #26 =
INFO  03:50:20,540 - #44 0
INFO  03:50:20,540 - #18 ;
INFO  03:50:20,540 - #45 i
INFO  03:50:20,540 - #33 <
INFO  03:50:20,540 - #45 size
INFO  03:50:20,540 - #18 ;
INFO  03:50:20,540 - #45 i
INFO  03:50:20,540 - #27 ++
INFO  03:50:20,541 - #17 )
INFO  03:50:20,541 - #12 {
INFO  03:50:20,541 - #45 x
INFO  03:50:20,541 - #26 =
INFO  03:50:20,541 - #45 putp
INFO  03:50:20,541 - #16 (
INFO  03:50:20,541 - #46 a
INFO  03:50:20,541 - #17 )
INFO  03:50:20,541 - #18 ;
INFO  03:50:20,541 - #45 putp
INFO  03:50:20,541 - #16 (
INFO  03:50:20,541 - #45 c
INFO  03:50:20,541 - #17 )
INFO  03:50:20,541 - #18 ;
INFO  03:50:20,541 - #13 }
INFO  03:50:20,541 - #45 f1
INFO  03:50:20,541 - #16 (
INFO  03:50:20,541 - #45 c
INFO  03:50:20,541 - #19 ,
INFO  03:50:20,541 - #45 Num
INFO  03:50:20,541 - #20 .
INFO  03:50:20,541 - #45 ZERO
INFO  03:50:20,541 - #19 ,
INFO  03:50:20,541 - #45 size
INFO  03:50:20,541 - #24 /
INFO  03:50:20,541 - #44 2
INFO  03:50:20,541 - #19 ,
INFO  03:50:20,541 - #47 0
INFO  03:50:20,541 - #17 )
INFO  03:50:20,541 - #18 ;
INFO  03:50:20,541 - #11 print
INFO  03:50:20,541 - #16 (
INFO  03:50:20,541 - #45 d
INFO  03:50:20,541 - #17 )
INFO  03:50:20,541 - #18 ;
INFO  03:50:20,541 - #37 read
INFO  03:50:20,541 - #16 (
INFO  03:50:20,541 - #45 x
INFO  03:50:20,541 - #17 )
INFO  03:50:20,541 - #18 ;
INFO  03:50:20,541 - #40 for
INFO  03:50:20,542 - #16 (
INFO  03:50:20,542 - #45 i
INFO  03:50:20,542 - #26 =
INFO  03:50:20,542 - #44 1
INFO  03:50:20,542 - #21 +
INFO  03:50:20,542 - #45 test1
INFO  03:50:20,542 - #18 ;
INFO  03:50:20,542 - #45 x
INFO  03:50:20,542 - #31 >
INFO  03:50:20,542 - #44 1
INFO  03:50:20,542 - #18 ;
INFO  03:50:20,542 - #17 )
INFO  03:50:20,542 - #12 {
INFO  03:50:20,542 - #9 if
INFO  03:50:20,542 - #16 (
INFO  03:50:20,542 - #44 0
INFO  03:50:20,542 - #34 <=
INFO  03:50:20,542 - #45 x
INFO  03:50:20,543 - #35 &&
INFO  03:50:20,543 - #45 x
INFO  03:50:20,543 - #33 <
INFO  03:50:20,543 - #45 size
INFO  03:50:20,543 - #17 )
INFO  03:50:20,543 - #12 {
INFO  03:50:20,543 - #45 putp
INFO  03:50:20,543 - #16 (
INFO  03:50:20,543 - #45 getp
INFO  03:50:20,543 - #16 (
INFO  03:50:20,543 - #45 c
INFO  03:50:20,543 - #17 )
INFO  03:50:20,543 - #17 )
INFO  03:50:20,543 - #18 ;
INFO  03:50:20,543 - #13 }
INFO  03:50:20,544 - #7 else
INFO  03:50:20,544 - #9 if
INFO  03:50:20,544 - #16 (
INFO  03:50:20,544 - #22 -
INFO  03:50:20,544 - #45 size
INFO  03:50:20,544 - #33 <
INFO  03:50:20,544 - #45 x
INFO  03:50:20,544 - #35 &&
INFO  03:50:20,544 - #45 x
INFO  03:50:20,544 - #33 <
INFO  03:50:20,544 - #44 0
INFO  03:50:20,544 - #17 )
INFO  03:50:20,544 - #12 {
INFO  03:50:20,544 - #45 putp
INFO  03:50:20,544 - #16 (
INFO  03:50:20,544 - #45 getp
INFO  03:50:20,544 - #16 (
INFO  03:50:20,544 - #46 #
INFO  03:50:20,544 - #17 )
INFO  03:50:20,544 - #17 )
INFO  03:50:20,544 - #18 ;
INFO  03:50:20,544 - #13 }
INFO  03:50:20,544 - #37 read
INFO  03:50:20,545 - #16 (
INFO  03:50:20,545 - #45 x
INFO  03:50:20,545 - #17 )
INFO  03:50:20,545 - #18 ;
INFO  03:50:20,545 - #13 }
INFO  03:50:20,545 - #45 xx
INFO  03:50:20,545 - #26 =
INFO  03:50:20,545 - #45 aa
INFO  03:50:20,545 - #14 [
INFO  03:50:20,545 - #45 aa
INFO  03:50:20,545 - #14 [
INFO  03:50:20,545 - #44 2
INFO  03:50:20,545 - #21 +
INFO  03:50:20,545 - #44 3
INFO  03:50:20,545 - #15 ]
INFO  03:50:20,545 - #15 ]
INFO  03:50:20,545 - #18 ;
INFO  03:50:20,545 - #45 fa
INFO  03:50:20,545 - #16 (
INFO  03:50:20,545 - #45 l
INFO  03:50:20,545 - #19 ,
INFO  03:50:20,545 - #45 l
INFO  03:50:20,545 - #19 ,
INFO  03:50:20,545 - #45 null
INFO  03:50:20,545 - #17 )
INFO  03:50:20,545 - #18 ;
INFO  03:50:20,545 - #38 return
INFO  03:50:20,545 - #18 ;
INFO  03:50:20,545 - #13 }
INFO  03:50:20,546 - #13 }
INFO  03:50:20,556 - Program(
  ProgName(
   MojProgram
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                Declarations(
                  Declarations(
                    Declarations(
                      Declarations(
                        NoDecl(
                        ) [NoDecl]
                        ConstDeclaration(
                          ConstDeclNode(
                            ConstDeclType(
                              TypeNode(
                               int
                              ) [TypeNode]
                            ) [ConstDeclType]
                            Constants(
                              Constants(
                                SingleConstant(
                                  IdentEqualConstantNode(
                                   size
                                    NumberNode(
                                     10
                                    ) [NumberNode]
                                  ) [IdentEqualConstantNode]
                                ) [SingleConstant]
                                IdentEqualConstantNode(
                                 const1
                                  NumberNode(
                                   1
                                  ) [NumberNode]
                                ) [IdentEqualConstantNode]
                              ) [Constants]
                              IdentEqualConstantNode(
                               const2
                                NumberNode(
                                 2
                                ) [NumberNode]
                              ) [IdentEqualConstantNode]
                            ) [Constants]
                          ) [ConstDeclNode]
                        ) [ConstDeclaration]
                      ) [Declarations]
                      ConstDeclaration(
                        ConstDeclNode(
                          ConstDeclType(
                            TypeNode(
                             bool
                            ) [TypeNode]
                          ) [ConstDeclType]
                          Constants(
                            SingleConstant(
                              IdentEqualConstantNode(
                               b1
                                BooleanNode(
                                 1
                                ) [BooleanNode]
                              ) [IdentEqualConstantNode]
                            ) [SingleConstant]
                            IdentEqualConstantNode(
                             b2
                              BooleanNode(
                               0
                              ) [BooleanNode]
                            ) [IdentEqualConstantNode]
                          ) [Constants]
                        ) [ConstDeclNode]
                      ) [ConstDeclaration]
                    ) [Declarations]
                    ConstDeclaration(
                      ConstDeclNode(
                        ConstDeclType(
                          TypeNode(
                           char
                          ) [TypeNode]
                        ) [ConstDeclType]
                        SingleConstant(
                          IdentEqualConstantNode(
                           x
                            CharNode(
                             a
                            ) [CharNode]
                          ) [IdentEqualConstantNode]
                        ) [SingleConstant]
                      ) [ConstDeclNode]
                    ) [ConstDeclaration]
                  ) [Declarations]
                  ConstDeclaration(
                    ConstDeclNode(
                      ConstDeclType(
                        TypeNode(
                         bool
                        ) [TypeNode]
                      ) [ConstDeclType]
                      SingleConstant(
                        IdentEqualConstantNode(
                         bb
                          BooleanNode(
                           1
                          ) [BooleanNode]
                        ) [IdentEqualConstantNode]
                      ) [SingleConstant]
                    ) [ConstDeclNode]
                  ) [ConstDeclaration]
                ) [Declarations]
                VarDeclaration(
                  GlobalVarDeclNode(
                    VarDeclType(
                      TypeNode(
                       int
                      ) [TypeNode]
                    ) [VarDeclType]
                    Variables(
                      SingleVariable(
                        VariableBracket(
                         niz
                        ) [VariableBracket]
                      ) [SingleVariable]
                      VariableNoBracket(
                       d
                      ) [VariableNoBracket]
                    ) [Variables]
                  ) [GlobalVarDeclNode]
                ) [VarDeclaration]
              ) [Declarations]
              EnumDeclaration(
                EnumDeclarationNode(
                  EnumIdent(
                   Num
                  ) [EnumIdent]
                  Enumerations(
                    Enumerations(
                      Enumerations(
                        SingleEnumeration(
                          EnumerationVal(
                           ZERO
                           0
                          ) [EnumerationVal]
                        ) [SingleEnumeration]
                        EnumerationNoVal(
                         ONE
                        ) [EnumerationNoVal]
                      ) [Enumerations]
                      EnumerationVal(
                       TEN
                       10
                      ) [EnumerationVal]
                    ) [Enumerations]
                    EnumerationVal(
                     ELEVEN
                     11
                    ) [EnumerationVal]
                  ) [Enumerations]
                ) [EnumDeclarationNode]
              ) [EnumDeclaration]
            ) [Declarations]
            VarDeclaration(
              GlobalVarDeclNode(
                VarDeclType(
                  TypeNode(
                   int
                  ) [TypeNode]
                ) [VarDeclType]
                Variables(
                  Variables(
                    SingleVariable(
                      VariableNoBracket(
                       a
                      ) [VariableNoBracket]
                    ) [SingleVariable]
                    VariableNoBracket(
                     b
                    ) [VariableNoBracket]
                  ) [Variables]
                  VariableNoBracket(
                   c
                  ) [VariableNoBracket]
                ) [Variables]
              ) [GlobalVarDeclNode]
            ) [VarDeclaration]
          ) [Declarations]
          VarDeclaration(
            GlobalVarDeclNode(
              VarDeclType(
                TypeNode(
                 bool
                ) [TypeNode]
              ) [VarDeclType]
              SingleVariable(
                VariableNoBracket(
                 bo
                ) [VariableNoBracket]
              ) [SingleVariable]
            ) [GlobalVarDeclNode]
          ) [VarDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclNode(
            ConstDeclType(
              TypeNode(
               bool
              ) [TypeNode]
            ) [ConstDeclType]
            SingleConstant(
              IdentEqualConstantNode(
               b_const
                BooleanNode(
                 0
                ) [BooleanNode]
              ) [IdentEqualConstantNode]
            ) [SingleConstant]
          ) [ConstDeclNode]
        ) [ConstDeclaration]
      ) [Declarations]
      VarDeclaration(
        GlobalVarDeclNode(
          VarDeclType(
            TypeNode(
             int
            ) [TypeNode]
          ) [VarDeclType]
          Variables(
            SingleVariable(
              VariableNoBracket(
               xx
              ) [VariableNoBracket]
            ) [SingleVariable]
            VariableBracket(
             aa
            ) [VariableBracket]
          ) [Variables]
        ) [GlobalVarDeclNode]
      ) [VarDeclaration]
    ) [Declarations]
    ClassDeclaration(
      ClassDeclarationWithMethods(
        ClassDeclIdent(
         Klasa
        ) [ClassDeclIdent]
        NoExtension(
        ) [NoExtension]
        NoImplementation(
        ) [NoImplementation]
        ClassVarDeclarationList(
          NoClassVarDeclaration(
          ) [NoClassVarDeclaration]
          ClassVarDeclNode(
            ClassVarDeclType(
              TypeNode(
               char
              ) [TypeNode]
            ) [ClassVarDeclType]
            SingleClassVariable(
              VariableNoBracket(
               a
              ) [VariableNoBracket]
            ) [SingleClassVariable]
          ) [ClassVarDeclNode]
        ) [ClassVarDeclarationList]
        ClassMethodDeclarations(
          NoClassMethodDecl(
          ) [NoClassMethodDecl]
          MethodDecl(
            MethodTypeName(
              NoVoidType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [NoVoidType]
             sqr
            ) [MethodTypeName]
            FormalParams(
              SingleFormalParamDecl(
                FormalParamDeclarationNoBrackets(
                  TypeNode(
                   int
                  ) [TypeNode]
                 x
                ) [FormalParamDeclarationNoBrackets]
              ) [SingleFormalParamDecl]
            ) [FormalParams]
            NoVarDeclaration(
            ) [NoVarDeclaration]
            MethodLBRACE(
            ) [MethodLBRACE]
            Statements(
              NoStatement(
              ) [NoStatement]
              ReturnStatementExpr(
                SingleExpression(
                  TermNode(
                    TermFactor(
                      DesignatorEmpty(
                        DesignatorNode(
                          SingleIdentExpr(
                           x
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                      ) [DesignatorEmpty]
                    ) [TermFactor]
                    MulopMul(
                    ) [MulopMul]
                    DesignatorEmpty(
                      DesignatorNode(
                        SingleIdentExpr(
                         x
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                    ) [DesignatorEmpty]
                  ) [TermNode]
                ) [SingleExpression]
              ) [ReturnStatementExpr]
            ) [Statements]
          ) [MethodDecl]
        ) [ClassMethodDeclarations]
      ) [ClassDeclarationWithMethods]
    ) [ClassDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          MethodDeclarations(
            MethodDeclarations(
              NoMethodDecl(
              ) [NoMethodDecl]
              MethodDecl(
                MethodTypeName(
                  VoidType(
                  ) [VoidType]
                 f1
                ) [MethodTypeName]
                FormalParams(
                  FormalParamDecls(
                    FormalParamDecls(
                      FormalParamDecls(
                        SingleFormalParamDecl(
                          FormalParamDeclarationNoBrackets(
                            TypeNode(
                             char
                            ) [TypeNode]
                           ch1
                          ) [FormalParamDeclarationNoBrackets]
                        ) [SingleFormalParamDecl]
                        FormalParamDeclarationNoBrackets(
                          TypeNode(
                           int
                          ) [TypeNode]
                         a1
                        ) [FormalParamDeclarationNoBrackets]
                      ) [FormalParamDecls]
                      FormalParamDeclarationNoBrackets(
                        TypeNode(
                         int
                        ) [TypeNode]
                       arg1
                      ) [FormalParamDeclarationNoBrackets]
                    ) [FormalParamDecls]
                    FormalParamDeclarationNoBrackets(
                      TypeNode(
                       bool
                      ) [TypeNode]
                     b1
                    ) [FormalParamDeclarationNoBrackets]
                  ) [FormalParamDecls]
                ) [FormalParams]
                VarDeclarationList(
                  VarDeclarationList(
                    VarDeclarationList(
                      NoVarDeclaration(
                      ) [NoVarDeclaration]
                      VarDeclNode(
                        VarDeclType(
                          TypeNode(
                           int
                          ) [TypeNode]
                        ) [VarDeclType]
                        SingleVariable(
                          VariableNoBracket(
                           x
                          ) [VariableNoBracket]
                        ) [SingleVariable]
                      ) [VarDeclNode]
                    ) [VarDeclarationList]
                    VarDeclNode(
                      VarDeclType(
                        TypeNode(
                         bool
                        ) [TypeNode]
                      ) [VarDeclType]
                      SingleVariable(
                        VariableNoBracket(
                         c
                        ) [VariableNoBracket]
                      ) [SingleVariable]
                    ) [VarDeclNode]
                  ) [VarDeclarationList]
                  VarDeclNode(
                    VarDeclType(
                      TypeNode(
                       Num
                      ) [TypeNode]
                    ) [VarDeclType]
                    Variables(
                      SingleVariable(
                        VariableNoBracket(
                         broj
                        ) [VariableNoBracket]
                      ) [SingleVariable]
                      VariableNoBracket(
                       broj2
                      ) [VariableNoBracket]
                    ) [Variables]
                  ) [VarDeclNode]
                ) [VarDeclarationList]
                MethodLBRACE(
                ) [MethodLBRACE]
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              NoStatement(
                              ) [NoStatement]
                              DesignatorStatementOnly(
                                DesignatorStatementAssignop(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     x
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                  Assignop(
                                  ) [Assignop]
                                  SingleExpression(
                                    TermFactor(
                                      DesignatorEmpty(
                                        DesignatorNode(
                                          Idents(
                                            SingleIdentExpr(
                                             Num
                                            ) [SingleIdentExpr]
                                           ZERO
                                          ) [Idents]
                                        ) [DesignatorNode]
                                      ) [DesignatorEmpty]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [DesignatorStatementAssignop]
                              ) [DesignatorStatementOnly]
                            ) [Statements]
                            DesignatorStatementOnly(
                              DesignatorStatementAssignop(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   broj
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                                Assignop(
                                ) [Assignop]
                                SingleExpression(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        Idents(
                                          SingleIdentExpr(
                                           Num
                                          ) [SingleIdentExpr]
                                         ZERO
                                        ) [Idents]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [DesignatorStatementAssignop]
                            ) [DesignatorStatementOnly]
                          ) [Statements]
                          DesignatorStatementOnly(
                            DesignatorStatementAssignop(
                              DesignatorNode(
                                SingleIdentExpr(
                                 broj2
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                              Assignop(
                              ) [Assignop]
                              SingleExpression(
                                TermFactor(
                                  ConstantNumber(
                                   10
                                  ) [ConstantNumber]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [DesignatorStatementAssignop]
                          ) [DesignatorStatementOnly]
                        ) [Statements]
                        DesignatorStatementOnly(
                          DesignatorStatementAssignop(
                            DesignatorNode(
                              SingleIdentExpr(
                               x
                              ) [SingleIdentExpr]
                            ) [DesignatorNode]
                            Assignop(
                            ) [Assignop]
                            ExpressionNode(
                              SingleExpression(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      SingleIdentExpr(
                                       a
                                      ) [SingleIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                              AddopPlus(
                              ) [AddopPlus]
                              TermFactor(
                                ConstantNumber(
                                 1
                                ) [ConstantNumber]
                              ) [TermFactor]
                            ) [ExpressionNode]
                          ) [DesignatorStatementAssignop]
                        ) [DesignatorStatementOnly]
                      ) [Statements]
                      DesignatorStatementOnly(
                        DesignatorStatementAssignop(
                          DesignatorNode(
                            SingleIdentExpr(
                             c
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                          Assignop(
                          ) [Assignop]
                          SingleExpression(
                            TermFactor(
                              ConstantBoolean(
                               0
                              ) [ConstantBoolean]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementOnly]
                    ) [Statements]
                    DesignatorStatementOnly(
                      DesignatorStatementAssignop(
                        DesignatorNode(
                          SingleIdentExpr(
                           bo
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                        Assignop(
                        ) [Assignop]
                        SingleExpression(
                          TermFactor(
                            ConstantBoolean(
                             1
                            ) [ConstantBoolean]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementOnly]
                  ) [Statements]
                  DesignatorStatementOnly(
                    DesignatorStatementAssignop(
                      DesignatorNode(
                        SingleIdentExpr(
                         ch1
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                      Assignop(
                      ) [Assignop]
                      SingleExpression(
                        TermFactor(
                          ConstantCharacter(
                           1
                          ) [ConstantCharacter]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementOnly]
                ) [Statements]
              ) [MethodDecl]
            ) [MethodDeclarations]
            MethodDecl(
              MethodTypeName(
                NoVoidType(
                  TypeNode(
                   int
                  ) [TypeNode]
                ) [NoVoidType]
               f2
              ) [MethodTypeName]
              FormalParams(
                FormalParamDecls(
                  FormalParamDecls(
                    SingleFormalParamDecl(
                      FormalParamDeclarationNoBrackets(
                        TypeNode(
                         char
                        ) [TypeNode]
                       ch2
                      ) [FormalParamDeclarationNoBrackets]
                    ) [SingleFormalParamDecl]
                    FormalParamDeclarationNoBrackets(
                      TypeNode(
                       int
                      ) [TypeNode]
                     a
                    ) [FormalParamDeclarationNoBrackets]
                  ) [FormalParamDecls]
                  FormalParamDeclarationNoBrackets(
                    TypeNode(
                     int
                    ) [TypeNode]
                   arg
                  ) [FormalParamDeclarationNoBrackets]
                ) [FormalParamDecls]
              ) [FormalParams]
              VarDeclarationList(
                VarDeclarationList(
                  VarDeclarationList(
                    NoVarDeclaration(
                    ) [NoVarDeclaration]
                    VarDeclNode(
                      VarDeclType(
                        TypeNode(
                         int
                        ) [TypeNode]
                      ) [VarDeclType]
                      SingleVariable(
                        VariableNoBracket(
                         ff
                        ) [VariableNoBracket]
                      ) [SingleVariable]
                    ) [VarDeclNode]
                  ) [VarDeclarationList]
                  VarDeclNode(
                    VarDeclType(
                      TypeNode(
                       int
                      ) [TypeNode]
                    ) [VarDeclType]
                    SingleVariable(
                      VariableNoBracket(
                       i
                      ) [VariableNoBracket]
                    ) [SingleVariable]
                  ) [VarDeclNode]
                ) [VarDeclarationList]
                VarDeclNode(
                  VarDeclType(
                    TypeNode(
                     Num
                    ) [TypeNode]
                  ) [VarDeclType]
                  SingleVariable(
                    VariableNoBracket(
                     broj
                    ) [VariableNoBracket]
                  ) [SingleVariable]
                ) [VarDeclNode]
              ) [VarDeclarationList]
              MethodLBRACE(
              ) [MethodLBRACE]
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              NoStatement(
                              ) [NoStatement]
                              DesignatorStatementOnly(
                                DesignatorStatementActPars(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     f1
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                  ActParsNode(
                                    ActualParametres(
                                      ActualParametres(
                                        ActualParametres(
                                          SingleActualParam(
                                            SingleExpression(
                                              TermFactor(
                                                DesignatorEmpty(
                                                  DesignatorNode(
                                                    SingleIdentExpr(
                                                     ch2
                                                    ) [SingleIdentExpr]
                                                  ) [DesignatorNode]
                                                ) [DesignatorEmpty]
                                              ) [TermFactor]
                                            ) [SingleExpression]
                                          ) [SingleActualParam]
                                          SingleExpression(
                                            TermFactor(
                                              DesignatorEmpty(
                                                DesignatorNode(
                                                  SingleIdentExpr(
                                                   b
                                                  ) [SingleIdentExpr]
                                                ) [DesignatorNode]
                                              ) [DesignatorEmpty]
                                            ) [TermFactor]
                                          ) [SingleExpression]
                                        ) [ActualParametres]
                                        SingleExpression(
                                          TermFactor(
                                            DesignatorEmpty(
                                              DesignatorNode(
                                                SingleIdentExpr(
                                                 broj
                                                ) [SingleIdentExpr]
                                              ) [DesignatorNode]
                                            ) [DesignatorEmpty]
                                          ) [TermFactor]
                                        ) [SingleExpression]
                                      ) [ActualParametres]
                                      SingleExpression(
                                        TermFactor(
                                          DesignatorEmpty(
                                            DesignatorNode(
                                              SingleIdentExpr(
                                               bo
                                              ) [SingleIdentExpr]
                                            ) [DesignatorNode]
                                          ) [DesignatorEmpty]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                    ) [ActualParametres]
                                  ) [ActParsNode]
                                ) [DesignatorStatementActPars]
                              ) [DesignatorStatementOnly]
                            ) [Statements]
                            DesignatorStatementOnly(
                              DesignatorStatementAssignop(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   niz
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                                Assignop(
                                ) [Assignop]
                                SingleExpression(
                                  TermFactor(
                                    NewArray(
                                      NewArrayType(
                                        TypeNode(
                                         int
                                        ) [TypeNode]
                                      ) [NewArrayType]
                                      SingleExpression(
                                        TermFactor(
                                          ConstantNumber(
                                           20
                                          ) [ConstantNumber]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                    ) [NewArray]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [DesignatorStatementAssignop]
                            ) [DesignatorStatementOnly]
                          ) [Statements]
                          DesignatorStatementOnly(
                            DesignatorStatementAssignop(
                              DesignatorNode(
                                SingleIdentExpr(
                                 ff
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                              Assignop(
                              ) [Assignop]
                              SingleExpression(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      Exprs(
                                        IdentExprListArray(
                                          SingleIdentExpr(
                                           niz
                                          ) [SingleIdentExpr]
                                        ) [IdentExprListArray]
                                        SingleExpression(
                                          TermFactor(
                                            ConstantNumber(
                                             1
                                            ) [ConstantNumber]
                                          ) [TermFactor]
                                        ) [SingleExpression]
                                      ) [Exprs]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [DesignatorStatementAssignop]
                          ) [DesignatorStatementOnly]
                        ) [Statements]
                        DesignatorStatementOnly(
                          DesignatorStatementAssignop(
                            DesignatorNode(
                              Exprs(
                                IdentExprListArray(
                                  SingleIdentExpr(
                                   niz
                                  ) [SingleIdentExpr]
                                ) [IdentExprListArray]
                                ExpressionNode(
                                  SingleExpressionMinus(
                                    TermFactor(
                                      DesignatorEmpty(
                                        DesignatorNode(
                                          Exprs(
                                            IdentExprListArray(
                                              SingleIdentExpr(
                                               niz
                                              ) [SingleIdentExpr]
                                            ) [IdentExprListArray]
                                            SingleExpression(
                                              TermFactor(
                                                DesignatorEmpty(
                                                  DesignatorNode(
                                                    Exprs(
                                                      IdentExprListArray(
                                                        SingleIdentExpr(
                                                         niz
                                                        ) [SingleIdentExpr]
                                                      ) [IdentExprListArray]
                                                      SingleExpression(
                                                        TermFactor(
                                                          DesignatorEmpty(
                                                            DesignatorNode(
                                                              SingleIdentExpr(
                                                               broj
                                                              ) [SingleIdentExpr]
                                                            ) [DesignatorNode]
                                                          ) [DesignatorEmpty]
                                                        ) [TermFactor]
                                                      ) [SingleExpression]
                                                    ) [Exprs]
                                                  ) [DesignatorNode]
                                                ) [DesignatorEmpty]
                                              ) [TermFactor]
                                            ) [SingleExpression]
                                          ) [Exprs]
                                        ) [DesignatorNode]
                                      ) [DesignatorEmpty]
                                    ) [TermFactor]
                                  ) [SingleExpressionMinus]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermNode(
                                    TermFactor(
                                      ConstantNumber(
                                       5
                                      ) [ConstantNumber]
                                    ) [TermFactor]
                                    MulopMul(
                                    ) [MulopMul]
                                    ConstantNumber(
                                     9
                                    ) [ConstantNumber]
                                  ) [TermNode]
                                ) [ExpressionNode]
                              ) [Exprs]
                            ) [DesignatorNode]
                            Assignop(
                            ) [Assignop]
                            ExpressionNode(
                              SingleExpression(
                                TermNode(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        Idents(
                                          SingleIdentExpr(
                                           Num
                                          ) [SingleIdentExpr]
                                         ZERO
                                        ) [Idents]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                  MulopMul(
                                  ) [MulopMul]
                                  ConstantNumber(
                                   2
                                  ) [ConstantNumber]
                                ) [TermNode]
                              ) [SingleExpression]
                              AddopMinus(
                              ) [AddopMinus]
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     broj
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [ExpressionNode]
                          ) [DesignatorStatementAssignop]
                        ) [DesignatorStatementOnly]
                      ) [Statements]
                      DesignatorStatementOnly(
                        DesignatorStatementAssignop(
                          DesignatorNode(
                            SingleIdentExpr(
                             ff
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                          Assignop(
                          ) [Assignop]
                          SingleExpression(
                            TermFactor(
                              ConstantNumber(
                               0
                              ) [ConstantNumber]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementOnly]
                    ) [Statements]
                    DesignatorStatementOnly(
                      DesignatorStatementAssignop(
                        DesignatorNode(
                          SingleIdentExpr(
                           i
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                        Assignop(
                        ) [Assignop]
                        SingleExpression(
                          TermFactor(
                            ConstantNumber(
                             10
                            ) [ConstantNumber]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementOnly]
                  ) [Statements]
                  ForStatement(
                    ForHeader(
                      ForStatement1(
                        DesignatorStatementNotNull(
                          DesignatorStatementAssignop(
                            DesignatorNode(
                              SingleIdentExpr(
                               i
                              ) [SingleIdentExpr]
                            ) [DesignatorNode]
                            Assignop(
                            ) [Assignop]
                            SingleExpression(
                              TermFactor(
                                ConstantNumber(
                                 0
                                ) [ConstantNumber]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [DesignatorStatementAssignop]
                        ) [DesignatorStatementNotNull]
                      ) [ForStatement1]
                      ForCondition(
                        ConditionNotNull(
                          ConditionNode(
                            SingleConditionTerm(
                              ConditionTermNode(
                                SingleConditionFact(
                                  CondFactExpressionRelopExpression(
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             niz
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                    RelopNotEqual(
                                    ) [RelopNotEqual]
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             niz
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [CondFactExpressionRelopExpression]
                                ) [SingleConditionFact]
                              ) [ConditionTermNode]
                            ) [SingleConditionTerm]
                          ) [ConditionNode]
                        ) [ConditionNotNull]
                      ) [ForCondition]
                      ForStatement2(
                        DesignatorStatementNotNull(
                          DesignatorStatementPlusPlus(
                            DesignatorNode(
                              SingleIdentExpr(
                               i
                              ) [SingleIdentExpr]
                            ) [DesignatorNode]
                          ) [DesignatorStatementPlusPlus]
                        ) [DesignatorStatementNotNull]
                      ) [ForStatement2]
                    ) [ForHeader]
                    InBraceStatement(
                      Statements(
                        NoStatement(
                        ) [NoStatement]
                        BreakStatement(
                          SemiDerived1(
                          ) [SemiDerived1]
                        ) [BreakStatement]
                      ) [Statements]
                    ) [InBraceStatement]
                  ) [ForStatement]
                ) [Statements]
                ReturnStatementExpr(
                  SingleExpression(
                    TermFactor(
                      DesignatorEmpty(
                        DesignatorNode(
                          SingleIdentExpr(
                           ff
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                      ) [DesignatorEmpty]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [ReturnStatementExpr]
              ) [Statements]
            ) [MethodDecl]
          ) [MethodDeclarations]
          MethodDecl(
            MethodTypeName(
              NoVoidType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [NoVoidType]
             fa
            ) [MethodTypeName]
            FormalParams(
              FormalParamDecls(
                FormalParamDecls(
                  SingleFormalParamDecl(
                    FormalParamDeclarationBrackets(
                      TypeNode(
                       char
                      ) [TypeNode]
                     arr
                    ) [FormalParamDeclarationBrackets]
                  ) [SingleFormalParamDecl]
                  FormalParamDeclarationBrackets(
                    TypeNode(
                     char
                    ) [TypeNode]
                   arr2
                  ) [FormalParamDeclarationBrackets]
                ) [FormalParamDecls]
                FormalParamDeclarationBrackets(
                  TypeNode(
                   bool
                  ) [TypeNode]
                 a
                ) [FormalParamDeclarationBrackets]
              ) [FormalParamDecls]
            ) [FormalParams]
            NoVarDeclaration(
            ) [NoVarDeclaration]
            MethodLBRACE(
            ) [MethodLBRACE]
            Statements(
              NoStatement(
              ) [NoStatement]
              ReturnStatementExpr(
                SingleExpression(
                  TermFactor(
                    ConstantNumber(
                     2
                    ) [ConstantNumber]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [ReturnStatementExpr]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          MethodTypeName(
            NoVoidType(
              TypeNode(
               int
              ) [TypeNode]
            ) [NoVoidType]
           putp
          ) [MethodTypeName]
          FormalParams(
            SingleFormalParamDecl(
              FormalParamDeclarationNoBrackets(
                TypeNode(
                 char
                ) [TypeNode]
               ch
              ) [FormalParamDeclarationNoBrackets]
            ) [SingleFormalParamDecl]
          ) [FormalParams]
          VarDeclarationList(
            NoVarDeclaration(
            ) [NoVarDeclaration]
            VarDeclNode(
              VarDeclType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [VarDeclType]
              SingleVariable(
                VariableNoBracket(
                 x
                ) [VariableNoBracket]
              ) [SingleVariable]
            ) [VarDeclNode]
          ) [VarDeclarationList]
          MethodLBRACE(
          ) [MethodLBRACE]
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStatement(
                  ) [NoStatement]
                  DesignatorStatementOnly(
                    DesignatorStatementAssignop(
                      DesignatorNode(
                        SingleIdentExpr(
                         x
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                      Assignop(
                      ) [Assignop]
                      SingleExpression(
                        TermFactor(
                          ConstantNumber(
                           5
                          ) [ConstantNumber]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementOnly]
                ) [Statements]
                DesignatorStatementOnly(
                  DesignatorStatementAssignop(
                    DesignatorNode(
                      SingleIdentExpr(
                       bo
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                    Assignop(
                    ) [Assignop]
                    SingleExpression(
                      TermFactor(
                        ConstantBoolean(
                         0
                        ) [ConstantBoolean]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementOnly]
              ) [Statements]
              DesignatorStatementOnly(
                DesignatorStatementAssignop(
                  DesignatorNode(
                    SingleIdentExpr(
                     x
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    TermFactor(
                      DesignatorBraceActPars(
                        DesignatorNode(
                          SingleIdentExpr(
                           f2
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                        ActParsNode(
                          ActualParametres(
                            ActualParametres(
                              SingleActualParam(
                                SingleExpression(
                                  TermFactor(
                                    ConstantCharacter(
                                     a
                                    ) [ConstantCharacter]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [SingleActualParam]
                              SingleExpression(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      Idents(
                                        SingleIdentExpr(
                                         Num
                                        ) [SingleIdentExpr]
                                       ZERO
                                      ) [Idents]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [ActualParametres]
                            SingleExpression(
                              TermFactor(
                                ConstantNumber(
                                 3
                                ) [ConstantNumber]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [ActualParametres]
                        ) [ActParsNode]
                      ) [DesignatorBraceActPars]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementOnly]
            ) [Statements]
            ReturnStatementExpr(
              SingleExpression(
                TermFactor(
                  DesignatorEmpty(
                    DesignatorNode(
                      SingleIdentExpr(
                       x
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                  ) [DesignatorEmpty]
                ) [TermFactor]
              ) [SingleExpression]
            ) [ReturnStatementExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          NoVoidType(
            TypeNode(
             char
            ) [TypeNode]
          ) [NoVoidType]
         getp
        ) [MethodTypeName]
        FormalParams(
          SingleFormalParamDecl(
            FormalParamDeclarationNoBrackets(
              TypeNode(
               char
              ) [TypeNode]
             ch
            ) [FormalParamDeclarationNoBrackets]
          ) [SingleFormalParamDecl]
        ) [FormalParams]
        VarDeclarationList(
          NoVarDeclaration(
          ) [NoVarDeclaration]
          VarDeclNode(
            VarDeclType(
              TypeNode(
               int
              ) [TypeNode]
            ) [VarDeclType]
            SingleVariable(
              VariableNoBracket(
               x
              ) [VariableNoBracket]
            ) [SingleVariable]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        MethodLBRACE(
        ) [MethodLBRACE]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStatement(
                  ) [NoStatement]
                  DesignatorStatementOnly(
                    DesignatorStatementAssignop(
                      DesignatorNode(
                        SingleIdentExpr(
                         x
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                      Assignop(
                      ) [Assignop]
                      ExpressionNode(
                        SingleExpressionMinus(
                          TermNode(
                            TermFactor(
                              ConstantNumber(
                               2
                              ) [ConstantNumber]
                            ) [TermFactor]
                            MulopMul(
                            ) [MulopMul]
                            DesignatorEmpty(
                              DesignatorNode(
                                SingleIdentExpr(
                                 a
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermNode]
                        ) [SingleExpressionMinus]
                        AddopPlus(
                        ) [AddopPlus]
                        TermNode(
                          TermFactor(
                            ConstantNumber(
                             5
                            ) [ConstantNumber]
                          ) [TermFactor]
                          MulopMul(
                          ) [MulopMul]
                          ExprParenNode(
                            SingleExpression(
                              TermNode(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      SingleIdentExpr(
                                       x
                                      ) [SingleIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                                MulopDiv(
                                ) [MulopDiv]
                                ConstantNumber(
                                 2
                                ) [ConstantNumber]
                              ) [TermNode]
                            ) [SingleExpression]
                          ) [ExprParenNode]
                        ) [TermNode]
                      ) [ExpressionNode]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementOnly]
                ) [Statements]
                DesignatorStatementOnly(
                  DesignatorStatementAssignop(
                    DesignatorNode(
                      SingleIdentExpr(
                       a
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                    Assignop(
                    ) [Assignop]
                    SingleExpression(
                      TermFactor(
                        ConstantNumber(
                         1
                        ) [ConstantNumber]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementOnly]
              ) [Statements]
              DesignatorStatementOnly(
                DesignatorStatementAssignop(
                  DesignatorNode(
                    SingleIdentExpr(
                     b
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    TermNode(
                      TermFactor(
                        ConstantNumber(
                         1
                        ) [ConstantNumber]
                      ) [TermFactor]
                      MulopMul(
                      ) [MulopMul]
                      DesignatorEmpty(
                        DesignatorNode(
                          SingleIdentExpr(
                           a
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                      ) [DesignatorEmpty]
                    ) [TermNode]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementOnly]
            ) [Statements]
            DesignatorStatementOnly(
              DesignatorStatementAssignop(
                DesignatorNode(
                  SingleIdentExpr(
                   c
                  ) [SingleIdentExpr]
                ) [DesignatorNode]
                Assignop(
                ) [Assignop]
                SingleExpression(
                  TermFactor(
                    ConstantNumber(
                     2
                    ) [ConstantNumber]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementOnly]
          ) [Statements]
          ReturnStatementExpr(
            SingleExpression(
              TermFactor(
                ConstantCharacter(
                 x
                ) [ConstantCharacter]
              ) [TermFactor]
            ) [SingleExpression]
          ) [ReturnStatementExpr]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      VarDeclarationList(
        VarDeclarationList(
          VarDeclarationList(
            VarDeclarationList(
              VarDeclarationList(
                VarDeclarationList(
                  NoVarDeclaration(
                  ) [NoVarDeclaration]
                  VarDeclNode(
                    VarDeclType(
                      TypeNode(
                       int
                      ) [TypeNode]
                    ) [VarDeclType]
                    Variables(
                      SingleVariable(
                        VariableNoBracket(
                         x
                        ) [VariableNoBracket]
                      ) [SingleVariable]
                      VariableNoBracket(
                       i
                      ) [VariableNoBracket]
                    ) [Variables]
                  ) [VarDeclNode]
                ) [VarDeclarationList]
                VarDeclNode(
                  VarDeclType(
                    TypeNode(
                     char
                    ) [TypeNode]
                  ) [VarDeclType]
                  SingleVariable(
                    VariableNoBracket(
                     c
                    ) [VariableNoBracket]
                  ) [SingleVariable]
                ) [VarDeclNode]
              ) [VarDeclarationList]
              VarDeclNode(
                VarDeclType(
                  TypeNode(
                   int
                  ) [TypeNode]
                ) [VarDeclType]
                SingleVariable(
                  VariableNoBracket(
                   val
                  ) [VariableNoBracket]
                ) [SingleVariable]
              ) [VarDeclNode]
            ) [VarDeclarationList]
            VarDeclNode(
              VarDeclType(
                TypeNode(
                 char
                ) [TypeNode]
              ) [VarDeclType]
              SingleVariable(
                VariableBracket(
                 l
                ) [VariableBracket]
              ) [SingleVariable]
            ) [VarDeclNode]
          ) [VarDeclarationList]
          VarDeclNode(
            VarDeclType(
              TypeNode(
               bool
              ) [TypeNode]
            ) [VarDeclType]
            SingleVariable(
              VariableBracket(
               bbb
              ) [VariableBracket]
            ) [SingleVariable]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        VarDeclNode(
          VarDeclType(
            TypeNode(
             Num
            ) [TypeNode]
          ) [VarDeclType]
          Variables(
            SingleVariable(
              VariableNoBracket(
               test1
              ) [VariableNoBracket]
            ) [SingleVariable]
            VariableNoBracket(
             test2
            ) [VariableNoBracket]
          ) [Variables]
        ) [VarDeclNode]
      ) [VarDeclarationList]
      MethodLBRACE(
      ) [MethodLBRACE]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              NoStatement(
                              ) [NoStatement]
                              DesignatorStatementOnly(
                                DesignatorStatementAssignop(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     l
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                  Assignop(
                                  ) [Assignop]
                                  SingleExpression(
                                    TermFactor(
                                      NewArray(
                                        NewArrayType(
                                          TypeNode(
                                           char
                                          ) [TypeNode]
                                        ) [NewArrayType]
                                        SingleExpression(
                                          TermFactor(
                                            ConstantNumber(
                                             2
                                            ) [ConstantNumber]
                                          ) [TermFactor]
                                        ) [SingleExpression]
                                      ) [NewArray]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [DesignatorStatementAssignop]
                              ) [DesignatorStatementOnly]
                            ) [Statements]
                            DesignatorStatementOnly(
                              DesignatorStatementAssignop(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   bbb
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                                Assignop(
                                ) [Assignop]
                                SingleExpression(
                                  TermFactor(
                                    NewArray(
                                      NewArrayType(
                                        TypeNode(
                                         bool
                                        ) [TypeNode]
                                      ) [NewArrayType]
                                      ExpressionNode(
                                        SingleExpressionMinus(
                                          TermNode(
                                            TermFactor(
                                              ConstantNumber(
                                               4
                                              ) [ConstantNumber]
                                            ) [TermFactor]
                                            MulopMul(
                                            ) [MulopMul]
                                            ConstantNumber(
                                             2
                                            ) [ConstantNumber]
                                          ) [TermNode]
                                        ) [SingleExpressionMinus]
                                        AddopPlus(
                                        ) [AddopPlus]
                                        TermFactor(
                                          ConstantNumber(
                                           2
                                          ) [ConstantNumber]
                                        ) [TermFactor]
                                      ) [ExpressionNode]
                                    ) [NewArray]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [DesignatorStatementAssignop]
                            ) [DesignatorStatementOnly]
                          ) [Statements]
                          DesignatorStatementOnly(
                            DesignatorStatementAssignop(
                              DesignatorNode(
                                SingleIdentExpr(
                                 niz
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                              Assignop(
                              ) [Assignop]
                              SingleExpression(
                                TermFactor(
                                  NewArray(
                                    NewArrayType(
                                      TypeNode(
                                       int
                                      ) [TypeNode]
                                    ) [NewArrayType]
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             x
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [NewArray]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [DesignatorStatementAssignop]
                          ) [DesignatorStatementOnly]
                        ) [Statements]
                        DesignatorStatementOnly(
                          DesignatorStatementAssignop(
                            DesignatorNode(
                              SingleIdentExpr(
                               val
                              ) [SingleIdentExpr]
                            ) [DesignatorNode]
                            Assignop(
                            ) [Assignop]
                            SingleExpression(
                              TermFactor(
                                ConstantNumber(
                                 5
                                ) [ConstantNumber]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [DesignatorStatementAssignop]
                        ) [DesignatorStatementOnly]
                      ) [Statements]
                      ForStatement(
                        ForHeader(
                          ForStatement1(
                            DesignatorStatementNotNull(
                              DesignatorStatementAssignop(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   i
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                                Assignop(
                                ) [Assignop]
                                SingleExpression(
                                  TermFactor(
                                    ConstantNumber(
                                     0
                                    ) [ConstantNumber]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [DesignatorStatementAssignop]
                            ) [DesignatorStatementNotNull]
                          ) [ForStatement1]
                          ForCondition(
                            ConditionNotNull(
                              ConditionNode(
                                SingleConditionTerm(
                                  ConditionTermNode(
                                    SingleConditionFact(
                                      CondFactExpressionRelopExpression(
                                        SingleExpression(
                                          TermFactor(
                                            DesignatorEmpty(
                                              DesignatorNode(
                                                SingleIdentExpr(
                                                 i
                                                ) [SingleIdentExpr]
                                              ) [DesignatorNode]
                                            ) [DesignatorEmpty]
                                          ) [TermFactor]
                                        ) [SingleExpression]
                                        RelopLess(
                                        ) [RelopLess]
                                        SingleExpression(
                                          TermFactor(
                                            DesignatorEmpty(
                                              DesignatorNode(
                                                SingleIdentExpr(
                                                 size
                                                ) [SingleIdentExpr]
                                              ) [DesignatorNode]
                                            ) [DesignatorEmpty]
                                          ) [TermFactor]
                                        ) [SingleExpression]
                                      ) [CondFactExpressionRelopExpression]
                                    ) [SingleConditionFact]
                                  ) [ConditionTermNode]
                                ) [SingleConditionTerm]
                              ) [ConditionNode]
                            ) [ConditionNotNull]
                          ) [ForCondition]
                          ForStatement2(
                            DesignatorStatementNotNull(
                              DesignatorStatementPlusPlus(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   i
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                              ) [DesignatorStatementPlusPlus]
                            ) [DesignatorStatementNotNull]
                          ) [ForStatement2]
                        ) [ForHeader]
                        InBraceStatement(
                          Statements(
                            Statements(
                              NoStatement(
                              ) [NoStatement]
                              DesignatorStatementOnly(
                                DesignatorStatementAssignop(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     x
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                  Assignop(
                                  ) [Assignop]
                                  SingleExpression(
                                    TermFactor(
                                      DesignatorBraceActPars(
                                        DesignatorNode(
                                          SingleIdentExpr(
                                           putp
                                          ) [SingleIdentExpr]
                                        ) [DesignatorNode]
                                        ActParsNode(
                                          SingleActualParam(
                                            SingleExpression(
                                              TermFactor(
                                                ConstantCharacter(
                                                 a
                                                ) [ConstantCharacter]
                                              ) [TermFactor]
                                            ) [SingleExpression]
                                          ) [SingleActualParam]
                                        ) [ActParsNode]
                                      ) [DesignatorBraceActPars]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [DesignatorStatementAssignop]
                              ) [DesignatorStatementOnly]
                            ) [Statements]
                            DesignatorStatementOnly(
                              DesignatorStatementActPars(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   putp
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                                ActParsNode(
                                  SingleActualParam(
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             c
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [SingleActualParam]
                                ) [ActParsNode]
                              ) [DesignatorStatementActPars]
                            ) [DesignatorStatementOnly]
                          ) [Statements]
                        ) [InBraceStatement]
                      ) [ForStatement]
                    ) [Statements]
                    DesignatorStatementOnly(
                      DesignatorStatementActPars(
                        DesignatorNode(
                          SingleIdentExpr(
                           f1
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                        ActParsNode(
                          ActualParametres(
                            ActualParametres(
                              ActualParametres(
                                SingleActualParam(
                                  SingleExpression(
                                    TermFactor(
                                      DesignatorEmpty(
                                        DesignatorNode(
                                          SingleIdentExpr(
                                           c
                                          ) [SingleIdentExpr]
                                        ) [DesignatorNode]
                                      ) [DesignatorEmpty]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [SingleActualParam]
                                SingleExpression(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        Idents(
                                          SingleIdentExpr(
                                           Num
                                          ) [SingleIdentExpr]
                                         ZERO
                                        ) [Idents]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [ActualParametres]
                              SingleExpression(
                                TermNode(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        SingleIdentExpr(
                                         size
                                        ) [SingleIdentExpr]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                  MulopDiv(
                                  ) [MulopDiv]
                                  ConstantNumber(
                                   2
                                  ) [ConstantNumber]
                                ) [TermNode]
                              ) [SingleExpression]
                            ) [ActualParametres]
                            SingleExpression(
                              TermFactor(
                                ConstantBoolean(
                                 0
                                ) [ConstantBoolean]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [ActualParametres]
                        ) [ActParsNode]
                      ) [DesignatorStatementActPars]
                    ) [DesignatorStatementOnly]
                  ) [Statements]
                  PrintStatement(
                    SingleExpression(
                      TermFactor(
                        DesignatorEmpty(
                          DesignatorNode(
                            SingleIdentExpr(
                             d
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                        ) [DesignatorEmpty]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [PrintStatement]
                ) [Statements]
                ReadStatement(
                  DesignatorNode(
                    SingleIdentExpr(
                     x
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                ) [ReadStatement]
              ) [Statements]
              ForStatement(
                ForHeader(
                  ForStatement1(
                    DesignatorStatementNotNull(
                      DesignatorStatementAssignop(
                        DesignatorNode(
                          SingleIdentExpr(
                           i
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                        Assignop(
                        ) [Assignop]
                        ExpressionNode(
                          SingleExpression(
                            TermFactor(
                              ConstantNumber(
                               1
                              ) [ConstantNumber]
                            ) [TermFactor]
                          ) [SingleExpression]
                          AddopPlus(
                          ) [AddopPlus]
                          TermFactor(
                            DesignatorEmpty(
                              DesignatorNode(
                                SingleIdentExpr(
                                 test1
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermFactor]
                        ) [ExpressionNode]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementNotNull]
                  ) [ForStatement1]
                  ForCondition(
                    ConditionNotNull(
                      ConditionNode(
                        SingleConditionTerm(
                          ConditionTermNode(
                            SingleConditionFact(
                              CondFactExpressionRelopExpression(
                                SingleExpression(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        SingleIdentExpr(
                                         x
                                        ) [SingleIdentExpr]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                                RelopGreater(
                                ) [RelopGreater]
                                SingleExpression(
                                  TermFactor(
                                    ConstantNumber(
                                     1
                                    ) [ConstantNumber]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [CondFactExpressionRelopExpression]
                            ) [SingleConditionFact]
                          ) [ConditionTermNode]
                        ) [SingleConditionTerm]
                      ) [ConditionNode]
                    ) [ConditionNotNull]
                  ) [ForCondition]
                  ForStatement2(
                    DesignatorStatementNull(
                    ) [DesignatorStatementNull]
                  ) [ForStatement2]
                ) [ForHeader]
                InBraceStatement(
                  Statements(
                    Statements(
                      NoStatement(
                      ) [NoStatement]
                      IfElseStatement(
                        IfConditionNode(
                          ConditionNode(
                            SingleConditionTerm(
                              ConditionTermNode(
                                ConditionFacts(
                                  SingleConditionFact(
                                    CondFactExpressionRelopExpression(
                                      SingleExpression(
                                        TermFactor(
                                          ConstantNumber(
                                           0
                                          ) [ConstantNumber]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                      RelopLessEqual(
                                      ) [RelopLessEqual]
                                      SingleExpression(
                                        TermFactor(
                                          DesignatorEmpty(
                                            DesignatorNode(
                                              SingleIdentExpr(
                                               x
                                              ) [SingleIdentExpr]
                                            ) [DesignatorNode]
                                          ) [DesignatorEmpty]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                    ) [CondFactExpressionRelopExpression]
                                  ) [SingleConditionFact]
                                  CondFactExpressionRelopExpression(
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             x
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                    RelopLess(
                                    ) [RelopLess]
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             size
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [CondFactExpressionRelopExpression]
                                ) [ConditionFacts]
                              ) [ConditionTermNode]
                            ) [SingleConditionTerm]
                          ) [ConditionNode]
                        ) [IfConditionNode]
                        IfStatementThen(
                          InBraceStatement(
                            Statements(
                              NoStatement(
                              ) [NoStatement]
                              DesignatorStatementOnly(
                                DesignatorStatementActPars(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     putp
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                  ActParsNode(
                                    SingleActualParam(
                                      SingleExpression(
                                        TermFactor(
                                          DesignatorBraceActPars(
                                            DesignatorNode(
                                              SingleIdentExpr(
                                               getp
                                              ) [SingleIdentExpr]
                                            ) [DesignatorNode]
                                            ActParsNode(
                                              SingleActualParam(
                                                SingleExpression(
                                                  TermFactor(
                                                    DesignatorEmpty(
                                                      DesignatorNode(
                                                        SingleIdentExpr(
                                                         c
                                                        ) [SingleIdentExpr]
                                                      ) [DesignatorNode]
                                                    ) [DesignatorEmpty]
                                                  ) [TermFactor]
                                                ) [SingleExpression]
                                              ) [SingleActualParam]
                                            ) [ActParsNode]
                                          ) [DesignatorBraceActPars]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                    ) [SingleActualParam]
                                  ) [ActParsNode]
                                ) [DesignatorStatementActPars]
                              ) [DesignatorStatementOnly]
                            ) [Statements]
                          ) [InBraceStatement]
                        ) [IfStatementThen]
                        IfStatementElse(
                          IfStatement(
                            IfConditionNode(
                              ConditionNode(
                                SingleConditionTerm(
                                  ConditionTermNode(
                                    ConditionFacts(
                                      SingleConditionFact(
                                        CondFactExpressionRelopExpression(
                                          SingleExpressionMinus(
                                            TermFactor(
                                              DesignatorEmpty(
                                                DesignatorNode(
                                                  SingleIdentExpr(
                                                   size
                                                  ) [SingleIdentExpr]
                                                ) [DesignatorNode]
                                              ) [DesignatorEmpty]
                                            ) [TermFactor]
                                          ) [SingleExpressionMinus]
                                          RelopLess(
                                          ) [RelopLess]
                                          SingleExpression(
                                            TermFactor(
                                              DesignatorEmpty(
                                                DesignatorNode(
                                                  SingleIdentExpr(
                                                   x
                                                  ) [SingleIdentExpr]
                                                ) [DesignatorNode]
                                              ) [DesignatorEmpty]
                                            ) [TermFactor]
                                          ) [SingleExpression]
                                        ) [CondFactExpressionRelopExpression]
                                      ) [SingleConditionFact]
                                      CondFactExpressionRelopExpression(
                                        SingleExpression(
                                          TermFactor(
                                            DesignatorEmpty(
                                              DesignatorNode(
                                                SingleIdentExpr(
                                                 x
                                                ) [SingleIdentExpr]
                                              ) [DesignatorNode]
                                            ) [DesignatorEmpty]
                                          ) [TermFactor]
                                        ) [SingleExpression]
                                        RelopLess(
                                        ) [RelopLess]
                                        SingleExpression(
                                          TermFactor(
                                            ConstantNumber(
                                             0
                                            ) [ConstantNumber]
                                          ) [TermFactor]
                                        ) [SingleExpression]
                                      ) [CondFactExpressionRelopExpression]
                                    ) [ConditionFacts]
                                  ) [ConditionTermNode]
                                ) [SingleConditionTerm]
                              ) [ConditionNode]
                            ) [IfConditionNode]
                            IfStatementThen(
                              InBraceStatement(
                                Statements(
                                  NoStatement(
                                  ) [NoStatement]
                                  DesignatorStatementOnly(
                                    DesignatorStatementActPars(
                                      DesignatorNode(
                                        SingleIdentExpr(
                                         putp
                                        ) [SingleIdentExpr]
                                      ) [DesignatorNode]
                                      ActParsNode(
                                        SingleActualParam(
                                          SingleExpression(
                                            TermFactor(
                                              DesignatorBraceActPars(
                                                DesignatorNode(
                                                  SingleIdentExpr(
                                                   getp
                                                  ) [SingleIdentExpr]
                                                ) [DesignatorNode]
                                                ActParsNode(
                                                  SingleActualParam(
                                                    SingleExpression(
                                                      TermFactor(
                                                        ConstantCharacter(
                                                         #
                                                        ) [ConstantCharacter]
                                                      ) [TermFactor]
                                                    ) [SingleExpression]
                                                  ) [SingleActualParam]
                                                ) [ActParsNode]
                                              ) [DesignatorBraceActPars]
                                            ) [TermFactor]
                                          ) [SingleExpression]
                                        ) [SingleActualParam]
                                      ) [ActParsNode]
                                    ) [DesignatorStatementActPars]
                                  ) [DesignatorStatementOnly]
                                ) [Statements]
                              ) [InBraceStatement]
                            ) [IfStatementThen]
                          ) [IfStatement]
                        ) [IfStatementElse]
                      ) [IfElseStatement]
                    ) [Statements]
                    ReadStatement(
                      DesignatorNode(
                        SingleIdentExpr(
                         x
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                    ) [ReadStatement]
                  ) [Statements]
                ) [InBraceStatement]
              ) [ForStatement]
            ) [Statements]
            DesignatorStatementOnly(
              DesignatorStatementAssignop(
                DesignatorNode(
                  SingleIdentExpr(
                   xx
                  ) [SingleIdentExpr]
                ) [DesignatorNode]
                Assignop(
                ) [Assignop]
                SingleExpression(
                  TermFactor(
                    DesignatorEmpty(
                      DesignatorNode(
                        Exprs(
                          IdentExprListArray(
                            SingleIdentExpr(
                             aa
                            ) [SingleIdentExpr]
                          ) [IdentExprListArray]
                          SingleExpression(
                            TermFactor(
                              DesignatorEmpty(
                                DesignatorNode(
                                  Exprs(
                                    IdentExprListArray(
                                      SingleIdentExpr(
                                       aa
                                      ) [SingleIdentExpr]
                                    ) [IdentExprListArray]
                                    ExpressionNode(
                                      SingleExpression(
                                        TermFactor(
                                          ConstantNumber(
                                           2
                                          ) [ConstantNumber]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                      AddopPlus(
                                      ) [AddopPlus]
                                      TermFactor(
                                        ConstantNumber(
                                         3
                                        ) [ConstantNumber]
                                      ) [TermFactor]
                                    ) [ExpressionNode]
                                  ) [Exprs]
                                ) [DesignatorNode]
                              ) [DesignatorEmpty]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [Exprs]
                      ) [DesignatorNode]
                    ) [DesignatorEmpty]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementOnly]
          ) [Statements]
          DesignatorStatementOnly(
            DesignatorStatementActPars(
              DesignatorNode(
                SingleIdentExpr(
                 fa
                ) [SingleIdentExpr]
              ) [DesignatorNode]
              ActParsNode(
                ActualParametres(
                  ActualParametres(
                    SingleActualParam(
                      SingleExpression(
                        TermFactor(
                          DesignatorEmpty(
                            DesignatorNode(
                              SingleIdentExpr(
                               l
                              ) [SingleIdentExpr]
                            ) [DesignatorNode]
                          ) [DesignatorEmpty]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [SingleActualParam]
                    SingleExpression(
                      TermFactor(
                        DesignatorEmpty(
                          DesignatorNode(
                            SingleIdentExpr(
                             l
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                        ) [DesignatorEmpty]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [ActualParametres]
                  SingleExpression(
                    TermFactor(
                      DesignatorEmpty(
                        DesignatorNode(
                          SingleIdentExpr(
                           null
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                      ) [DesignatorEmpty]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [ActualParametres]
              ) [ActParsNode]
            ) [DesignatorStatementActPars]
          ) [DesignatorStatementOnly]
        ) [Statements]
        ReturnStatementVoid(
        ) [ReturnStatementVoid]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  03:50:20,560 - ===================================
INFO  03:50:20,564 - Definisana konstanta (10)size na liniji 4
INFO  03:50:20,564 - Definisana konstanta (1)const1 na liniji 4
INFO  03:50:20,564 - Definisana konstanta (2)const2 na liniji 4
INFO  03:50:20,564 - Definisana konstanta (1)b1 na liniji 5
INFO  03:50:20,564 - Definisana konstanta (0)b2 na liniji 5
INFO  03:50:20,564 - Definisana konstanta (97)x na liniji 6
INFO  03:50:20,564 - Definisana konstanta (1)bb na liniji 7
INFO  03:50:20,564 - Deklarisana array promenljiva niz na liniji 9
INFO  03:50:20,564 - Deklarisana single promenljiva d na liniji 9
INFO  03:50:20,564 - Deklarisan novi enum tip: Num na liniji 11
INFO  03:50:20,564 - Definisana enum konstanta ZERO sa vrednoscu 0 na liniji 11
INFO  03:50:20,564 - Definisana enum konstanta ONE sa vrednoscu 1 na liniji 11
INFO  03:50:20,564 - Definisana enum konstanta TEN sa vrednoscu 10 na liniji 11
INFO  03:50:20,564 - Definisana enum konstanta ELEVEN sa vrednoscu 11 na liniji 11
INFO  03:50:20,564 - Deklarisana single promenljiva a na liniji 13
INFO  03:50:20,564 - Deklarisana single promenljiva b na liniji 13
INFO  03:50:20,564 - Deklarisana single promenljiva c na liniji 13
INFO  03:50:20,564 - Deklarisana single promenljiva bo na liniji 15
INFO  03:50:20,564 - Definisana konstanta (0)b_const na liniji 16
INFO  03:50:20,564 - Deklarisana single promenljiva xx na liniji 18
INFO  03:50:20,564 - Deklarisana array promenljiva aa na liniji 18
INFO  03:50:20,564 - Deklarisano single polje a na liniji 21
INFO  03:50:20,565 - Deklarisana metoda sqr u okviru klase Klasa na liniji 23
INFO  03:50:20,565 - Deklarisan single argument x na liniji 23
INFO  03:50:20,565 - Pronadjen poziv promenljive [Var x: int, 0, 1 ] na liniji 26
INFO  03:50:20,565 - Pronadjen poziv promenljive [Var x: int, 0, 1 ] na liniji 26
INFO  03:50:20,565 - Deklarisana nova klasa: Klasa na liniji 20
INFO  03:50:20,565 - Definisana funkcija f1 na liniji 33
INFO  03:50:20,565 - Deklarisan single argument ch1 na liniji 33
INFO  03:50:20,565 - Deklarisan single argument a1 na liniji 33
INFO  03:50:20,565 - Deklarisan single argument arg1 na liniji 33
INFO  03:50:20,565 - Deklarisan single argument b1 na liniji 33
INFO  03:50:20,565 - Deklarisana single promenljiva x na liniji 34
INFO  03:50:20,565 - Deklarisana single promenljiva c na liniji 35
INFO  03:50:20,565 - Deklarisana single promenljiva broj na liniji 36
INFO  03:50:20,565 - Deklarisana single promenljiva broj2 na liniji 36
INFO  03:50:20,565 - Izabrano polje : .ZERO
INFO  03:50:20,566 - Pronadjen poziv promenljive [Con ZERO: int, 0, 1 ] na liniji 38
INFO  03:50:20,566 - Dodela vrednosti za x na liniji 38
INFO  03:50:20,566 - Izabrano polje : .ZERO
INFO  03:50:20,566 - Pronadjen poziv promenljive [Con ZERO: int, 0, 1 ] na liniji 39
INFO  03:50:20,566 - Dodela vrednosti za broj na liniji 39
INFO  03:50:20,566 - Dodela vrednosti za broj2 na liniji 40
INFO  03:50:20,566 - Pronadjen poziv promenljive [Var a: int, 2, 0 ] na liniji 41
INFO  03:50:20,566 - Dodela vrednosti za x na liniji 41
INFO  03:50:20,566 - Dodela vrednosti za c na liniji 42
INFO  03:50:20,566 - Dodela vrednosti za bo na liniji 43
INFO  03:50:20,566 - Dodela vrednosti za ch1 na liniji 45
INFO  03:50:20,566 - Definisana funkcija f2 na liniji 48
INFO  03:50:20,566 - Deklarisan single argument ch2 na liniji 48
INFO  03:50:20,566 - Deklarisan single argument a na liniji 48
INFO  03:50:20,566 - Deklarisan single argument arg na liniji 48
INFO  03:50:20,566 - Deklarisana single promenljiva ff na liniji 49
INFO  03:50:20,566 - Deklarisana single promenljiva i na liniji 50
INFO  03:50:20,566 - Deklarisana single promenljiva broj na liniji 51
INFO  03:50:20,566 - Pronadjen poziv promenljive [Var ch2: char, 0, 1 ] na liniji 54
INFO  03:50:20,566 - Pronadjen poziv promenljive [Var b: int, 3, 0 ] na liniji 54
INFO  03:50:20,566 - Pronadjen poziv promenljive [Var broj: int, 5, 1 ] na liniji 54
INFO  03:50:20,566 - Pronadjen poziv promenljive [Var bo: bool, 5, 0 ] na liniji 54
INFO  03:50:20,566 - Pronadjen poziv funkcije f1 sa 4/8 argumenta na liniji 54
INFO  03:50:20,566 - Dodela vrednosti za niz na liniji 55
INFO  03:50:20,566 - Pronadjen poziv promenljive [$elem: int, -1, -1 ] na liniji 56
INFO  03:50:20,566 - Dodela vrednosti za ff na liniji 56
INFO  03:50:20,566 - Pronadjen poziv promenljive [Var broj: int, 5, 1 ] na liniji 57
INFO  03:50:20,566 - Pronadjen poziv promenljive [$elem: int, -1, -1 ] na liniji 57
INFO  03:50:20,566 - Pronadjen poziv promenljive [$elem: int, -1, -1 ] na liniji 57
INFO  03:50:20,566 - Izabrano polje : .ZERO
INFO  03:50:20,566 - Pronadjen poziv promenljive [Con ZERO: int, 0, 1 ] na liniji 57
INFO  03:50:20,566 - Pronadjen poziv promenljive [Var broj: int, 5, 1 ] na liniji 57
INFO  03:50:20,566 - Dodela vrednosti za $elem na liniji 57
INFO  03:50:20,566 - Dodela vrednosti za ff na liniji 59
INFO  03:50:20,566 - Dodela vrednosti za i na liniji 60
INFO  03:50:20,566 - Dodela vrednosti za i na liniji 62
INFO  03:50:20,566 - Pronadjen poziv promenljive [Var niz: Arr of int, 0, 0 ] na liniji 62
INFO  03:50:20,567 - Pronadjen poziv promenljive [Var niz: Arr of int, 0, 0 ] na liniji 62
INFO  03:50:20,567 - Pronadjen poziv promenljive [Var ff: int, 3, 1 ] na liniji 67
INFO  03:50:20,567 - Definisana funkcija fa na liniji 69
INFO  03:50:20,567 - Deklarisan array argument arr na liniji 69
INFO  03:50:20,567 - Deklarisan array argument arr2 na liniji 69
INFO  03:50:20,567 - Deklarisan array argument a na liniji 69
INFO  03:50:20,567 - Definisana funkcija putp na liniji 73
INFO  03:50:20,567 - Deklarisan single argument ch na liniji 73
INFO  03:50:20,567 - Deklarisana single promenljiva x na liniji 74
INFO  03:50:20,567 - Dodela vrednosti za x na liniji 76
INFO  03:50:20,567 - Dodela vrednosti za bo na liniji 77
INFO  03:50:20,567 - Izabrano polje : .ZERO
INFO  03:50:20,567 - Pronadjen poziv promenljive [Con ZERO: int, 0, 1 ] na liniji 78
INFO  03:50:20,567 - Pronadjen poziv funkcije f2 sa 3/6 argumenta na liniji 78
INFO  03:50:20,567 - Dodela vrednosti za x na liniji 78
INFO  03:50:20,567 - Pronadjen poziv promenljive [Var x: int, 1, 1 ] na liniji 79
INFO  03:50:20,567 - Definisana funkcija getp na liniji 81
INFO  03:50:20,567 - Deklarisan single argument ch na liniji 81
INFO  03:50:20,567 - Deklarisana single promenljiva x na liniji 82
INFO  03:50:20,567 - Pronadjen poziv promenljive [Var a: int, 2, 0 ] na liniji 84
INFO  03:50:20,567 - Pronadjen poziv promenljive [Var x: int, 1, 1 ] na liniji 84
INFO  03:50:20,567 - Dodela vrednosti za x na liniji 84
INFO  03:50:20,567 - Dodela vrednosti za a na liniji 85
INFO  03:50:20,567 - Pronadjen poziv promenljive [Var a: int, 2, 0 ] na liniji 86
INFO  03:50:20,567 - Dodela vrednosti za b na liniji 86
INFO  03:50:20,567 - Dodela vrednosti za c na liniji 87
INFO  03:50:20,567 - Definisana funkcija main na liniji 90
INFO  03:50:20,567 - Deklarisana single promenljiva x na liniji 91
INFO  03:50:20,568 - Deklarisana single promenljiva i na liniji 91
INFO  03:50:20,568 - Deklarisana single promenljiva c na liniji 91
INFO  03:50:20,568 - Deklarisana single promenljiva val na liniji 91
INFO  03:50:20,568 - Deklarisana array promenljiva l na liniji 92
INFO  03:50:20,568 - Deklarisana array promenljiva bbb na liniji 93
INFO  03:50:20,568 - Deklarisana single promenljiva test1 na liniji 94
INFO  03:50:20,568 - Deklarisana single promenljiva test2 na liniji 94
INFO  03:50:20,568 - Dodela vrednosti za l na liniji 96
INFO  03:50:20,568 - Dodela vrednosti za bbb na liniji 97
INFO  03:50:20,568 - Pronadjen poziv promenljive [Var x: int, 0, 1 ] na liniji 98
INFO  03:50:20,568 - Dodela vrednosti za niz na liniji 98
INFO  03:50:20,568 - Dodela vrednosti za val na liniji 101
INFO  03:50:20,568 - Dodela vrednosti za i na liniji 103
INFO  03:50:20,568 - Pronadjen poziv promenljive [Var i: int, 1, 1 ] na liniji 103
INFO  03:50:20,568 - Pronadjen poziv promenljive [Con size: int, 10, 0 ] na liniji 103
INFO  03:50:20,568 - Pronadjen poziv funkcije putp sa 1/2 argumenta na liniji 105
INFO  03:50:20,568 - Dodela vrednosti za x na liniji 105
INFO  03:50:20,568 - Pronadjen poziv promenljive [Var c: char, 2, 1 ] na liniji 106
INFO  03:50:20,568 - Pronadjen poziv funkcije putp sa 1/2 argumenta na liniji 106
INFO  03:50:20,568 - Pronadjen poziv promenljive [Var c: char, 2, 1 ] na liniji 108
INFO  03:50:20,568 - Izabrano polje : .ZERO
INFO  03:50:20,568 - Pronadjen poziv promenljive [Con ZERO: int, 0, 1 ] na liniji 108
INFO  03:50:20,568 - Pronadjen poziv promenljive [Con size: int, 10, 0 ] na liniji 108
INFO  03:50:20,568 - Pronadjen poziv funkcije f1 sa 4/8 argumenta na liniji 108
INFO  03:50:20,568 - Pronadjen poziv promenljive [Var d: int, 1, 0 ] na liniji 110
INFO  03:50:20,568 - Pronadjen poziv promenljive [Var test1: int, 6, 1 ] na liniji 114
INFO  03:50:20,568 - Dodela vrednosti za i na liniji 114
INFO  03:50:20,568 - Pronadjen poziv promenljive [Var x: int, 0, 1 ] na liniji 114
INFO  03:50:20,568 - Pronadjen poziv promenljive [Var x: int, 0, 1 ] na liniji 116
INFO  03:50:20,568 - Pronadjen poziv promenljive [Var x: int, 0, 1 ] na liniji 116
INFO  03:50:20,568 - Pronadjen poziv promenljive [Con size: int, 10, 0 ] na liniji 116
INFO  03:50:20,568 - Pronadjen poziv promenljive [Var c: char, 2, 1 ] na liniji 118
INFO  03:50:20,568 - Pronadjen poziv funkcije getp sa 1/2 argumenta na liniji 118
INFO  03:50:20,568 - Pronadjen poziv funkcije putp sa 1/2 argumenta na liniji 118
INFO  03:50:20,568 - Pronadjen poziv promenljive [Con size: int, 10, 0 ] na liniji 120
INFO  03:50:20,568 - Pronadjen poziv promenljive [Var x: int, 0, 1 ] na liniji 120
INFO  03:50:20,568 - Pronadjen poziv promenljive [Var x: int, 0, 1 ] na liniji 120
INFO  03:50:20,568 - Pronadjen poziv funkcije getp sa 1/2 argumenta na liniji 122
INFO  03:50:20,568 - Pronadjen poziv funkcije putp sa 1/2 argumenta na liniji 122
INFO  03:50:20,568 - Pronadjen poziv promenljive [$elem: int, -1, -1 ] na liniji 127
INFO  03:50:20,568 - Pronadjen poziv promenljive [$elem: int, -1, -1 ] na liniji 127
INFO  03:50:20,568 - Dodela vrednosti za xx na liniji 127
INFO  03:50:20,568 - Pronadjen poziv promenljive [Var l: Arr of char, 4, 1 ] na liniji 128
INFO  03:50:20,568 - Pronadjen poziv promenljive [Var l: Arr of char, 4, 1 ] na liniji 128
INFO  03:50:20,568 - Pronadjen poziv promenljive [Con null: Class [], 0, 0 ] na liniji 128
INFO  03:50:20,568 - Pronadjen poziv funkcije fa sa 3/3 argumenta na liniji 128
INFO  03:50:20,568 - main funkcija je korektna.  na liniji 90
INFO  03:50:20,569 - ===================================
INFO  03:50:20,579 - Parsiranje uspesno zavrseno!
