INFO  20:43:56,572 - Putanja iz argumenta: test/program.mj
INFO  20:43:56,572 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  20:43:56,607 - #2 program
INFO  20:43:56,607 - #45 MJProgram
INFO  20:43:56,607 - #45 int
INFO  20:43:56,608 - #45 x
INFO  20:43:56,608 - #18 ;
INFO  20:43:56,609 - #45 int
INFO  20:43:56,609 - #45 y
INFO  20:43:56,609 - #19 ,
INFO  20:43:56,609 - #45 z
INFO  20:43:56,609 - #18 ;
INFO  20:43:56,609 - #45 int
INFO  20:43:56,609 - #45 arr
INFO  20:43:56,609 - #14 [
INFO  20:43:56,609 - #15 ]
INFO  20:43:56,609 - #18 ;
INFO  20:43:56,610 - #8 const
INFO  20:43:56,610 - #45 int
INFO  20:43:56,610 - #45 X
INFO  20:43:56,610 - #26 =
INFO  20:43:56,610 - #44 2
INFO  20:43:56,610 - #19 ,
INFO  20:43:56,611 - #45 Y
INFO  20:43:56,611 - #26 =
INFO  20:43:56,611 - #44 4
INFO  20:43:56,611 - #18 ;
INFO  20:43:56,611 - #8 const
INFO  20:43:56,611 - #45 char
INFO  20:43:56,611 - #45 C
INFO  20:43:56,611 - #26 =
INFO  20:43:56,611 - #46 _
INFO  20:43:56,611 - #18 ;
INFO  20:43:56,612 - #8 const
INFO  20:43:56,612 - #45 bool
INFO  20:43:56,612 - #45 B
INFO  20:43:56,612 - #26 =
INFO  20:43:56,612 - #47 0
INFO  20:43:56,612 - #18 ;
INFO  20:43:56,612 - #6 enum
INFO  20:43:56,612 - #45 ThingA
INFO  20:43:56,612 - #12 {
INFO  20:43:56,612 - #45 FirstThing
INFO  20:43:56,612 - #19 ,
INFO  20:43:56,612 - #45 SecondThing
INFO  20:43:56,613 - #26 =
INFO  20:43:56,613 - #44 4
INFO  20:43:56,613 - #19 ,
INFO  20:43:56,613 - #45 ThirdThing
INFO  20:43:56,613 - #19 ,
INFO  20:43:56,613 - #45 FourthThing
INFO  20:43:56,613 - #26 =
INFO  20:43:56,613 - #44 7
INFO  20:43:56,613 - #13 }
INFO  20:43:56,613 - #6 enum
INFO  20:43:56,613 - #45 ThingB
INFO  20:43:56,613 - #12 {
INFO  20:43:56,613 - #45 OneThing
INFO  20:43:56,613 - #26 =
INFO  20:43:56,613 - #44 2
INFO  20:43:56,613 - #19 ,
INFO  20:43:56,614 - #45 SecondThing
INFO  20:43:56,614 - #19 ,
INFO  20:43:56,614 - #45 ThreeThing
INFO  20:43:56,614 - #19 ,
INFO  20:43:56,614 - #45 FourThing
INFO  20:43:56,614 - #13 }
INFO  20:43:56,614 - #5 interface
INFO  20:43:56,614 - #45 Fejs
INFO  20:43:56,614 - #12 {
INFO  20:43:56,614 - #13 }
INFO  20:43:56,614 - #4 class
INFO  20:43:56,614 - #45 Klasa
INFO  20:43:56,614 - #12 {
INFO  20:43:56,615 - #45 int
INFO  20:43:56,616 - #45 k1
INFO  20:43:56,616 - #19 ,
INFO  20:43:56,616 - #45 k2
INFO  20:43:56,616 - #19 ,
INFO  20:43:56,616 - #45 k3
INFO  20:43:56,616 - #18 ;
INFO  20:43:56,616 - #45 bool
INFO  20:43:56,616 - #45 b1
INFO  20:43:56,617 - #19 ,
INFO  20:43:56,617 - #45 b2
INFO  20:43:56,617 - #18 ;
INFO  20:43:56,617 - #12 {
INFO  20:43:56,617 - #39 void
INFO  20:43:56,617 - #45 f
INFO  20:43:56,617 - #16 (
INFO  20:43:56,618 - #45 int
INFO  20:43:56,618 - #45 x
INFO  20:43:56,618 - #17 )
INFO  20:43:56,618 - #12 {
INFO  20:43:56,618 - #13 }
INFO  20:43:56,619 - #13 }
INFO  20:43:56,619 - #13 }
INFO  20:43:56,619 - #4 class
INFO  20:43:56,620 - #45 Klasa2
INFO  20:43:56,620 - #41 extends
INFO  20:43:56,620 - #45 Klasa
INFO  20:43:56,620 - #12 {
INFO  20:43:56,620 - #45 Klasa
INFO  20:43:56,620 - #45 k
INFO  20:43:56,620 - #18 ;
INFO  20:43:56,620 - #45 bool
INFO  20:43:56,620 - #45 b1
INFO  20:43:56,620 - #19 ,
INFO  20:43:56,620 - #45 b2
INFO  20:43:56,620 - #18 ;
INFO  20:43:56,620 - #12 {
INFO  20:43:56,620 - #39 void
INFO  20:43:56,620 - #45 f2
INFO  20:43:56,620 - #16 (
INFO  20:43:56,620 - #45 int
INFO  20:43:56,620 - #45 x
INFO  20:43:56,620 - #17 )
INFO  20:43:56,621 - #12 {
INFO  20:43:56,621 - #13 }
INFO  20:43:56,621 - #13 }
INFO  20:43:56,621 - #13 }
INFO  20:43:56,621 - #45 Klasa2
INFO  20:43:56,621 - #45 a
INFO  20:43:56,621 - #18 ;
INFO  20:43:56,621 - #12 {
INFO  20:43:56,621 - #39 void
INFO  20:43:56,621 - #45 main
INFO  20:43:56,621 - #16 (
INFO  20:43:56,621 - #17 )
INFO  20:43:56,621 - #12 {
INFO  20:43:56,622 - #45 a
INFO  20:43:56,622 - #20 .
INFO  20:43:56,622 - #45 k
INFO  20:43:56,623 - #20 .
INFO  20:43:56,623 - #45 k2
INFO  20:43:56,623 - #26 =
INFO  20:43:56,623 - #45 ThingA
INFO  20:43:56,624 - #20 .
INFO  20:43:56,624 - #45 FirstThing
INFO  20:43:56,624 - #18 ;
INFO  20:43:56,624 - #45 a
INFO  20:43:56,624 - #20 .
INFO  20:43:56,624 - #45 f
INFO  20:43:56,625 - #16 (
INFO  20:43:56,625 - #45 x
INFO  20:43:56,625 - #17 )
INFO  20:43:56,625 - #18 ;
INFO  20:43:56,625 - #13 }
INFO  20:43:56,625 - #13 }
INFO  20:43:56,630 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                Declarations(
                  Declarations(
                    Declarations(
                      Declarations(
                        Declarations(
                          NoDecl(
                          ) [NoDecl]
                          VarDeclaration(
                            GlobalVarDeclNode(
                              VarDeclType(
                                TypeNode(
                                 int
                                ) [TypeNode]
                              ) [VarDeclType]
                              SingleVariable(
                                VariableNoBracket(
                                 x
                                ) [VariableNoBracket]
                              ) [SingleVariable]
                            ) [GlobalVarDeclNode]
                          ) [VarDeclaration]
                        ) [Declarations]
                        VarDeclaration(
                          GlobalVarDeclNode(
                            VarDeclType(
                              TypeNode(
                               int
                              ) [TypeNode]
                            ) [VarDeclType]
                            Variables(
                              SingleVariable(
                                VariableNoBracket(
                                 y
                                ) [VariableNoBracket]
                              ) [SingleVariable]
                              VariableNoBracket(
                               z
                              ) [VariableNoBracket]
                            ) [Variables]
                          ) [GlobalVarDeclNode]
                        ) [VarDeclaration]
                      ) [Declarations]
                      VarDeclaration(
                        GlobalVarDeclNode(
                          VarDeclType(
                            TypeNode(
                             int
                            ) [TypeNode]
                          ) [VarDeclType]
                          SingleVariable(
                            VariableBracket(
                             arr
                            ) [VariableBracket]
                          ) [SingleVariable]
                        ) [GlobalVarDeclNode]
                      ) [VarDeclaration]
                    ) [Declarations]
                    ConstDeclaration(
                      ConstDeclNode(
                        ConstDeclType(
                          TypeNode(
                           int
                          ) [TypeNode]
                        ) [ConstDeclType]
                        Constants(
                          SingleConstant(
                            IdentEqualConstantNode(
                             X
                              NumberNode(
                               2
                              ) [NumberNode]
                            ) [IdentEqualConstantNode]
                          ) [SingleConstant]
                          IdentEqualConstantNode(
                           Y
                            NumberNode(
                             4
                            ) [NumberNode]
                          ) [IdentEqualConstantNode]
                        ) [Constants]
                      ) [ConstDeclNode]
                    ) [ConstDeclaration]
                  ) [Declarations]
                  ConstDeclaration(
                    ConstDeclNode(
                      ConstDeclType(
                        TypeNode(
                         char
                        ) [TypeNode]
                      ) [ConstDeclType]
                      SingleConstant(
                        IdentEqualConstantNode(
                         C
                          CharNode(
                           _
                          ) [CharNode]
                        ) [IdentEqualConstantNode]
                      ) [SingleConstant]
                    ) [ConstDeclNode]
                  ) [ConstDeclaration]
                ) [Declarations]
                ConstDeclaration(
                  ConstDeclNode(
                    ConstDeclType(
                      TypeNode(
                       bool
                      ) [TypeNode]
                    ) [ConstDeclType]
                    SingleConstant(
                      IdentEqualConstantNode(
                       B
                        BooleanNode(
                         0
                        ) [BooleanNode]
                      ) [IdentEqualConstantNode]
                    ) [SingleConstant]
                  ) [ConstDeclNode]
                ) [ConstDeclaration]
              ) [Declarations]
              EnumDeclaration(
                EnumDeclarationNode(
                  EnumIdent(
                   ThingA
                  ) [EnumIdent]
                  Enumerations(
                    Enumerations(
                      Enumerations(
                        SingleEnumeration(
                          EnumerationNoVal(
                           FirstThing
                          ) [EnumerationNoVal]
                        ) [SingleEnumeration]
                        EnumerationVal(
                         SecondThing
                         4
                        ) [EnumerationVal]
                      ) [Enumerations]
                      EnumerationNoVal(
                       ThirdThing
                      ) [EnumerationNoVal]
                    ) [Enumerations]
                    EnumerationVal(
                     FourthThing
                     7
                    ) [EnumerationVal]
                  ) [Enumerations]
                ) [EnumDeclarationNode]
              ) [EnumDeclaration]
            ) [Declarations]
            EnumDeclaration(
              EnumDeclarationNode(
                EnumIdent(
                 ThingB
                ) [EnumIdent]
                Enumerations(
                  Enumerations(
                    Enumerations(
                      SingleEnumeration(
                        EnumerationVal(
                         OneThing
                         2
                        ) [EnumerationVal]
                      ) [SingleEnumeration]
                      EnumerationNoVal(
                       SecondThing
                      ) [EnumerationNoVal]
                    ) [Enumerations]
                    EnumerationNoVal(
                     ThreeThing
                    ) [EnumerationNoVal]
                  ) [Enumerations]
                  EnumerationNoVal(
                   FourThing
                  ) [EnumerationNoVal]
                ) [Enumerations]
              ) [EnumDeclarationNode]
            ) [EnumDeclaration]
          ) [Declarations]
          InterfaceDeclaration(
            InterfaceDeclarationNode(
             Fejs
              NoInterfaceMethodDeclaration(
              ) [NoInterfaceMethodDeclaration]
            ) [InterfaceDeclarationNode]
          ) [InterfaceDeclaration]
        ) [Declarations]
        ClassDeclaration(
          ClassDeclarationWithMethods(
            ClassDeclIdent(
             Klasa
            ) [ClassDeclIdent]
            NoExtension(
            ) [NoExtension]
            NoImplementation(
            ) [NoImplementation]
            ClassVarDeclarationList(
              ClassVarDeclarationList(
                NoClassVarDeclaration(
                ) [NoClassVarDeclaration]
                ClassVarDeclNode(
                  ClassVarDeclType(
                    TypeNode(
                     int
                    ) [TypeNode]
                  ) [ClassVarDeclType]
                  ClassVariables(
                    ClassVariables(
                      SingleClassVariable(
                        VariableNoBracket(
                         k1
                        ) [VariableNoBracket]
                      ) [SingleClassVariable]
                      VariableNoBracket(
                       k2
                      ) [VariableNoBracket]
                    ) [ClassVariables]
                    VariableNoBracket(
                     k3
                    ) [VariableNoBracket]
                  ) [ClassVariables]
                ) [ClassVarDeclNode]
              ) [ClassVarDeclarationList]
              ClassVarDeclNode(
                ClassVarDeclType(
                  TypeNode(
                   bool
                  ) [TypeNode]
                ) [ClassVarDeclType]
                ClassVariables(
                  SingleClassVariable(
                    VariableNoBracket(
                     b1
                    ) [VariableNoBracket]
                  ) [SingleClassVariable]
                  VariableNoBracket(
                   b2
                  ) [VariableNoBracket]
                ) [ClassVariables]
              ) [ClassVarDeclNode]
            ) [ClassVarDeclarationList]
            ClassMethodDeclarations(
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
              MethodDecl(
                MethodTypeName(
                  VoidType(
                  ) [VoidType]
                 f
                ) [MethodTypeName]
                FormalParams(
                  SingleFormalParamDecl(
                    FormalParamDeclarationNoBrackets(
                      TypeNode(
                       int
                      ) [TypeNode]
                     x
                    ) [FormalParamDeclarationNoBrackets]
                  ) [SingleFormalParamDecl]
                ) [FormalParams]
                NoVarDeclaration(
                ) [NoVarDeclaration]
                MethodLBRACE(
                ) [MethodLBRACE]
                NoStatement(
                ) [NoStatement]
              ) [MethodDecl]
            ) [ClassMethodDeclarations]
          ) [ClassDeclarationWithMethods]
        ) [ClassDeclaration]
      ) [Declarations]
      ClassDeclaration(
        ClassDeclarationWithMethods(
          ClassDeclIdent(
           Klasa2
          ) [ClassDeclIdent]
          Extension(
            TypeNode(
             Klasa
            ) [TypeNode]
          ) [Extension]
          NoImplementation(
          ) [NoImplementation]
          ClassVarDeclarationList(
            ClassVarDeclarationList(
              NoClassVarDeclaration(
              ) [NoClassVarDeclaration]
              ClassVarDeclNode(
                ClassVarDeclType(
                  TypeNode(
                   Klasa
                  ) [TypeNode]
                ) [ClassVarDeclType]
                SingleClassVariable(
                  VariableNoBracket(
                   k
                  ) [VariableNoBracket]
                ) [SingleClassVariable]
              ) [ClassVarDeclNode]
            ) [ClassVarDeclarationList]
            ClassVarDeclNode(
              ClassVarDeclType(
                TypeNode(
                 bool
                ) [TypeNode]
              ) [ClassVarDeclType]
              ClassVariables(
                SingleClassVariable(
                  VariableNoBracket(
                   b1
                  ) [VariableNoBracket]
                ) [SingleClassVariable]
                VariableNoBracket(
                 b2
                ) [VariableNoBracket]
              ) [ClassVariables]
            ) [ClassVarDeclNode]
          ) [ClassVarDeclarationList]
          ClassMethodDeclarations(
            NoClassMethodDecl(
            ) [NoClassMethodDecl]
            MethodDecl(
              MethodTypeName(
                VoidType(
                ) [VoidType]
               f2
              ) [MethodTypeName]
              FormalParams(
                SingleFormalParamDecl(
                  FormalParamDeclarationNoBrackets(
                    TypeNode(
                     int
                    ) [TypeNode]
                   x
                  ) [FormalParamDeclarationNoBrackets]
                ) [SingleFormalParamDecl]
              ) [FormalParams]
              NoVarDeclaration(
              ) [NoVarDeclaration]
              MethodLBRACE(
              ) [MethodLBRACE]
              NoStatement(
              ) [NoStatement]
            ) [MethodDecl]
          ) [ClassMethodDeclarations]
        ) [ClassDeclarationWithMethods]
      ) [ClassDeclaration]
    ) [Declarations]
    VarDeclaration(
      GlobalVarDeclNode(
        VarDeclType(
          TypeNode(
           Klasa2
          ) [TypeNode]
        ) [VarDeclType]
        SingleVariable(
          VariableNoBracket(
           a
          ) [VariableNoBracket]
        ) [SingleVariable]
      ) [GlobalVarDeclNode]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      NoVarDeclaration(
      ) [NoVarDeclaration]
      MethodLBRACE(
      ) [MethodLBRACE]
      Statements(
        Statements(
          NoStatement(
          ) [NoStatement]
          DesignatorStatementOnly(
            DesignatorStatementAssignop(
              DesignatorNode(
                Idents(
                  Idents(
                    SingleIdentExpr(
                     a
                    ) [SingleIdentExpr]
                   k
                  ) [Idents]
                 k2
                ) [Idents]
              ) [DesignatorNode]
              Assignop(
              ) [Assignop]
              SingleExpression(
                TermFactor(
                  DesignatorEmpty(
                    DesignatorNode(
                      Idents(
                        SingleIdentExpr(
                         ThingA
                        ) [SingleIdentExpr]
                       FirstThing
                      ) [Idents]
                    ) [DesignatorNode]
                  ) [DesignatorEmpty]
                ) [TermFactor]
              ) [SingleExpression]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementOnly]
        ) [Statements]
        DesignatorStatementOnly(
          DesignatorStatementActPars(
            DesignatorNode(
              Idents(
                SingleIdentExpr(
                 a
                ) [SingleIdentExpr]
               f
              ) [Idents]
            ) [DesignatorNode]
            ActParsNode(
              SingleActualParam(
                SingleExpression(
                  TermFactor(
                    DesignatorEmpty(
                      DesignatorNode(
                        SingleIdentExpr(
                         x
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                    ) [DesignatorEmpty]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [SingleActualParam]
            ) [ActParsNode]
          ) [DesignatorStatementActPars]
        ) [DesignatorStatementOnly]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  20:43:56,631 - ===================================
INFO  20:43:56,634 - Deklarisana single promenljiva x na liniji 5
INFO  20:43:56,634 - Deklarisana single promenljiva y na liniji 5
INFO  20:43:56,634 - Deklarisana single promenljiva z na liniji 5
INFO  20:43:56,634 - Deklarisana array promenljiva arr na liniji 6
INFO  20:43:56,634 - Definisana konstanta (2)X na liniji 7
INFO  20:43:56,634 - Definisana konstanta (4)Y na liniji 7
INFO  20:43:56,634 - Definisana konstanta (95)C na liniji 8
INFO  20:43:56,634 - Definisana konstanta (0)B na liniji 9
INFO  20:43:56,634 - Deklarisan novi enum tip: ThingA na liniji 11
INFO  20:43:56,634 - Definisana enum konstanta FirstThing sa vrednoscu 0 na liniji 11
INFO  20:43:56,634 - Definisana enum konstanta SecondThing sa vrednoscu 4 na liniji 11
INFO  20:43:56,634 - Definisana enum konstanta ThirdThing sa vrednoscu 5 na liniji 11
INFO  20:43:56,634 - Definisana enum konstanta FourthThing sa vrednoscu 7 na liniji 11
INFO  20:43:56,634 - Deklarisan novi enum tip: ThingB na liniji 12
INFO  20:43:56,634 - Definisana enum konstanta OneThing sa vrednoscu 2 na liniji 12
INFO  20:43:56,634 - Definisana enum konstanta SecondThing sa vrednoscu 3 na liniji 12
INFO  20:43:56,634 - Definisana enum konstanta ThreeThing sa vrednoscu 4 na liniji 12
INFO  20:43:56,634 - Definisana enum konstanta FourThing sa vrednoscu 5 na liniji 12
INFO  20:43:56,634 - Deklarisano single polje k1 na liniji 18
INFO  20:43:56,635 - Deklarisano single polje k2 na liniji 18
INFO  20:43:56,635 - Deklarisano single polje k3 na liniji 18
INFO  20:43:56,635 - Deklarisano single polje b1 na liniji 19
INFO  20:43:56,635 - Deklarisano single polje b2 na liniji 19
INFO  20:43:56,635 - Deklarisana metoda f u okviru klase Klasa na liniji 21
INFO  20:43:56,635 - Deklarisan single argument x na liniji 21
INFO  20:43:56,635 - Deklarisano single polje k na liniji 27
INFO  20:43:56,635 - Deklarisano single polje b1 na liniji 28
INFO  20:43:56,635 - Deklarisano single polje b2 na liniji 28
INFO  20:43:56,635 - Deklarisana metoda f2 u okviru klase Klasa2 na liniji 30
INFO  20:43:56,635 - Deklarisan single argument x na liniji 30
INFO  20:43:56,636 - Deklarisana single promenljiva a na liniji 35
INFO  20:43:56,636 - Definisana funkcija main na liniji 37
INFO  20:43:56,636 - Izabrano polje : .k
INFO  20:43:56,636 - Izabrano polje : .k2
INFO  20:43:56,636 - Izabrano polje : .FirstThing
INFO  20:43:56,636 - Pronadjen poziv promenljive [Con FirstThing: int, 0, 1 ] na liniji 38
INFO  20:43:56,636 - Dodela vrednosti za k2 na liniji 38
ERROR 20:43:56,636 - Greska na liniji 39 : polje f nije deklarisano! (u okviru:a)
INFO  20:43:56,636 - Pronadjen poziv promenljive [Var x: int, 0, 0 ] na liniji 39
ERROR 20:43:56,636 - Greska na liniji 39 : ime noObj nije funkcija!
INFO  20:43:56,637 - main funkcija je korektna.  na liniji 37
INFO  20:43:56,637 - ===================================
ERROR 20:43:56,637 - Parsiranje NIJE uspesno zavrseno!
