INFO  04:25:33,698 - Putanja iz argumenta: test/program.mj
INFO  04:25:33,698 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  04:25:33,733 - #2 program
INFO  04:25:33,733 - #45 MyProgram
INFO  04:25:33,733 - #8 const
INFO  04:25:33,733 - #45 int
INFO  04:25:33,733 - #45 size
INFO  04:25:33,734 - #26 =
INFO  04:25:33,734 - #44 10
INFO  04:25:33,734 - #18 ;
INFO  04:25:33,734 - #45 int
INFO  04:25:33,735 - #45 pos
INFO  04:25:33,735 - #14 [
INFO  04:25:33,735 - #15 ]
INFO  04:25:33,735 - #18 ;
INFO  04:25:33,735 - #12 {
INFO  04:25:33,735 - #39 void
INFO  04:25:33,736 - #45 main
INFO  04:25:33,736 - #16 (
INFO  04:25:33,736 - #17 )
INFO  04:25:33,737 - #45 int
INFO  04:25:33,737 - #45 x
INFO  04:25:33,737 - #19 ,
INFO  04:25:33,737 - #45 i
INFO  04:25:33,737 - #18 ;
INFO  04:25:33,738 - #45 char
INFO  04:25:33,738 - #45 x
INFO  04:25:33,738 - #18 ;
INFO  04:25:33,738 - #12 {
INFO  04:25:33,738 - #45 x
INFO  04:25:33,738 - #20 .
INFO  04:25:33,739 - #45 i
INFO  04:25:33,739 - #26 =
INFO  04:25:33,739 - #44 1
INFO  04:25:33,739 - #18 ;
INFO  04:25:33,739 - #45 pos
INFO  04:25:33,740 - #26 =
INFO  04:25:33,740 - #10 new
INFO  04:25:33,740 - #45 int
INFO  04:25:33,740 - #14 [
INFO  04:25:33,740 - #45 size
INFO  04:25:33,740 - #15 ]
INFO  04:25:33,740 - #18 ;
INFO  04:25:33,740 - #45 i
INFO  04:25:33,741 - #26 =
INFO  04:25:33,741 - #44 0
INFO  04:25:33,741 - #18 ;
INFO  04:25:33,741 - #45 while
INFO  04:25:33,741 - #16 (
INFO  04:25:33,741 - #45 i
INFO  04:25:33,741 - #33 <
ERROR 04:25:33,741 - 
Sintaksna greska na liniji 13
INFO  04:25:33,741 - #45 size
INFO  04:25:33,741 - #17 )
INFO  04:25:33,741 - #12 {
INFO  04:25:33,742 - #45 pos
INFO  04:25:33,742 - #14 [
INFO  04:25:33,742 - #45 i
INFO  04:25:33,742 - #15 ]
INFO  04:25:33,742 - #26 =
INFO  04:25:33,742 - #44 0
INFO  04:25:33,742 - #18 ;
INFO  04:25:33,742 - #45 i
INFO  04:25:33,742 - #27 ++
INFO  04:25:33,742 - #18 ;
ERROR 04:25:33,742 - [Dodela vrednosti] Izvrsen oporavak do sledeceg ';' u liniji 13
INFO  04:25:33,742 - #13 }
INFO  04:25:33,742 - #37 read
ERROR 04:25:33,743 - 
Sintaksna greska na liniji 18
INFO  04:25:33,743 - #16 (
INFO  04:25:33,743 - #45 x
INFO  04:25:33,743 - #17 )
INFO  04:25:33,743 - #18 ;
INFO  04:25:33,743 - #40 for
INFO  04:25:33,743 - #16 (
INFO  04:25:33,743 - #18 ;
ERROR 04:25:33,743 - [Dodela vrednosti] Izvrsen oporavak do sledeceg ';' u liniji 16
INFO  04:25:33,743 - #45 x
INFO  04:25:33,744 - #33 <
INFO  04:25:33,744 - #44 10
INFO  04:25:33,744 - #18 ;
INFO  04:25:33,745 - #17 )
INFO  04:25:33,745 - #12 {
INFO  04:25:33,745 - #9 if
INFO  04:25:33,746 - #16 (
INFO  04:25:33,746 - #45 x
INFO  04:25:33,746 - #33 <
INFO  04:25:33,746 - #45 size
INFO  04:25:33,746 - #17 )
INFO  04:25:33,746 - #12 {
INFO  04:25:33,746 - #45 pos
INFO  04:25:33,746 - #14 [
INFO  04:25:33,746 - #45 x
INFO  04:25:33,746 - #15 ]
INFO  04:25:33,747 - #27 ++
INFO  04:25:33,747 - #18 ;
INFO  04:25:33,747 - #13 }
INFO  04:25:33,747 - #37 read
INFO  04:25:33,747 - #16 (
INFO  04:25:33,747 - #45 x
INFO  04:25:33,747 - #17 )
INFO  04:25:33,747 - #18 ;
INFO  04:25:33,747 - #13 }
INFO  04:25:33,748 - #13 }
INFO  04:25:33,748 - #13 }
INFO  04:25:33,754 - Program(
  ProgName(
   MyProgram
  ) [ProgName]
  Declarations(
    Declarations(
      NoDecl(
      ) [NoDecl]
      ConstDeclaration(
        ConstDeclNode(
          ConstDeclType(
            TypeNode(
             int
            ) [TypeNode]
          ) [ConstDeclType]
          SingleConstant(
            IdentEqualConstantNode(
             size
              NumberNode(
               10
              ) [NumberNode]
            ) [IdentEqualConstantNode]
          ) [SingleConstant]
        ) [ConstDeclNode]
      ) [ConstDeclaration]
    ) [Declarations]
    VarDeclaration(
      GlobalVarDeclNode(
        VarDeclType(
          TypeNode(
           int
          ) [TypeNode]
        ) [VarDeclType]
        SingleVariable(
          VariableBracket(
           pos
          ) [VariableBracket]
        ) [SingleVariable]
      ) [GlobalVarDeclNode]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      VarDeclarationList(
        VarDeclarationList(
          NoVarDeclaration(
          ) [NoVarDeclaration]
          VarDeclNode(
            VarDeclType(
              TypeNode(
               int
              ) [TypeNode]
            ) [VarDeclType]
            Variables(
              SingleVariable(
                VariableNoBracket(
                 x
                ) [VariableNoBracket]
              ) [SingleVariable]
              VariableNoBracket(
               i
              ) [VariableNoBracket]
            ) [Variables]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        VarDeclNode(
          VarDeclType(
            TypeNode(
             char
            ) [TypeNode]
          ) [VarDeclType]
          SingleVariable(
            VariableNoBracket(
             x
            ) [VariableNoBracket]
          ) [SingleVariable]
        ) [VarDeclNode]
      ) [VarDeclarationList]
      MethodLBRACE(
      ) [MethodLBRACE]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStatement(
                    ) [NoStatement]
                    DesignatorStatementOnly(
                      DesignatorStatementAssignop(
                        DesignatorNode(
                          Idents(
                            SingleIdentExpr(
                             x
                            ) [SingleIdentExpr]
                           i
                          ) [Idents]
                        ) [DesignatorNode]
                        Assignop(
                        ) [Assignop]
                        SingleExpression(
                          TermFactor(
                            ConstantNumber(
                             1
                            ) [ConstantNumber]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementOnly]
                  ) [Statements]
                  DesignatorStatementOnly(
                    DesignatorStatementAssignop(
                      DesignatorNode(
                        SingleIdentExpr(
                         pos
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                      Assignop(
                      ) [Assignop]
                      SingleExpression(
                        TermFactor(
                          NewArray(
                            NewArrayType(
                              TypeNode(
                               int
                              ) [TypeNode]
                            ) [NewArrayType]
                            SingleExpression(
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     size
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [NewArray]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementOnly]
                ) [Statements]
                DesignatorStatementOnly(
                  DesignatorStatementAssignop(
                    DesignatorNode(
                      SingleIdentExpr(
                       i
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                    Assignop(
                    ) [Assignop]
                    SingleExpression(
                      TermFactor(
                        ConstantNumber(
                         0
                        ) [ConstantNumber]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementOnly]
              ) [Statements]
              ErrorAssign(
              ) [ErrorAssign]
            ) [Statements]
            DesignatorStatementOnly(
              DesignatorStatementPlusPlus(
                DesignatorNode(
                  SingleIdentExpr(
                   i
                  ) [SingleIdentExpr]
                ) [DesignatorNode]
              ) [DesignatorStatementPlusPlus]
            ) [DesignatorStatementOnly]
          ) [Statements]
          ErrorAssign(
          ) [ErrorAssign]
        ) [Statements]
        ForStatement(
          ForHeader(
            ForStatement1(
              DesignatorStatementNull(
              ) [DesignatorStatementNull]
            ) [ForStatement1]
            ForCondition(
              ConditionNotNull(
                ConditionNode(
                  SingleConditionTerm(
                    ConditionTermNode(
                      SingleConditionFact(
                        CondFactExpressionRelopExpression(
                          SingleExpression(
                            TermFactor(
                              DesignatorEmpty(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   x
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                              ) [DesignatorEmpty]
                            ) [TermFactor]
                          ) [SingleExpression]
                          RelopLess(
                          ) [RelopLess]
                          SingleExpression(
                            TermFactor(
                              ConstantNumber(
                               10
                              ) [ConstantNumber]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [CondFactExpressionRelopExpression]
                      ) [SingleConditionFact]
                    ) [ConditionTermNode]
                  ) [SingleConditionTerm]
                ) [ConditionNode]
              ) [ConditionNotNull]
            ) [ForCondition]
            ForStatement2(
              DesignatorStatementNull(
              ) [DesignatorStatementNull]
            ) [ForStatement2]
          ) [ForHeader]
          InBraceStatement(
            Statements(
              Statements(
                NoStatement(
                ) [NoStatement]
                IfStatement(
                  IfConditionNode(
                    ConditionNode(
                      SingleConditionTerm(
                        ConditionTermNode(
                          SingleConditionFact(
                            CondFactExpressionRelopExpression(
                              SingleExpression(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      SingleIdentExpr(
                                       x
                                      ) [SingleIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                              RelopLess(
                              ) [RelopLess]
                              SingleExpression(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      SingleIdentExpr(
                                       size
                                      ) [SingleIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [CondFactExpressionRelopExpression]
                          ) [SingleConditionFact]
                        ) [ConditionTermNode]
                      ) [SingleConditionTerm]
                    ) [ConditionNode]
                  ) [IfConditionNode]
                  IfStatementThen(
                    InBraceStatement(
                      Statements(
                        NoStatement(
                        ) [NoStatement]
                        DesignatorStatementOnly(
                          DesignatorStatementPlusPlus(
                            DesignatorNode(
                              Exprs(
                                IdentExprListArray(
                                  SingleIdentExpr(
                                   pos
                                  ) [SingleIdentExpr]
                                ) [IdentExprListArray]
                                SingleExpression(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        SingleIdentExpr(
                                         x
                                        ) [SingleIdentExpr]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [Exprs]
                            ) [DesignatorNode]
                          ) [DesignatorStatementPlusPlus]
                        ) [DesignatorStatementOnly]
                      ) [Statements]
                    ) [InBraceStatement]
                  ) [IfStatementThen]
                ) [IfStatement]
              ) [Statements]
              ReadStatement(
                DesignatorNode(
                  SingleIdentExpr(
                   x
                  ) [SingleIdentExpr]
                ) [DesignatorNode]
              ) [ReadStatement]
            ) [Statements]
          ) [InBraceStatement]
        ) [ForStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  04:25:33,754 - ===================================
INFO  04:25:33,758 - Definisana konstanta (10)size na liniji 3
INFO  04:25:33,758 - Deklarisana array promenljiva pos na liniji 4
INFO  04:25:33,758 - Definisana funkcija main na liniji 6
INFO  04:25:33,758 - Deklarisana single promenljiva x na liniji 7
INFO  04:25:33,758 - Deklarisana single promenljiva i na liniji 7
ERROR 04:25:33,758 - Greska na liniji 8 : ime x vec deklarisano! 
ERROR 04:25:33,758 - Greska na liniji 10 : podrzani samo Enum i Class/Interface tipovi. 
ERROR 04:25:33,759 - Greska na liniji 10 : nekompatibilni tipovi u dodeli vrednosti! 
INFO  04:25:33,759 - Pronadjen poziv promenljive [Con size: int, 10, 0 ] na liniji 11
INFO  04:25:33,759 - Dodela vrednosti za pos na liniji 11
INFO  04:25:33,759 - Dodela vrednosti za i na liniji 12
INFO  04:25:33,759 - Pronadjen poziv promenljive [Var x: int, 0, 1 ] na liniji 19
INFO  04:25:33,759 - Pronadjen poziv promenljive [Var x: int, 0, 1 ] na liniji 20
INFO  04:25:33,759 - Pronadjen poziv promenljive [Con size: int, 10, 0 ] na liniji 20
INFO  04:25:33,759 - Pronadjen poziv promenljive [Var x: int, 0, 1 ] na liniji 21
INFO  04:25:33,759 - main funkcija je korektna.  na liniji 6
INFO  04:25:33,759 - ===================================
ERROR 04:25:33,760 - Parsiranje NIJE uspesno zavrseno!
