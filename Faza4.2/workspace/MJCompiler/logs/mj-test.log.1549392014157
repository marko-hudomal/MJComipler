INFO  19:28:18,969 - Putanja iz argumenta: test/program.mj
INFO  19:28:18,969 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  19:28:19,004 - #2 program
INFO  19:28:19,004 - #45 MJProgram
INFO  19:28:19,004 - #45 int
INFO  19:28:19,005 - #45 x
INFO  19:28:19,005 - #18 ;
INFO  19:28:19,005 - #45 int
INFO  19:28:19,005 - #45 y
INFO  19:28:19,005 - #19 ,
INFO  19:28:19,006 - #45 z
INFO  19:28:19,006 - #18 ;
INFO  19:28:19,006 - #45 int
INFO  19:28:19,006 - #45 arr
INFO  19:28:19,006 - #14 [
INFO  19:28:19,006 - #15 ]
INFO  19:28:19,006 - #18 ;
INFO  19:28:19,006 - #8 const
INFO  19:28:19,006 - #45 int
INFO  19:28:19,006 - #45 X
INFO  19:28:19,007 - #26 =
INFO  19:28:19,007 - #44 2
INFO  19:28:19,007 - #19 ,
INFO  19:28:19,007 - #45 Y
INFO  19:28:19,007 - #26 =
INFO  19:28:19,007 - #44 4
INFO  19:28:19,007 - #18 ;
INFO  19:28:19,007 - #8 const
INFO  19:28:19,008 - #45 char
INFO  19:28:19,008 - #45 C
INFO  19:28:19,008 - #26 =
INFO  19:28:19,008 - #46 _
INFO  19:28:19,008 - #18 ;
INFO  19:28:19,008 - #8 const
INFO  19:28:19,008 - #45 bool
INFO  19:28:19,008 - #45 B
INFO  19:28:19,008 - #26 =
INFO  19:28:19,008 - #47 0
INFO  19:28:19,008 - #18 ;
INFO  19:28:19,008 - #6 enum
INFO  19:28:19,008 - #45 ThingA
INFO  19:28:19,008 - #12 {
INFO  19:28:19,009 - #45 FirstThing
INFO  19:28:19,009 - #19 ,
INFO  19:28:19,009 - #45 SecondThing
INFO  19:28:19,009 - #26 =
INFO  19:28:19,009 - #44 4
INFO  19:28:19,009 - #19 ,
INFO  19:28:19,009 - #45 ThirdThing
INFO  19:28:19,009 - #19 ,
INFO  19:28:19,009 - #45 FourthThing
INFO  19:28:19,009 - #26 =
INFO  19:28:19,009 - #44 7
INFO  19:28:19,009 - #13 }
INFO  19:28:19,009 - #6 enum
INFO  19:28:19,010 - #45 ThingB
INFO  19:28:19,010 - #12 {
INFO  19:28:19,010 - #45 OneThing
INFO  19:28:19,010 - #26 =
INFO  19:28:19,010 - #44 2
INFO  19:28:19,010 - #19 ,
INFO  19:28:19,010 - #45 SecondThing
INFO  19:28:19,010 - #19 ,
INFO  19:28:19,010 - #45 ThreeThing
INFO  19:28:19,010 - #19 ,
INFO  19:28:19,010 - #45 FourThing
INFO  19:28:19,010 - #13 }
INFO  19:28:19,010 - #4 class
INFO  19:28:19,010 - #45 Klasa
INFO  19:28:19,010 - #12 {
INFO  19:28:19,011 - #45 int
INFO  19:28:19,011 - #45 k1
INFO  19:28:19,012 - #19 ,
INFO  19:28:19,012 - #45 k2
INFO  19:28:19,012 - #19 ,
INFO  19:28:19,012 - #45 k3
INFO  19:28:19,012 - #18 ;
INFO  19:28:19,012 - #45 bool
INFO  19:28:19,012 - #45 b1
INFO  19:28:19,012 - #19 ,
INFO  19:28:19,012 - #45 b2
INFO  19:28:19,012 - #18 ;
INFO  19:28:19,012 - #13 }
INFO  19:28:19,013 - #4 class
INFO  19:28:19,013 - #45 Klasa2
INFO  19:28:19,013 - #41 extends
INFO  19:28:19,013 - #45 Klasa
INFO  19:28:19,013 - #12 {
INFO  19:28:19,013 - #45 bool
INFO  19:28:19,013 - #45 b1
INFO  19:28:19,013 - #19 ,
INFO  19:28:19,013 - #45 b2
INFO  19:28:19,013 - #18 ;
INFO  19:28:19,013 - #12 {
INFO  19:28:19,013 - #39 void
INFO  19:28:19,013 - #45 f
INFO  19:28:19,014 - #16 (
INFO  19:28:19,014 - #45 int
INFO  19:28:19,014 - #45 x
INFO  19:28:19,014 - #17 )
INFO  19:28:19,014 - #12 {
INFO  19:28:19,015 - #13 }
INFO  19:28:19,015 - #13 }
INFO  19:28:19,016 - #13 }
INFO  19:28:19,016 - #45 Klasa2
INFO  19:28:19,016 - #45 a
INFO  19:28:19,016 - #18 ;
INFO  19:28:19,016 - #12 {
INFO  19:28:19,016 - #39 void
INFO  19:28:19,017 - #45 main
INFO  19:28:19,017 - #16 (
INFO  19:28:19,017 - #17 )
INFO  19:28:19,017 - #12 {
INFO  19:28:19,017 - #45 a
INFO  19:28:19,017 - #20 .
INFO  19:28:19,017 - #45 k
INFO  19:28:19,017 - #20 .
INFO  19:28:19,017 - #45 k2
INFO  19:28:19,017 - #26 =
INFO  19:28:19,017 - #45 ThingA
INFO  19:28:19,018 - #20 .
INFO  19:28:19,018 - #45 FirstThing
INFO  19:28:19,018 - #18 ;
INFO  19:28:19,018 - #45 a
INFO  19:28:19,018 - #20 .
INFO  19:28:19,018 - #45 f
INFO  19:28:19,018 - #16 (
INFO  19:28:19,018 - #45 x
INFO  19:28:19,019 - #17 )
INFO  19:28:19,019 - #18 ;
INFO  19:28:19,019 - #13 }
INFO  19:28:19,019 - #13 }
INFO  19:28:19,025 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                Declarations(
                  Declarations(
                    Declarations(
                      Declarations(
                        NoDecl(
                        ) [NoDecl]
                        VarDeclaration(
                          GlobalVarDeclNode(
                            VarDeclType(
                              TypeNode(
                               int
                              ) [TypeNode]
                            ) [VarDeclType]
                            SingleVariable(
                              VariableNoBracket(
                               x
                              ) [VariableNoBracket]
                            ) [SingleVariable]
                          ) [GlobalVarDeclNode]
                        ) [VarDeclaration]
                      ) [Declarations]
                      VarDeclaration(
                        GlobalVarDeclNode(
                          VarDeclType(
                            TypeNode(
                             int
                            ) [TypeNode]
                          ) [VarDeclType]
                          Variables(
                            SingleVariable(
                              VariableNoBracket(
                               y
                              ) [VariableNoBracket]
                            ) [SingleVariable]
                            VariableNoBracket(
                             z
                            ) [VariableNoBracket]
                          ) [Variables]
                        ) [GlobalVarDeclNode]
                      ) [VarDeclaration]
                    ) [Declarations]
                    VarDeclaration(
                      GlobalVarDeclNode(
                        VarDeclType(
                          TypeNode(
                           int
                          ) [TypeNode]
                        ) [VarDeclType]
                        SingleVariable(
                          VariableBracket(
                           arr
                          ) [VariableBracket]
                        ) [SingleVariable]
                      ) [GlobalVarDeclNode]
                    ) [VarDeclaration]
                  ) [Declarations]
                  ConstDeclaration(
                    ConstDeclNode(
                      ConstDeclType(
                        TypeNode(
                         int
                        ) [TypeNode]
                      ) [ConstDeclType]
                      Constants(
                        SingleConstant(
                          IdentEqualConstantNode(
                           X
                            NumberNode(
                             2
                            ) [NumberNode]
                          ) [IdentEqualConstantNode]
                        ) [SingleConstant]
                        IdentEqualConstantNode(
                         Y
                          NumberNode(
                           4
                          ) [NumberNode]
                        ) [IdentEqualConstantNode]
                      ) [Constants]
                    ) [ConstDeclNode]
                  ) [ConstDeclaration]
                ) [Declarations]
                ConstDeclaration(
                  ConstDeclNode(
                    ConstDeclType(
                      TypeNode(
                       char
                      ) [TypeNode]
                    ) [ConstDeclType]
                    SingleConstant(
                      IdentEqualConstantNode(
                       C
                        CharNode(
                         _
                        ) [CharNode]
                      ) [IdentEqualConstantNode]
                    ) [SingleConstant]
                  ) [ConstDeclNode]
                ) [ConstDeclaration]
              ) [Declarations]
              ConstDeclaration(
                ConstDeclNode(
                  ConstDeclType(
                    TypeNode(
                     bool
                    ) [TypeNode]
                  ) [ConstDeclType]
                  SingleConstant(
                    IdentEqualConstantNode(
                     B
                      BooleanNode(
                       0
                      ) [BooleanNode]
                    ) [IdentEqualConstantNode]
                  ) [SingleConstant]
                ) [ConstDeclNode]
              ) [ConstDeclaration]
            ) [Declarations]
            EnumDeclaration(
              EnumDeclarationNode(
                EnumIdent(
                 ThingA
                ) [EnumIdent]
                Enumerations(
                  Enumerations(
                    Enumerations(
                      SingleEnumeration(
                        EnumerationNoVal(
                         FirstThing
                        ) [EnumerationNoVal]
                      ) [SingleEnumeration]
                      EnumerationVal(
                       SecondThing
                       4
                      ) [EnumerationVal]
                    ) [Enumerations]
                    EnumerationNoVal(
                     ThirdThing
                    ) [EnumerationNoVal]
                  ) [Enumerations]
                  EnumerationVal(
                   FourthThing
                   7
                  ) [EnumerationVal]
                ) [Enumerations]
              ) [EnumDeclarationNode]
            ) [EnumDeclaration]
          ) [Declarations]
          EnumDeclaration(
            EnumDeclarationNode(
              EnumIdent(
               ThingB
              ) [EnumIdent]
              Enumerations(
                Enumerations(
                  Enumerations(
                    SingleEnumeration(
                      EnumerationVal(
                       OneThing
                       2
                      ) [EnumerationVal]
                    ) [SingleEnumeration]
                    EnumerationNoVal(
                     SecondThing
                    ) [EnumerationNoVal]
                  ) [Enumerations]
                  EnumerationNoVal(
                   ThreeThing
                  ) [EnumerationNoVal]
                ) [Enumerations]
                EnumerationNoVal(
                 FourThing
                ) [EnumerationNoVal]
              ) [Enumerations]
            ) [EnumDeclarationNode]
          ) [EnumDeclaration]
        ) [Declarations]
        ClassDeclaration(
          ClassDeclarationWithoutMethods(
            ClassDeclIdent(
             Klasa
            ) [ClassDeclIdent]
            NoExtension(
            ) [NoExtension]
            NoImplementation(
            ) [NoImplementation]
            ClassVarDeclarationList(
              ClassVarDeclarationList(
                NoClassVarDeclaration(
                ) [NoClassVarDeclaration]
                ClassVarDeclNode(
                  ClassVarDeclType(
                    TypeNode(
                     int
                    ) [TypeNode]
                  ) [ClassVarDeclType]
                  ClassVariables(
                    ClassVariables(
                      SingleClassVariable(
                        VariableNoBracket(
                         k1
                        ) [VariableNoBracket]
                      ) [SingleClassVariable]
                      VariableNoBracket(
                       k2
                      ) [VariableNoBracket]
                    ) [ClassVariables]
                    VariableNoBracket(
                     k3
                    ) [VariableNoBracket]
                  ) [ClassVariables]
                ) [ClassVarDeclNode]
              ) [ClassVarDeclarationList]
              ClassVarDeclNode(
                ClassVarDeclType(
                  TypeNode(
                   bool
                  ) [TypeNode]
                ) [ClassVarDeclType]
                ClassVariables(
                  SingleClassVariable(
                    VariableNoBracket(
                     b1
                    ) [VariableNoBracket]
                  ) [SingleClassVariable]
                  VariableNoBracket(
                   b2
                  ) [VariableNoBracket]
                ) [ClassVariables]
              ) [ClassVarDeclNode]
            ) [ClassVarDeclarationList]
          ) [ClassDeclarationWithoutMethods]
        ) [ClassDeclaration]
      ) [Declarations]
      ClassDeclaration(
        ClassDeclarationWithMethods(
          ClassDeclIdent(
           Klasa2
          ) [ClassDeclIdent]
          Extension(
            TypeNode(
             Klasa
            ) [TypeNode]
          ) [Extension]
          NoImplementation(
          ) [NoImplementation]
          ClassVarDeclarationList(
            NoClassVarDeclaration(
            ) [NoClassVarDeclaration]
            ClassVarDeclNode(
              ClassVarDeclType(
                TypeNode(
                 bool
                ) [TypeNode]
              ) [ClassVarDeclType]
              ClassVariables(
                SingleClassVariable(
                  VariableNoBracket(
                   b1
                  ) [VariableNoBracket]
                ) [SingleClassVariable]
                VariableNoBracket(
                 b2
                ) [VariableNoBracket]
              ) [ClassVariables]
            ) [ClassVarDeclNode]
          ) [ClassVarDeclarationList]
          ClassMethodDeclarations(
            NoClassMethodDecl(
            ) [NoClassMethodDecl]
            MethodDecl(
              MethodTypeName(
                VoidType(
                ) [VoidType]
               f
              ) [MethodTypeName]
              FormalParams(
                SingleFormalParamDecl(
                  FormalParamDeclarationNoBrackets(
                    TypeNode(
                     int
                    ) [TypeNode]
                   x
                  ) [FormalParamDeclarationNoBrackets]
                ) [SingleFormalParamDecl]
              ) [FormalParams]
              NoVarDeclaration(
              ) [NoVarDeclaration]
              MethodLBRACE(
              ) [MethodLBRACE]
              NoStatement(
              ) [NoStatement]
            ) [MethodDecl]
          ) [ClassMethodDeclarations]
        ) [ClassDeclarationWithMethods]
      ) [ClassDeclaration]
    ) [Declarations]
    VarDeclaration(
      GlobalVarDeclNode(
        VarDeclType(
          TypeNode(
           Klasa2
          ) [TypeNode]
        ) [VarDeclType]
        SingleVariable(
          VariableNoBracket(
           a
          ) [VariableNoBracket]
        ) [SingleVariable]
      ) [GlobalVarDeclNode]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      NoVarDeclaration(
      ) [NoVarDeclaration]
      MethodLBRACE(
      ) [MethodLBRACE]
      Statements(
        Statements(
          NoStatement(
          ) [NoStatement]
          DesignatorStatementOnly(
            DesignatorStatementAssignop(
              DesignatorNode(
                Idents(
                  Idents(
                    SingleIdentExpr(
                     a
                    ) [SingleIdentExpr]
                   k
                  ) [Idents]
                 k2
                ) [Idents]
              ) [DesignatorNode]
              Assignop(
              ) [Assignop]
              SingleExpression(
                TermFactor(
                  DesignatorEmpty(
                    DesignatorNode(
                      Idents(
                        SingleIdentExpr(
                         ThingA
                        ) [SingleIdentExpr]
                       FirstThing
                      ) [Idents]
                    ) [DesignatorNode]
                  ) [DesignatorEmpty]
                ) [TermFactor]
              ) [SingleExpression]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementOnly]
        ) [Statements]
        DesignatorStatementOnly(
          DesignatorStatementActPars(
            DesignatorNode(
              Idents(
                SingleIdentExpr(
                 a
                ) [SingleIdentExpr]
               f
              ) [Idents]
            ) [DesignatorNode]
            ActParsNode(
              SingleActualParam(
                SingleExpression(
                  TermFactor(
                    DesignatorEmpty(
                      DesignatorNode(
                        SingleIdentExpr(
                         x
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                    ) [DesignatorEmpty]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [SingleActualParam]
            ) [ActParsNode]
          ) [DesignatorStatementActPars]
        ) [DesignatorStatementOnly]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:28:19,026 - ===================================
INFO  19:28:19,029 - Deklarisana single promenljiva x na liniji 5
INFO  19:28:19,029 - Deklarisana single promenljiva y na liniji 5
INFO  19:28:19,029 - Deklarisana single promenljiva z na liniji 5
INFO  19:28:19,029 - Deklarisana array promenljiva arr na liniji 6
INFO  19:28:19,029 - Definisana konstanta (2)X na liniji 7
INFO  19:28:19,029 - Definisana konstanta (4)Y na liniji 7
INFO  19:28:19,030 - Definisana konstanta (95)C na liniji 8
INFO  19:28:19,030 - Definisana konstanta (0)B na liniji 9
INFO  19:28:19,030 - Deklarisan novi enum tip: ThingA na liniji 11
INFO  19:28:19,030 - Definisana enum konstanta FirstThing sa vrednoscu 0 na liniji 11
INFO  19:28:19,030 - Definisana enum konstanta SecondThing sa vrednoscu 4 na liniji 11
INFO  19:28:19,030 - Definisana enum konstanta ThirdThing sa vrednoscu 5 na liniji 11
INFO  19:28:19,030 - Definisana enum konstanta FourthThing sa vrednoscu 7 na liniji 11
INFO  19:28:19,030 - Deklarisan novi enum tip: ThingB na liniji 12
INFO  19:28:19,030 - Definisana enum konstanta OneThing sa vrednoscu 2 na liniji 12
INFO  19:28:19,030 - Definisana enum konstanta SecondThing sa vrednoscu 3 na liniji 12
INFO  19:28:19,030 - Definisana enum konstanta ThreeThing sa vrednoscu 4 na liniji 12
INFO  19:28:19,030 - Definisana enum konstanta FourThing sa vrednoscu 5 na liniji 12
INFO  19:28:19,030 - Deklarisano single polje k1 na liniji 15
INFO  19:28:19,030 - Deklarisano single polje k2 na liniji 15
INFO  19:28:19,030 - Deklarisano single polje k3 na liniji 15
INFO  19:28:19,030 - Deklarisano single polje b1 na liniji 16
INFO  19:28:19,030 - Deklarisano single polje b2 na liniji 16
INFO  19:28:19,030 - Deklarisano single polje b1 na liniji 20
INFO  19:28:19,030 - Deklarisano single polje b2 na liniji 20
INFO  19:28:19,030 - Deklarisana metoda f u okviru klase Klasa2 na liniji 22
INFO  19:28:19,030 - Deklarisan single argument x na liniji 22
INFO  19:28:19,030 - Deklarisana single promenljiva a na liniji 27
INFO  19:28:19,030 - Definisana funkcija main na liniji 29
ERROR 19:28:19,031 - Greska na liniji 30 : polje k nije deklarisano! (u okviru:a)
ERROR 19:28:19,031 - Greska na liniji 30 : podrzani samo Enum i Class tipovi. 
INFO  19:28:19,031 - Izabrano polje : .FirstThing
INFO  19:28:19,031 - Pronadjen poziv promenljive [Con FirstThing: int, 0, 1 ] na liniji 30
ERROR 19:28:19,031 - Greska na liniji 30 : nekompatibilni tipovi u dodeli vrednosti! 
INFO  19:28:19,031 - Izabrano polje : .f
INFO  19:28:19,031 - Pronadjen poziv promenljive [Var x: int, 0, 0 ] na liniji 31
INFO  19:28:19,031 - Pronadjen poziv funkcije f sa 1/1 argumenta na liniji 31
INFO  19:28:19,031 - main funkcija je korektna.  na liniji 29
INFO  19:28:19,031 - ===================================
ERROR 19:28:19,032 - Parsiranje NIJE uspesno zavrseno!
