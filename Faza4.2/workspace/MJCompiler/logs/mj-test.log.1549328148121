INFO  01:54:11,994 - Putanja iz argumenta: test/program.mj
INFO  01:54:11,994 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  01:54:12,032 - #2 program
INFO  01:54:12,032 - #45 MJProgram
INFO  01:54:12,032 - #45 int
INFO  01:54:12,033 - #45 x
INFO  01:54:12,033 - #18 ;
INFO  01:54:12,033 - #45 int
INFO  01:54:12,033 - #45 y
INFO  01:54:12,034 - #19 ,
INFO  01:54:12,034 - #45 z
INFO  01:54:12,034 - #18 ;
INFO  01:54:12,034 - #45 int
INFO  01:54:12,034 - #45 arr
INFO  01:54:12,034 - #14 [
INFO  01:54:12,034 - #15 ]
INFO  01:54:12,034 - #18 ;
INFO  01:54:12,034 - #8 const
INFO  01:54:12,034 - #45 int
INFO  01:54:12,034 - #45 X
INFO  01:54:12,035 - #26 =
INFO  01:54:12,035 - #44 2
INFO  01:54:12,035 - #19 ,
INFO  01:54:12,035 - #45 Y
INFO  01:54:12,035 - #26 =
INFO  01:54:12,035 - #44 4
INFO  01:54:12,035 - #18 ;
INFO  01:54:12,036 - #8 const
INFO  01:54:12,036 - #45 char
INFO  01:54:12,036 - #45 C
INFO  01:54:12,036 - #26 =
INFO  01:54:12,036 - #46 _
INFO  01:54:12,036 - #18 ;
INFO  01:54:12,036 - #8 const
INFO  01:54:12,036 - #45 bool
INFO  01:54:12,036 - #45 B
INFO  01:54:12,037 - #26 =
INFO  01:54:12,037 - #47 0
INFO  01:54:12,037 - #18 ;
INFO  01:54:12,037 - #6 enum
INFO  01:54:12,037 - #45 ThingA
INFO  01:54:12,037 - #12 {
INFO  01:54:12,037 - #45 FirstThing
INFO  01:54:12,037 - #19 ,
INFO  01:54:12,037 - #45 SecondThing
INFO  01:54:12,037 - #26 =
INFO  01:54:12,037 - #44 4
INFO  01:54:12,038 - #19 ,
INFO  01:54:12,038 - #45 ThirdThing
INFO  01:54:12,038 - #19 ,
INFO  01:54:12,038 - #45 FourthThing
INFO  01:54:12,038 - #26 =
INFO  01:54:12,038 - #44 7
INFO  01:54:12,038 - #13 }
INFO  01:54:12,038 - #6 enum
INFO  01:54:12,038 - #45 ThingB
INFO  01:54:12,038 - #12 {
INFO  01:54:12,038 - #45 OneThing
INFO  01:54:12,038 - #26 =
INFO  01:54:12,038 - #44 2
INFO  01:54:12,038 - #19 ,
INFO  01:54:12,038 - #45 SecondThing
INFO  01:54:12,038 - #19 ,
INFO  01:54:12,038 - #45 ThreeThing
INFO  01:54:12,039 - #19 ,
INFO  01:54:12,039 - #45 FourThing
INFO  01:54:12,039 - #13 }
INFO  01:54:12,039 - #12 {
INFO  01:54:12,039 - #45 int
INFO  01:54:12,039 - #45 fibo
INFO  01:54:12,039 - #16 (
INFO  01:54:12,039 - #45 int
INFO  01:54:12,040 - #45 n
INFO  01:54:12,040 - #17 )
INFO  01:54:12,040 - #12 {
INFO  01:54:12,040 - #9 if
INFO  01:54:12,041 - #16 (
INFO  01:54:12,041 - #45 n
INFO  01:54:12,041 - #33 <
INFO  01:54:12,041 - #44 2
INFO  01:54:12,042 - #17 )
INFO  01:54:12,042 - #38 return
INFO  01:54:12,042 - #44 1
INFO  01:54:12,042 - #18 ;
INFO  01:54:12,042 - #38 return
INFO  01:54:12,043 - #45 fibo
INFO  01:54:12,043 - #16 (
INFO  01:54:12,043 - #45 n
INFO  01:54:12,043 - #22 -
INFO  01:54:12,043 - #44 1
INFO  01:54:12,043 - #17 )
INFO  01:54:12,044 - #21 +
INFO  01:54:12,044 - #45 fibo
INFO  01:54:12,044 - #16 (
INFO  01:54:12,044 - #45 n
INFO  01:54:12,044 - #22 -
INFO  01:54:12,044 - #44 2
INFO  01:54:12,044 - #17 )
INFO  01:54:12,044 - #18 ;
INFO  01:54:12,045 - #13 }
INFO  01:54:12,045 - #39 void
INFO  01:54:12,045 - #45 main
INFO  01:54:12,045 - #16 (
INFO  01:54:12,045 - #17 )
INFO  01:54:12,046 - #45 int
INFO  01:54:12,046 - #45 aa
INFO  01:54:12,046 - #19 ,
INFO  01:54:12,046 - #45 bb
INFO  01:54:12,046 - #18 ;
INFO  01:54:12,046 - #45 char
INFO  01:54:12,046 - #45 u
INFO  01:54:12,046 - #18 ;
INFO  01:54:12,046 - #45 int
INFO  01:54:12,046 - #45 e
INFO  01:54:12,046 - #18 ;
INFO  01:54:12,046 - #45 bool
INFO  01:54:12,046 - #45 b
INFO  01:54:12,046 - #18 ;
INFO  01:54:12,046 - #45 ThingA
INFO  01:54:12,046 - #45 t1
INFO  01:54:12,046 - #18 ;
INFO  01:54:12,046 - #45 ThingB
INFO  01:54:12,046 - #45 t2
INFO  01:54:12,046 - #18 ;
INFO  01:54:12,046 - #45 ThingA
INFO  01:54:12,047 - #45 things
INFO  01:54:12,047 - #14 [
INFO  01:54:12,047 - #15 ]
INFO  01:54:12,047 - #18 ;
INFO  01:54:12,047 - #45 char
INFO  01:54:12,047 - #45 str
INFO  01:54:12,047 - #14 [
INFO  01:54:12,047 - #15 ]
INFO  01:54:12,048 - #18 ;
INFO  01:54:12,048 - #45 int
INFO  01:54:12,048 - #45 i
INFO  01:54:12,048 - #19 ,
INFO  01:54:12,048 - #45 j
INFO  01:54:12,048 - #18 ;
INFO  01:54:12,048 - #12 {
INFO  01:54:12,048 - #45 aa
INFO  01:54:12,048 - #26 =
INFO  01:54:12,048 - #44 5
INFO  01:54:12,049 - #18 ;
INFO  01:54:12,049 - #45 bb
INFO  01:54:12,049 - #26 =
INFO  01:54:12,049 - #44 2
INFO  01:54:12,049 - #18 ;
INFO  01:54:12,049 - #45 arr
INFO  01:54:12,049 - #26 =
INFO  01:54:12,049 - #10 new
INFO  01:54:12,049 - #45 int
INFO  01:54:12,049 - #14 [
INFO  01:54:12,050 - #44 10
INFO  01:54:12,050 - #15 ]
INFO  01:54:12,050 - #18 ;
INFO  01:54:12,050 - #45 arr
INFO  01:54:12,050 - #14 [
INFO  01:54:12,050 - #44 0
INFO  01:54:12,050 - #15 ]
INFO  01:54:12,050 - #26 =
INFO  01:54:12,050 - #44 25
INFO  01:54:12,050 - #18 ;
INFO  01:54:12,050 - #45 aa
INFO  01:54:12,050 - #27 ++
INFO  01:54:12,050 - #18 ;
INFO  01:54:12,051 - #11 print
INFO  01:54:12,051 - #16 (
INFO  01:54:12,051 - #45 aa
INFO  01:54:12,051 - #17 )
INFO  01:54:12,051 - #18 ;
INFO  01:54:12,051 - #13 }
INFO  01:54:12,051 - #13 }
INFO  01:54:12,056 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                Declarations(
                  NoDecl(
                  ) [NoDecl]
                  VarDeclaration(
                    VarDeclNode(
                      VarDeclType(
                        TypeNode(
                         int
                        ) [TypeNode]
                      ) [VarDeclType]
                      SingleVariable(
                        VariableNoBracket(
                         x
                        ) [VariableNoBracket]
                      ) [SingleVariable]
                    ) [VarDeclNode]
                  ) [VarDeclaration]
                ) [Declarations]
                VarDeclaration(
                  VarDeclNode(
                    VarDeclType(
                      TypeNode(
                       int
                      ) [TypeNode]
                    ) [VarDeclType]
                    Variables(
                      SingleVariable(
                        VariableNoBracket(
                         y
                        ) [VariableNoBracket]
                      ) [SingleVariable]
                      VariableNoBracket(
                       z
                      ) [VariableNoBracket]
                    ) [Variables]
                  ) [VarDeclNode]
                ) [VarDeclaration]
              ) [Declarations]
              VarDeclaration(
                VarDeclNode(
                  VarDeclType(
                    TypeNode(
                     int
                    ) [TypeNode]
                  ) [VarDeclType]
                  SingleVariable(
                    VariableBracket(
                     arr
                    ) [VariableBracket]
                  ) [SingleVariable]
                ) [VarDeclNode]
              ) [VarDeclaration]
            ) [Declarations]
            ConstDeclaration(
              ConstDeclNode(
                ConstDeclType(
                  TypeNode(
                   int
                  ) [TypeNode]
                ) [ConstDeclType]
                Constants(
                  SingleConstant(
                    IdentEqualConstantNode(
                     X
                      NumberNode(
                       2
                      ) [NumberNode]
                    ) [IdentEqualConstantNode]
                  ) [SingleConstant]
                  IdentEqualConstantNode(
                   Y
                    NumberNode(
                     4
                    ) [NumberNode]
                  ) [IdentEqualConstantNode]
                ) [Constants]
              ) [ConstDeclNode]
            ) [ConstDeclaration]
          ) [Declarations]
          ConstDeclaration(
            ConstDeclNode(
              ConstDeclType(
                TypeNode(
                 char
                ) [TypeNode]
              ) [ConstDeclType]
              SingleConstant(
                IdentEqualConstantNode(
                 C
                  CharNode(
                   _
                  ) [CharNode]
                ) [IdentEqualConstantNode]
              ) [SingleConstant]
            ) [ConstDeclNode]
          ) [ConstDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclNode(
            ConstDeclType(
              TypeNode(
               bool
              ) [TypeNode]
            ) [ConstDeclType]
            SingleConstant(
              IdentEqualConstantNode(
               B
                BooleanNode(
                 0
                ) [BooleanNode]
              ) [IdentEqualConstantNode]
            ) [SingleConstant]
          ) [ConstDeclNode]
        ) [ConstDeclaration]
      ) [Declarations]
      EnumDeclaration(
        EnumDeclarationNode(
          EnumIdent(
           ThingA
          ) [EnumIdent]
          Enumerations(
            Enumerations(
              Enumerations(
                SingleEnumeration(
                  EnumerationNoVal(
                   FirstThing
                  ) [EnumerationNoVal]
                ) [SingleEnumeration]
                EnumerationVal(
                 SecondThing
                 4
                ) [EnumerationVal]
              ) [Enumerations]
              EnumerationNoVal(
               ThirdThing
              ) [EnumerationNoVal]
            ) [Enumerations]
            EnumerationVal(
             FourthThing
             7
            ) [EnumerationVal]
          ) [Enumerations]
        ) [EnumDeclarationNode]
      ) [EnumDeclaration]
    ) [Declarations]
    EnumDeclaration(
      EnumDeclarationNode(
        EnumIdent(
         ThingB
        ) [EnumIdent]
        Enumerations(
          Enumerations(
            Enumerations(
              SingleEnumeration(
                EnumerationVal(
                 OneThing
                 2
                ) [EnumerationVal]
              ) [SingleEnumeration]
              EnumerationNoVal(
               SecondThing
              ) [EnumerationNoVal]
            ) [Enumerations]
            EnumerationNoVal(
             ThreeThing
            ) [EnumerationNoVal]
          ) [Enumerations]
          EnumerationNoVal(
           FourThing
          ) [EnumerationNoVal]
        ) [Enumerations]
      ) [EnumDeclarationNode]
    ) [EnumDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          NoVoidType(
            TypeNode(
             int
            ) [TypeNode]
          ) [NoVoidType]
         fibo
        ) [MethodTypeName]
        FormalParams(
          SingleFormalParamDecl(
            FormalParamDeclarationNoBrackets(
              TypeNode(
               int
              ) [TypeNode]
             n
            ) [FormalParamDeclarationNoBrackets]
          ) [SingleFormalParamDecl]
        ) [FormalParams]
        NoVarDeclaration(
        ) [NoVarDeclaration]
        MethodLBRACE(
        ) [MethodLBRACE]
        Statements(
          Statements(
            NoStatement(
            ) [NoStatement]
            IfStatement(
              IfConditionNode(
                ConditionNode(
                  SingleConditionTerm(
                    ConditionTermNode(
                      SingleConditionFact(
                        CondFactExpressionRelopExpression(
                          SingleExpression(
                            TermFactor(
                              DesignatorEmpty(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   n
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                              ) [DesignatorEmpty]
                            ) [TermFactor]
                          ) [SingleExpression]
                          RelopLess(
                          ) [RelopLess]
                          SingleExpression(
                            TermFactor(
                              ConstantNumber(
                               2
                              ) [ConstantNumber]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [CondFactExpressionRelopExpression]
                      ) [SingleConditionFact]
                    ) [ConditionTermNode]
                  ) [SingleConditionTerm]
                ) [ConditionNode]
              ) [IfConditionNode]
              IfStatementThen(
                ReturnStatementExpr(
                  SingleExpression(
                    TermFactor(
                      ConstantNumber(
                       1
                      ) [ConstantNumber]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [ReturnStatementExpr]
              ) [IfStatementThen]
            ) [IfStatement]
          ) [Statements]
          ReturnStatementExpr(
            ExpressionNode(
              SingleExpression(
                TermFactor(
                  DesignatorBraceActPars(
                    DesignatorNode(
                      SingleIdentExpr(
                       fibo
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                    ActParsNode(
                      SingleActualParam(
                        ExpressionNode(
                          SingleExpression(
                            TermFactor(
                              DesignatorEmpty(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   n
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                              ) [DesignatorEmpty]
                            ) [TermFactor]
                          ) [SingleExpression]
                          AddopMinus(
                          ) [AddopMinus]
                          TermFactor(
                            ConstantNumber(
                             1
                            ) [ConstantNumber]
                          ) [TermFactor]
                        ) [ExpressionNode]
                      ) [SingleActualParam]
                    ) [ActParsNode]
                  ) [DesignatorBraceActPars]
                ) [TermFactor]
              ) [SingleExpression]
              AddopPlus(
              ) [AddopPlus]
              TermFactor(
                DesignatorBraceActPars(
                  DesignatorNode(
                    SingleIdentExpr(
                     fibo
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                  ActParsNode(
                    SingleActualParam(
                      ExpressionNode(
                        SingleExpression(
                          TermFactor(
                            DesignatorEmpty(
                              DesignatorNode(
                                SingleIdentExpr(
                                 n
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermFactor]
                        ) [SingleExpression]
                        AddopMinus(
                        ) [AddopMinus]
                        TermFactor(
                          ConstantNumber(
                           2
                          ) [ConstantNumber]
                        ) [TermFactor]
                      ) [ExpressionNode]
                    ) [SingleActualParam]
                  ) [ActParsNode]
                ) [DesignatorBraceActPars]
              ) [TermFactor]
            ) [ExpressionNode]
          ) [ReturnStatementExpr]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      VarDeclarationList(
        VarDeclarationList(
          VarDeclarationList(
            VarDeclarationList(
              VarDeclarationList(
                VarDeclarationList(
                  VarDeclarationList(
                    VarDeclarationList(
                      VarDeclarationList(
                        NoVarDeclaration(
                        ) [NoVarDeclaration]
                        VarDeclNode(
                          VarDeclType(
                            TypeNode(
                             int
                            ) [TypeNode]
                          ) [VarDeclType]
                          Variables(
                            SingleVariable(
                              VariableNoBracket(
                               aa
                              ) [VariableNoBracket]
                            ) [SingleVariable]
                            VariableNoBracket(
                             bb
                            ) [VariableNoBracket]
                          ) [Variables]
                        ) [VarDeclNode]
                      ) [VarDeclarationList]
                      VarDeclNode(
                        VarDeclType(
                          TypeNode(
                           char
                          ) [TypeNode]
                        ) [VarDeclType]
                        SingleVariable(
                          VariableNoBracket(
                           u
                          ) [VariableNoBracket]
                        ) [SingleVariable]
                      ) [VarDeclNode]
                    ) [VarDeclarationList]
                    VarDeclNode(
                      VarDeclType(
                        TypeNode(
                         int
                        ) [TypeNode]
                      ) [VarDeclType]
                      SingleVariable(
                        VariableNoBracket(
                         e
                        ) [VariableNoBracket]
                      ) [SingleVariable]
                    ) [VarDeclNode]
                  ) [VarDeclarationList]
                  VarDeclNode(
                    VarDeclType(
                      TypeNode(
                       bool
                      ) [TypeNode]
                    ) [VarDeclType]
                    SingleVariable(
                      VariableNoBracket(
                       b
                      ) [VariableNoBracket]
                    ) [SingleVariable]
                  ) [VarDeclNode]
                ) [VarDeclarationList]
                VarDeclNode(
                  VarDeclType(
                    TypeNode(
                     ThingA
                    ) [TypeNode]
                  ) [VarDeclType]
                  SingleVariable(
                    VariableNoBracket(
                     t1
                    ) [VariableNoBracket]
                  ) [SingleVariable]
                ) [VarDeclNode]
              ) [VarDeclarationList]
              VarDeclNode(
                VarDeclType(
                  TypeNode(
                   ThingB
                  ) [TypeNode]
                ) [VarDeclType]
                SingleVariable(
                  VariableNoBracket(
                   t2
                  ) [VariableNoBracket]
                ) [SingleVariable]
              ) [VarDeclNode]
            ) [VarDeclarationList]
            VarDeclNode(
              VarDeclType(
                TypeNode(
                 ThingA
                ) [TypeNode]
              ) [VarDeclType]
              SingleVariable(
                VariableBracket(
                 things
                ) [VariableBracket]
              ) [SingleVariable]
            ) [VarDeclNode]
          ) [VarDeclarationList]
          VarDeclNode(
            VarDeclType(
              TypeNode(
               char
              ) [TypeNode]
            ) [VarDeclType]
            SingleVariable(
              VariableBracket(
               str
              ) [VariableBracket]
            ) [SingleVariable]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        VarDeclNode(
          VarDeclType(
            TypeNode(
             int
            ) [TypeNode]
          ) [VarDeclType]
          Variables(
            SingleVariable(
              VariableNoBracket(
               i
              ) [VariableNoBracket]
            ) [SingleVariable]
            VariableNoBracket(
             j
            ) [VariableNoBracket]
          ) [Variables]
        ) [VarDeclNode]
      ) [VarDeclarationList]
      MethodLBRACE(
      ) [MethodLBRACE]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStatement(
                  ) [NoStatement]
                  DesignatorStatementOnly(
                    DesignatorStatementAssignop(
                      DesignatorNode(
                        SingleIdentExpr(
                         aa
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                      Assignop(
                      ) [Assignop]
                      SingleExpression(
                        TermFactor(
                          ConstantNumber(
                           5
                          ) [ConstantNumber]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementOnly]
                ) [Statements]
                DesignatorStatementOnly(
                  DesignatorStatementAssignop(
                    DesignatorNode(
                      SingleIdentExpr(
                       bb
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                    Assignop(
                    ) [Assignop]
                    SingleExpression(
                      TermFactor(
                        ConstantNumber(
                         2
                        ) [ConstantNumber]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementOnly]
              ) [Statements]
              DesignatorStatementOnly(
                DesignatorStatementAssignop(
                  DesignatorNode(
                    SingleIdentExpr(
                     arr
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    TermFactor(
                      NewArray(
                        NewArrayType(
                          TypeNode(
                           int
                          ) [TypeNode]
                        ) [NewArrayType]
                        SingleExpression(
                          TermFactor(
                            ConstantNumber(
                             10
                            ) [ConstantNumber]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [NewArray]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementOnly]
            ) [Statements]
            DesignatorStatementOnly(
              DesignatorStatementAssignop(
                DesignatorNode(
                  Exprs(
                    IdentExprListArray(
                      SingleIdentExpr(
                       arr
                      ) [SingleIdentExpr]
                    ) [IdentExprListArray]
                    SingleExpression(
                      TermFactor(
                        ConstantNumber(
                         0
                        ) [ConstantNumber]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [Exprs]
                ) [DesignatorNode]
                Assignop(
                ) [Assignop]
                SingleExpression(
                  TermFactor(
                    ConstantNumber(
                     25
                    ) [ConstantNumber]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementOnly]
          ) [Statements]
          DesignatorStatementOnly(
            DesignatorStatementPlusPlus(
              DesignatorNode(
                SingleIdentExpr(
                 aa
                ) [SingleIdentExpr]
              ) [DesignatorNode]
            ) [DesignatorStatementPlusPlus]
          ) [DesignatorStatementOnly]
        ) [Statements]
        PrintStatement(
          SingleExpression(
            TermFactor(
              DesignatorEmpty(
                DesignatorNode(
                  SingleIdentExpr(
                   aa
                  ) [SingleIdentExpr]
                ) [DesignatorNode]
              ) [DesignatorEmpty]
            ) [TermFactor]
          ) [SingleExpression]
        ) [PrintStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  01:54:12,057 - ===================================
INFO  01:54:12,060 - Deklarisana single promenljiva x na liniji 5
INFO  01:54:12,060 - Deklarisana single promenljiva y na liniji 5
INFO  01:54:12,060 - Deklarisana single promenljiva z na liniji 5
INFO  01:54:12,060 - Deklarisana array promenljiva arr na liniji 6
INFO  01:54:12,060 - Definisana konstanta (2)X na liniji 7
INFO  01:54:12,060 - Definisana konstanta (4)Y na liniji 7
INFO  01:54:12,060 - Definisana konstanta (95)C na liniji 8
INFO  01:54:12,060 - Definisana konstanta (0)B na liniji 9
INFO  01:54:12,060 - Deklarisan novi enum tip: ThingA na liniji 11
INFO  01:54:12,060 - Definisana enum konstanta FirstThing sa vrednoscu 0 na liniji 11
INFO  01:54:12,060 - Definisana enum konstanta SecondThing sa vrednoscu 4 na liniji 11
INFO  01:54:12,060 - Definisana enum konstanta ThirdThing sa vrednoscu 5 na liniji 11
INFO  01:54:12,060 - Definisana enum konstanta FourthThing sa vrednoscu 7 na liniji 11
INFO  01:54:12,060 - Deklarisan novi enum tip: ThingB na liniji 12
INFO  01:54:12,060 - Definisana enum konstanta OneThing sa vrednoscu 2 na liniji 12
INFO  01:54:12,061 - Definisana enum konstanta SecondThing sa vrednoscu 3 na liniji 12
INFO  01:54:12,061 - Definisana enum konstanta ThreeThing sa vrednoscu 4 na liniji 12
INFO  01:54:12,061 - Definisana enum konstanta FourThing sa vrednoscu 5 na liniji 12
INFO  01:54:12,061 - Definisana funkcija fibo na liniji 15
INFO  01:54:12,061 - Deklarisan single argument n na liniji 15
INFO  01:54:12,061 - Pronadjen poziv promenljive n na liniji 17
INFO  01:54:12,061 - Pronadjen poziv promenljive n na liniji 18
INFO  01:54:12,061 - Pronadjen poziv funkcije fibo sa 1/1 argumenta na liniji 18
INFO  01:54:12,061 - Pronadjen poziv promenljive n na liniji 18
INFO  01:54:12,061 - Pronadjen poziv funkcije fibo sa 1/1 argumenta na liniji 18
INFO  01:54:12,062 - Definisana funkcija main na liniji 21
INFO  01:54:12,062 - Deklarisana single promenljiva aa na liniji 22
INFO  01:54:12,062 - Deklarisana single promenljiva bb na liniji 22
INFO  01:54:12,062 - Deklarisana single promenljiva u na liniji 23
INFO  01:54:12,062 - Deklarisana single promenljiva e na liniji 23
INFO  01:54:12,062 - Deklarisana single promenljiva b na liniji 24
INFO  01:54:12,062 - Deklarisana single promenljiva t1 na liniji 25
INFO  01:54:12,062 - Deklarisana single promenljiva t2 na liniji 25
INFO  01:54:12,062 - Deklarisana array promenljiva things na liniji 26
INFO  01:54:12,062 - Deklarisana array promenljiva str na liniji 27
INFO  01:54:12,062 - Deklarisana single promenljiva i na liniji 28
INFO  01:54:12,062 - Deklarisana single promenljiva j na liniji 28
INFO  01:54:12,062 - Dodela vrednosti za aa na liniji 30
INFO  01:54:12,062 - Dodela vrednosti za bb na liniji 31
INFO  01:54:12,062 - Dodela vrednosti za arr na liniji 32
INFO  01:54:12,062 - Dodela vrednosti za $elem na liniji 33
INFO  01:54:12,062 - Pronadjen poziv promenljive aa na liniji 35
INFO  01:54:12,062 - main funkcija je korektna.  na liniji 21
INFO  01:54:12,062 - ===================================
INFO  01:54:12,073 - Parsiranje uspesno zavrseno!
