INFO  14:45:42,913 - Putanja iz argumenta: test/program.mj
INFO  14:45:42,913 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  14:45:42,947 - #2 program
INFO  14:45:42,948 - #45 Program
INFO  14:45:42,948 - #8 const
INFO  14:45:42,948 - #45 bool
INFO  14:45:42,948 - #45 const_bool1
INFO  14:45:42,949 - #26 =
INFO  14:45:42,949 - #47 1
INFO  14:45:42,949 - #19 ,
INFO  14:45:42,949 - #45 const_bool2
INFO  14:45:42,949 - #26 =
INFO  14:45:42,949 - #47 1
INFO  14:45:42,949 - #19 ,
INFO  14:45:42,950 - #45 const_bool3
INFO  14:45:42,950 - #26 =
INFO  14:45:42,950 - #47 0
INFO  14:45:42,950 - #18 ;
INFO  14:45:42,950 - #8 const
INFO  14:45:42,950 - #45 int
INFO  14:45:42,950 - #45 const_int1
INFO  14:45:42,950 - #26 =
INFO  14:45:42,950 - #44 1
INFO  14:45:42,951 - #18 ;
INFO  14:45:42,951 - #8 const
INFO  14:45:42,951 - #45 char
INFO  14:45:42,951 - #45 const_char1
INFO  14:45:42,951 - #26 =
INFO  14:45:42,951 - #46 a
INFO  14:45:42,951 - #19 ,
INFO  14:45:42,951 - #45 const_char2
INFO  14:45:42,951 - #26 =
INFO  14:45:42,951 - #46 b
INFO  14:45:42,951 - #19 ,
INFO  14:45:42,951 - #45 const_char3
INFO  14:45:42,951 - #26 =
INFO  14:45:42,952 - #46 c
INFO  14:45:42,952 - #18 ;
INFO  14:45:42,952 - #6 enum
INFO  14:45:42,952 - #45 type_enum1
INFO  14:45:42,952 - #12 {
INFO  14:45:42,952 - #45 ZERO
INFO  14:45:42,952 - #19 ,
INFO  14:45:42,952 - #45 ONE
INFO  14:45:42,952 - #19 ,
INFO  14:45:42,952 - #45 THREE
INFO  14:45:42,952 - #26 =
INFO  14:45:42,953 - #44 3
INFO  14:45:42,953 - #19 ,
INFO  14:45:42,953 - #45 FIVE
INFO  14:45:42,953 - #26 =
INFO  14:45:42,953 - #44 5
INFO  14:45:42,953 - #19 ,
INFO  14:45:42,953 - #45 SIX
INFO  14:45:42,953 - #19 ,
INFO  14:45:42,953 - #45 SEVEN
INFO  14:45:42,953 - #19 ,
INFO  14:45:42,953 - #45 TEN
INFO  14:45:42,953 - #26 =
INFO  14:45:42,953 - #44 10
INFO  14:45:42,953 - #13 }
INFO  14:45:42,953 - #6 enum
INFO  14:45:42,954 - #45 type_enum2
INFO  14:45:42,954 - #12 {
INFO  14:45:42,954 - #45 X
INFO  14:45:42,954 - #13 }
INFO  14:45:42,954 - #45 int
INFO  14:45:42,954 - #45 var_int1
INFO  14:45:42,954 - #19 ,
INFO  14:45:42,954 - #45 var_int2
INFO  14:45:42,955 - #19 ,
INFO  14:45:42,955 - #45 var_ints1
INFO  14:45:42,955 - #14 [
INFO  14:45:42,955 - #15 ]
INFO  14:45:42,955 - #19 ,
INFO  14:45:42,955 - #45 var_ints2
INFO  14:45:42,955 - #14 [
INFO  14:45:42,955 - #15 ]
INFO  14:45:42,955 - #18 ;
INFO  14:45:42,955 - #45 char
INFO  14:45:42,955 - #45 var_char1
INFO  14:45:42,955 - #19 ,
INFO  14:45:42,955 - #45 var_chars1
INFO  14:45:42,955 - #14 [
INFO  14:45:42,955 - #15 ]
INFO  14:45:42,955 - #18 ;
INFO  14:45:42,955 - #45 bool
INFO  14:45:42,955 - #45 var_bool1
INFO  14:45:42,955 - #19 ,
INFO  14:45:42,956 - #45 var_bool2
INFO  14:45:42,956 - #19 ,
INFO  14:45:42,956 - #45 var_bools1
INFO  14:45:42,956 - #14 [
INFO  14:45:42,956 - #15 ]
INFO  14:45:42,956 - #18 ;
INFO  14:45:42,956 - #45 type_enum1
INFO  14:45:42,956 - #45 var_enum1
INFO  14:45:42,956 - #19 ,
INFO  14:45:42,956 - #45 var_enum2
INFO  14:45:42,956 - #19 ,
INFO  14:45:42,956 - #45 var_enums1
INFO  14:45:42,956 - #14 [
INFO  14:45:42,956 - #15 ]
INFO  14:45:42,956 - #18 ;
INFO  14:45:42,956 - #12 {
INFO  14:45:42,956 - #45 int
INFO  14:45:42,956 - #45 funkc1
INFO  14:45:42,957 - #16 (
INFO  14:45:42,957 - #45 int
INFO  14:45:42,957 - #45 arg1
INFO  14:45:42,957 - #17 )
INFO  14:45:42,957 - #45 int
INFO  14:45:42,958 - #45 local_int1
INFO  14:45:42,958 - #19 ,
INFO  14:45:42,958 - #45 local_int2
INFO  14:45:42,958 - #18 ;
INFO  14:45:42,958 - #45 char
INFO  14:45:42,958 - #45 local_char1
INFO  14:45:42,958 - #19 ,
INFO  14:45:42,958 - #45 local_char2
INFO  14:45:42,958 - #18 ;
INFO  14:45:42,958 - #45 bool
INFO  14:45:42,958 - #45 var_bool1
INFO  14:45:42,958 - #18 ;
INFO  14:45:42,958 - #12 {
INFO  14:45:42,958 - #45 var_bool1
INFO  14:45:42,959 - #26 =
INFO  14:45:42,959 - #47 0
INFO  14:45:42,959 - #18 ;
INFO  14:45:42,959 - #9 if
INFO  14:45:42,960 - #16 (
INFO  14:45:42,960 - #45 const_bool1
INFO  14:45:42,960 - #36 ||
INFO  14:45:42,961 - #45 var_bool1
INFO  14:45:42,961 - #35 &&
INFO  14:45:42,961 - #46 A
INFO  14:45:42,961 - #29 ==
INFO  14:45:42,961 - #46 A
INFO  14:45:42,962 - #36 ||
INFO  14:45:42,962 - #47 1
INFO  14:45:42,962 - #35 &&
INFO  14:45:42,962 - #47 0
INFO  14:45:42,962 - #36 ||
INFO  14:45:42,962 - #22 -
INFO  14:45:42,962 - #44 2
INFO  14:45:42,962 - #33 <
INFO  14:45:42,963 - #16 (
INFO  14:45:42,963 - #44 3
INFO  14:45:42,963 - #23 *
INFO  14:45:42,963 - #44 20
INFO  14:45:42,963 - #24 /
INFO  14:45:42,964 - #16 (
INFO  14:45:42,964 - #45 type_enum1
INFO  14:45:42,964 - #20 .
INFO  14:45:42,964 - #45 ONE
INFO  14:45:42,964 - #17 )
INFO  14:45:42,964 - #23 *
INFO  14:45:42,964 - #44 2
INFO  14:45:42,964 - #21 +
INFO  14:45:42,964 - #45 local_int1
INFO  14:45:42,965 - #17 )
INFO  14:45:42,965 - #17 )
INFO  14:45:42,965 - #45 arg1
INFO  14:45:42,965 - #26 =
INFO  14:45:42,965 - #45 arg1
INFO  14:45:42,965 - #21 +
INFO  14:45:42,965 - #44 1
INFO  14:45:42,965 - #18 ;
INFO  14:45:42,965 - #38 return
INFO  14:45:42,965 - #44 1
INFO  14:45:42,965 - #21 +
INFO  14:45:42,966 - #44 2
INFO  14:45:42,966 - #23 *
INFO  14:45:42,966 - #45 local_int1
INFO  14:45:42,966 - #18 ;
INFO  14:45:42,966 - #13 }
INFO  14:45:42,966 - #39 void
INFO  14:45:42,966 - #45 funkc2
INFO  14:45:42,966 - #16 (
INFO  14:45:42,966 - #45 bool
INFO  14:45:42,966 - #45 args
INFO  14:45:42,966 - #14 [
INFO  14:45:42,967 - #15 ]
INFO  14:45:42,967 - #19 ,
INFO  14:45:42,967 - #45 char
INFO  14:45:42,967 - #45 arg
INFO  14:45:42,967 - #19 ,
INFO  14:45:42,967 - #45 char
INFO  14:45:42,967 - #45 args2
INFO  14:45:42,967 - #14 [
INFO  14:45:42,967 - #15 ]
INFO  14:45:42,967 - #17 )
INFO  14:45:42,967 - #45 int
INFO  14:45:42,967 - #45 i
INFO  14:45:42,967 - #18 ;
INFO  14:45:42,967 - #12 {
INFO  14:45:42,967 - #9 if
INFO  14:45:42,967 - #16 (
INFO  14:45:42,967 - #45 args
INFO  14:45:42,967 - #14 [
INFO  14:45:42,967 - #44 0
INFO  14:45:42,967 - #21 +
INFO  14:45:42,967 - #44 1
INFO  14:45:42,967 - #15 ]
INFO  14:45:42,967 - #36 ||
INFO  14:45:42,967 - #45 arg
INFO  14:45:42,967 - #29 ==
INFO  14:45:42,968 - #46 A
INFO  14:45:42,968 - #17 )
INFO  14:45:42,968 - #12 {
INFO  14:45:42,968 - #45 args
INFO  14:45:42,968 - #14 [
INFO  14:45:42,968 - #44 0
INFO  14:45:42,968 - #15 ]
INFO  14:45:42,968 - #26 =
INFO  14:45:42,968 - #47 0
INFO  14:45:42,968 - #18 ;
INFO  14:45:42,968 - #13 }
INFO  14:45:42,968 - #7 else
INFO  14:45:42,968 - #9 if
INFO  14:45:42,968 - #16 (
INFO  14:45:42,968 - #45 type_enum2
INFO  14:45:42,968 - #20 .
INFO  14:45:42,968 - #45 X
INFO  14:45:42,968 - #30 !=
INFO  14:45:42,969 - #44 5
INFO  14:45:42,969 - #35 &&
INFO  14:45:42,969 - #45 const_int1
INFO  14:45:42,969 - #34 <=
INFO  14:45:42,969 - #44 2
INFO  14:45:42,970 - #17 )
INFO  14:45:42,970 - #45 arg
INFO  14:45:42,970 - #26 =
INFO  14:45:42,970 - #46 B
INFO  14:45:42,970 - #18 ;
INFO  14:45:42,970 - #7 else
INFO  14:45:42,970 - #12 {
INFO  14:45:42,970 - #45 args2
INFO  14:45:42,970 - #14 [
INFO  14:45:42,970 - #44 0
INFO  14:45:42,970 - #15 ]
INFO  14:45:42,970 - #26 =
INFO  14:45:42,970 - #46 h
INFO  14:45:42,970 - #18 ;
INFO  14:45:42,970 - #45 args2
INFO  14:45:42,971 - #14 [
INFO  14:45:42,971 - #44 1
INFO  14:45:42,971 - #15 ]
INFO  14:45:42,971 - #26 =
INFO  14:45:42,971 - #46 u
INFO  14:45:42,971 - #18 ;
INFO  14:45:42,971 - #45 args2
INFO  14:45:42,971 - #14 [
INFO  14:45:42,971 - #44 2
INFO  14:45:42,971 - #15 ]
INFO  14:45:42,971 - #26 =
INFO  14:45:42,971 - #46 d
INFO  14:45:42,971 - #18 ;
INFO  14:45:42,971 - #45 args2
INFO  14:45:42,971 - #14 [
INFO  14:45:42,971 - #44 3
INFO  14:45:42,971 - #15 ]
INFO  14:45:42,971 - #26 =
INFO  14:45:42,972 - #46 i
INFO  14:45:42,972 - #18 ;
INFO  14:45:42,972 - #40 for
INFO  14:45:42,972 - #16 (
INFO  14:45:42,972 - #45 i
INFO  14:45:42,972 - #26 =
INFO  14:45:42,972 - #44 0
INFO  14:45:42,972 - #18 ;
INFO  14:45:42,972 - #45 i
INFO  14:45:42,972 - #33 <
INFO  14:45:42,972 - #45 type_enum1
INFO  14:45:42,972 - #20 .
INFO  14:45:42,972 - #45 TEN
INFO  14:45:42,972 - #18 ;
INFO  14:45:42,973 - #45 i
INFO  14:45:42,973 - #27 ++
INFO  14:45:42,973 - #17 )
INFO  14:45:42,973 - #12 {
INFO  14:45:42,973 - #45 args2
INFO  14:45:42,973 - #14 [
INFO  14:45:42,973 - #45 i
INFO  14:45:42,973 - #21 +
INFO  14:45:42,973 - #44 1
INFO  14:45:42,973 - #15 ]
INFO  14:45:42,974 - #26 =
INFO  14:45:42,974 - #46  
INFO  14:45:42,974 - #18 ;
INFO  14:45:42,974 - #3 break
INFO  14:45:42,974 - #18 ;
INFO  14:45:42,974 - #43 continue
INFO  14:45:42,975 - #18 ;
INFO  14:45:42,975 - #13 }
INFO  14:45:42,975 - #13 }
INFO  14:45:42,975 - #13 }
INFO  14:45:42,975 - #39 void
INFO  14:45:42,975 - #45 funkc3
INFO  14:45:42,975 - #16 (
INFO  14:45:42,975 - #45 int
INFO  14:45:42,975 - #45 arr
INFO  14:45:42,975 - #14 [
INFO  14:45:42,975 - #15 ]
INFO  14:45:42,975 - #17 )
INFO  14:45:42,975 - #45 int
INFO  14:45:42,975 - #45 i
INFO  14:45:42,975 - #18 ;
INFO  14:45:42,976 - #12 {
INFO  14:45:42,976 - #9 if
INFO  14:45:42,976 - #16 (
INFO  14:45:42,976 - #47 1
INFO  14:45:42,976 - #17 )
INFO  14:45:42,976 - #9 if
INFO  14:45:42,976 - #16 (
INFO  14:45:42,976 - #47 1
INFO  14:45:42,976 - #17 )
INFO  14:45:42,976 - #9 if
INFO  14:45:42,976 - #16 (
INFO  14:45:42,976 - #47 1
INFO  14:45:42,976 - #17 )
INFO  14:45:42,978 - #40 for
INFO  14:45:42,978 - #16 (
INFO  14:45:42,978 - #45 i
INFO  14:45:42,978 - #26 =
INFO  14:45:42,978 - #44 1
INFO  14:45:42,978 - #18 ;
INFO  14:45:42,978 - #46 a
INFO  14:45:42,979 - #30 !=
INFO  14:45:42,979 - #46 b
INFO  14:45:42,979 - #18 ;
INFO  14:45:42,979 - #17 )
INFO  14:45:42,979 - #45 arr
INFO  14:45:42,979 - #14 [
INFO  14:45:42,979 - #45 arr
INFO  14:45:42,979 - #14 [
INFO  14:45:42,979 - #45 arr
INFO  14:45:42,979 - #14 [
INFO  14:45:42,979 - #45 arr
INFO  14:45:42,979 - #14 [
INFO  14:45:42,979 - #45 i
INFO  14:45:42,979 - #15 ]
INFO  14:45:42,979 - #15 ]
INFO  14:45:42,979 - #15 ]
INFO  14:45:42,979 - #15 ]
INFO  14:45:42,979 - #26 =
INFO  14:45:42,979 - #45 arr
INFO  14:45:42,979 - #14 [
INFO  14:45:42,979 - #45 i
INFO  14:45:42,979 - #21 +
INFO  14:45:42,979 - #44 2
INFO  14:45:42,979 - #15 ]
INFO  14:45:42,979 - #18 ;
INFO  14:45:42,979 - #38 return
INFO  14:45:42,979 - #18 ;
INFO  14:45:42,979 - #13 }
INFO  14:45:42,980 - #45 bool
INFO  14:45:42,980 - #45 ret
INFO  14:45:42,980 - #16 (
INFO  14:45:42,980 - #17 )
INFO  14:45:42,980 - #12 {
INFO  14:45:42,980 - #38 return
INFO  14:45:42,980 - #47 0
INFO  14:45:42,980 - #18 ;
INFO  14:45:42,980 - #13 }
INFO  14:45:42,980 - #45 bool
INFO  14:45:42,980 - #45 funkc4
INFO  14:45:42,980 - #16 (
INFO  14:45:42,980 - #45 char
INFO  14:45:42,980 - #45 args
INFO  14:45:42,980 - #14 [
INFO  14:45:42,980 - #15 ]
INFO  14:45:42,980 - #17 )
INFO  14:45:42,980 - #45 char
INFO  14:45:42,980 - #45 c1
INFO  14:45:42,980 - #19 ,
INFO  14:45:42,980 - #45 c2
INFO  14:45:42,980 - #18 ;
INFO  14:45:42,980 - #45 int
INFO  14:45:42,980 - #45 i
INFO  14:45:42,980 - #18 ;
INFO  14:45:42,980 - #45 char
INFO  14:45:42,980 - #45 local_args
INFO  14:45:42,980 - #14 [
INFO  14:45:42,981 - #15 ]
INFO  14:45:42,981 - #18 ;
INFO  14:45:42,981 - #12 {
INFO  14:45:42,981 - #40 for
INFO  14:45:42,981 - #16 (
INFO  14:45:42,981 - #18 ;
INFO  14:45:42,981 - #18 ;
INFO  14:45:42,981 - #17 )
INFO  14:45:42,981 - #3 break
INFO  14:45:42,981 - #18 ;
INFO  14:45:42,981 - #37 read
INFO  14:45:42,981 - #16 (
INFO  14:45:42,981 - #45 i
INFO  14:45:42,981 - #17 )
INFO  14:45:42,981 - #18 ;
INFO  14:45:42,981 - #45 funkc3
INFO  14:45:42,981 - #16 (
INFO  14:45:42,981 - #45 null
INFO  14:45:42,981 - #17 )
INFO  14:45:42,981 - #18 ;
INFO  14:45:42,981 - #45 local_args
INFO  14:45:42,981 - #26 =
INFO  14:45:42,981 - #45 args
INFO  14:45:42,981 - #18 ;
INFO  14:45:42,982 - #9 if
INFO  14:45:42,982 - #16 (
INFO  14:45:42,982 - #45 ret
INFO  14:45:42,982 - #16 (
INFO  14:45:42,982 - #17 )
INFO  14:45:42,982 - #17 )
INFO  14:45:42,982 - #38 return
INFO  14:45:42,982 - #47 1
INFO  14:45:42,982 - #18 ;
INFO  14:45:42,982 - #11 print
INFO  14:45:42,982 - #16 (
INFO  14:45:42,982 - #22 -
INFO  14:45:42,982 - #44 2
INFO  14:45:42,982 - #23 *
INFO  14:45:42,982 - #45 i
INFO  14:45:42,982 - #19 ,
INFO  14:45:42,982 - #44 1
INFO  14:45:42,982 - #17 )
INFO  14:45:42,982 - #18 ;
INFO  14:45:42,982 - #11 print
INFO  14:45:42,982 - #16 (
INFO  14:45:42,982 - #22 -
INFO  14:45:42,982 - #45 const_int1
INFO  14:45:42,982 - #23 *
INFO  14:45:42,982 - #16 (
INFO  14:45:42,982 - #16 (
INFO  14:45:42,982 - #45 i
INFO  14:45:42,982 - #17 )
INFO  14:45:42,982 - #17 )
INFO  14:45:42,982 - #17 )
INFO  14:45:42,982 - #18 ;
INFO  14:45:42,982 - #38 return
INFO  14:45:42,983 - #45 var_bools1
INFO  14:45:42,983 - #14 [
INFO  14:45:42,983 - #45 const_int1
INFO  14:45:42,983 - #15 ]
INFO  14:45:42,983 - #18 ;
INFO  14:45:42,983 - #38 return
INFO  14:45:42,983 - #45 ret
INFO  14:45:42,983 - #16 (
INFO  14:45:42,983 - #17 )
INFO  14:45:42,983 - #18 ;
INFO  14:45:42,983 - #13 }
INFO  14:45:42,983 - #39 void
INFO  14:45:42,983 - #45 main
INFO  14:45:42,983 - #16 (
INFO  14:45:42,983 - #17 )
INFO  14:45:42,983 - #45 int
INFO  14:45:42,983 - #45 var_bool1
INFO  14:45:42,983 - #19 ,
INFO  14:45:42,983 - #45 var_int1
INFO  14:45:42,983 - #18 ;
INFO  14:45:42,983 - #12 {
INFO  14:45:42,983 - #45 var_int1
INFO  14:45:42,983 - #26 =
INFO  14:45:42,983 - #22 -
INFO  14:45:42,983 - #44 10
INFO  14:45:42,983 - #18 ;
INFO  14:45:42,983 - #45 funkc4
INFO  14:45:42,983 - #16 (
INFO  14:45:42,983 - #45 null
INFO  14:45:42,983 - #17 )
INFO  14:45:42,983 - #18 ;
INFO  14:45:42,983 - #45 var_ints1
INFO  14:45:42,983 - #26 =
INFO  14:45:42,983 - #10 new
INFO  14:45:42,983 - #45 int
INFO  14:45:42,983 - #14 [
INFO  14:45:42,983 - #44 100
INFO  14:45:42,984 - #23 *
INFO  14:45:42,984 - #44 2
INFO  14:45:42,984 - #15 ]
INFO  14:45:42,984 - #18 ;
INFO  14:45:42,984 - #45 var_ints2
INFO  14:45:42,984 - #26 =
INFO  14:45:42,984 - #10 new
INFO  14:45:42,984 - #45 int
INFO  14:45:42,984 - #14 [
INFO  14:45:42,984 - #44 10
INFO  14:45:42,984 - #21 +
INFO  14:45:42,984 - #45 funkc1
INFO  14:45:42,984 - #16 (
INFO  14:45:42,984 - #22 -
INFO  14:45:42,984 - #45 var_int1
INFO  14:45:42,984 - #25 %
INFO  14:45:42,984 - #44 5
INFO  14:45:42,985 - #17 )
INFO  14:45:42,985 - #15 ]
INFO  14:45:42,985 - #18 ;
INFO  14:45:42,985 - #45 var_chars1
INFO  14:45:42,985 - #26 =
INFO  14:45:42,985 - #45 null
INFO  14:45:42,985 - #18 ;
INFO  14:45:42,985 - #45 funkc3
INFO  14:45:42,985 - #16 (
INFO  14:45:42,985 - #10 new
INFO  14:45:42,985 - #45 int
INFO  14:45:42,985 - #14 [
INFO  14:45:42,985 - #44 5
INFO  14:45:42,985 - #15 ]
INFO  14:45:42,985 - #17 )
INFO  14:45:42,985 - #18 ;
INFO  14:45:42,985 - #45 var_bools1
INFO  14:45:42,985 - #14 [
INFO  14:45:42,985 - #45 var_ints1
INFO  14:45:42,985 - #14 [
INFO  14:45:42,985 - #45 var_ints2
INFO  14:45:42,985 - #14 [
INFO  14:45:42,985 - #45 funkc1
INFO  14:45:42,985 - #16 (
INFO  14:45:42,985 - #45 const_int1
INFO  14:45:42,985 - #25 %
INFO  14:45:42,985 - #44 10
INFO  14:45:42,985 - #21 +
INFO  14:45:42,986 - #45 type_enum1
INFO  14:45:42,986 - #20 .
INFO  14:45:42,986 - #45 THREE
INFO  14:45:42,986 - #24 /
INFO  14:45:42,986 - #16 (
INFO  14:45:42,986 - #45 var_ints1
INFO  14:45:42,986 - #14 [
INFO  14:45:42,986 - #44 2
INFO  14:45:42,986 - #15 ]
INFO  14:45:42,986 - #21 +
INFO  14:45:42,986 - #44 2
INFO  14:45:42,986 - #17 )
INFO  14:45:42,986 - #17 )
INFO  14:45:42,986 - #15 ]
INFO  14:45:42,986 - #15 ]
INFO  14:45:42,986 - #15 ]
INFO  14:45:42,986 - #26 =
INFO  14:45:42,986 - #47 1
INFO  14:45:42,986 - #18 ;
INFO  14:45:42,986 - #13 }
INFO  14:45:42,986 - #13 }
INFO  14:45:42,997 - Program(
  ProgName(
   Program
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                Declarations(
                  Declarations(
                    NoDecl(
                    ) [NoDecl]
                    ConstDeclaration(
                      ConstDeclNode(
                        ConstDeclType(
                          TypeNode(
                           bool
                          ) [TypeNode]
                        ) [ConstDeclType]
                        Constants(
                          Constants(
                            SingleConstant(
                              IdentEqualConstantNode(
                               const_bool1
                                BooleanNode(
                                 1
                                ) [BooleanNode]
                              ) [IdentEqualConstantNode]
                            ) [SingleConstant]
                            IdentEqualConstantNode(
                             const_bool2
                              BooleanNode(
                               1
                              ) [BooleanNode]
                            ) [IdentEqualConstantNode]
                          ) [Constants]
                          IdentEqualConstantNode(
                           const_bool3
                            BooleanNode(
                             0
                            ) [BooleanNode]
                          ) [IdentEqualConstantNode]
                        ) [Constants]
                      ) [ConstDeclNode]
                    ) [ConstDeclaration]
                  ) [Declarations]
                  ConstDeclaration(
                    ConstDeclNode(
                      ConstDeclType(
                        TypeNode(
                         int
                        ) [TypeNode]
                      ) [ConstDeclType]
                      SingleConstant(
                        IdentEqualConstantNode(
                         const_int1
                          NumberNode(
                           1
                          ) [NumberNode]
                        ) [IdentEqualConstantNode]
                      ) [SingleConstant]
                    ) [ConstDeclNode]
                  ) [ConstDeclaration]
                ) [Declarations]
                ConstDeclaration(
                  ConstDeclNode(
                    ConstDeclType(
                      TypeNode(
                       char
                      ) [TypeNode]
                    ) [ConstDeclType]
                    Constants(
                      Constants(
                        SingleConstant(
                          IdentEqualConstantNode(
                           const_char1
                            CharNode(
                             a
                            ) [CharNode]
                          ) [IdentEqualConstantNode]
                        ) [SingleConstant]
                        IdentEqualConstantNode(
                         const_char2
                          CharNode(
                           b
                          ) [CharNode]
                        ) [IdentEqualConstantNode]
                      ) [Constants]
                      IdentEqualConstantNode(
                       const_char3
                        CharNode(
                         c
                        ) [CharNode]
                      ) [IdentEqualConstantNode]
                    ) [Constants]
                  ) [ConstDeclNode]
                ) [ConstDeclaration]
              ) [Declarations]
              EnumDeclaration(
                EnumDeclarationNode(
                  EnumIdent(
                   type_enum1
                  ) [EnumIdent]
                  Enumerations(
                    Enumerations(
                      Enumerations(
                        Enumerations(
                          Enumerations(
                            Enumerations(
                              SingleEnumeration(
                                EnumerationNoVal(
                                 ZERO
                                ) [EnumerationNoVal]
                              ) [SingleEnumeration]
                              EnumerationNoVal(
                               ONE
                              ) [EnumerationNoVal]
                            ) [Enumerations]
                            EnumerationVal(
                             THREE
                             3
                            ) [EnumerationVal]
                          ) [Enumerations]
                          EnumerationVal(
                           FIVE
                           5
                          ) [EnumerationVal]
                        ) [Enumerations]
                        EnumerationNoVal(
                         SIX
                        ) [EnumerationNoVal]
                      ) [Enumerations]
                      EnumerationNoVal(
                       SEVEN
                      ) [EnumerationNoVal]
                    ) [Enumerations]
                    EnumerationVal(
                     TEN
                     10
                    ) [EnumerationVal]
                  ) [Enumerations]
                ) [EnumDeclarationNode]
              ) [EnumDeclaration]
            ) [Declarations]
            EnumDeclaration(
              EnumDeclarationNode(
                EnumIdent(
                 type_enum2
                ) [EnumIdent]
                SingleEnumeration(
                  EnumerationNoVal(
                   X
                  ) [EnumerationNoVal]
                ) [SingleEnumeration]
              ) [EnumDeclarationNode]
            ) [EnumDeclaration]
          ) [Declarations]
          VarDeclaration(
            VarDeclNode(
              VarDeclType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [VarDeclType]
              Variables(
                Variables(
                  Variables(
                    SingleVariable(
                      VariableNoBracket(
                       var_int1
                      ) [VariableNoBracket]
                    ) [SingleVariable]
                    VariableNoBracket(
                     var_int2
                    ) [VariableNoBracket]
                  ) [Variables]
                  VariableBracket(
                   var_ints1
                  ) [VariableBracket]
                ) [Variables]
                VariableBracket(
                 var_ints2
                ) [VariableBracket]
              ) [Variables]
            ) [VarDeclNode]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclNode(
            VarDeclType(
              TypeNode(
               char
              ) [TypeNode]
            ) [VarDeclType]
            Variables(
              SingleVariable(
                VariableNoBracket(
                 var_char1
                ) [VariableNoBracket]
              ) [SingleVariable]
              VariableBracket(
               var_chars1
              ) [VariableBracket]
            ) [Variables]
          ) [VarDeclNode]
        ) [VarDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclNode(
          VarDeclType(
            TypeNode(
             bool
            ) [TypeNode]
          ) [VarDeclType]
          Variables(
            Variables(
              SingleVariable(
                VariableNoBracket(
                 var_bool1
                ) [VariableNoBracket]
              ) [SingleVariable]
              VariableNoBracket(
               var_bool2
              ) [VariableNoBracket]
            ) [Variables]
            VariableBracket(
             var_bools1
            ) [VariableBracket]
          ) [Variables]
        ) [VarDeclNode]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclNode(
        VarDeclType(
          TypeNode(
           type_enum1
          ) [TypeNode]
        ) [VarDeclType]
        Variables(
          Variables(
            SingleVariable(
              VariableNoBracket(
               var_enum1
              ) [VariableNoBracket]
            ) [SingleVariable]
            VariableNoBracket(
             var_enum2
            ) [VariableNoBracket]
          ) [Variables]
          VariableBracket(
           var_enums1
          ) [VariableBracket]
        ) [Variables]
      ) [VarDeclNode]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          MethodDeclarations(
            MethodDeclarations(
              NoMethodDecl(
              ) [NoMethodDecl]
              MethodDecl(
                MethodTypeName(
                  NoVoidType(
                    TypeNode(
                     int
                    ) [TypeNode]
                  ) [NoVoidType]
                 funkc1
                ) [MethodTypeName]
                FormalParams(
                  SingleFormalParamDecl(
                    FormalParamDeclarationNoBrackets(
                      TypeNode(
                       int
                      ) [TypeNode]
                     arg1
                    ) [FormalParamDeclarationNoBrackets]
                  ) [SingleFormalParamDecl]
                ) [FormalParams]
                VarDeclarationList(
                  VarDeclarationList(
                    VarDeclarationList(
                      NoVarDeclaration(
                      ) [NoVarDeclaration]
                      VarDeclNode(
                        VarDeclType(
                          TypeNode(
                           int
                          ) [TypeNode]
                        ) [VarDeclType]
                        Variables(
                          SingleVariable(
                            VariableNoBracket(
                             local_int1
                            ) [VariableNoBracket]
                          ) [SingleVariable]
                          VariableNoBracket(
                           local_int2
                          ) [VariableNoBracket]
                        ) [Variables]
                      ) [VarDeclNode]
                    ) [VarDeclarationList]
                    VarDeclNode(
                      VarDeclType(
                        TypeNode(
                         char
                        ) [TypeNode]
                      ) [VarDeclType]
                      Variables(
                        SingleVariable(
                          VariableNoBracket(
                           local_char1
                          ) [VariableNoBracket]
                        ) [SingleVariable]
                        VariableNoBracket(
                         local_char2
                        ) [VariableNoBracket]
                      ) [Variables]
                    ) [VarDeclNode]
                  ) [VarDeclarationList]
                  VarDeclNode(
                    VarDeclType(
                      TypeNode(
                       bool
                      ) [TypeNode]
                    ) [VarDeclType]
                    SingleVariable(
                      VariableNoBracket(
                       var_bool1
                      ) [VariableNoBracket]
                    ) [SingleVariable]
                  ) [VarDeclNode]
                ) [VarDeclarationList]
                Statements(
                  Statements(
                    Statements(
                      NoStatement(
                      ) [NoStatement]
                      DesignatorStatementOnly(
                        DesignatorStatementAssignop(
                          DesignatorNode(
                            SingleIdentExpr(
                             var_bool1
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                          Assignop(
                          ) [Assignop]
                          SingleExpression(
                            TermFactor(
                              ConstantBoolean(
                               0
                              ) [ConstantBoolean]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementOnly]
                    ) [Statements]
                    IfStatement(
                      IfConditionNode(
                        ConditionNode(
                          ConditionTerms(
                            ConditionTerms(
                              ConditionTerms(
                                SingleConditionTerm(
                                  ConditionTermNode(
                                    SingleConditionFact(
                                      CondFactExpression(
                                        SingleExpression(
                                          TermFactor(
                                            DesignatorEmpty(
                                              DesignatorNode(
                                                SingleIdentExpr(
                                                 const_bool1
                                                ) [SingleIdentExpr]
                                              ) [DesignatorNode]
                                            ) [DesignatorEmpty]
                                          ) [TermFactor]
                                        ) [SingleExpression]
                                      ) [CondFactExpression]
                                    ) [SingleConditionFact]
                                  ) [ConditionTermNode]
                                ) [SingleConditionTerm]
                                ConditionTermNode(
                                  ConditionFacts(
                                    SingleConditionFact(
                                      CondFactExpression(
                                        SingleExpression(
                                          TermFactor(
                                            DesignatorEmpty(
                                              DesignatorNode(
                                                SingleIdentExpr(
                                                 var_bool1
                                                ) [SingleIdentExpr]
                                              ) [DesignatorNode]
                                            ) [DesignatorEmpty]
                                          ) [TermFactor]
                                        ) [SingleExpression]
                                      ) [CondFactExpression]
                                    ) [SingleConditionFact]
                                    CondFactExpressionRelopExpression(
                                      SingleExpression(
                                        TermFactor(
                                          ConstantCharacter(
                                           A
                                          ) [ConstantCharacter]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                      RelopEqualEqual(
                                      ) [RelopEqualEqual]
                                      SingleExpression(
                                        TermFactor(
                                          ConstantCharacter(
                                           A
                                          ) [ConstantCharacter]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                    ) [CondFactExpressionRelopExpression]
                                  ) [ConditionFacts]
                                ) [ConditionTermNode]
                              ) [ConditionTerms]
                              ConditionTermNode(
                                ConditionFacts(
                                  SingleConditionFact(
                                    CondFactExpression(
                                      SingleExpression(
                                        TermFactor(
                                          ConstantBoolean(
                                           1
                                          ) [ConstantBoolean]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                    ) [CondFactExpression]
                                  ) [SingleConditionFact]
                                  CondFactExpression(
                                    SingleExpression(
                                      TermFactor(
                                        ConstantBoolean(
                                         0
                                        ) [ConstantBoolean]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [CondFactExpression]
                                ) [ConditionFacts]
                              ) [ConditionTermNode]
                            ) [ConditionTerms]
                            ConditionTermNode(
                              SingleConditionFact(
                                CondFactExpressionRelopExpression(
                                  SingleExpressionMinus(
                                    TermFactor(
                                      ConstantNumber(
                                       2
                                      ) [ConstantNumber]
                                    ) [TermFactor]
                                  ) [SingleExpressionMinus]
                                  RelopLess(
                                  ) [RelopLess]
                                  SingleExpression(
                                    TermFactor(
                                      ExprParenNode(
                                        ExpressionNode(
                                          SingleExpression(
                                            TermNode(
                                              TermNode(
                                                TermNode(
                                                  TermFactor(
                                                    ConstantNumber(
                                                     3
                                                    ) [ConstantNumber]
                                                  ) [TermFactor]
                                                  AddopMul(
                                                  ) [AddopMul]
                                                  ConstantNumber(
                                                   20
                                                  ) [ConstantNumber]
                                                ) [TermNode]
                                                AddopDiv(
                                                ) [AddopDiv]
                                                ExprParenNode(
                                                  SingleExpression(
                                                    TermFactor(
                                                      DesignatorEmpty(
                                                        DesignatorNode(
                                                          Idents(
                                                            SingleIdentExpr(
                                                             type_enum1
                                                            ) [SingleIdentExpr]
                                                           ONE
                                                          ) [Idents]
                                                        ) [DesignatorNode]
                                                      ) [DesignatorEmpty]
                                                    ) [TermFactor]
                                                  ) [SingleExpression]
                                                ) [ExprParenNode]
                                              ) [TermNode]
                                              AddopMul(
                                              ) [AddopMul]
                                              ConstantNumber(
                                               2
                                              ) [ConstantNumber]
                                            ) [TermNode]
                                          ) [SingleExpression]
                                          AddopPlus(
                                          ) [AddopPlus]
                                          TermFactor(
                                            DesignatorEmpty(
                                              DesignatorNode(
                                                SingleIdentExpr(
                                                 local_int1
                                                ) [SingleIdentExpr]
                                              ) [DesignatorNode]
                                            ) [DesignatorEmpty]
                                          ) [TermFactor]
                                        ) [ExpressionNode]
                                      ) [ExprParenNode]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [CondFactExpressionRelopExpression]
                              ) [SingleConditionFact]
                            ) [ConditionTermNode]
                          ) [ConditionTerms]
                        ) [ConditionNode]
                      ) [IfConditionNode]
                      DesignatorStatementOnly(
                        DesignatorStatementAssignop(
                          DesignatorNode(
                            SingleIdentExpr(
                             arg1
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                          Assignop(
                          ) [Assignop]
                          ExpressionNode(
                            SingleExpression(
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     arg1
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                            AddopPlus(
                            ) [AddopPlus]
                            TermFactor(
                              ConstantNumber(
                               1
                              ) [ConstantNumber]
                            ) [TermFactor]
                          ) [ExpressionNode]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementOnly]
                    ) [IfStatement]
                  ) [Statements]
                  ReturnStatementExpr(
                    ExpressionNode(
                      SingleExpression(
                        TermFactor(
                          ConstantNumber(
                           1
                          ) [ConstantNumber]
                        ) [TermFactor]
                      ) [SingleExpression]
                      AddopPlus(
                      ) [AddopPlus]
                      TermNode(
                        TermFactor(
                          ConstantNumber(
                           2
                          ) [ConstantNumber]
                        ) [TermFactor]
                        AddopMul(
                        ) [AddopMul]
                        DesignatorEmpty(
                          DesignatorNode(
                            SingleIdentExpr(
                             local_int1
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                        ) [DesignatorEmpty]
                      ) [TermNode]
                    ) [ExpressionNode]
                  ) [ReturnStatementExpr]
                ) [Statements]
              ) [MethodDecl]
            ) [MethodDeclarations]
            MethodDecl(
              MethodTypeName(
                VoidType(
                ) [VoidType]
               funkc2
              ) [MethodTypeName]
              FormalParams(
                FormalParamDecls(
                  FormalParamDecls(
                    SingleFormalParamDecl(
                      FormalParamDeclarationBrackets(
                        TypeNode(
                         bool
                        ) [TypeNode]
                       args
                      ) [FormalParamDeclarationBrackets]
                    ) [SingleFormalParamDecl]
                    FormalParamDeclarationNoBrackets(
                      TypeNode(
                       char
                      ) [TypeNode]
                     arg
                    ) [FormalParamDeclarationNoBrackets]
                  ) [FormalParamDecls]
                  FormalParamDeclarationBrackets(
                    TypeNode(
                     char
                    ) [TypeNode]
                   args2
                  ) [FormalParamDeclarationBrackets]
                ) [FormalParamDecls]
              ) [FormalParams]
              VarDeclarationList(
                NoVarDeclaration(
                ) [NoVarDeclaration]
                VarDeclNode(
                  VarDeclType(
                    TypeNode(
                     int
                    ) [TypeNode]
                  ) [VarDeclType]
                  SingleVariable(
                    VariableNoBracket(
                     i
                    ) [VariableNoBracket]
                  ) [SingleVariable]
                ) [VarDeclNode]
              ) [VarDeclarationList]
              Statements(
                NoStatement(
                ) [NoStatement]
                IfElseStatement(
                  IfConditionNode(
                    ConditionNode(
                      ConditionTerms(
                        SingleConditionTerm(
                          ConditionTermNode(
                            SingleConditionFact(
                              CondFactExpression(
                                SingleExpression(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        Exprs(
                                          SingleIdentExpr(
                                           args
                                          ) [SingleIdentExpr]
                                          ExpressionNode(
                                            SingleExpression(
                                              TermFactor(
                                                ConstantNumber(
                                                 0
                                                ) [ConstantNumber]
                                              ) [TermFactor]
                                            ) [SingleExpression]
                                            AddopPlus(
                                            ) [AddopPlus]
                                            TermFactor(
                                              ConstantNumber(
                                               1
                                              ) [ConstantNumber]
                                            ) [TermFactor]
                                          ) [ExpressionNode]
                                        ) [Exprs]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [CondFactExpression]
                            ) [SingleConditionFact]
                          ) [ConditionTermNode]
                        ) [SingleConditionTerm]
                        ConditionTermNode(
                          SingleConditionFact(
                            CondFactExpressionRelopExpression(
                              SingleExpression(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      SingleIdentExpr(
                                       arg
                                      ) [SingleIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                              RelopEqualEqual(
                              ) [RelopEqualEqual]
                              SingleExpression(
                                TermFactor(
                                  ConstantCharacter(
                                   A
                                  ) [ConstantCharacter]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [CondFactExpressionRelopExpression]
                          ) [SingleConditionFact]
                        ) [ConditionTermNode]
                      ) [ConditionTerms]
                    ) [ConditionNode]
                  ) [IfConditionNode]
                  InBraceStatement(
                    Statements(
                      NoStatement(
                      ) [NoStatement]
                      DesignatorStatementOnly(
                        DesignatorStatementAssignop(
                          DesignatorNode(
                            Exprs(
                              SingleIdentExpr(
                               args
                              ) [SingleIdentExpr]
                              SingleExpression(
                                TermFactor(
                                  ConstantNumber(
                                   0
                                  ) [ConstantNumber]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [Exprs]
                          ) [DesignatorNode]
                          Assignop(
                          ) [Assignop]
                          SingleExpression(
                            TermFactor(
                              ConstantBoolean(
                               0
                              ) [ConstantBoolean]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementOnly]
                    ) [Statements]
                  ) [InBraceStatement]
                  IfElseStatement(
                    IfConditionNode(
                      ConditionNode(
                        SingleConditionTerm(
                          ConditionTermNode(
                            ConditionFacts(
                              SingleConditionFact(
                                CondFactExpressionRelopExpression(
                                  SingleExpression(
                                    TermFactor(
                                      DesignatorEmpty(
                                        DesignatorNode(
                                          Idents(
                                            SingleIdentExpr(
                                             type_enum2
                                            ) [SingleIdentExpr]
                                           X
                                          ) [Idents]
                                        ) [DesignatorNode]
                                      ) [DesignatorEmpty]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                  RelopNotEqual(
                                  ) [RelopNotEqual]
                                  SingleExpression(
                                    TermFactor(
                                      ConstantNumber(
                                       5
                                      ) [ConstantNumber]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [CondFactExpressionRelopExpression]
                              ) [SingleConditionFact]
                              CondFactExpressionRelopExpression(
                                SingleExpression(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        SingleIdentExpr(
                                         const_int1
                                        ) [SingleIdentExpr]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                                RelopLessEqual(
                                ) [RelopLessEqual]
                                SingleExpression(
                                  TermFactor(
                                    ConstantNumber(
                                     2
                                    ) [ConstantNumber]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [CondFactExpressionRelopExpression]
                            ) [ConditionFacts]
                          ) [ConditionTermNode]
                        ) [SingleConditionTerm]
                      ) [ConditionNode]
                    ) [IfConditionNode]
                    DesignatorStatementOnly(
                      DesignatorStatementAssignop(
                        DesignatorNode(
                          SingleIdentExpr(
                           arg
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                        Assignop(
                        ) [Assignop]
                        SingleExpression(
                          TermFactor(
                            ConstantCharacter(
                             B
                            ) [ConstantCharacter]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementOnly]
                    InBraceStatement(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                NoStatement(
                                ) [NoStatement]
                                DesignatorStatementOnly(
                                  DesignatorStatementAssignop(
                                    DesignatorNode(
                                      Exprs(
                                        SingleIdentExpr(
                                         args2
                                        ) [SingleIdentExpr]
                                        SingleExpression(
                                          TermFactor(
                                            ConstantNumber(
                                             0
                                            ) [ConstantNumber]
                                          ) [TermFactor]
                                        ) [SingleExpression]
                                      ) [Exprs]
                                    ) [DesignatorNode]
                                    Assignop(
                                    ) [Assignop]
                                    SingleExpression(
                                      TermFactor(
                                        ConstantCharacter(
                                         h
                                        ) [ConstantCharacter]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [DesignatorStatementAssignop]
                                ) [DesignatorStatementOnly]
                              ) [Statements]
                              DesignatorStatementOnly(
                                DesignatorStatementAssignop(
                                  DesignatorNode(
                                    Exprs(
                                      SingleIdentExpr(
                                       args2
                                      ) [SingleIdentExpr]
                                      SingleExpression(
                                        TermFactor(
                                          ConstantNumber(
                                           1
                                          ) [ConstantNumber]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                    ) [Exprs]
                                  ) [DesignatorNode]
                                  Assignop(
                                  ) [Assignop]
                                  SingleExpression(
                                    TermFactor(
                                      ConstantCharacter(
                                       u
                                      ) [ConstantCharacter]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [DesignatorStatementAssignop]
                              ) [DesignatorStatementOnly]
                            ) [Statements]
                            DesignatorStatementOnly(
                              DesignatorStatementAssignop(
                                DesignatorNode(
                                  Exprs(
                                    SingleIdentExpr(
                                     args2
                                    ) [SingleIdentExpr]
                                    SingleExpression(
                                      TermFactor(
                                        ConstantNumber(
                                         2
                                        ) [ConstantNumber]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [Exprs]
                                ) [DesignatorNode]
                                Assignop(
                                ) [Assignop]
                                SingleExpression(
                                  TermFactor(
                                    ConstantCharacter(
                                     d
                                    ) [ConstantCharacter]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [DesignatorStatementAssignop]
                            ) [DesignatorStatementOnly]
                          ) [Statements]
                          DesignatorStatementOnly(
                            DesignatorStatementAssignop(
                              DesignatorNode(
                                Exprs(
                                  SingleIdentExpr(
                                   args2
                                  ) [SingleIdentExpr]
                                  SingleExpression(
                                    TermFactor(
                                      ConstantNumber(
                                       3
                                      ) [ConstantNumber]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [Exprs]
                              ) [DesignatorNode]
                              Assignop(
                              ) [Assignop]
                              SingleExpression(
                                TermFactor(
                                  ConstantCharacter(
                                   i
                                  ) [ConstantCharacter]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [DesignatorStatementAssignop]
                          ) [DesignatorStatementOnly]
                        ) [Statements]
                        ForStatement(
                          ForHeader(
                            DesignatorStatementNotNull(
                              DesignatorStatementAssignop(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   i
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                                Assignop(
                                ) [Assignop]
                                SingleExpression(
                                  TermFactor(
                                    ConstantNumber(
                                     0
                                    ) [ConstantNumber]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [DesignatorStatementAssignop]
                            ) [DesignatorStatementNotNull]
                            ConditionNotNull(
                              ConditionNode(
                                SingleConditionTerm(
                                  ConditionTermNode(
                                    SingleConditionFact(
                                      CondFactExpressionRelopExpression(
                                        SingleExpression(
                                          TermFactor(
                                            DesignatorEmpty(
                                              DesignatorNode(
                                                SingleIdentExpr(
                                                 i
                                                ) [SingleIdentExpr]
                                              ) [DesignatorNode]
                                            ) [DesignatorEmpty]
                                          ) [TermFactor]
                                        ) [SingleExpression]
                                        RelopLess(
                                        ) [RelopLess]
                                        SingleExpression(
                                          TermFactor(
                                            DesignatorEmpty(
                                              DesignatorNode(
                                                Idents(
                                                  SingleIdentExpr(
                                                   type_enum1
                                                  ) [SingleIdentExpr]
                                                 TEN
                                                ) [Idents]
                                              ) [DesignatorNode]
                                            ) [DesignatorEmpty]
                                          ) [TermFactor]
                                        ) [SingleExpression]
                                      ) [CondFactExpressionRelopExpression]
                                    ) [SingleConditionFact]
                                  ) [ConditionTermNode]
                                ) [SingleConditionTerm]
                              ) [ConditionNode]
                            ) [ConditionNotNull]
                            DesignatorStatementNotNull(
                              DesignatorStatementPlusPlus(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   i
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                              ) [DesignatorStatementPlusPlus]
                            ) [DesignatorStatementNotNull]
                          ) [ForHeader]
                          InBraceStatement(
                            Statements(
                              Statements(
                                Statements(
                                  NoStatement(
                                  ) [NoStatement]
                                  DesignatorStatementOnly(
                                    DesignatorStatementAssignop(
                                      DesignatorNode(
                                        Exprs(
                                          SingleIdentExpr(
                                           args2
                                          ) [SingleIdentExpr]
                                          ExpressionNode(
                                            SingleExpression(
                                              TermFactor(
                                                DesignatorEmpty(
                                                  DesignatorNode(
                                                    SingleIdentExpr(
                                                     i
                                                    ) [SingleIdentExpr]
                                                  ) [DesignatorNode]
                                                ) [DesignatorEmpty]
                                              ) [TermFactor]
                                            ) [SingleExpression]
                                            AddopPlus(
                                            ) [AddopPlus]
                                            TermFactor(
                                              ConstantNumber(
                                               1
                                              ) [ConstantNumber]
                                            ) [TermFactor]
                                          ) [ExpressionNode]
                                        ) [Exprs]
                                      ) [DesignatorNode]
                                      Assignop(
                                      ) [Assignop]
                                      SingleExpression(
                                        TermFactor(
                                          ConstantCharacter(
                                            
                                          ) [ConstantCharacter]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                    ) [DesignatorStatementAssignop]
                                  ) [DesignatorStatementOnly]
                                ) [Statements]
                                BreakStatement(
                                  SemiDerived1(
                                  ) [SemiDerived1]
                                ) [BreakStatement]
                              ) [Statements]
                              ContinueStatement(
                                SemiDerived1(
                                ) [SemiDerived1]
                              ) [ContinueStatement]
                            ) [Statements]
                          ) [InBraceStatement]
                        ) [ForStatement]
                      ) [Statements]
                    ) [InBraceStatement]
                  ) [IfElseStatement]
                ) [IfElseStatement]
              ) [Statements]
            ) [MethodDecl]
          ) [MethodDeclarations]
          MethodDecl(
            MethodTypeName(
              VoidType(
              ) [VoidType]
             funkc3
            ) [MethodTypeName]
            FormalParams(
              SingleFormalParamDecl(
                FormalParamDeclarationBrackets(
                  TypeNode(
                   int
                  ) [TypeNode]
                 arr
                ) [FormalParamDeclarationBrackets]
              ) [SingleFormalParamDecl]
            ) [FormalParams]
            VarDeclarationList(
              NoVarDeclaration(
              ) [NoVarDeclaration]
              VarDeclNode(
                VarDeclType(
                  TypeNode(
                   int
                  ) [TypeNode]
                ) [VarDeclType]
                SingleVariable(
                  VariableNoBracket(
                   i
                  ) [VariableNoBracket]
                ) [SingleVariable]
              ) [VarDeclNode]
            ) [VarDeclarationList]
            Statements(
              Statements(
                NoStatement(
                ) [NoStatement]
                IfStatement(
                  IfConditionNode(
                    ConditionNode(
                      SingleConditionTerm(
                        ConditionTermNode(
                          SingleConditionFact(
                            CondFactExpression(
                              SingleExpression(
                                TermFactor(
                                  ConstantBoolean(
                                   1
                                  ) [ConstantBoolean]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [CondFactExpression]
                          ) [SingleConditionFact]
                        ) [ConditionTermNode]
                      ) [SingleConditionTerm]
                    ) [ConditionNode]
                  ) [IfConditionNode]
                  IfStatement(
                    IfConditionNode(
                      ConditionNode(
                        SingleConditionTerm(
                          ConditionTermNode(
                            SingleConditionFact(
                              CondFactExpression(
                                SingleExpression(
                                  TermFactor(
                                    ConstantBoolean(
                                     1
                                    ) [ConstantBoolean]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [CondFactExpression]
                            ) [SingleConditionFact]
                          ) [ConditionTermNode]
                        ) [SingleConditionTerm]
                      ) [ConditionNode]
                    ) [IfConditionNode]
                    IfStatement(
                      IfConditionNode(
                        ConditionNode(
                          SingleConditionTerm(
                            ConditionTermNode(
                              SingleConditionFact(
                                CondFactExpression(
                                  SingleExpression(
                                    TermFactor(
                                      ConstantBoolean(
                                       1
                                      ) [ConstantBoolean]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [CondFactExpression]
                              ) [SingleConditionFact]
                            ) [ConditionTermNode]
                          ) [SingleConditionTerm]
                        ) [ConditionNode]
                      ) [IfConditionNode]
                      ForStatement(
                        ForHeader(
                          DesignatorStatementNotNull(
                            DesignatorStatementAssignop(
                              DesignatorNode(
                                SingleIdentExpr(
                                 i
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                              Assignop(
                              ) [Assignop]
                              SingleExpression(
                                TermFactor(
                                  ConstantNumber(
                                   1
                                  ) [ConstantNumber]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [DesignatorStatementAssignop]
                          ) [DesignatorStatementNotNull]
                          ConditionNotNull(
                            ConditionNode(
                              SingleConditionTerm(
                                ConditionTermNode(
                                  SingleConditionFact(
                                    CondFactExpressionRelopExpression(
                                      SingleExpression(
                                        TermFactor(
                                          ConstantCharacter(
                                           a
                                          ) [ConstantCharacter]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                      RelopNotEqual(
                                      ) [RelopNotEqual]
                                      SingleExpression(
                                        TermFactor(
                                          ConstantCharacter(
                                           b
                                          ) [ConstantCharacter]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                    ) [CondFactExpressionRelopExpression]
                                  ) [SingleConditionFact]
                                ) [ConditionTermNode]
                              ) [SingleConditionTerm]
                            ) [ConditionNode]
                          ) [ConditionNotNull]
                          DesignatorStatementNull(
                          ) [DesignatorStatementNull]
                        ) [ForHeader]
                        DesignatorStatementOnly(
                          DesignatorStatementAssignop(
                            DesignatorNode(
                              Exprs(
                                SingleIdentExpr(
                                 arr
                                ) [SingleIdentExpr]
                                SingleExpression(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        Exprs(
                                          SingleIdentExpr(
                                           arr
                                          ) [SingleIdentExpr]
                                          SingleExpression(
                                            TermFactor(
                                              DesignatorEmpty(
                                                DesignatorNode(
                                                  Exprs(
                                                    SingleIdentExpr(
                                                     arr
                                                    ) [SingleIdentExpr]
                                                    SingleExpression(
                                                      TermFactor(
                                                        DesignatorEmpty(
                                                          DesignatorNode(
                                                            Exprs(
                                                              SingleIdentExpr(
                                                               arr
                                                              ) [SingleIdentExpr]
                                                              SingleExpression(
                                                                TermFactor(
                                                                  DesignatorEmpty(
                                                                    DesignatorNode(
                                                                      SingleIdentExpr(
                                                                       i
                                                                      ) [SingleIdentExpr]
                                                                    ) [DesignatorNode]
                                                                  ) [DesignatorEmpty]
                                                                ) [TermFactor]
                                                              ) [SingleExpression]
                                                            ) [Exprs]
                                                          ) [DesignatorNode]
                                                        ) [DesignatorEmpty]
                                                      ) [TermFactor]
                                                    ) [SingleExpression]
                                                  ) [Exprs]
                                                ) [DesignatorNode]
                                              ) [DesignatorEmpty]
                                            ) [TermFactor]
                                          ) [SingleExpression]
                                        ) [Exprs]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [Exprs]
                            ) [DesignatorNode]
                            Assignop(
                            ) [Assignop]
                            SingleExpression(
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                    Exprs(
                                      SingleIdentExpr(
                                       arr
                                      ) [SingleIdentExpr]
                                      ExpressionNode(
                                        SingleExpression(
                                          TermFactor(
                                            DesignatorEmpty(
                                              DesignatorNode(
                                                SingleIdentExpr(
                                                 i
                                                ) [SingleIdentExpr]
                                              ) [DesignatorNode]
                                            ) [DesignatorEmpty]
                                          ) [TermFactor]
                                        ) [SingleExpression]
                                        AddopPlus(
                                        ) [AddopPlus]
                                        TermFactor(
                                          ConstantNumber(
                                           2
                                          ) [ConstantNumber]
                                        ) [TermFactor]
                                      ) [ExpressionNode]
                                    ) [Exprs]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [DesignatorStatementAssignop]
                        ) [DesignatorStatementOnly]
                      ) [ForStatement]
                    ) [IfStatement]
                  ) [IfStatement]
                ) [IfStatement]
              ) [Statements]
              ReturnStatementVoid(
              ) [ReturnStatementVoid]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          MethodTypeName(
            NoVoidType(
              TypeNode(
               bool
              ) [TypeNode]
            ) [NoVoidType]
           ret
          ) [MethodTypeName]
          NoFormalParam(
          ) [NoFormalParam]
          NoVarDeclaration(
          ) [NoVarDeclaration]
          Statements(
            NoStatement(
            ) [NoStatement]
            ReturnStatementExpr(
              SingleExpression(
                TermFactor(
                  ConstantBoolean(
                   0
                  ) [ConstantBoolean]
                ) [TermFactor]
              ) [SingleExpression]
            ) [ReturnStatementExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          NoVoidType(
            TypeNode(
             bool
            ) [TypeNode]
          ) [NoVoidType]
         funkc4
        ) [MethodTypeName]
        FormalParams(
          SingleFormalParamDecl(
            FormalParamDeclarationBrackets(
              TypeNode(
               char
              ) [TypeNode]
             args
            ) [FormalParamDeclarationBrackets]
          ) [SingleFormalParamDecl]
        ) [FormalParams]
        VarDeclarationList(
          VarDeclarationList(
            VarDeclarationList(
              NoVarDeclaration(
              ) [NoVarDeclaration]
              VarDeclNode(
                VarDeclType(
                  TypeNode(
                   char
                  ) [TypeNode]
                ) [VarDeclType]
                Variables(
                  SingleVariable(
                    VariableNoBracket(
                     c1
                    ) [VariableNoBracket]
                  ) [SingleVariable]
                  VariableNoBracket(
                   c2
                  ) [VariableNoBracket]
                ) [Variables]
              ) [VarDeclNode]
            ) [VarDeclarationList]
            VarDeclNode(
              VarDeclType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [VarDeclType]
              SingleVariable(
                VariableNoBracket(
                 i
                ) [VariableNoBracket]
              ) [SingleVariable]
            ) [VarDeclNode]
          ) [VarDeclarationList]
          VarDeclNode(
            VarDeclType(
              TypeNode(
               char
              ) [TypeNode]
            ) [VarDeclType]
            SingleVariable(
              VariableBracket(
               local_args
              ) [VariableBracket]
            ) [SingleVariable]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          NoStatement(
                          ) [NoStatement]
                          ForStatement(
                            ForHeader(
                              DesignatorStatementNull(
                              ) [DesignatorStatementNull]
                              ConditionNull(
                              ) [ConditionNull]
                              DesignatorStatementNull(
                              ) [DesignatorStatementNull]
                            ) [ForHeader]
                            BreakStatement(
                              SemiDerived1(
                              ) [SemiDerived1]
                            ) [BreakStatement]
                          ) [ForStatement]
                        ) [Statements]
                        ReadStatement(
                          DesignatorNode(
                            SingleIdentExpr(
                             i
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                        ) [ReadStatement]
                      ) [Statements]
                      DesignatorStatementOnly(
                        DesignatorStatementActPars(
                          DesignatorNode(
                            SingleIdentExpr(
                             funkc3
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                          ActParsNode(
                            SingleActualParam(
                              SingleExpression(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      SingleIdentExpr(
                                       null
                                      ) [SingleIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [SingleActualParam]
                          ) [ActParsNode]
                        ) [DesignatorStatementActPars]
                      ) [DesignatorStatementOnly]
                    ) [Statements]
                    DesignatorStatementOnly(
                      DesignatorStatementAssignop(
                        DesignatorNode(
                          SingleIdentExpr(
                           local_args
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                        Assignop(
                        ) [Assignop]
                        SingleExpression(
                          TermFactor(
                            DesignatorEmpty(
                              DesignatorNode(
                                SingleIdentExpr(
                                 args
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementOnly]
                  ) [Statements]
                  IfStatement(
                    IfConditionNode(
                      ConditionNode(
                        SingleConditionTerm(
                          ConditionTermNode(
                            SingleConditionFact(
                              CondFactExpression(
                                SingleExpression(
                                  TermFactor(
                                    DesignatorBraceActPars(
                                      DesignatorNode(
                                        SingleIdentExpr(
                                         ret
                                        ) [SingleIdentExpr]
                                      ) [DesignatorNode]
                                      NoActAprsNode(
                                      ) [NoActAprsNode]
                                    ) [DesignatorBraceActPars]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [CondFactExpression]
                            ) [SingleConditionFact]
                          ) [ConditionTermNode]
                        ) [SingleConditionTerm]
                      ) [ConditionNode]
                    ) [IfConditionNode]
                    ReturnStatementExpr(
                      SingleExpression(
                        TermFactor(
                          ConstantBoolean(
                           1
                          ) [ConstantBoolean]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [ReturnStatementExpr]
                  ) [IfStatement]
                ) [Statements]
                PrintWithNumConstStatement(
                  SingleExpressionMinus(
                    TermNode(
                      TermFactor(
                        ConstantNumber(
                         2
                        ) [ConstantNumber]
                      ) [TermFactor]
                      AddopMul(
                      ) [AddopMul]
                      DesignatorEmpty(
                        DesignatorNode(
                          SingleIdentExpr(
                           i
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                      ) [DesignatorEmpty]
                    ) [TermNode]
                  ) [SingleExpressionMinus]
                 1
                ) [PrintWithNumConstStatement]
              ) [Statements]
              PrintStatement(
                SingleExpressionMinus(
                  TermNode(
                    TermFactor(
                      DesignatorEmpty(
                        DesignatorNode(
                          SingleIdentExpr(
                           const_int1
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                      ) [DesignatorEmpty]
                    ) [TermFactor]
                    AddopMul(
                    ) [AddopMul]
                    ExprParenNode(
                      SingleExpression(
                        TermFactor(
                          ExprParenNode(
                            SingleExpression(
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     i
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [ExprParenNode]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [ExprParenNode]
                  ) [TermNode]
                ) [SingleExpressionMinus]
              ) [PrintStatement]
            ) [Statements]
            ReturnStatementExpr(
              SingleExpression(
                TermFactor(
                  DesignatorEmpty(
                    DesignatorNode(
                      Exprs(
                        SingleIdentExpr(
                         var_bools1
                        ) [SingleIdentExpr]
                        SingleExpression(
                          TermFactor(
                            DesignatorEmpty(
                              DesignatorNode(
                                SingleIdentExpr(
                                 const_int1
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [Exprs]
                    ) [DesignatorNode]
                  ) [DesignatorEmpty]
                ) [TermFactor]
              ) [SingleExpression]
            ) [ReturnStatementExpr]
          ) [Statements]
          ReturnStatementExpr(
            SingleExpression(
              TermFactor(
                DesignatorBraceActPars(
                  DesignatorNode(
                    SingleIdentExpr(
                     ret
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                  NoActAprsNode(
                  ) [NoActAprsNode]
                ) [DesignatorBraceActPars]
              ) [TermFactor]
            ) [SingleExpression]
          ) [ReturnStatementExpr]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      VarDeclarationList(
        NoVarDeclaration(
        ) [NoVarDeclaration]
        VarDeclNode(
          VarDeclType(
            TypeNode(
             int
            ) [TypeNode]
          ) [VarDeclType]
          Variables(
            SingleVariable(
              VariableNoBracket(
               var_bool1
              ) [VariableNoBracket]
            ) [SingleVariable]
            VariableNoBracket(
             var_int1
            ) [VariableNoBracket]
          ) [Variables]
        ) [VarDeclNode]
      ) [VarDeclarationList]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStatement(
                    ) [NoStatement]
                    DesignatorStatementOnly(
                      DesignatorStatementAssignop(
                        DesignatorNode(
                          SingleIdentExpr(
                           var_int1
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                        Assignop(
                        ) [Assignop]
                        SingleExpressionMinus(
                          TermFactor(
                            ConstantNumber(
                             10
                            ) [ConstantNumber]
                          ) [TermFactor]
                        ) [SingleExpressionMinus]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementOnly]
                  ) [Statements]
                  DesignatorStatementOnly(
                    DesignatorStatementActPars(
                      DesignatorNode(
                        SingleIdentExpr(
                         funkc4
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                      ActParsNode(
                        SingleActualParam(
                          SingleExpression(
                            TermFactor(
                              DesignatorEmpty(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   null
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                              ) [DesignatorEmpty]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [SingleActualParam]
                      ) [ActParsNode]
                    ) [DesignatorStatementActPars]
                  ) [DesignatorStatementOnly]
                ) [Statements]
                DesignatorStatementOnly(
                  DesignatorStatementAssignop(
                    DesignatorNode(
                      SingleIdentExpr(
                       var_ints1
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                    Assignop(
                    ) [Assignop]
                    SingleExpression(
                      TermFactor(
                        NewArray(
                          TypeNode(
                           int
                          ) [TypeNode]
                          SingleExpression(
                            TermNode(
                              TermFactor(
                                ConstantNumber(
                                 100
                                ) [ConstantNumber]
                              ) [TermFactor]
                              AddopMul(
                              ) [AddopMul]
                              ConstantNumber(
                               2
                              ) [ConstantNumber]
                            ) [TermNode]
                          ) [SingleExpression]
                        ) [NewArray]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementOnly]
              ) [Statements]
              DesignatorStatementOnly(
                DesignatorStatementAssignop(
                  DesignatorNode(
                    SingleIdentExpr(
                     var_ints2
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    TermFactor(
                      NewArray(
                        TypeNode(
                         int
                        ) [TypeNode]
                        ExpressionNode(
                          SingleExpression(
                            TermFactor(
                              ConstantNumber(
                               10
                              ) [ConstantNumber]
                            ) [TermFactor]
                          ) [SingleExpression]
                          AddopPlus(
                          ) [AddopPlus]
                          TermFactor(
                            DesignatorBraceActPars(
                              DesignatorNode(
                                SingleIdentExpr(
                                 funkc1
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                              ActParsNode(
                                SingleActualParam(
                                  SingleExpressionMinus(
                                    TermNode(
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             var_int1
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                      AddopPerc(
                                      ) [AddopPerc]
                                      ConstantNumber(
                                       5
                                      ) [ConstantNumber]
                                    ) [TermNode]
                                  ) [SingleExpressionMinus]
                                ) [SingleActualParam]
                              ) [ActParsNode]
                            ) [DesignatorBraceActPars]
                          ) [TermFactor]
                        ) [ExpressionNode]
                      ) [NewArray]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementOnly]
            ) [Statements]
            DesignatorStatementOnly(
              DesignatorStatementAssignop(
                DesignatorNode(
                  SingleIdentExpr(
                   var_chars1
                  ) [SingleIdentExpr]
                ) [DesignatorNode]
                Assignop(
                ) [Assignop]
                SingleExpression(
                  TermFactor(
                    DesignatorEmpty(
                      DesignatorNode(
                        SingleIdentExpr(
                         null
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                    ) [DesignatorEmpty]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementOnly]
          ) [Statements]
          DesignatorStatementOnly(
            DesignatorStatementActPars(
              DesignatorNode(
                SingleIdentExpr(
                 funkc3
                ) [SingleIdentExpr]
              ) [DesignatorNode]
              ActParsNode(
                SingleActualParam(
                  SingleExpression(
                    TermFactor(
                      NewArray(
                        TypeNode(
                         int
                        ) [TypeNode]
                        SingleExpression(
                          TermFactor(
                            ConstantNumber(
                             5
                            ) [ConstantNumber]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [NewArray]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [SingleActualParam]
              ) [ActParsNode]
            ) [DesignatorStatementActPars]
          ) [DesignatorStatementOnly]
        ) [Statements]
        DesignatorStatementOnly(
          DesignatorStatementAssignop(
            DesignatorNode(
              Exprs(
                SingleIdentExpr(
                 var_bools1
                ) [SingleIdentExpr]
                SingleExpression(
                  TermFactor(
                    DesignatorEmpty(
                      DesignatorNode(
                        Exprs(
                          SingleIdentExpr(
                           var_ints1
                          ) [SingleIdentExpr]
                          SingleExpression(
                            TermFactor(
                              DesignatorEmpty(
                                DesignatorNode(
                                  Exprs(
                                    SingleIdentExpr(
                                     var_ints2
                                    ) [SingleIdentExpr]
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorBraceActPars(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             funkc1
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                          ActParsNode(
                                            SingleActualParam(
                                              ExpressionNode(
                                                SingleExpression(
                                                  TermNode(
                                                    TermFactor(
                                                      DesignatorEmpty(
                                                        DesignatorNode(
                                                          SingleIdentExpr(
                                                           const_int1
                                                          ) [SingleIdentExpr]
                                                        ) [DesignatorNode]
                                                      ) [DesignatorEmpty]
                                                    ) [TermFactor]
                                                    AddopPerc(
                                                    ) [AddopPerc]
                                                    ConstantNumber(
                                                     10
                                                    ) [ConstantNumber]
                                                  ) [TermNode]
                                                ) [SingleExpression]
                                                AddopPlus(
                                                ) [AddopPlus]
                                                TermNode(
                                                  TermFactor(
                                                    DesignatorEmpty(
                                                      DesignatorNode(
                                                        Idents(
                                                          SingleIdentExpr(
                                                           type_enum1
                                                          ) [SingleIdentExpr]
                                                         THREE
                                                        ) [Idents]
                                                      ) [DesignatorNode]
                                                    ) [DesignatorEmpty]
                                                  ) [TermFactor]
                                                  AddopDiv(
                                                  ) [AddopDiv]
                                                  ExprParenNode(
                                                    ExpressionNode(
                                                      SingleExpression(
                                                        TermFactor(
                                                          DesignatorEmpty(
                                                            DesignatorNode(
                                                              Exprs(
                                                                SingleIdentExpr(
                                                                 var_ints1
                                                                ) [SingleIdentExpr]
                                                                SingleExpression(
                                                                  TermFactor(
                                                                    ConstantNumber(
                                                                     2
                                                                    ) [ConstantNumber]
                                                                  ) [TermFactor]
                                                                ) [SingleExpression]
                                                              ) [Exprs]
                                                            ) [DesignatorNode]
                                                          ) [DesignatorEmpty]
                                                        ) [TermFactor]
                                                      ) [SingleExpression]
                                                      AddopPlus(
                                                      ) [AddopPlus]
                                                      TermFactor(
                                                        ConstantNumber(
                                                         2
                                                        ) [ConstantNumber]
                                                      ) [TermFactor]
                                                    ) [ExpressionNode]
                                                  ) [ExprParenNode]
                                                ) [TermNode]
                                              ) [ExpressionNode]
                                            ) [SingleActualParam]
                                          ) [ActParsNode]
                                        ) [DesignatorBraceActPars]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [Exprs]
                                ) [DesignatorNode]
                              ) [DesignatorEmpty]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [Exprs]
                      ) [DesignatorNode]
                    ) [DesignatorEmpty]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [Exprs]
            ) [DesignatorNode]
            Assignop(
            ) [Assignop]
            SingleExpression(
              TermFactor(
                ConstantBoolean(
                 1
                ) [ConstantBoolean]
              ) [TermFactor]
            ) [SingleExpression]
          ) [DesignatorStatementAssignop]
        ) [DesignatorStatementOnly]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  14:45:43,001 - ===================================
INFO  14:45:43,003 - Definisana konstanta (1)const_bool1 na liniji 4
INFO  14:45:43,004 - Definisana konstanta (1)const_bool2 na liniji 4
INFO  14:45:43,004 - Definisana konstanta (0)const_bool3 na liniji 4
INFO  14:45:43,004 - Definisana konstanta (1)const_int1 na liniji 5
INFO  14:45:43,004 - Definisana konstanta (97)const_char1 na liniji 6
INFO  14:45:43,004 - Definisana konstanta (98)const_char2 na liniji 6
INFO  14:45:43,004 - Definisana konstanta (99)const_char3 na liniji 6
INFO  14:45:43,004 - Deklarisan novi enum tip: type_enum1 na liniji 11
INFO  14:45:43,004 - Definisana enum konstanta ZERO sa vrednoscu 0 na liniji 12
INFO  14:45:43,004 - Definisana enum konstanta ONE sa vrednoscu 1 na liniji 12
INFO  14:45:43,004 - Definisana enum konstanta THREE sa vrednoscu 3 na liniji 12
INFO  14:45:43,004 - Definisana enum konstanta FIVE sa vrednoscu 5 na liniji 12
INFO  14:45:43,004 - Definisana enum konstanta SIX sa vrednoscu 6 na liniji 12
INFO  14:45:43,004 - Definisana enum konstanta SEVEN sa vrednoscu 7 na liniji 12
INFO  14:45:43,004 - Definisana enum konstanta TEN sa vrednoscu 10 na liniji 12
INFO  14:45:43,004 - Deklarisan novi enum tip: type_enum2 na liniji 14
INFO  14:45:43,004 - Definisana enum konstanta X sa vrednoscu 0 na liniji 15
INFO  14:45:43,004 - Deklarisana single promenljiva var_int1 na liniji 21
INFO  14:45:43,004 - Deklarisana single promenljiva var_int2 na liniji 21
INFO  14:45:43,004 - Deklarisana array promenljiva var_ints1 na liniji 21
INFO  14:45:43,004 - Deklarisana array promenljiva var_ints2 na liniji 21
INFO  14:45:43,004 - Deklarisana single promenljiva var_char1 na liniji 22
INFO  14:45:43,004 - Deklarisana array promenljiva var_chars1 na liniji 22
INFO  14:45:43,004 - Deklarisana single promenljiva var_bool1 na liniji 23
INFO  14:45:43,004 - Deklarisana single promenljiva var_bool2 na liniji 23
INFO  14:45:43,004 - Deklarisana array promenljiva var_bools1 na liniji 23
INFO  14:45:43,004 - Deklarisana single promenljiva var_enum1 na liniji 24
INFO  14:45:43,004 - Deklarisana single promenljiva var_enum2 na liniji 24
INFO  14:45:43,004 - Deklarisana array promenljiva var_enums1 na liniji 24
INFO  14:45:43,004 - Definisana funkcija funkc1 na liniji 31
INFO  14:45:43,004 - Deklarisan single argument arg1 na liniji 31
INFO  14:45:43,004 - Deklarisana single promenljiva local_int1 na liniji 33
INFO  14:45:43,004 - Deklarisana single promenljiva local_int2 na liniji 33
INFO  14:45:43,004 - Deklarisana single promenljiva local_char1 na liniji 34
INFO  14:45:43,005 - Deklarisana single promenljiva local_char2 na liniji 34
INFO  14:45:43,005 - Deklarisana single promenljiva var_bool1 na liniji 37
INFO  14:45:43,005 - Dodela vrednosti za var_bool1 na liniji 40
INFO  14:45:43,005 - Pronadjen poziv promenljive const_bool1 na liniji 41
INFO  14:45:43,005 - Pronadjen poziv promenljive var_bool1 na liniji 41
INFO  14:45:43,005 - Izabrano polje : .ONE
INFO  14:45:43,005 - Pronadjen poziv promenljive ONE na liniji 41
INFO  14:45:43,005 - Pronadjen poziv promenljive local_int1 na liniji 41
INFO  14:45:43,005 - Pronadjen poziv promenljive arg1 na liniji 42
INFO  14:45:43,005 - Dodela vrednosti za arg1 na liniji 42
INFO  14:45:43,005 - Pronadjen poziv promenljive local_int1 na liniji 44
INFO  14:45:43,005 - Definisana funkcija funkc2 na liniji 47
INFO  14:45:43,005 - Deklarisan array argument args na liniji 47
INFO  14:45:43,005 - Deklarisan single argument arg na liniji 47
INFO  14:45:43,005 - Deklarisan array argument args2 na liniji 47
INFO  14:45:43,005 - Deklarisana single promenljiva i na liniji 48
INFO  14:45:43,005 - Pronadjen poziv promenljive elem na liniji 50
INFO  14:45:43,005 - Pronadjen poziv promenljive arg na liniji 50
INFO  14:45:43,005 - Dodela vrednosti za elem na liniji 51
INFO  14:45:43,005 - Izabrano polje : .X
INFO  14:45:43,005 - Pronadjen poziv promenljive X na liniji 53
INFO  14:45:43,005 - Pronadjen poziv promenljive const_int1 na liniji 53
INFO  14:45:43,006 - Dodela vrednosti za arg na liniji 54
INFO  14:45:43,006 - Dodela vrednosti za elem na liniji 56
INFO  14:45:43,006 - Dodela vrednosti za elem na liniji 57
INFO  14:45:43,006 - Dodela vrednosti za elem na liniji 58
INFO  14:45:43,006 - Dodela vrednosti za elem na liniji 59
INFO  14:45:43,006 - Dodela vrednosti za i na liniji 61
INFO  14:45:43,006 - Pronadjen poziv promenljive i na liniji 61
INFO  14:45:43,006 - Izabrano polje : .TEN
INFO  14:45:43,006 - Pronadjen poziv promenljive TEN na liniji 61
INFO  14:45:43,006 - Pronadjen poziv promenljive i na liniji 62
INFO  14:45:43,006 - Dodela vrednosti za elem na liniji 62
INFO  14:45:43,006 - Definisana funkcija funkc3 na liniji 69
INFO  14:45:43,006 - Deklarisan array argument arr na liniji 69
INFO  14:45:43,006 - Deklarisana single promenljiva i na liniji 70
INFO  14:45:43,006 - Dodela vrednosti za i na liniji 75
INFO  14:45:43,006 - Pronadjen poziv promenljive i na liniji 76
INFO  14:45:43,006 - Pronadjen poziv promenljive elem na liniji 76
INFO  14:45:43,006 - Pronadjen poziv promenljive elem na liniji 76
INFO  14:45:43,006 - Pronadjen poziv promenljive elem na liniji 76
INFO  14:45:43,006 - Pronadjen poziv promenljive i na liniji 76
INFO  14:45:43,006 - Pronadjen poziv promenljive elem na liniji 76
INFO  14:45:43,006 - Dodela vrednosti za elem na liniji 76
INFO  14:45:43,006 - Definisana funkcija ret na liniji 80
INFO  14:45:43,006 - Definisana funkcija funkc4 na liniji 84
INFO  14:45:43,006 - Deklarisan array argument args na liniji 84
INFO  14:45:43,006 - Deklarisana single promenljiva c1 na liniji 85
INFO  14:45:43,006 - Deklarisana single promenljiva c2 na liniji 85
INFO  14:45:43,006 - Deklarisana single promenljiva i na liniji 86
INFO  14:45:43,006 - Deklarisana array promenljiva local_args na liniji 87
INFO  14:45:43,006 - Pronadjen poziv promenljive null na liniji 93
INFO  14:45:43,006 - Pronadjen poziv funkcije funkc3 sa 1/1 argumenta na liniji 93
INFO  14:45:43,006 - Pronadjen poziv promenljive args na liniji 95
INFO  14:45:43,007 - Dodela vrednosti za local_args na liniji 95
INFO  14:45:43,007 - Pronadjen poziv funkcije ret sa 0/0 argumenta na liniji 97
INFO  14:45:43,007 - Pronadjen poziv promenljive i na liniji 100
INFO  14:45:43,007 - Pronadjen poziv promenljive const_int1 na liniji 101
INFO  14:45:43,007 - Pronadjen poziv promenljive i na liniji 101
INFO  14:45:43,007 - Pronadjen poziv promenljive const_int1 na liniji 103
INFO  14:45:43,007 - Pronadjen poziv promenljive elem na liniji 103
INFO  14:45:43,007 - Pronadjen poziv funkcije ret sa 0/0 argumenta na liniji 105
INFO  14:45:43,007 - Definisana funkcija main na liniji 107
INFO  14:45:43,007 - Deklarisana single promenljiva var_bool1 na liniji 109
INFO  14:45:43,007 - Deklarisana single promenljiva var_int1 na liniji 109
INFO  14:45:43,007 - Dodela vrednosti za var_int1 na liniji 111
INFO  14:45:43,007 - Pronadjen poziv promenljive null na liniji 113
INFO  14:45:43,007 - Pronadjen poziv funkcije funkc4 sa 1/1 argumenta na liniji 113
INFO  14:45:43,007 - Dodela vrednosti za var_ints1 na liniji 114
INFO  14:45:43,007 - Pronadjen poziv promenljive var_int1 na liniji 115
INFO  14:45:43,007 - Pronadjen poziv funkcije funkc1 sa 1/1 argumenta na liniji 115
INFO  14:45:43,007 - Dodela vrednosti za var_ints2 na liniji 115
INFO  14:45:43,007 - Pronadjen poziv promenljive null na liniji 116
INFO  14:45:43,007 - Dodela vrednosti za var_chars1 na liniji 116
INFO  14:45:43,007 - Pronadjen poziv funkcije funkc3 sa 1/1 argumenta na liniji 118
INFO  14:45:43,007 - Pronadjen poziv promenljive const_int1 na liniji 119
INFO  14:45:43,007 - Izabrano polje : .THREE
INFO  14:45:43,007 - Pronadjen poziv promenljive THREE na liniji 119
INFO  14:45:43,007 - Pronadjen poziv promenljive elem na liniji 119
INFO  14:45:43,007 - Pronadjen poziv funkcije funkc1 sa 1/1 argumenta na liniji 119
INFO  14:45:43,007 - Pronadjen poziv promenljive elem na liniji 119
INFO  14:45:43,007 - Pronadjen poziv promenljive elem na liniji 119
INFO  14:45:43,007 - Dodela vrednosti za elem na liniji 119
INFO  14:45:43,007 - main funkcija je korektna.  na liniji 107
INFO  14:45:43,007 - ===================================
INFO  14:45:43,013 - Parsiranje uspesno zavrseno!
