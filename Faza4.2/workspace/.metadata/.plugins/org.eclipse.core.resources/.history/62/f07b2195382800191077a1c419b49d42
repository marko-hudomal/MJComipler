INFO  05:19:17,043 - Putanja iz argumenta: test/program.mj
INFO  05:19:17,043 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  05:19:17,074 - #2 program
INFO  05:19:17,074 - #45 Program
INFO  05:19:17,074 - #8 const
INFO  05:19:17,075 - #45 int
INFO  05:19:17,075 - #45 X
INFO  05:19:17,075 - #26 =
INFO  05:19:17,075 - #44 2
INFO  05:19:17,075 - #19 ,
INFO  05:19:17,076 - #45 Y
INFO  05:19:17,076 - #26 =
INFO  05:19:17,076 - #44 4
INFO  05:19:17,076 - #18 ;
INFO  05:19:17,076 - #45 int
INFO  05:19:17,076 - #45 x
INFO  05:19:17,077 - #19 ,
INFO  05:19:17,077 - #45 y
INFO  05:19:17,077 - #19 ,
INFO  05:19:17,077 - #45 z
INFO  05:19:17,077 - #19 ,
INFO  05:19:17,077 - #45 arr
INFO  05:19:17,078 - #14 [
INFO  05:19:17,078 - #15 ]
INFO  05:19:17,078 - #18 ;
INFO  05:19:17,078 - #8 const
INFO  05:19:17,078 - #45 char
INFO  05:19:17,078 - #45 C
INFO  05:19:17,078 - #26 =
INFO  05:19:17,078 - #46 _
INFO  05:19:17,078 - #18 ;
INFO  05:19:17,078 - #8 const
INFO  05:19:17,079 - #45 bool
INFO  05:19:17,079 - #45 B
INFO  05:19:17,079 - #26 =
INFO  05:19:17,079 - #47 0
INFO  05:19:17,079 - #18 ;
INFO  05:19:17,079 - #12 {
INFO  05:19:17,079 - #39 void
INFO  05:19:17,079 - #45 main
INFO  05:19:17,079 - #16 (
INFO  05:19:17,080 - #17 )
INFO  05:19:17,080 - #45 int
INFO  05:19:17,080 - #45 a
INFO  05:19:17,080 - #19 ,
INFO  05:19:17,080 - #45 b
INFO  05:19:17,081 - #18 ;
INFO  05:19:17,081 - #12 {
INFO  05:19:17,081 - #45 b
INFO  05:19:17,081 - #26 =
INFO  05:19:17,081 - #44 1
INFO  05:19:17,082 - #18 ;
INFO  05:19:17,082 - #40 for
INFO  05:19:17,082 - #16 (
INFO  05:19:17,082 - #45 a
INFO  05:19:17,082 - #26 =
INFO  05:19:17,082 - #44 0
INFO  05:19:17,082 - #18 ;
INFO  05:19:17,083 - #45 a
INFO  05:19:17,083 - #22 -
INFO  05:19:17,083 - #44 1
INFO  05:19:17,083 - #33 <
INFO  05:19:17,083 - #44 10
INFO  05:19:17,084 - #24 /
INFO  05:19:17,084 - #44 2
INFO  05:19:17,085 - #21 +
INFO  05:19:17,085 - #44 10
INFO  05:19:17,085 - #24 /
INFO  05:19:17,085 - #44 2
INFO  05:19:17,086 - #18 ;
INFO  05:19:17,087 - #17 )
INFO  05:19:17,088 - #12 {
INFO  05:19:17,088 - #40 for
INFO  05:19:17,088 - #16 (
INFO  05:19:17,088 - #45 x
INFO  05:19:17,088 - #26 =
INFO  05:19:17,088 - #44 0
INFO  05:19:17,088 - #18 ;
INFO  05:19:17,088 - #45 x
INFO  05:19:17,088 - #33 <
INFO  05:19:17,088 - #44 2
INFO  05:19:17,088 - #18 ;
INFO  05:19:17,088 - #45 x
INFO  05:19:17,088 - #27 ++
INFO  05:19:17,089 - #17 )
INFO  05:19:17,089 - #11 print
INFO  05:19:17,089 - #16 (
INFO  05:19:17,089 - #46 o
INFO  05:19:17,089 - #17 )
INFO  05:19:17,089 - #18 ;
INFO  05:19:17,089 - #9 if
INFO  05:19:17,089 - #16 (
INFO  05:19:17,089 - #45 a
INFO  05:19:17,089 - #25 %
INFO  05:19:17,089 - #44 2
INFO  05:19:17,089 - #29 ==
INFO  05:19:17,090 - #44 0
INFO  05:19:17,090 - #17 )
INFO  05:19:17,090 - #11 print
INFO  05:19:17,090 - #16 (
INFO  05:19:17,090 - #45 eol
INFO  05:19:17,090 - #17 )
INFO  05:19:17,090 - #18 ;
INFO  05:19:17,090 - #45 a
INFO  05:19:17,091 - #27 ++
INFO  05:19:17,091 - #18 ;
INFO  05:19:17,091 - #13 }
INFO  05:19:17,091 - #13 }
INFO  05:19:17,091 - #13 }
INFO  05:19:17,097 - Program(
  ProgName(
   Program
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDecl(
          ) [NoDecl]
          ConstDeclaration(
            ConstDeclNode(
              ConstDeclType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [ConstDeclType]
              Constants(
                SingleConstant(
                  IdentEqualConstantNode(
                   X
                    NumberNode(
                     2
                    ) [NumberNode]
                  ) [IdentEqualConstantNode]
                ) [SingleConstant]
                IdentEqualConstantNode(
                 Y
                  NumberNode(
                   4
                  ) [NumberNode]
                ) [IdentEqualConstantNode]
              ) [Constants]
            ) [ConstDeclNode]
          ) [ConstDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclNode(
            VarDeclType(
              TypeNode(
               int
              ) [TypeNode]
            ) [VarDeclType]
            Variables(
              Variables(
                Variables(
                  SingleVariable(
                    VariableNoBracket(
                     x
                    ) [VariableNoBracket]
                  ) [SingleVariable]
                  VariableNoBracket(
                   y
                  ) [VariableNoBracket]
                ) [Variables]
                VariableNoBracket(
                 z
                ) [VariableNoBracket]
              ) [Variables]
              VariableBracket(
               arr
              ) [VariableBracket]
            ) [Variables]
          ) [VarDeclNode]
        ) [VarDeclaration]
      ) [Declarations]
      ConstDeclaration(
        ConstDeclNode(
          ConstDeclType(
            TypeNode(
             char
            ) [TypeNode]
          ) [ConstDeclType]
          SingleConstant(
            IdentEqualConstantNode(
             C
              CharNode(
               _
              ) [CharNode]
            ) [IdentEqualConstantNode]
          ) [SingleConstant]
        ) [ConstDeclNode]
      ) [ConstDeclaration]
    ) [Declarations]
    ConstDeclaration(
      ConstDeclNode(
        ConstDeclType(
          TypeNode(
           bool
          ) [TypeNode]
        ) [ConstDeclType]
        SingleConstant(
          IdentEqualConstantNode(
           B
            BooleanNode(
             0
            ) [BooleanNode]
          ) [IdentEqualConstantNode]
        ) [SingleConstant]
      ) [ConstDeclNode]
    ) [ConstDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      VarDeclarationList(
        NoVarDeclaration(
        ) [NoVarDeclaration]
        VarDeclNode(
          VarDeclType(
            TypeNode(
             int
            ) [TypeNode]
          ) [VarDeclType]
          Variables(
            SingleVariable(
              VariableNoBracket(
               a
              ) [VariableNoBracket]
            ) [SingleVariable]
            VariableNoBracket(
             b
            ) [VariableNoBracket]
          ) [Variables]
        ) [VarDeclNode]
      ) [VarDeclarationList]
      Statements(
        Statements(
          NoStatement(
          ) [NoStatement]
          DesignatorStatementOnly(
            DesignatorStatementAssignop(
              DesignatorNode(
                SingleIdentExpr(
                 b
                ) [SingleIdentExpr]
              ) [DesignatorNode]
              Assignop(
              ) [Assignop]
              SingleExpression(
                TermFactor(
                  ConstantNumber(
                   1
                  ) [ConstantNumber]
                ) [TermFactor]
              ) [SingleExpression]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementOnly]
        ) [Statements]
        ForStatement(
          ForHeader(
            ForStatement1(
              DesignatorStatementNotNull(
                DesignatorStatementAssignop(
                  DesignatorNode(
                    SingleIdentExpr(
                     a
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    TermFactor(
                      ConstantNumber(
                       0
                      ) [ConstantNumber]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementNotNull]
            ) [ForStatement1]
            ForCondition(
              ConditionNotNull(
                ConditionNode(
                  SingleConditionTerm(
                    ConditionTermNode(
                      SingleConditionFact(
                        CondFactExpressionRelopExpression(
                          ExpressionNode(
                            SingleExpression(
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     a
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                            AddopMinus(
                            ) [AddopMinus]
                            TermFactor(
                              ConstantNumber(
                               1
                              ) [ConstantNumber]
                            ) [TermFactor]
                          ) [ExpressionNode]
                          RelopLess(
                          ) [RelopLess]
                          ExpressionNode(
                            SingleExpression(
                              TermNode(
                                TermFactor(
                                  ConstantNumber(
                                   10
                                  ) [ConstantNumber]
                                ) [TermFactor]
                                MulopDiv(
                                ) [MulopDiv]
                                ConstantNumber(
                                 2
                                ) [ConstantNumber]
                              ) [TermNode]
                            ) [SingleExpression]
                            AddopPlus(
                            ) [AddopPlus]
                            TermNode(
                              TermFactor(
                                ConstantNumber(
                                 10
                                ) [ConstantNumber]
                              ) [TermFactor]
                              MulopDiv(
                              ) [MulopDiv]
                              ConstantNumber(
                               2
                              ) [ConstantNumber]
                            ) [TermNode]
                          ) [ExpressionNode]
                        ) [CondFactExpressionRelopExpression]
                      ) [SingleConditionFact]
                    ) [ConditionTermNode]
                  ) [SingleConditionTerm]
                ) [ConditionNode]
              ) [ConditionNotNull]
            ) [ForCondition]
            ForStatement2(
              DesignatorStatementNull(
              ) [DesignatorStatementNull]
            ) [ForStatement2]
          ) [ForHeader]
          InBraceStatement(
            Statements(
              Statements(
                Statements(
                  NoStatement(
                  ) [NoStatement]
                  ForStatement(
                    ForHeader(
                      ForStatement1(
                        DesignatorStatementNotNull(
                          DesignatorStatementAssignop(
                            DesignatorNode(
                              SingleIdentExpr(
                               x
                              ) [SingleIdentExpr]
                            ) [DesignatorNode]
                            Assignop(
                            ) [Assignop]
                            SingleExpression(
                              TermFactor(
                                ConstantNumber(
                                 0
                                ) [ConstantNumber]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [DesignatorStatementAssignop]
                        ) [DesignatorStatementNotNull]
                      ) [ForStatement1]
                      ForCondition(
                        ConditionNotNull(
                          ConditionNode(
                            SingleConditionTerm(
                              ConditionTermNode(
                                SingleConditionFact(
                                  CondFactExpressionRelopExpression(
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             x
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                    RelopLess(
                                    ) [RelopLess]
                                    SingleExpression(
                                      TermFactor(
                                        ConstantNumber(
                                         2
                                        ) [ConstantNumber]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [CondFactExpressionRelopExpression]
                                ) [SingleConditionFact]
                              ) [ConditionTermNode]
                            ) [SingleConditionTerm]
                          ) [ConditionNode]
                        ) [ConditionNotNull]
                      ) [ForCondition]
                      ForStatement2(
                        DesignatorStatementNotNull(
                          DesignatorStatementPlusPlus(
                            DesignatorNode(
                              SingleIdentExpr(
                               x
                              ) [SingleIdentExpr]
                            ) [DesignatorNode]
                          ) [DesignatorStatementPlusPlus]
                        ) [DesignatorStatementNotNull]
                      ) [ForStatement2]
                    ) [ForHeader]
                    PrintStatement(
                      SingleExpression(
                        TermFactor(
                          ConstantCharacter(
                           o
                          ) [ConstantCharacter]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [PrintStatement]
                  ) [ForStatement]
                ) [Statements]
                IfStatement(
                  IfConditionNode(
                    ConditionNode(
                      SingleConditionTerm(
                        ConditionTermNode(
                          SingleConditionFact(
                            CondFactExpressionRelopExpression(
                              SingleExpression(
                                TermNode(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        SingleIdentExpr(
                                         a
                                        ) [SingleIdentExpr]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                  MulopPerc(
                                  ) [MulopPerc]
                                  ConstantNumber(
                                   2
                                  ) [ConstantNumber]
                                ) [TermNode]
                              ) [SingleExpression]
                              RelopEqualEqual(
                              ) [RelopEqualEqual]
                              SingleExpression(
                                TermFactor(
                                  ConstantNumber(
                                   0
                                  ) [ConstantNumber]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [CondFactExpressionRelopExpression]
                          ) [SingleConditionFact]
                        ) [ConditionTermNode]
                      ) [SingleConditionTerm]
                    ) [ConditionNode]
                  ) [IfConditionNode]
                  IfStatementThen(
                    PrintStatement(
                      SingleExpression(
                        TermFactor(
                          DesignatorEmpty(
                            DesignatorNode(
                              SingleIdentExpr(
                               eol
                              ) [SingleIdentExpr]
                            ) [DesignatorNode]
                          ) [DesignatorEmpty]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [PrintStatement]
                  ) [IfStatementThen]
                ) [IfStatement]
              ) [Statements]
              DesignatorStatementOnly(
                DesignatorStatementPlusPlus(
                  DesignatorNode(
                    SingleIdentExpr(
                     a
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                ) [DesignatorStatementPlusPlus]
              ) [DesignatorStatementOnly]
            ) [Statements]
          ) [InBraceStatement]
        ) [ForStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:19:17,098 - ===================================
INFO  05:19:17,101 - Definisana konstanta (2)X na liniji 2
INFO  05:19:17,101 - Definisana konstanta (4)Y na liniji 2
INFO  05:19:17,101 - Deklarisana single promenljiva x na liniji 3
INFO  05:19:17,101 - Deklarisana single promenljiva y na liniji 3
INFO  05:19:17,101 - Deklarisana single promenljiva z na liniji 3
INFO  05:19:17,101 - Deklarisana array promenljiva arr na liniji 3
ERROR 05:19:17,101 - Greska na liniji 4 : C nije dobrog tipa! 
ERROR 05:19:17,101 - Greska na liniji 5 : B nije dobrog tipa! 
INFO  05:19:17,101 - Definisana funkcija main na liniji 8
INFO  05:19:17,101 - Deklarisana single promenljiva a na liniji 10
INFO  05:19:17,101 - Deklarisana single promenljiva b na liniji 10
INFO  05:19:17,101 - Dodela vrednosti za b na liniji 12
INFO  05:19:17,102 - Dodela vrednosti za a na liniji 13
INFO  05:19:17,102 - Pronadjen poziv promenljive a na liniji 13
INFO  05:19:17,102 - Dodela vrednosti za x na liniji 14
INFO  05:19:17,102 - Pronadjen poziv promenljive x na liniji 14
INFO  05:19:17,102 - Pronadjen poziv promenljive a na liniji 16
INFO  05:19:17,102 - Pronadjen poziv promenljive eol na liniji 17
INFO  05:19:17,102 - main funkcija je korektna.  na liniji 8
INFO  05:19:17,102 - ===================================
ERROR 05:19:17,103 - Parsiranje NIJE uspesno zavrseno!
