INFO  00:23:39,887 - Putanja iz argumenta: test/program.mj
INFO  00:23:39,887 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  00:23:39,921 - #2 program
INFO  00:23:39,921 - #45 Program
INFO  00:23:39,921 - #45 int
INFO  00:23:39,922 - #45 x
INFO  00:23:39,922 - #19 ,
INFO  00:23:39,922 - #45 y
INFO  00:23:39,922 - #19 ,
INFO  00:23:39,923 - #45 z
INFO  00:23:39,923 - #19 ,
INFO  00:23:39,923 - #45 arr
INFO  00:23:39,923 - #14 [
INFO  00:23:39,923 - #15 ]
INFO  00:23:39,923 - #18 ;
INFO  00:23:39,923 - #12 {
INFO  00:23:39,923 - #39 void
INFO  00:23:39,923 - #45 main
INFO  00:23:39,924 - #16 (
INFO  00:23:39,924 - #17 )
INFO  00:23:39,925 - #45 int
INFO  00:23:39,925 - #45 a
INFO  00:23:39,925 - #19 ,
INFO  00:23:39,925 - #45 b
INFO  00:23:39,925 - #18 ;
INFO  00:23:39,925 - #12 {
INFO  00:23:39,925 - #45 a
INFO  00:23:39,926 - #26 =
INFO  00:23:39,926 - #44 1
INFO  00:23:39,926 - #18 ;
INFO  00:23:39,927 - #45 b
INFO  00:23:39,927 - #26 =
INFO  00:23:39,927 - #44 3
INFO  00:23:39,927 - #18 ;
INFO  00:23:39,927 - #9 if
INFO  00:23:39,927 - #16 (
INFO  00:23:39,927 - #45 a
INFO  00:23:39,927 - #29 ==
INFO  00:23:39,927 - #45 b
INFO  00:23:39,928 - #17 )
INFO  00:23:39,928 - #12 {
INFO  00:23:39,928 - #9 if
INFO  00:23:39,928 - #16 (
INFO  00:23:39,928 - #45 a
INFO  00:23:39,928 - #29 ==
INFO  00:23:39,928 - #44 2
INFO  00:23:39,928 - #17 )
INFO  00:23:39,928 - #11 print
INFO  00:23:39,928 - #16 (
INFO  00:23:39,929 - #46 a
INFO  00:23:39,929 - #17 )
INFO  00:23:39,929 - #18 ;
INFO  00:23:39,929 - #7 else
INFO  00:23:39,929 - #11 print
INFO  00:23:39,929 - #16 (
INFO  00:23:39,929 - #46 b
INFO  00:23:39,930 - #17 )
INFO  00:23:39,930 - #18 ;
INFO  00:23:39,930 - #13 }
INFO  00:23:39,930 - #7 else
INFO  00:23:39,930 - #12 {
INFO  00:23:39,930 - #11 print
INFO  00:23:39,930 - #16 (
INFO  00:23:39,930 - #46 c
INFO  00:23:39,930 - #17 )
INFO  00:23:39,930 - #18 ;
INFO  00:23:39,930 - #13 }
INFO  00:23:39,930 - #13 }
INFO  00:23:39,930 - #13 }
INFO  00:23:39,937 - Program(
  ProgName(
   Program
  ) [ProgName]
  Declarations(
    NoDecl(
    ) [NoDecl]
    VarDeclaration(
      VarDeclNode(
        VarDeclType(
          TypeNode(
           int
          ) [TypeNode]
        ) [VarDeclType]
        Variables(
          Variables(
            Variables(
              SingleVariable(
                VariableNoBracket(
                 x
                ) [VariableNoBracket]
              ) [SingleVariable]
              VariableNoBracket(
               y
              ) [VariableNoBracket]
            ) [Variables]
            VariableNoBracket(
             z
            ) [VariableNoBracket]
          ) [Variables]
          VariableBracket(
           arr
          ) [VariableBracket]
        ) [Variables]
      ) [VarDeclNode]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      VarDeclarationList(
        NoVarDeclaration(
        ) [NoVarDeclaration]
        VarDeclNode(
          VarDeclType(
            TypeNode(
             int
            ) [TypeNode]
          ) [VarDeclType]
          Variables(
            SingleVariable(
              VariableNoBracket(
               a
              ) [VariableNoBracket]
            ) [SingleVariable]
            VariableNoBracket(
             b
            ) [VariableNoBracket]
          ) [Variables]
        ) [VarDeclNode]
      ) [VarDeclarationList]
      Statements(
        Statements(
          Statements(
            NoStatement(
            ) [NoStatement]
            DesignatorStatementOnly(
              DesignatorStatementAssignop(
                DesignatorNode(
                  SingleIdentExpr(
                   a
                  ) [SingleIdentExpr]
                ) [DesignatorNode]
                Assignop(
                ) [Assignop]
                SingleExpression(
                  TermFactor(
                    ConstantNumber(
                     1
                    ) [ConstantNumber]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementOnly]
          ) [Statements]
          DesignatorStatementOnly(
            DesignatorStatementAssignop(
              DesignatorNode(
                SingleIdentExpr(
                 b
                ) [SingleIdentExpr]
              ) [DesignatorNode]
              Assignop(
              ) [Assignop]
              SingleExpression(
                TermFactor(
                  ConstantNumber(
                   3
                  ) [ConstantNumber]
                ) [TermFactor]
              ) [SingleExpression]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementOnly]
        ) [Statements]
        IfElseStatement(
          IfConditionNode(
            ConditionNode(
              SingleConditionTerm(
                ConditionTermNode(
                  SingleConditionFact(
                    CondFactExpressionRelopExpression(
                      SingleExpression(
                        TermFactor(
                          DesignatorEmpty(
                            DesignatorNode(
                              SingleIdentExpr(
                               a
                              ) [SingleIdentExpr]
                            ) [DesignatorNode]
                          ) [DesignatorEmpty]
                        ) [TermFactor]
                      ) [SingleExpression]
                      RelopEqualEqual(
                      ) [RelopEqualEqual]
                      SingleExpression(
                        TermFactor(
                          DesignatorEmpty(
                            DesignatorNode(
                              SingleIdentExpr(
                               b
                              ) [SingleIdentExpr]
                            ) [DesignatorNode]
                          ) [DesignatorEmpty]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [CondFactExpressionRelopExpression]
                  ) [SingleConditionFact]
                ) [ConditionTermNode]
              ) [SingleConditionTerm]
            ) [ConditionNode]
          ) [IfConditionNode]
          IfStatementThen(
            InBraceStatement(
              Statements(
                NoStatement(
                ) [NoStatement]
                IfElseStatement(
                  IfConditionNode(
                    ConditionNode(
                      SingleConditionTerm(
                        ConditionTermNode(
                          SingleConditionFact(
                            CondFactExpressionRelopExpression(
                              SingleExpression(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      SingleIdentExpr(
                                       a
                                      ) [SingleIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                              RelopEqualEqual(
                              ) [RelopEqualEqual]
                              SingleExpression(
                                TermFactor(
                                  ConstantNumber(
                                   2
                                  ) [ConstantNumber]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [CondFactExpressionRelopExpression]
                          ) [SingleConditionFact]
                        ) [ConditionTermNode]
                      ) [SingleConditionTerm]
                    ) [ConditionNode]
                  ) [IfConditionNode]
                  IfStatementThen(
                    PrintStatement(
                      SingleExpression(
                        TermFactor(
                          ConstantCharacter(
                           a
                          ) [ConstantCharacter]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [PrintStatement]
                  ) [IfStatementThen]
                  IfStatementElse(
                    PrintStatement(
                      SingleExpression(
                        TermFactor(
                          ConstantCharacter(
                           b
                          ) [ConstantCharacter]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [PrintStatement]
                  ) [IfStatementElse]
                ) [IfElseStatement]
              ) [Statements]
            ) [InBraceStatement]
          ) [IfStatementThen]
          IfStatementElse(
            InBraceStatement(
              Statements(
                NoStatement(
                ) [NoStatement]
                PrintStatement(
                  SingleExpression(
                    TermFactor(
                      ConstantCharacter(
                       c
                      ) [ConstantCharacter]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [PrintStatement]
              ) [Statements]
            ) [InBraceStatement]
          ) [IfStatementElse]
        ) [IfElseStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  00:23:39,937 - ===================================
INFO  00:23:39,940 - Deklarisana single promenljiva x na liniji 3
INFO  00:23:39,940 - Deklarisana single promenljiva y na liniji 3
INFO  00:23:39,941 - Deklarisana single promenljiva z na liniji 3
INFO  00:23:39,941 - Deklarisana array promenljiva arr na liniji 3
INFO  00:23:39,941 - Definisana funkcija main na liniji 7
INFO  00:23:39,941 - Deklarisana single promenljiva a na liniji 9
INFO  00:23:39,941 - Deklarisana single promenljiva b na liniji 9
INFO  00:23:39,941 - Dodela vrednosti za a na liniji 11
INFO  00:23:39,941 - Dodela vrednosti za b na liniji 12
INFO  00:23:39,941 - Pronadjen poziv promenljive a na liniji 14
INFO  00:23:39,941 - Pronadjen poziv promenljive b na liniji 14
INFO  00:23:39,942 - Pronadjen poziv promenljive a na liniji 16
INFO  00:23:39,942 - main funkcija je korektna.  na liniji 7
INFO  00:23:39,942 - ===================================
INFO  00:23:39,952 - Parsiranje uspesno zavrseno!
