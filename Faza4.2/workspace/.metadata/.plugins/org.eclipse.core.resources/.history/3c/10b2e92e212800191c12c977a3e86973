INFO  13:58:39,278 - Putanja iz argumenta: test/program.mj
INFO  13:58:39,279 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  13:58:39,310 - #2 program
INFO  13:58:39,310 - #45 Program
INFO  13:58:39,310 - #45 int
INFO  13:58:39,311 - #45 x
INFO  13:58:39,312 - #19 ,
INFO  13:58:39,312 - #45 y
INFO  13:58:39,312 - #19 ,
INFO  13:58:39,312 - #45 z
INFO  13:58:39,312 - #19 ,
INFO  13:58:39,312 - #45 arr
INFO  13:58:39,312 - #14 [
INFO  13:58:39,312 - #15 ]
INFO  13:58:39,312 - #18 ;
INFO  13:58:39,312 - #8 const
INFO  13:58:39,313 - #45 int
INFO  13:58:39,313 - #45 con
INFO  13:58:39,313 - #26 =
INFO  13:58:39,313 - #44 100
INFO  13:58:39,313 - #18 ;
INFO  13:58:39,314 - #8 const
INFO  13:58:39,314 - #45 bool
INFO  13:58:39,314 - #45 bcon
INFO  13:58:39,314 - #26 =
INFO  13:58:39,314 - #47 0
INFO  13:58:39,314 - #19 ,
INFO  13:58:39,314 - #45 bcon2
INFO  13:58:39,314 - #26 =
INFO  13:58:39,314 - #47 1
INFO  13:58:39,314 - #18 ;
INFO  13:58:39,315 - #8 const
INFO  13:58:39,315 - #45 char
INFO  13:58:39,315 - #45 c1
INFO  13:58:39,315 - #26 =
INFO  13:58:39,315 - #46 H
INFO  13:58:39,315 - #19 ,
INFO  13:58:39,315 - #45 c2
INFO  13:58:39,315 - #26 =
INFO  13:58:39,315 - #46 U
INFO  13:58:39,315 - #19 ,
INFO  13:58:39,315 - #45 c3
INFO  13:58:39,315 - #26 =
INFO  13:58:39,315 - #46 D
INFO  13:58:39,315 - #19 ,
INFO  13:58:39,316 - #45 c4
INFO  13:58:39,316 - #26 =
INFO  13:58:39,316 - #46 I
INFO  13:58:39,316 - #18 ;
INFO  13:58:39,316 - #12 {
INFO  13:58:39,316 - #45 int
INFO  13:58:39,316 - #45 func
INFO  13:58:39,316 - #16 (
INFO  13:58:39,317 - #45 int
INFO  13:58:39,317 - #45 arg
INFO  13:58:39,317 - #17 )
INFO  13:58:39,317 - #45 int
INFO  13:58:39,317 - #45 c
INFO  13:58:39,317 - #18 ;
INFO  13:58:39,317 - #12 {
INFO  13:58:39,317 - #11 print
INFO  13:58:39,318 - #16 (
INFO  13:58:39,318 - #45 eol
INFO  13:58:39,318 - #17 )
INFO  13:58:39,318 - #18 ;
INFO  13:58:39,318 - #11 print
INFO  13:58:39,318 - #16 (
INFO  13:58:39,318 - #46 f
INFO  13:58:39,319 - #17 )
INFO  13:58:39,319 - #18 ;
INFO  13:58:39,319 - #45 c
INFO  13:58:39,319 - #26 =
INFO  13:58:39,319 - #45 arg
INFO  13:58:39,319 - #18 ;
INFO  13:58:39,319 - #38 return
INFO  13:58:39,319 - #45 arg
INFO  13:58:39,319 - #23 *
INFO  13:58:39,319 - #44 2
INFO  13:58:39,320 - #18 ;
INFO  13:58:39,320 - #13 }
INFO  13:58:39,320 - #39 void
INFO  13:58:39,321 - #45 print_4
INFO  13:58:39,321 - #16 (
INFO  13:58:39,321 - #45 char
INFO  13:58:39,321 - #45 c1
INFO  13:58:39,321 - #19 ,
INFO  13:58:39,321 - #45 char
INFO  13:58:39,321 - #45 c2
INFO  13:58:39,321 - #19 ,
INFO  13:58:39,321 - #45 char
INFO  13:58:39,321 - #45 c3
INFO  13:58:39,321 - #19 ,
INFO  13:58:39,321 - #45 char
INFO  13:58:39,321 - #45 c4
INFO  13:58:39,321 - #17 )
INFO  13:58:39,322 - #12 {
INFO  13:58:39,322 - #11 print
INFO  13:58:39,322 - #16 (
INFO  13:58:39,322 - #45 eol
INFO  13:58:39,322 - #17 )
INFO  13:58:39,322 - #18 ;
INFO  13:58:39,322 - #11 print
INFO  13:58:39,322 - #16 (
INFO  13:58:39,322 - #45 c1
INFO  13:58:39,322 - #19 ,
INFO  13:58:39,322 - #44 2
INFO  13:58:39,322 - #17 )
INFO  13:58:39,322 - #18 ;
INFO  13:58:39,322 - #11 print
INFO  13:58:39,322 - #16 (
INFO  13:58:39,322 - #45 c2
INFO  13:58:39,322 - #19 ,
INFO  13:58:39,322 - #44 2
INFO  13:58:39,322 - #17 )
INFO  13:58:39,322 - #18 ;
INFO  13:58:39,322 - #11 print
INFO  13:58:39,322 - #16 (
INFO  13:58:39,322 - #45 c3
INFO  13:58:39,322 - #19 ,
INFO  13:58:39,322 - #44 2
INFO  13:58:39,322 - #17 )
INFO  13:58:39,323 - #18 ;
INFO  13:58:39,323 - #11 print
INFO  13:58:39,323 - #16 (
INFO  13:58:39,323 - #45 c4
INFO  13:58:39,323 - #19 ,
INFO  13:58:39,323 - #44 2
INFO  13:58:39,323 - #17 )
INFO  13:58:39,323 - #18 ;
INFO  13:58:39,323 - #11 print
INFO  13:58:39,323 - #16 (
INFO  13:58:39,323 - #45 eol
INFO  13:58:39,323 - #17 )
INFO  13:58:39,324 - #18 ;
INFO  13:58:39,324 - #13 }
INFO  13:58:39,324 - #39 void
INFO  13:58:39,324 - #45 main
INFO  13:58:39,324 - #16 (
INFO  13:58:39,325 - #17 )
INFO  13:58:39,325 - #45 int
INFO  13:58:39,325 - #45 local
INFO  13:58:39,325 - #18 ;
INFO  13:58:39,325 - #45 int
INFO  13:58:39,325 - #45 arr2
INFO  13:58:39,325 - #14 [
INFO  13:58:39,325 - #15 ]
INFO  13:58:39,325 - #18 ;
INFO  13:58:39,325 - #12 {
INFO  13:58:39,325 - #45 y
INFO  13:58:39,325 - #26 =
INFO  13:58:39,325 - #44 22
INFO  13:58:39,325 - #18 ;
INFO  13:58:39,325 - #45 x
INFO  13:58:39,325 - #26 =
INFO  13:58:39,325 - #44 45
INFO  13:58:39,325 - #23 *
INFO  13:58:39,325 - #44 2
INFO  13:58:39,325 - #23 *
INFO  13:58:39,325 - #44 0
INFO  13:58:39,326 - #18 ;
INFO  13:58:39,326 - #45 arr
INFO  13:58:39,326 - #26 =
INFO  13:58:39,326 - #10 new
INFO  13:58:39,326 - #45 int
INFO  13:58:39,326 - #14 [
INFO  13:58:39,326 - #44 20
INFO  13:58:39,326 - #15 ]
INFO  13:58:39,326 - #18 ;
INFO  13:58:39,326 - #45 arr2
INFO  13:58:39,326 - #26 =
INFO  13:58:39,326 - #10 new
INFO  13:58:39,327 - #45 int
INFO  13:58:39,327 - #14 [
INFO  13:58:39,327 - #44 10
INFO  13:58:39,327 - #15 ]
INFO  13:58:39,327 - #18 ;
INFO  13:58:39,327 - #45 arr
INFO  13:58:39,327 - #26 =
INFO  13:58:39,327 - #45 null
INFO  13:58:39,327 - #18 ;
INFO  13:58:39,327 - #11 print
INFO  13:58:39,327 - #16 (
INFO  13:58:39,327 - #45 arr
INFO  13:58:39,327 - #14 [
INFO  13:58:39,327 - #44 0
INFO  13:58:39,327 - #15 ]
INFO  13:58:39,327 - #19 ,
INFO  13:58:39,327 - #44 10
INFO  13:58:39,327 - #17 )
INFO  13:58:39,328 - #18 ;
INFO  13:58:39,328 - #13 }
INFO  13:58:39,328 - #13 }
INFO  13:58:39,333 - Program(
  ProgName(
   Program
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDecl(
          ) [NoDecl]
          VarDeclaration(
            VarDeclNode(
              VarDeclType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [VarDeclType]
              Variables(
                Variables(
                  Variables(
                    SingleVariable(
                      VariableNoBracket(
                       x
                      ) [VariableNoBracket]
                    ) [SingleVariable]
                    VariableNoBracket(
                     y
                    ) [VariableNoBracket]
                  ) [Variables]
                  VariableNoBracket(
                   z
                  ) [VariableNoBracket]
                ) [Variables]
                VariableBracket(
                 arr
                ) [VariableBracket]
              ) [Variables]
            ) [VarDeclNode]
          ) [VarDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclNode(
            ConstDeclType(
              TypeNode(
               int
              ) [TypeNode]
            ) [ConstDeclType]
            SingleConstant(
              IdentEqualConstantNode(
               con
                NumberNode(
                 100
                ) [NumberNode]
              ) [IdentEqualConstantNode]
            ) [SingleConstant]
          ) [ConstDeclNode]
        ) [ConstDeclaration]
      ) [Declarations]
      ConstDeclaration(
        ConstDeclNode(
          ConstDeclType(
            TypeNode(
             bool
            ) [TypeNode]
          ) [ConstDeclType]
          Constants(
            SingleConstant(
              IdentEqualConstantNode(
               bcon
                BooleanNode(
                 0
                ) [BooleanNode]
              ) [IdentEqualConstantNode]
            ) [SingleConstant]
            IdentEqualConstantNode(
             bcon2
              BooleanNode(
               1
              ) [BooleanNode]
            ) [IdentEqualConstantNode]
          ) [Constants]
        ) [ConstDeclNode]
      ) [ConstDeclaration]
    ) [Declarations]
    ConstDeclaration(
      ConstDeclNode(
        ConstDeclType(
          TypeNode(
           char
          ) [TypeNode]
        ) [ConstDeclType]
        Constants(
          Constants(
            Constants(
              SingleConstant(
                IdentEqualConstantNode(
                 c1
                  CharNode(
                   H
                  ) [CharNode]
                ) [IdentEqualConstantNode]
              ) [SingleConstant]
              IdentEqualConstantNode(
               c2
                CharNode(
                 U
                ) [CharNode]
              ) [IdentEqualConstantNode]
            ) [Constants]
            IdentEqualConstantNode(
             c3
              CharNode(
               D
              ) [CharNode]
            ) [IdentEqualConstantNode]
          ) [Constants]
          IdentEqualConstantNode(
           c4
            CharNode(
             I
            ) [CharNode]
          ) [IdentEqualConstantNode]
        ) [Constants]
      ) [ConstDeclNode]
    ) [ConstDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          MethodTypeName(
            NoVoidType(
              TypeNode(
               int
              ) [TypeNode]
            ) [NoVoidType]
           func
          ) [MethodTypeName]
          FormalParams(
            SingleFormalParamDecl(
              FormalParamDeclarationNoBrackets(
                TypeNode(
                 int
                ) [TypeNode]
               arg
              ) [FormalParamDeclarationNoBrackets]
            ) [SingleFormalParamDecl]
          ) [FormalParams]
          VarDeclarationList(
            NoVarDeclaration(
            ) [NoVarDeclaration]
            VarDeclNode(
              VarDeclType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [VarDeclType]
              SingleVariable(
                VariableNoBracket(
                 c
                ) [VariableNoBracket]
              ) [SingleVariable]
            ) [VarDeclNode]
          ) [VarDeclarationList]
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStatement(
                  ) [NoStatement]
                  PrintStatement(
                    SingleExpression(
                      TermFactor(
                        DesignatorEmpty(
                          DesignatorNode(
                            SingleIdentExpr(
                             eol
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                        ) [DesignatorEmpty]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [PrintStatement]
                ) [Statements]
                PrintStatement(
                  SingleExpression(
                    TermFactor(
                      ConstantCharacter(
                       f
                      ) [ConstantCharacter]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [PrintStatement]
              ) [Statements]
              DesignatorStatementOnly(
                DesignatorStatementAssignop(
                  DesignatorNode(
                    SingleIdentExpr(
                     c
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    TermFactor(
                      DesignatorEmpty(
                        DesignatorNode(
                          SingleIdentExpr(
                           arg
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                      ) [DesignatorEmpty]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementOnly]
            ) [Statements]
            ReturnStatementExpr(
              SingleExpression(
                TermNode(
                  TermFactor(
                    DesignatorEmpty(
                      DesignatorNode(
                        SingleIdentExpr(
                         arg
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                    ) [DesignatorEmpty]
                  ) [TermFactor]
                  MulopMul(
                  ) [MulopMul]
                  ConstantNumber(
                   2
                  ) [ConstantNumber]
                ) [TermNode]
              ) [SingleExpression]
            ) [ReturnStatementExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          VoidType(
          ) [VoidType]
         print_4
        ) [MethodTypeName]
        FormalParams(
          FormalParamDecls(
            FormalParamDecls(
              FormalParamDecls(
                SingleFormalParamDecl(
                  FormalParamDeclarationNoBrackets(
                    TypeNode(
                     char
                    ) [TypeNode]
                   c1
                  ) [FormalParamDeclarationNoBrackets]
                ) [SingleFormalParamDecl]
                FormalParamDeclarationNoBrackets(
                  TypeNode(
                   char
                  ) [TypeNode]
                 c2
                ) [FormalParamDeclarationNoBrackets]
              ) [FormalParamDecls]
              FormalParamDeclarationNoBrackets(
                TypeNode(
                 char
                ) [TypeNode]
               c3
              ) [FormalParamDeclarationNoBrackets]
            ) [FormalParamDecls]
            FormalParamDeclarationNoBrackets(
              TypeNode(
               char
              ) [TypeNode]
             c4
            ) [FormalParamDeclarationNoBrackets]
          ) [FormalParamDecls]
        ) [FormalParams]
        NoVarDeclaration(
        ) [NoVarDeclaration]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStatement(
                    ) [NoStatement]
                    PrintStatement(
                      SingleExpression(
                        TermFactor(
                          DesignatorEmpty(
                            DesignatorNode(
                              SingleIdentExpr(
                               eol
                              ) [SingleIdentExpr]
                            ) [DesignatorNode]
                          ) [DesignatorEmpty]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [PrintStatement]
                  ) [Statements]
                  PrintWithNumConstStatement(
                    SingleExpression(
                      TermFactor(
                        DesignatorEmpty(
                          DesignatorNode(
                            SingleIdentExpr(
                             c1
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                        ) [DesignatorEmpty]
                      ) [TermFactor]
                    ) [SingleExpression]
                   2
                  ) [PrintWithNumConstStatement]
                ) [Statements]
                PrintWithNumConstStatement(
                  SingleExpression(
                    TermFactor(
                      DesignatorEmpty(
                        DesignatorNode(
                          SingleIdentExpr(
                           c2
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                      ) [DesignatorEmpty]
                    ) [TermFactor]
                  ) [SingleExpression]
                 2
                ) [PrintWithNumConstStatement]
              ) [Statements]
              PrintWithNumConstStatement(
                SingleExpression(
                  TermFactor(
                    DesignatorEmpty(
                      DesignatorNode(
                        SingleIdentExpr(
                         c3
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                    ) [DesignatorEmpty]
                  ) [TermFactor]
                ) [SingleExpression]
               2
              ) [PrintWithNumConstStatement]
            ) [Statements]
            PrintWithNumConstStatement(
              SingleExpression(
                TermFactor(
                  DesignatorEmpty(
                    DesignatorNode(
                      SingleIdentExpr(
                       c4
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                  ) [DesignatorEmpty]
                ) [TermFactor]
              ) [SingleExpression]
             2
            ) [PrintWithNumConstStatement]
          ) [Statements]
          PrintStatement(
            SingleExpression(
              TermFactor(
                DesignatorEmpty(
                  DesignatorNode(
                    SingleIdentExpr(
                     eol
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                ) [DesignatorEmpty]
              ) [TermFactor]
            ) [SingleExpression]
          ) [PrintStatement]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      VarDeclarationList(
        VarDeclarationList(
          NoVarDeclaration(
          ) [NoVarDeclaration]
          VarDeclNode(
            VarDeclType(
              TypeNode(
               int
              ) [TypeNode]
            ) [VarDeclType]
            SingleVariable(
              VariableNoBracket(
               local
              ) [VariableNoBracket]
            ) [SingleVariable]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        VarDeclNode(
          VarDeclType(
            TypeNode(
             int
            ) [TypeNode]
          ) [VarDeclType]
          SingleVariable(
            VariableBracket(
             arr2
            ) [VariableBracket]
          ) [SingleVariable]
        ) [VarDeclNode]
      ) [VarDeclarationList]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStatement(
                  ) [NoStatement]
                  DesignatorStatementOnly(
                    DesignatorStatementAssignop(
                      DesignatorNode(
                        SingleIdentExpr(
                         y
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                      Assignop(
                      ) [Assignop]
                      SingleExpression(
                        TermFactor(
                          ConstantNumber(
                           22
                          ) [ConstantNumber]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementOnly]
                ) [Statements]
                DesignatorStatementOnly(
                  DesignatorStatementAssignop(
                    DesignatorNode(
                      SingleIdentExpr(
                       x
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                    Assignop(
                    ) [Assignop]
                    SingleExpression(
                      TermNode(
                        TermNode(
                          TermFactor(
                            ConstantNumber(
                             45
                            ) [ConstantNumber]
                          ) [TermFactor]
                          MulopMul(
                          ) [MulopMul]
                          ConstantNumber(
                           2
                          ) [ConstantNumber]
                        ) [TermNode]
                        MulopMul(
                        ) [MulopMul]
                        ConstantNumber(
                         0
                        ) [ConstantNumber]
                      ) [TermNode]
                    ) [SingleExpression]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementOnly]
              ) [Statements]
              DesignatorStatementOnly(
                DesignatorStatementAssignop(
                  DesignatorNode(
                    SingleIdentExpr(
                     arr
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    TermFactor(
                      NewArray(
                        NewArrayType(
                          TypeNode(
                           int
                          ) [TypeNode]
                        ) [NewArrayType]
                        SingleExpression(
                          TermFactor(
                            ConstantNumber(
                             20
                            ) [ConstantNumber]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [NewArray]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementOnly]
            ) [Statements]
            DesignatorStatementOnly(
              DesignatorStatementAssignop(
                DesignatorNode(
                  SingleIdentExpr(
                   arr2
                  ) [SingleIdentExpr]
                ) [DesignatorNode]
                Assignop(
                ) [Assignop]
                SingleExpression(
                  TermFactor(
                    NewArray(
                      NewArrayType(
                        TypeNode(
                         int
                        ) [TypeNode]
                      ) [NewArrayType]
                      SingleExpression(
                        TermFactor(
                          ConstantNumber(
                           10
                          ) [ConstantNumber]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [NewArray]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementOnly]
          ) [Statements]
          DesignatorStatementOnly(
            DesignatorStatementAssignop(
              DesignatorNode(
                SingleIdentExpr(
                 arr
                ) [SingleIdentExpr]
              ) [DesignatorNode]
              Assignop(
              ) [Assignop]
              SingleExpression(
                TermFactor(
                  DesignatorEmpty(
                    DesignatorNode(
                      SingleIdentExpr(
                       null
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                  ) [DesignatorEmpty]
                ) [TermFactor]
              ) [SingleExpression]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementOnly]
        ) [Statements]
        PrintWithNumConstStatement(
          SingleExpression(
            TermFactor(
              DesignatorEmpty(
                DesignatorNode(
                  Exprs(
                    IdentExprListArray(
                      SingleIdentExpr(
                       arr
                      ) [SingleIdentExpr]
                    ) [IdentExprListArray]
                    SingleExpression(
                      TermFactor(
                        ConstantNumber(
                         0
                        ) [ConstantNumber]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [Exprs]
                ) [DesignatorNode]
              ) [DesignatorEmpty]
            ) [TermFactor]
          ) [SingleExpression]
         10
        ) [PrintWithNumConstStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:58:39,333 - ===================================
INFO  13:58:39,337 - Deklarisana single promenljiva x na liniji 2
INFO  13:58:39,337 - Deklarisana single promenljiva y na liniji 2
INFO  13:58:39,337 - Deklarisana single promenljiva z na liniji 2
INFO  13:58:39,337 - Deklarisana array promenljiva arr na liniji 2
INFO  13:58:39,337 - Definisana konstanta (100)con na liniji 4
INFO  13:58:39,337 - Definisana konstanta (0)bcon na liniji 5
INFO  13:58:39,337 - Definisana konstanta (1)bcon2 na liniji 5
INFO  13:58:39,337 - Definisana konstanta (72)c1 na liniji 7
INFO  13:58:39,337 - Definisana konstanta (85)c2 na liniji 7
INFO  13:58:39,337 - Definisana konstanta (68)c3 na liniji 7
INFO  13:58:39,337 - Definisana konstanta (73)c4 na liniji 7
INFO  13:58:39,338 - Definisana funkcija func na liniji 10
INFO  13:58:39,338 - Deklarisan single argument arg na liniji 10
INFO  13:58:39,338 - Deklarisana single promenljiva c na liniji 11
INFO  13:58:39,338 - Pronadjen poziv promenljive eol na liniji 13
INFO  13:58:39,338 - Pronadjen poziv promenljive arg na liniji 15
INFO  13:58:39,338 - Dodela vrednosti za c na liniji 15
INFO  13:58:39,338 - Pronadjen poziv promenljive arg na liniji 16
INFO  13:58:39,338 - Definisana funkcija print_4 na liniji 18
INFO  13:58:39,338 - Deklarisan single argument c1 na liniji 18
INFO  13:58:39,338 - Deklarisan single argument c2 na liniji 18
INFO  13:58:39,338 - Deklarisan single argument c3 na liniji 18
INFO  13:58:39,338 - Deklarisan single argument c4 na liniji 18
INFO  13:58:39,338 - Pronadjen poziv promenljive eol na liniji 19
INFO  13:58:39,338 - Pronadjen poziv promenljive c1 na liniji 20
INFO  13:58:39,338 - Pronadjen poziv promenljive c2 na liniji 21
INFO  13:58:39,338 - Pronadjen poziv promenljive c3 na liniji 22
INFO  13:58:39,338 - Pronadjen poziv promenljive c4 na liniji 23
INFO  13:58:39,338 - Pronadjen poziv promenljive eol na liniji 24
INFO  13:58:39,338 - Definisana funkcija main na liniji 26
INFO  13:58:39,338 - Deklarisana single promenljiva local na liniji 27
INFO  13:58:39,338 - Deklarisana array promenljiva arr2 na liniji 28
INFO  13:58:39,339 - Dodela vrednosti za y na liniji 30
INFO  13:58:39,339 - Dodela vrednosti za x na liniji 31
INFO  13:58:39,339 - Dodela vrednosti za arr na liniji 32
INFO  13:58:39,339 - Dodela vrednosti za arr2 na liniji 33
INFO  13:58:39,339 - Pronadjen poziv promenljive null na liniji 34
INFO  13:58:39,339 - Dodela vrednosti za arr na liniji 34
INFO  13:58:39,339 - Pronadjen poziv promenljive $elem na liniji 37
INFO  13:58:39,339 - main funkcija je korektna.  na liniji 26
INFO  13:58:39,339 - ===================================
INFO  13:58:39,349 - Parsiranje uspesno zavrseno!
