INFO  01:11:26,163 - Putanja iz argumenta: test/program.mj
INFO  01:11:26,163 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  01:11:26,195 - #2 program
INFO  01:11:26,195 - #45 Program
INFO  01:11:26,195 - #45 int
INFO  01:11:26,196 - #45 x
INFO  01:11:26,196 - #19 ,
INFO  01:11:26,196 - #45 y
INFO  01:11:26,196 - #19 ,
INFO  01:11:26,197 - #45 z
INFO  01:11:26,197 - #19 ,
INFO  01:11:26,197 - #45 arr
INFO  01:11:26,197 - #14 [
INFO  01:11:26,197 - #15 ]
INFO  01:11:26,197 - #18 ;
INFO  01:11:26,197 - #12 {
INFO  01:11:26,197 - #39 void
INFO  01:11:26,198 - #45 main
INFO  01:11:26,198 - #16 (
INFO  01:11:26,198 - #17 )
INFO  01:11:26,199 - #45 int
INFO  01:11:26,199 - #45 a
INFO  01:11:26,199 - #19 ,
INFO  01:11:26,199 - #45 b
INFO  01:11:26,199 - #18 ;
INFO  01:11:26,199 - #12 {
INFO  01:11:26,199 - #45 a
INFO  01:11:26,200 - #26 =
INFO  01:11:26,200 - #44 3
INFO  01:11:26,200 - #18 ;
INFO  01:11:26,201 - #45 b
INFO  01:11:26,201 - #26 =
INFO  01:11:26,201 - #44 3
INFO  01:11:26,201 - #18 ;
INFO  01:11:26,201 - #9 if
INFO  01:11:26,201 - #16 (
INFO  01:11:26,201 - #45 a
INFO  01:11:26,201 - #29 ==
INFO  01:11:26,201 - #45 b
INFO  01:11:26,201 - #17 )
INFO  01:11:26,202 - #12 {
INFO  01:11:26,202 - #9 if
INFO  01:11:26,202 - #16 (
INFO  01:11:26,202 - #45 a
INFO  01:11:26,202 - #29 ==
INFO  01:11:26,202 - #44 2
INFO  01:11:26,202 - #17 )
INFO  01:11:26,202 - #12 {
INFO  01:11:26,202 - #11 print
INFO  01:11:26,202 - #16 (
INFO  01:11:26,202 - #44 1
INFO  01:11:26,202 - #17 )
INFO  01:11:26,202 - #18 ;
INFO  01:11:26,202 - #13 }
INFO  01:11:26,203 - #7 else
INFO  01:11:26,203 - #12 {
INFO  01:11:26,203 - #11 print
INFO  01:11:26,203 - #16 (
INFO  01:11:26,203 - #44 2
INFO  01:11:26,203 - #17 )
INFO  01:11:26,203 - #18 ;
INFO  01:11:26,203 - #13 }
INFO  01:11:26,203 - #11 print
INFO  01:11:26,204 - #16 (
INFO  01:11:26,204 - #44 3
INFO  01:11:26,204 - #17 )
INFO  01:11:26,204 - #18 ;
INFO  01:11:26,204 - #13 }
INFO  01:11:26,204 - #7 else
INFO  01:11:26,204 - #12 {
INFO  01:11:26,204 - #11 print
INFO  01:11:26,204 - #16 (
INFO  01:11:26,204 - #44 4
INFO  01:11:26,204 - #17 )
INFO  01:11:26,204 - #18 ;
INFO  01:11:26,204 - #13 }
INFO  01:11:26,204 - #9 if
INFO  01:11:26,204 - #16 (
INFO  01:11:26,204 - #45 b
INFO  01:11:26,204 - #21 +
INFO  01:11:26,204 - #44 1
INFO  01:11:26,205 - #30 !=
INFO  01:11:26,205 - #44 4
INFO  01:11:26,205 - #17 )
INFO  01:11:26,205 - #11 print
INFO  01:11:26,205 - #16 (
INFO  01:11:26,206 - #44 5
INFO  01:11:26,206 - #17 )
INFO  01:11:26,206 - #18 ;
INFO  01:11:26,206 - #7 else
INFO  01:11:26,206 - #9 if
INFO  01:11:26,206 - #16 (
INFO  01:11:26,206 - #45 b
INFO  01:11:26,206 - #21 +
INFO  01:11:26,206 - #44 2
INFO  01:11:26,206 - #29 ==
INFO  01:11:26,206 - #44 6
INFO  01:11:26,206 - #22 -
INFO  01:11:26,206 - #44 1
INFO  01:11:26,206 - #23 *
INFO  01:11:26,206 - #44 1
INFO  01:11:26,207 - #17 )
INFO  01:11:26,207 - #11 print
INFO  01:11:26,207 - #16 (
INFO  01:11:26,207 - #44 6
INFO  01:11:26,207 - #17 )
INFO  01:11:26,207 - #18 ;
INFO  01:11:26,207 - #7 else
INFO  01:11:26,207 - #12 {
INFO  01:11:26,207 - #9 if
INFO  01:11:26,207 - #16 (
INFO  01:11:26,207 - #44 2
INFO  01:11:26,207 - #29 ==
INFO  01:11:26,207 - #44 0
INFO  01:11:26,207 - #21 +
INFO  01:11:26,207 - #44 2
INFO  01:11:26,208 - #17 )
INFO  01:11:26,208 - #9 if
INFO  01:11:26,208 - #16 (
INFO  01:11:26,208 - #44 2
INFO  01:11:26,208 - #21 +
INFO  01:11:26,208 - #44 1
INFO  01:11:26,208 - #29 ==
INFO  01:11:26,208 - #44 4
INFO  01:11:26,208 - #22 -
INFO  01:11:26,208 - #44 1
INFO  01:11:26,208 - #17 )
INFO  01:11:26,208 - #11 print
INFO  01:11:26,208 - #16 (
INFO  01:11:26,208 - #44 7
INFO  01:11:26,208 - #17 )
INFO  01:11:26,208 - #18 ;
INFO  01:11:26,208 - #13 }
INFO  01:11:26,210 - #13 }
INFO  01:11:26,210 - #13 }
INFO  01:11:26,215 - Program(
  ProgName(
   Program
  ) [ProgName]
  Declarations(
    NoDecl(
    ) [NoDecl]
    VarDeclaration(
      VarDeclNode(
        VarDeclType(
          TypeNode(
           int
          ) [TypeNode]
        ) [VarDeclType]
        Variables(
          Variables(
            Variables(
              SingleVariable(
                VariableNoBracket(
                 x
                ) [VariableNoBracket]
              ) [SingleVariable]
              VariableNoBracket(
               y
              ) [VariableNoBracket]
            ) [Variables]
            VariableNoBracket(
             z
            ) [VariableNoBracket]
          ) [Variables]
          VariableBracket(
           arr
          ) [VariableBracket]
        ) [Variables]
      ) [VarDeclNode]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      VarDeclarationList(
        NoVarDeclaration(
        ) [NoVarDeclaration]
        VarDeclNode(
          VarDeclType(
            TypeNode(
             int
            ) [TypeNode]
          ) [VarDeclType]
          Variables(
            SingleVariable(
              VariableNoBracket(
               a
              ) [VariableNoBracket]
            ) [SingleVariable]
            VariableNoBracket(
             b
            ) [VariableNoBracket]
          ) [Variables]
        ) [VarDeclNode]
      ) [VarDeclarationList]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatement(
              ) [NoStatement]
              DesignatorStatementOnly(
                DesignatorStatementAssignop(
                  DesignatorNode(
                    SingleIdentExpr(
                     a
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    TermFactor(
                      ConstantNumber(
                       3
                      ) [ConstantNumber]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementOnly]
            ) [Statements]
            DesignatorStatementOnly(
              DesignatorStatementAssignop(
                DesignatorNode(
                  SingleIdentExpr(
                   b
                  ) [SingleIdentExpr]
                ) [DesignatorNode]
                Assignop(
                ) [Assignop]
                SingleExpression(
                  TermFactor(
                    ConstantNumber(
                     3
                    ) [ConstantNumber]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementOnly]
          ) [Statements]
          IfElseStatement(
            IfConditionNode(
              ConditionNode(
                SingleConditionTerm(
                  ConditionTermNode(
                    SingleConditionFact(
                      CondFactExpressionRelopExpression(
                        SingleExpression(
                          TermFactor(
                            DesignatorEmpty(
                              DesignatorNode(
                                SingleIdentExpr(
                                 a
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermFactor]
                        ) [SingleExpression]
                        RelopEqualEqual(
                        ) [RelopEqualEqual]
                        SingleExpression(
                          TermFactor(
                            DesignatorEmpty(
                              DesignatorNode(
                                SingleIdentExpr(
                                 b
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [CondFactExpressionRelopExpression]
                    ) [SingleConditionFact]
                  ) [ConditionTermNode]
                ) [SingleConditionTerm]
              ) [ConditionNode]
            ) [IfConditionNode]
            IfStatementThen(
              InBraceStatement(
                Statements(
                  Statements(
                    NoStatement(
                    ) [NoStatement]
                    IfElseStatement(
                      IfConditionNode(
                        ConditionNode(
                          SingleConditionTerm(
                            ConditionTermNode(
                              SingleConditionFact(
                                CondFactExpressionRelopExpression(
                                  SingleExpression(
                                    TermFactor(
                                      DesignatorEmpty(
                                        DesignatorNode(
                                          SingleIdentExpr(
                                           a
                                          ) [SingleIdentExpr]
                                        ) [DesignatorNode]
                                      ) [DesignatorEmpty]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                  RelopEqualEqual(
                                  ) [RelopEqualEqual]
                                  SingleExpression(
                                    TermFactor(
                                      ConstantNumber(
                                       2
                                      ) [ConstantNumber]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [CondFactExpressionRelopExpression]
                              ) [SingleConditionFact]
                            ) [ConditionTermNode]
                          ) [SingleConditionTerm]
                        ) [ConditionNode]
                      ) [IfConditionNode]
                      IfStatementThen(
                        InBraceStatement(
                          Statements(
                            NoStatement(
                            ) [NoStatement]
                            PrintStatement(
                              SingleExpression(
                                TermFactor(
                                  ConstantNumber(
                                   1
                                  ) [ConstantNumber]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [PrintStatement]
                          ) [Statements]
                        ) [InBraceStatement]
                      ) [IfStatementThen]
                      IfStatementElse(
                        InBraceStatement(
                          Statements(
                            NoStatement(
                            ) [NoStatement]
                            PrintStatement(
                              SingleExpression(
                                TermFactor(
                                  ConstantNumber(
                                   2
                                  ) [ConstantNumber]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [PrintStatement]
                          ) [Statements]
                        ) [InBraceStatement]
                      ) [IfStatementElse]
                    ) [IfElseStatement]
                  ) [Statements]
                  PrintStatement(
                    SingleExpression(
                      TermFactor(
                        ConstantNumber(
                         3
                        ) [ConstantNumber]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [PrintStatement]
                ) [Statements]
              ) [InBraceStatement]
            ) [IfStatementThen]
            IfStatementElse(
              InBraceStatement(
                Statements(
                  NoStatement(
                  ) [NoStatement]
                  PrintStatement(
                    SingleExpression(
                      TermFactor(
                        ConstantNumber(
                         4
                        ) [ConstantNumber]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [PrintStatement]
                ) [Statements]
              ) [InBraceStatement]
            ) [IfStatementElse]
          ) [IfElseStatement]
        ) [Statements]
        IfElseStatement(
          IfConditionNode(
            ConditionNode(
              SingleConditionTerm(
                ConditionTermNode(
                  SingleConditionFact(
                    CondFactExpressionRelopExpression(
                      ExpressionNode(
                        SingleExpression(
                          TermFactor(
                            DesignatorEmpty(
                              DesignatorNode(
                                SingleIdentExpr(
                                 b
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermFactor]
                        ) [SingleExpression]
                        AddopPlus(
                        ) [AddopPlus]
                        TermFactor(
                          ConstantNumber(
                           1
                          ) [ConstantNumber]
                        ) [TermFactor]
                      ) [ExpressionNode]
                      RelopNotEqual(
                      ) [RelopNotEqual]
                      SingleExpression(
                        TermFactor(
                          ConstantNumber(
                           4
                          ) [ConstantNumber]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [CondFactExpressionRelopExpression]
                  ) [SingleConditionFact]
                ) [ConditionTermNode]
              ) [SingleConditionTerm]
            ) [ConditionNode]
          ) [IfConditionNode]
          IfStatementThen(
            PrintStatement(
              SingleExpression(
                TermFactor(
                  ConstantNumber(
                   5
                  ) [ConstantNumber]
                ) [TermFactor]
              ) [SingleExpression]
            ) [PrintStatement]
          ) [IfStatementThen]
          IfStatementElse(
            IfElseStatement(
              IfConditionNode(
                ConditionNode(
                  SingleConditionTerm(
                    ConditionTermNode(
                      SingleConditionFact(
                        CondFactExpressionRelopExpression(
                          ExpressionNode(
                            SingleExpression(
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     b
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                            AddopPlus(
                            ) [AddopPlus]
                            TermFactor(
                              ConstantNumber(
                               2
                              ) [ConstantNumber]
                            ) [TermFactor]
                          ) [ExpressionNode]
                          RelopEqualEqual(
                          ) [RelopEqualEqual]
                          ExpressionNode(
                            SingleExpression(
                              TermFactor(
                                ConstantNumber(
                                 6
                                ) [ConstantNumber]
                              ) [TermFactor]
                            ) [SingleExpression]
                            AddopMinus(
                            ) [AddopMinus]
                            TermNode(
                              TermFactor(
                                ConstantNumber(
                                 1
                                ) [ConstantNumber]
                              ) [TermFactor]
                              MulopMul(
                              ) [MulopMul]
                              ConstantNumber(
                               1
                              ) [ConstantNumber]
                            ) [TermNode]
                          ) [ExpressionNode]
                        ) [CondFactExpressionRelopExpression]
                      ) [SingleConditionFact]
                    ) [ConditionTermNode]
                  ) [SingleConditionTerm]
                ) [ConditionNode]
              ) [IfConditionNode]
              IfStatementThen(
                PrintStatement(
                  SingleExpression(
                    TermFactor(
                      ConstantNumber(
                       6
                      ) [ConstantNumber]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [PrintStatement]
              ) [IfStatementThen]
              IfStatementElse(
                InBraceStatement(
                  Statements(
                    NoStatement(
                    ) [NoStatement]
                    IfStatement(
                      IfConditionNode(
                        ConditionNode(
                          SingleConditionTerm(
                            ConditionTermNode(
                              SingleConditionFact(
                                CondFactExpressionRelopExpression(
                                  SingleExpression(
                                    TermFactor(
                                      ConstantNumber(
                                       2
                                      ) [ConstantNumber]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                  RelopEqualEqual(
                                  ) [RelopEqualEqual]
                                  ExpressionNode(
                                    SingleExpression(
                                      TermFactor(
                                        ConstantNumber(
                                         0
                                        ) [ConstantNumber]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                    AddopPlus(
                                    ) [AddopPlus]
                                    TermFactor(
                                      ConstantNumber(
                                       2
                                      ) [ConstantNumber]
                                    ) [TermFactor]
                                  ) [ExpressionNode]
                                ) [CondFactExpressionRelopExpression]
                              ) [SingleConditionFact]
                            ) [ConditionTermNode]
                          ) [SingleConditionTerm]
                        ) [ConditionNode]
                      ) [IfConditionNode]
                      IfStatementThen(
                        IfStatement(
                          IfConditionNode(
                            ConditionNode(
                              SingleConditionTerm(
                                ConditionTermNode(
                                  SingleConditionFact(
                                    CondFactExpressionRelopExpression(
                                      ExpressionNode(
                                        SingleExpression(
                                          TermFactor(
                                            ConstantNumber(
                                             2
                                            ) [ConstantNumber]
                                          ) [TermFactor]
                                        ) [SingleExpression]
                                        AddopPlus(
                                        ) [AddopPlus]
                                        TermFactor(
                                          ConstantNumber(
                                           1
                                          ) [ConstantNumber]
                                        ) [TermFactor]
                                      ) [ExpressionNode]
                                      RelopEqualEqual(
                                      ) [RelopEqualEqual]
                                      ExpressionNode(
                                        SingleExpression(
                                          TermFactor(
                                            ConstantNumber(
                                             4
                                            ) [ConstantNumber]
                                          ) [TermFactor]
                                        ) [SingleExpression]
                                        AddopMinus(
                                        ) [AddopMinus]
                                        TermFactor(
                                          ConstantNumber(
                                           1
                                          ) [ConstantNumber]
                                        ) [TermFactor]
                                      ) [ExpressionNode]
                                    ) [CondFactExpressionRelopExpression]
                                  ) [SingleConditionFact]
                                ) [ConditionTermNode]
                              ) [SingleConditionTerm]
                            ) [ConditionNode]
                          ) [IfConditionNode]
                          IfStatementThen(
                            PrintStatement(
                              SingleExpression(
                                TermFactor(
                                  ConstantNumber(
                                   7
                                  ) [ConstantNumber]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [PrintStatement]
                          ) [IfStatementThen]
                        ) [IfStatement]
                      ) [IfStatementThen]
                    ) [IfStatement]
                  ) [Statements]
                ) [InBraceStatement]
              ) [IfStatementElse]
            ) [IfElseStatement]
          ) [IfStatementElse]
        ) [IfElseStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  01:11:26,216 - ===================================
INFO  01:11:26,219 - Deklarisana single promenljiva x na liniji 3
INFO  01:11:26,219 - Deklarisana single promenljiva y na liniji 3
INFO  01:11:26,219 - Deklarisana single promenljiva z na liniji 3
INFO  01:11:26,219 - Deklarisana array promenljiva arr na liniji 3
INFO  01:11:26,219 - Definisana funkcija main na liniji 7
INFO  01:11:26,219 - Deklarisana single promenljiva a na liniji 9
INFO  01:11:26,219 - Deklarisana single promenljiva b na liniji 9
INFO  01:11:26,220 - Dodela vrednosti za a na liniji 11
INFO  01:11:26,220 - Dodela vrednosti za b na liniji 12
INFO  01:11:26,220 - Pronadjen poziv promenljive a na liniji 14
INFO  01:11:26,220 - Pronadjen poziv promenljive b na liniji 14
INFO  01:11:26,220 - Pronadjen poziv promenljive a na liniji 16
INFO  01:11:26,220 - Pronadjen poziv promenljive b na liniji 28
INFO  01:11:26,220 - Pronadjen poziv promenljive b na liniji 31
INFO  01:11:26,220 - main funkcija je korektna.  na liniji 7
INFO  01:11:26,220 - ===================================
INFO  01:11:26,229 - Parsiranje uspesno zavrseno!
