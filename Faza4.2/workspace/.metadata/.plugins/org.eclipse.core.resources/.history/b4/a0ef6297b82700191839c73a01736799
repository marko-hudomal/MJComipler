INFO  22:45:21,012 - Putanja iz argumenta: test/program.mj
INFO  22:45:21,013 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  22:45:21,046 - #2 program
INFO  22:45:21,046 - #45 MojProgram
INFO  22:45:21,046 - #8 const
INFO  22:45:21,046 - #45 int
INFO  22:45:21,047 - #45 size
INFO  22:45:21,047 - #26 =
INFO  22:45:21,047 - #44 10
INFO  22:45:21,047 - #19 ,
INFO  22:45:21,047 - #45 const1
INFO  22:45:21,048 - #26 =
INFO  22:45:21,048 - #44 1
INFO  22:45:21,048 - #19 ,
INFO  22:45:21,048 - #45 const2
INFO  22:45:21,048 - #26 =
INFO  22:45:21,048 - #44 2
INFO  22:45:21,048 - #18 ;
INFO  22:45:21,048 - #8 const
INFO  22:45:21,048 - #45 bool
INFO  22:45:21,048 - #45 b1
INFO  22:45:21,049 - #26 =
INFO  22:45:21,049 - #47 1
INFO  22:45:21,049 - #19 ,
INFO  22:45:21,049 - #45 b2
INFO  22:45:21,049 - #26 =
INFO  22:45:21,049 - #47 0
INFO  22:45:21,049 - #18 ;
INFO  22:45:21,049 - #8 const
INFO  22:45:21,049 - #45 char
INFO  22:45:21,049 - #45 x
INFO  22:45:21,049 - #26 =
INFO  22:45:21,049 - #46 a
INFO  22:45:21,049 - #18 ;
INFO  22:45:21,049 - #8 const
INFO  22:45:21,049 - #45 bool
INFO  22:45:21,049 - #45 bb
INFO  22:45:21,049 - #26 =
INFO  22:45:21,049 - #47 1
INFO  22:45:21,050 - #18 ;
INFO  22:45:21,050 - #45 int
INFO  22:45:21,050 - #45 niz
INFO  22:45:21,050 - #14 [
INFO  22:45:21,050 - #15 ]
INFO  22:45:21,050 - #19 ,
INFO  22:45:21,050 - #45 d
INFO  22:45:21,050 - #18 ;
INFO  22:45:21,050 - #6 enum
INFO  22:45:21,051 - #45 Num
INFO  22:45:21,051 - #12 {
INFO  22:45:21,051 - #45 ZERO
INFO  22:45:21,051 - #26 =
INFO  22:45:21,051 - #44 0
INFO  22:45:21,051 - #19 ,
INFO  22:45:21,051 - #45 ONE
INFO  22:45:21,051 - #19 ,
INFO  22:45:21,051 - #45 TEN
INFO  22:45:21,051 - #26 =
INFO  22:45:21,051 - #44 10
INFO  22:45:21,052 - #19 ,
INFO  22:45:21,052 - #45 ELEVEN
INFO  22:45:21,052 - #26 =
INFO  22:45:21,052 - #44 11
INFO  22:45:21,052 - #13 }
INFO  22:45:21,052 - #45 int
INFO  22:45:21,052 - #45 a
INFO  22:45:21,052 - #19 ,
INFO  22:45:21,052 - #45 b
INFO  22:45:21,052 - #19 ,
INFO  22:45:21,052 - #45 c
INFO  22:45:21,052 - #18 ;
INFO  22:45:21,052 - #45 bool
INFO  22:45:21,052 - #45 bo
INFO  22:45:21,052 - #18 ;
INFO  22:45:21,052 - #8 const
INFO  22:45:21,052 - #45 bool
INFO  22:45:21,052 - #45 b_const
INFO  22:45:21,052 - #26 =
INFO  22:45:21,052 - #47 0
INFO  22:45:21,052 - #18 ;
INFO  22:45:21,052 - #45 int
INFO  22:45:21,053 - #45 xx
INFO  22:45:21,053 - #19 ,
INFO  22:45:21,053 - #45 aa
INFO  22:45:21,053 - #14 [
INFO  22:45:21,053 - #15 ]
INFO  22:45:21,053 - #18 ;
INFO  22:45:21,053 - #12 {
INFO  22:45:21,053 - #39 void
INFO  22:45:21,053 - #45 f1
INFO  22:45:21,053 - #16 (
INFO  22:45:21,054 - #45 char
INFO  22:45:21,054 - #45 ch1
INFO  22:45:21,054 - #19 ,
INFO  22:45:21,054 - #45 int
INFO  22:45:21,054 - #45 a1
INFO  22:45:21,054 - #19 ,
INFO  22:45:21,054 - #45 int
INFO  22:45:21,054 - #45 arg1
INFO  22:45:21,054 - #19 ,
INFO  22:45:21,054 - #45 bool
INFO  22:45:21,054 - #45 b1
INFO  22:45:21,054 - #17 )
INFO  22:45:21,054 - #45 int
INFO  22:45:21,055 - #45 x
INFO  22:45:21,055 - #18 ;
INFO  22:45:21,055 - #45 bool
INFO  22:45:21,055 - #45 c
INFO  22:45:21,055 - #18 ;
INFO  22:45:21,055 - #45 Num
INFO  22:45:21,055 - #45 broj
INFO  22:45:21,055 - #19 ,
INFO  22:45:21,055 - #45 broj2
INFO  22:45:21,055 - #18 ;
INFO  22:45:21,056 - #12 {
INFO  22:45:21,056 - #45 x
INFO  22:45:21,056 - #26 =
INFO  22:45:21,056 - #45 Num
INFO  22:45:21,056 - #20 .
INFO  22:45:21,056 - #45 ZERO
INFO  22:45:21,056 - #18 ;
INFO  22:45:21,057 - #45 broj
INFO  22:45:21,057 - #26 =
INFO  22:45:21,057 - #45 Num
INFO  22:45:21,057 - #20 .
INFO  22:45:21,057 - #45 ZERO
INFO  22:45:21,057 - #18 ;
INFO  22:45:21,057 - #45 broj2
INFO  22:45:21,057 - #26 =
INFO  22:45:21,057 - #44 10
INFO  22:45:21,057 - #18 ;
INFO  22:45:21,057 - #45 x
INFO  22:45:21,057 - #26 =
INFO  22:45:21,059 - #45 a
INFO  22:45:21,059 - #21 +
INFO  22:45:21,059 - #44 1
INFO  22:45:21,059 - #18 ;
INFO  22:45:21,059 - #45 c
INFO  22:45:21,060 - #26 =
INFO  22:45:21,060 - #47 0
INFO  22:45:21,060 - #18 ;
INFO  22:45:21,060 - #45 bo
INFO  22:45:21,060 - #26 =
INFO  22:45:21,060 - #47 1
INFO  22:45:21,060 - #18 ;
INFO  22:45:21,060 - #45 ch1
INFO  22:45:21,060 - #26 =
INFO  22:45:21,060 - #46 1
INFO  22:45:21,060 - #18 ;
INFO  22:45:21,060 - #13 }
INFO  22:45:21,060 - #45 int
INFO  22:45:21,061 - #45 f2
INFO  22:45:21,061 - #16 (
INFO  22:45:21,061 - #45 char
INFO  22:45:21,061 - #45 ch2
INFO  22:45:21,061 - #19 ,
INFO  22:45:21,061 - #45 int
INFO  22:45:21,061 - #45 a
INFO  22:45:21,061 - #19 ,
INFO  22:45:21,061 - #45 int
INFO  22:45:21,061 - #45 arg
INFO  22:45:21,061 - #17 )
INFO  22:45:21,061 - #45 int
INFO  22:45:21,061 - #45 ff
INFO  22:45:21,061 - #18 ;
INFO  22:45:21,061 - #45 int
INFO  22:45:21,061 - #45 i
INFO  22:45:21,061 - #18 ;
INFO  22:45:21,061 - #45 Num
INFO  22:45:21,061 - #45 broj
INFO  22:45:21,061 - #18 ;
INFO  22:45:21,061 - #12 {
INFO  22:45:21,061 - #45 f1
INFO  22:45:21,061 - #16 (
INFO  22:45:21,061 - #45 ch2
INFO  22:45:21,061 - #19 ,
INFO  22:45:21,062 - #45 b
INFO  22:45:21,062 - #19 ,
INFO  22:45:21,062 - #45 broj
INFO  22:45:21,062 - #19 ,
INFO  22:45:21,062 - #45 bo
INFO  22:45:21,062 - #17 )
INFO  22:45:21,062 - #18 ;
INFO  22:45:21,062 - #45 niz
INFO  22:45:21,062 - #26 =
INFO  22:45:21,062 - #10 new
INFO  22:45:21,062 - #45 int
INFO  22:45:21,062 - #14 [
INFO  22:45:21,062 - #44 20
INFO  22:45:21,062 - #15 ]
INFO  22:45:21,062 - #18 ;
INFO  22:45:21,062 - #45 ff
INFO  22:45:21,062 - #26 =
INFO  22:45:21,062 - #45 niz
INFO  22:45:21,062 - #14 [
INFO  22:45:21,062 - #44 1
INFO  22:45:21,062 - #15 ]
INFO  22:45:21,062 - #18 ;
INFO  22:45:21,063 - #45 niz
INFO  22:45:21,063 - #14 [
INFO  22:45:21,063 - #22 -
INFO  22:45:21,063 - #45 niz
INFO  22:45:21,063 - #14 [
INFO  22:45:21,063 - #45 niz
INFO  22:45:21,063 - #14 [
INFO  22:45:21,063 - #45 broj
INFO  22:45:21,063 - #15 ]
INFO  22:45:21,063 - #15 ]
INFO  22:45:21,063 - #21 +
INFO  22:45:21,063 - #44 5
INFO  22:45:21,063 - #23 *
INFO  22:45:21,063 - #44 9
INFO  22:45:21,063 - #15 ]
INFO  22:45:21,064 - #26 =
INFO  22:45:21,064 - #45 Num
INFO  22:45:21,064 - #20 .
INFO  22:45:21,064 - #45 ZERO
INFO  22:45:21,064 - #23 *
INFO  22:45:21,064 - #44 2
INFO  22:45:21,064 - #22 -
INFO  22:45:21,064 - #45 broj
INFO  22:45:21,064 - #18 ;
INFO  22:45:21,064 - #45 ff
INFO  22:45:21,064 - #26 =
INFO  22:45:21,064 - #44 0
INFO  22:45:21,064 - #18 ;
INFO  22:45:21,064 - #45 i
INFO  22:45:21,064 - #26 =
INFO  22:45:21,064 - #44 10
INFO  22:45:21,064 - #18 ;
INFO  22:45:21,064 - #40 for
INFO  22:45:21,064 - #16 (
INFO  22:45:21,064 - #45 i
INFO  22:45:21,064 - #26 =
INFO  22:45:21,065 - #44 0
INFO  22:45:21,065 - #18 ;
INFO  22:45:21,065 - #45 niz
INFO  22:45:21,065 - #30 !=
INFO  22:45:21,065 - #45 niz
INFO  22:45:21,065 - #18 ;
INFO  22:45:21,066 - #45 i
INFO  22:45:21,066 - #27 ++
INFO  22:45:21,066 - #17 )
INFO  22:45:21,066 - #12 {
INFO  22:45:21,066 - #3 break
INFO  22:45:21,066 - #18 ;
INFO  22:45:21,066 - #13 }
INFO  22:45:21,067 - #38 return
INFO  22:45:21,067 - #45 ff
INFO  22:45:21,067 - #18 ;
INFO  22:45:21,067 - #13 }
INFO  22:45:21,067 - #45 int
INFO  22:45:21,067 - #45 fa
INFO  22:45:21,067 - #16 (
INFO  22:45:21,067 - #45 char
INFO  22:45:21,068 - #45 arr
INFO  22:45:21,068 - #14 [
INFO  22:45:21,068 - #15 ]
INFO  22:45:21,068 - #19 ,
INFO  22:45:21,068 - #45 char
INFO  22:45:21,068 - #45 arr2
INFO  22:45:21,068 - #14 [
INFO  22:45:21,068 - #15 ]
INFO  22:45:21,068 - #19 ,
INFO  22:45:21,068 - #45 bool
INFO  22:45:21,068 - #45 a
INFO  22:45:21,069 - #14 [
INFO  22:45:21,069 - #15 ]
INFO  22:45:21,069 - #17 )
INFO  22:45:21,069 - #12 {
INFO  22:45:21,069 - #38 return
INFO  22:45:21,069 - #44 2
INFO  22:45:21,069 - #18 ;
INFO  22:45:21,069 - #13 }
INFO  22:45:21,069 - #45 int
INFO  22:45:21,069 - #45 putp
INFO  22:45:21,069 - #16 (
INFO  22:45:21,069 - #45 char
INFO  22:45:21,069 - #45 ch
INFO  22:45:21,069 - #17 )
INFO  22:45:21,069 - #45 int
INFO  22:45:21,069 - #45 x
INFO  22:45:21,069 - #18 ;
INFO  22:45:21,069 - #12 {
INFO  22:45:21,069 - #45 x
INFO  22:45:21,069 - #26 =
INFO  22:45:21,069 - #44 5
INFO  22:45:21,069 - #18 ;
INFO  22:45:21,069 - #45 bo
INFO  22:45:21,069 - #26 =
INFO  22:45:21,069 - #47 0
INFO  22:45:21,069 - #18 ;
INFO  22:45:21,069 - #45 x
INFO  22:45:21,069 - #26 =
INFO  22:45:21,069 - #45 f2
INFO  22:45:21,069 - #16 (
INFO  22:45:21,069 - #46 a
INFO  22:45:21,069 - #19 ,
INFO  22:45:21,069 - #45 Num
INFO  22:45:21,069 - #20 .
INFO  22:45:21,069 - #45 ZERO
INFO  22:45:21,069 - #19 ,
INFO  22:45:21,069 - #44 3
INFO  22:45:21,070 - #17 )
INFO  22:45:21,070 - #18 ;
INFO  22:45:21,070 - #38 return
INFO  22:45:21,070 - #45 x
INFO  22:45:21,070 - #18 ;
INFO  22:45:21,070 - #13 }
INFO  22:45:21,070 - #45 char
INFO  22:45:21,070 - #45 getp
INFO  22:45:21,070 - #16 (
INFO  22:45:21,070 - #45 char
INFO  22:45:21,070 - #45 ch
INFO  22:45:21,070 - #17 )
INFO  22:45:21,070 - #45 int
INFO  22:45:21,070 - #45 x
INFO  22:45:21,070 - #18 ;
INFO  22:45:21,070 - #12 {
INFO  22:45:21,070 - #45 x
INFO  22:45:21,070 - #26 =
INFO  22:45:21,070 - #22 -
INFO  22:45:21,070 - #44 2
INFO  22:45:21,070 - #23 *
INFO  22:45:21,070 - #45 a
INFO  22:45:21,070 - #21 +
INFO  22:45:21,070 - #44 5
INFO  22:45:21,070 - #23 *
INFO  22:45:21,070 - #16 (
INFO  22:45:21,070 - #45 x
INFO  22:45:21,070 - #24 /
INFO  22:45:21,070 - #44 2
INFO  22:45:21,071 - #17 )
INFO  22:45:21,071 - #18 ;
INFO  22:45:21,071 - #45 a
INFO  22:45:21,071 - #26 =
INFO  22:45:21,071 - #44 1
INFO  22:45:21,071 - #18 ;
INFO  22:45:21,071 - #45 b
INFO  22:45:21,071 - #26 =
INFO  22:45:21,071 - #44 1
INFO  22:45:21,071 - #23 *
INFO  22:45:21,071 - #45 a
INFO  22:45:21,071 - #18 ;
INFO  22:45:21,071 - #45 c
INFO  22:45:21,071 - #26 =
INFO  22:45:21,071 - #44 2
INFO  22:45:21,071 - #18 ;
INFO  22:45:21,071 - #38 return
INFO  22:45:21,071 - #46 x
INFO  22:45:21,071 - #18 ;
INFO  22:45:21,071 - #13 }
INFO  22:45:21,071 - #39 void
INFO  22:45:21,071 - #45 main
INFO  22:45:21,071 - #16 (
INFO  22:45:21,071 - #17 )
INFO  22:45:21,072 - #45 int
INFO  22:45:21,072 - #45 x
INFO  22:45:21,072 - #19 ,
INFO  22:45:21,072 - #45 i
INFO  22:45:21,072 - #18 ;
INFO  22:45:21,072 - #45 char
INFO  22:45:21,072 - #45 c
INFO  22:45:21,072 - #18 ;
INFO  22:45:21,072 - #45 int
INFO  22:45:21,072 - #45 val
INFO  22:45:21,072 - #18 ;
INFO  22:45:21,072 - #45 char
INFO  22:45:21,072 - #45 l
INFO  22:45:21,072 - #14 [
INFO  22:45:21,072 - #15 ]
INFO  22:45:21,072 - #18 ;
INFO  22:45:21,072 - #45 bool
INFO  22:45:21,072 - #45 bbb
INFO  22:45:21,072 - #14 [
INFO  22:45:21,072 - #15 ]
INFO  22:45:21,072 - #18 ;
INFO  22:45:21,072 - #12 {
INFO  22:45:21,072 - #45 l
INFO  22:45:21,072 - #26 =
INFO  22:45:21,072 - #10 new
INFO  22:45:21,072 - #45 char
INFO  22:45:21,072 - #14 [
INFO  22:45:21,072 - #44 2
INFO  22:45:21,072 - #15 ]
INFO  22:45:21,072 - #18 ;
INFO  22:45:21,072 - #45 bbb
INFO  22:45:21,073 - #26 =
INFO  22:45:21,073 - #10 new
INFO  22:45:21,073 - #45 bool
INFO  22:45:21,073 - #14 [
INFO  22:45:21,073 - #22 -
INFO  22:45:21,073 - #44 4
INFO  22:45:21,073 - #23 *
INFO  22:45:21,073 - #44 2
INFO  22:45:21,073 - #21 +
INFO  22:45:21,073 - #44 2
INFO  22:45:21,073 - #15 ]
INFO  22:45:21,073 - #18 ;
INFO  22:45:21,073 - #45 niz
INFO  22:45:21,073 - #26 =
INFO  22:45:21,073 - #10 new
INFO  22:45:21,073 - #45 int
INFO  22:45:21,073 - #14 [
INFO  22:45:21,073 - #45 x
INFO  22:45:21,073 - #15 ]
INFO  22:45:21,073 - #18 ;
INFO  22:45:21,073 - #45 val
INFO  22:45:21,073 - #26 =
INFO  22:45:21,073 - #44 5
INFO  22:45:21,073 - #18 ;
INFO  22:45:21,073 - #40 for
INFO  22:45:21,073 - #16 (
INFO  22:45:21,073 - #45 i
INFO  22:45:21,073 - #26 =
INFO  22:45:21,073 - #44 0
INFO  22:45:21,073 - #18 ;
INFO  22:45:21,073 - #45 i
INFO  22:45:21,073 - #33 <
INFO  22:45:21,073 - #45 size
INFO  22:45:21,074 - #18 ;
INFO  22:45:21,074 - #45 i
INFO  22:45:21,074 - #27 ++
INFO  22:45:21,074 - #17 )
INFO  22:45:21,074 - #12 {
INFO  22:45:21,074 - #45 x
INFO  22:45:21,074 - #26 =
INFO  22:45:21,074 - #45 putp
INFO  22:45:21,074 - #16 (
INFO  22:45:21,074 - #46 a
INFO  22:45:21,074 - #17 )
INFO  22:45:21,074 - #18 ;
INFO  22:45:21,074 - #45 putp
INFO  22:45:21,074 - #16 (
INFO  22:45:21,074 - #45 c
INFO  22:45:21,074 - #17 )
INFO  22:45:21,074 - #18 ;
INFO  22:45:21,074 - #13 }
INFO  22:45:21,074 - #45 f1
INFO  22:45:21,074 - #16 (
INFO  22:45:21,074 - #45 c
INFO  22:45:21,074 - #19 ,
INFO  22:45:21,074 - #45 Num
INFO  22:45:21,074 - #20 .
INFO  22:45:21,074 - #45 ZERO
INFO  22:45:21,074 - #19 ,
INFO  22:45:21,074 - #45 size
INFO  22:45:21,074 - #24 /
INFO  22:45:21,074 - #44 2
INFO  22:45:21,074 - #19 ,
INFO  22:45:21,074 - #47 0
INFO  22:45:21,074 - #17 )
INFO  22:45:21,074 - #18 ;
INFO  22:45:21,074 - #11 print
INFO  22:45:21,074 - #16 (
INFO  22:45:21,074 - #45 d
INFO  22:45:21,074 - #17 )
INFO  22:45:21,074 - #18 ;
INFO  22:45:21,074 - #37 read
INFO  22:45:21,074 - #16 (
INFO  22:45:21,074 - #45 x
INFO  22:45:21,075 - #17 )
INFO  22:45:21,075 - #18 ;
INFO  22:45:21,075 - #40 for
INFO  22:45:21,075 - #16 (
INFO  22:45:21,075 - #45 i
INFO  22:45:21,075 - #26 =
INFO  22:45:21,075 - #44 1
INFO  22:45:21,075 - #18 ;
INFO  22:45:21,075 - #45 x
INFO  22:45:21,075 - #31 >
INFO  22:45:21,075 - #44 1
INFO  22:45:21,075 - #18 ;
INFO  22:45:21,075 - #17 )
INFO  22:45:21,075 - #12 {
INFO  22:45:21,075 - #9 if
INFO  22:45:21,075 - #16 (
INFO  22:45:21,076 - #44 0
INFO  22:45:21,076 - #34 <=
INFO  22:45:21,076 - #45 x
INFO  22:45:21,076 - #35 &&
INFO  22:45:21,076 - #45 x
INFO  22:45:21,076 - #33 <
INFO  22:45:21,076 - #45 size
INFO  22:45:21,076 - #17 )
INFO  22:45:21,076 - #12 {
INFO  22:45:21,076 - #45 putp
INFO  22:45:21,076 - #16 (
INFO  22:45:21,076 - #45 getp
INFO  22:45:21,076 - #16 (
INFO  22:45:21,076 - #45 c
INFO  22:45:21,076 - #17 )
INFO  22:45:21,076 - #17 )
INFO  22:45:21,076 - #18 ;
INFO  22:45:21,076 - #13 }
INFO  22:45:21,076 - #7 else
INFO  22:45:21,076 - #9 if
INFO  22:45:21,076 - #16 (
INFO  22:45:21,077 - #22 -
INFO  22:45:21,077 - #45 size
INFO  22:45:21,077 - #33 <
INFO  22:45:21,077 - #45 x
INFO  22:45:21,077 - #35 &&
INFO  22:45:21,077 - #45 x
INFO  22:45:21,077 - #33 <
INFO  22:45:21,077 - #44 0
INFO  22:45:21,077 - #17 )
INFO  22:45:21,077 - #12 {
INFO  22:45:21,077 - #45 putp
INFO  22:45:21,077 - #16 (
INFO  22:45:21,077 - #45 getp
INFO  22:45:21,077 - #16 (
INFO  22:45:21,077 - #46 #
INFO  22:45:21,078 - #17 )
INFO  22:45:21,078 - #17 )
INFO  22:45:21,078 - #18 ;
INFO  22:45:21,078 - #13 }
INFO  22:45:21,078 - #37 read
INFO  22:45:21,078 - #16 (
INFO  22:45:21,078 - #45 x
INFO  22:45:21,078 - #17 )
INFO  22:45:21,078 - #18 ;
INFO  22:45:21,078 - #13 }
INFO  22:45:21,078 - #45 xx
INFO  22:45:21,079 - #26 =
INFO  22:45:21,079 - #45 aa
INFO  22:45:21,079 - #14 [
INFO  22:45:21,079 - #45 aa
INFO  22:45:21,079 - #14 [
INFO  22:45:21,079 - #44 2
INFO  22:45:21,079 - #21 +
INFO  22:45:21,079 - #44 3
INFO  22:45:21,079 - #15 ]
INFO  22:45:21,079 - #15 ]
INFO  22:45:21,079 - #18 ;
INFO  22:45:21,079 - #45 fa
INFO  22:45:21,079 - #16 (
INFO  22:45:21,079 - #45 l
INFO  22:45:21,079 - #19 ,
INFO  22:45:21,079 - #45 l
INFO  22:45:21,079 - #19 ,
INFO  22:45:21,079 - #45 l
INFO  22:45:21,079 - #17 )
INFO  22:45:21,079 - #18 ;
INFO  22:45:21,079 - #38 return
INFO  22:45:21,079 - #18 ;
INFO  22:45:21,079 - #13 }
INFO  22:45:21,080 - #13 }
INFO  22:45:21,092 - Program(
  ProgName(
   MojProgram
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                Declarations(
                  Declarations(
                    Declarations(
                      NoDecl(
                      ) [NoDecl]
                      ConstDeclaration(
                        ConstDeclNode(
                          ConstDeclType(
                            TypeNode(
                             int
                            ) [TypeNode]
                          ) [ConstDeclType]
                          Constants(
                            Constants(
                              SingleConstant(
                                IdentEqualConstantNode(
                                 size
                                  NumberNode(
                                   10
                                  ) [NumberNode]
                                ) [IdentEqualConstantNode]
                              ) [SingleConstant]
                              IdentEqualConstantNode(
                               const1
                                NumberNode(
                                 1
                                ) [NumberNode]
                              ) [IdentEqualConstantNode]
                            ) [Constants]
                            IdentEqualConstantNode(
                             const2
                              NumberNode(
                               2
                              ) [NumberNode]
                            ) [IdentEqualConstantNode]
                          ) [Constants]
                        ) [ConstDeclNode]
                      ) [ConstDeclaration]
                    ) [Declarations]
                    ConstDeclaration(
                      ConstDeclNode(
                        ConstDeclType(
                          TypeNode(
                           bool
                          ) [TypeNode]
                        ) [ConstDeclType]
                        Constants(
                          SingleConstant(
                            IdentEqualConstantNode(
                             b1
                              BooleanNode(
                               1
                              ) [BooleanNode]
                            ) [IdentEqualConstantNode]
                          ) [SingleConstant]
                          IdentEqualConstantNode(
                           b2
                            BooleanNode(
                             0
                            ) [BooleanNode]
                          ) [IdentEqualConstantNode]
                        ) [Constants]
                      ) [ConstDeclNode]
                    ) [ConstDeclaration]
                  ) [Declarations]
                  ConstDeclaration(
                    ConstDeclNode(
                      ConstDeclType(
                        TypeNode(
                         char
                        ) [TypeNode]
                      ) [ConstDeclType]
                      SingleConstant(
                        IdentEqualConstantNode(
                         x
                          CharNode(
                           a
                          ) [CharNode]
                        ) [IdentEqualConstantNode]
                      ) [SingleConstant]
                    ) [ConstDeclNode]
                  ) [ConstDeclaration]
                ) [Declarations]
                ConstDeclaration(
                  ConstDeclNode(
                    ConstDeclType(
                      TypeNode(
                       bool
                      ) [TypeNode]
                    ) [ConstDeclType]
                    SingleConstant(
                      IdentEqualConstantNode(
                       bb
                        BooleanNode(
                         1
                        ) [BooleanNode]
                      ) [IdentEqualConstantNode]
                    ) [SingleConstant]
                  ) [ConstDeclNode]
                ) [ConstDeclaration]
              ) [Declarations]
              VarDeclaration(
                VarDeclNode(
                  VarDeclType(
                    TypeNode(
                     int
                    ) [TypeNode]
                  ) [VarDeclType]
                  Variables(
                    SingleVariable(
                      VariableBracket(
                       niz
                      ) [VariableBracket]
                    ) [SingleVariable]
                    VariableNoBracket(
                     d
                    ) [VariableNoBracket]
                  ) [Variables]
                ) [VarDeclNode]
              ) [VarDeclaration]
            ) [Declarations]
            EnumDeclaration(
              EnumDeclarationNode(
                EnumIdent(
                 Num
                ) [EnumIdent]
                Enumerations(
                  Enumerations(
                    Enumerations(
                      SingleEnumeration(
                        EnumerationVal(
                         ZERO
                         0
                        ) [EnumerationVal]
                      ) [SingleEnumeration]
                      EnumerationNoVal(
                       ONE
                      ) [EnumerationNoVal]
                    ) [Enumerations]
                    EnumerationVal(
                     TEN
                     10
                    ) [EnumerationVal]
                  ) [Enumerations]
                  EnumerationVal(
                   ELEVEN
                   11
                  ) [EnumerationVal]
                ) [Enumerations]
              ) [EnumDeclarationNode]
            ) [EnumDeclaration]
          ) [Declarations]
          VarDeclaration(
            VarDeclNode(
              VarDeclType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [VarDeclType]
              Variables(
                Variables(
                  SingleVariable(
                    VariableNoBracket(
                     a
                    ) [VariableNoBracket]
                  ) [SingleVariable]
                  VariableNoBracket(
                   b
                  ) [VariableNoBracket]
                ) [Variables]
                VariableNoBracket(
                 c
                ) [VariableNoBracket]
              ) [Variables]
            ) [VarDeclNode]
          ) [VarDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclNode(
            VarDeclType(
              TypeNode(
               bool
              ) [TypeNode]
            ) [VarDeclType]
            SingleVariable(
              VariableNoBracket(
               bo
              ) [VariableNoBracket]
            ) [SingleVariable]
          ) [VarDeclNode]
        ) [VarDeclaration]
      ) [Declarations]
      ConstDeclaration(
        ConstDeclNode(
          ConstDeclType(
            TypeNode(
             bool
            ) [TypeNode]
          ) [ConstDeclType]
          SingleConstant(
            IdentEqualConstantNode(
             b_const
              BooleanNode(
               0
              ) [BooleanNode]
            ) [IdentEqualConstantNode]
          ) [SingleConstant]
        ) [ConstDeclNode]
      ) [ConstDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclNode(
        VarDeclType(
          TypeNode(
           int
          ) [TypeNode]
        ) [VarDeclType]
        Variables(
          SingleVariable(
            VariableNoBracket(
             xx
            ) [VariableNoBracket]
          ) [SingleVariable]
          VariableBracket(
           aa
          ) [VariableBracket]
        ) [Variables]
      ) [VarDeclNode]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          MethodDeclarations(
            MethodDeclarations(
              NoMethodDecl(
              ) [NoMethodDecl]
              MethodDecl(
                MethodTypeName(
                  VoidType(
                  ) [VoidType]
                 f1
                ) [MethodTypeName]
                FormalParams(
                  FormalParamDecls(
                    FormalParamDecls(
                      FormalParamDecls(
                        SingleFormalParamDecl(
                          FormalParamDeclarationNoBrackets(
                            TypeNode(
                             char
                            ) [TypeNode]
                           ch1
                          ) [FormalParamDeclarationNoBrackets]
                        ) [SingleFormalParamDecl]
                        FormalParamDeclarationNoBrackets(
                          TypeNode(
                           int
                          ) [TypeNode]
                         a1
                        ) [FormalParamDeclarationNoBrackets]
                      ) [FormalParamDecls]
                      FormalParamDeclarationNoBrackets(
                        TypeNode(
                         int
                        ) [TypeNode]
                       arg1
                      ) [FormalParamDeclarationNoBrackets]
                    ) [FormalParamDecls]
                    FormalParamDeclarationNoBrackets(
                      TypeNode(
                       bool
                      ) [TypeNode]
                     b1
                    ) [FormalParamDeclarationNoBrackets]
                  ) [FormalParamDecls]
                ) [FormalParams]
                VarDeclarationList(
                  VarDeclarationList(
                    VarDeclarationList(
                      NoVarDeclaration(
                      ) [NoVarDeclaration]
                      VarDeclNode(
                        VarDeclType(
                          TypeNode(
                           int
                          ) [TypeNode]
                        ) [VarDeclType]
                        SingleVariable(
                          VariableNoBracket(
                           x
                          ) [VariableNoBracket]
                        ) [SingleVariable]
                      ) [VarDeclNode]
                    ) [VarDeclarationList]
                    VarDeclNode(
                      VarDeclType(
                        TypeNode(
                         bool
                        ) [TypeNode]
                      ) [VarDeclType]
                      SingleVariable(
                        VariableNoBracket(
                         c
                        ) [VariableNoBracket]
                      ) [SingleVariable]
                    ) [VarDeclNode]
                  ) [VarDeclarationList]
                  VarDeclNode(
                    VarDeclType(
                      TypeNode(
                       Num
                      ) [TypeNode]
                    ) [VarDeclType]
                    Variables(
                      SingleVariable(
                        VariableNoBracket(
                         broj
                        ) [VariableNoBracket]
                      ) [SingleVariable]
                      VariableNoBracket(
                       broj2
                      ) [VariableNoBracket]
                    ) [Variables]
                  ) [VarDeclNode]
                ) [VarDeclarationList]
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              NoStatement(
                              ) [NoStatement]
                              DesignatorStatementOnly(
                                DesignatorStatementAssignop(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     x
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                  Assignop(
                                  ) [Assignop]
                                  SingleExpression(
                                    TermFactor(
                                      DesignatorEmpty(
                                        DesignatorNode(
                                          Idents(
                                            SingleIdentExpr(
                                             Num
                                            ) [SingleIdentExpr]
                                           ZERO
                                          ) [Idents]
                                        ) [DesignatorNode]
                                      ) [DesignatorEmpty]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [DesignatorStatementAssignop]
                              ) [DesignatorStatementOnly]
                            ) [Statements]
                            DesignatorStatementOnly(
                              DesignatorStatementAssignop(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   broj
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                                Assignop(
                                ) [Assignop]
                                SingleExpression(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        Idents(
                                          SingleIdentExpr(
                                           Num
                                          ) [SingleIdentExpr]
                                         ZERO
                                        ) [Idents]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [DesignatorStatementAssignop]
                            ) [DesignatorStatementOnly]
                          ) [Statements]
                          DesignatorStatementOnly(
                            DesignatorStatementAssignop(
                              DesignatorNode(
                                SingleIdentExpr(
                                 broj2
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                              Assignop(
                              ) [Assignop]
                              SingleExpression(
                                TermFactor(
                                  ConstantNumber(
                                   10
                                  ) [ConstantNumber]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [DesignatorStatementAssignop]
                          ) [DesignatorStatementOnly]
                        ) [Statements]
                        DesignatorStatementOnly(
                          DesignatorStatementAssignop(
                            DesignatorNode(
                              SingleIdentExpr(
                               x
                              ) [SingleIdentExpr]
                            ) [DesignatorNode]
                            Assignop(
                            ) [Assignop]
                            ExpressionNode(
                              SingleExpression(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      SingleIdentExpr(
                                       a
                                      ) [SingleIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                              AddopPlus(
                              ) [AddopPlus]
                              TermFactor(
                                ConstantNumber(
                                 1
                                ) [ConstantNumber]
                              ) [TermFactor]
                            ) [ExpressionNode]
                          ) [DesignatorStatementAssignop]
                        ) [DesignatorStatementOnly]
                      ) [Statements]
                      DesignatorStatementOnly(
                        DesignatorStatementAssignop(
                          DesignatorNode(
                            SingleIdentExpr(
                             c
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                          Assignop(
                          ) [Assignop]
                          SingleExpression(
                            TermFactor(
                              ConstantBoolean(
                               0
                              ) [ConstantBoolean]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementOnly]
                    ) [Statements]
                    DesignatorStatementOnly(
                      DesignatorStatementAssignop(
                        DesignatorNode(
                          SingleIdentExpr(
                           bo
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                        Assignop(
                        ) [Assignop]
                        SingleExpression(
                          TermFactor(
                            ConstantBoolean(
                             1
                            ) [ConstantBoolean]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementOnly]
                  ) [Statements]
                  DesignatorStatementOnly(
                    DesignatorStatementAssignop(
                      DesignatorNode(
                        SingleIdentExpr(
                         ch1
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                      Assignop(
                      ) [Assignop]
                      SingleExpression(
                        TermFactor(
                          ConstantCharacter(
                           1
                          ) [ConstantCharacter]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementOnly]
                ) [Statements]
              ) [MethodDecl]
            ) [MethodDeclarations]
            MethodDecl(
              MethodTypeName(
                NoVoidType(
                  TypeNode(
                   int
                  ) [TypeNode]
                ) [NoVoidType]
               f2
              ) [MethodTypeName]
              FormalParams(
                FormalParamDecls(
                  FormalParamDecls(
                    SingleFormalParamDecl(
                      FormalParamDeclarationNoBrackets(
                        TypeNode(
                         char
                        ) [TypeNode]
                       ch2
                      ) [FormalParamDeclarationNoBrackets]
                    ) [SingleFormalParamDecl]
                    FormalParamDeclarationNoBrackets(
                      TypeNode(
                       int
                      ) [TypeNode]
                     a
                    ) [FormalParamDeclarationNoBrackets]
                  ) [FormalParamDecls]
                  FormalParamDeclarationNoBrackets(
                    TypeNode(
                     int
                    ) [TypeNode]
                   arg
                  ) [FormalParamDeclarationNoBrackets]
                ) [FormalParamDecls]
              ) [FormalParams]
              VarDeclarationList(
                VarDeclarationList(
                  VarDeclarationList(
                    NoVarDeclaration(
                    ) [NoVarDeclaration]
                    VarDeclNode(
                      VarDeclType(
                        TypeNode(
                         int
                        ) [TypeNode]
                      ) [VarDeclType]
                      SingleVariable(
                        VariableNoBracket(
                         ff
                        ) [VariableNoBracket]
                      ) [SingleVariable]
                    ) [VarDeclNode]
                  ) [VarDeclarationList]
                  VarDeclNode(
                    VarDeclType(
                      TypeNode(
                       int
                      ) [TypeNode]
                    ) [VarDeclType]
                    SingleVariable(
                      VariableNoBracket(
                       i
                      ) [VariableNoBracket]
                    ) [SingleVariable]
                  ) [VarDeclNode]
                ) [VarDeclarationList]
                VarDeclNode(
                  VarDeclType(
                    TypeNode(
                     Num
                    ) [TypeNode]
                  ) [VarDeclType]
                  SingleVariable(
                    VariableNoBracket(
                     broj
                    ) [VariableNoBracket]
                  ) [SingleVariable]
                ) [VarDeclNode]
              ) [VarDeclarationList]
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              NoStatement(
                              ) [NoStatement]
                              DesignatorStatementOnly(
                                DesignatorStatementActPars(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     f1
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                  ActParsNode(
                                    ActualParametres(
                                      ActualParametres(
                                        ActualParametres(
                                          SingleActualParam(
                                            SingleExpression(
                                              TermFactor(
                                                DesignatorEmpty(
                                                  DesignatorNode(
                                                    SingleIdentExpr(
                                                     ch2
                                                    ) [SingleIdentExpr]
                                                  ) [DesignatorNode]
                                                ) [DesignatorEmpty]
                                              ) [TermFactor]
                                            ) [SingleExpression]
                                          ) [SingleActualParam]
                                          SingleExpression(
                                            TermFactor(
                                              DesignatorEmpty(
                                                DesignatorNode(
                                                  SingleIdentExpr(
                                                   b
                                                  ) [SingleIdentExpr]
                                                ) [DesignatorNode]
                                              ) [DesignatorEmpty]
                                            ) [TermFactor]
                                          ) [SingleExpression]
                                        ) [ActualParametres]
                                        SingleExpression(
                                          TermFactor(
                                            DesignatorEmpty(
                                              DesignatorNode(
                                                SingleIdentExpr(
                                                 broj
                                                ) [SingleIdentExpr]
                                              ) [DesignatorNode]
                                            ) [DesignatorEmpty]
                                          ) [TermFactor]
                                        ) [SingleExpression]
                                      ) [ActualParametres]
                                      SingleExpression(
                                        TermFactor(
                                          DesignatorEmpty(
                                            DesignatorNode(
                                              SingleIdentExpr(
                                               bo
                                              ) [SingleIdentExpr]
                                            ) [DesignatorNode]
                                          ) [DesignatorEmpty]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                    ) [ActualParametres]
                                  ) [ActParsNode]
                                ) [DesignatorStatementActPars]
                              ) [DesignatorStatementOnly]
                            ) [Statements]
                            DesignatorStatementOnly(
                              DesignatorStatementAssignop(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   niz
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                                Assignop(
                                ) [Assignop]
                                SingleExpression(
                                  TermFactor(
                                    NewArray(
                                      TypeNode(
                                       int
                                      ) [TypeNode]
                                      SingleExpression(
                                        TermFactor(
                                          ConstantNumber(
                                           20
                                          ) [ConstantNumber]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                    ) [NewArray]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [DesignatorStatementAssignop]
                            ) [DesignatorStatementOnly]
                          ) [Statements]
                          DesignatorStatementOnly(
                            DesignatorStatementAssignop(
                              DesignatorNode(
                                SingleIdentExpr(
                                 ff
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                              Assignop(
                              ) [Assignop]
                              SingleExpression(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      Exprs(
                                        SingleIdentExpr(
                                         niz
                                        ) [SingleIdentExpr]
                                        SingleExpression(
                                          TermFactor(
                                            ConstantNumber(
                                             1
                                            ) [ConstantNumber]
                                          ) [TermFactor]
                                        ) [SingleExpression]
                                      ) [Exprs]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [DesignatorStatementAssignop]
                          ) [DesignatorStatementOnly]
                        ) [Statements]
                        DesignatorStatementOnly(
                          DesignatorStatementAssignop(
                            DesignatorNode(
                              Exprs(
                                SingleIdentExpr(
                                 niz
                                ) [SingleIdentExpr]
                                ExpressionNode(
                                  SingleExpressionMinus(
                                    TermFactor(
                                      DesignatorEmpty(
                                        DesignatorNode(
                                          Exprs(
                                            SingleIdentExpr(
                                             niz
                                            ) [SingleIdentExpr]
                                            SingleExpression(
                                              TermFactor(
                                                DesignatorEmpty(
                                                  DesignatorNode(
                                                    Exprs(
                                                      SingleIdentExpr(
                                                       niz
                                                      ) [SingleIdentExpr]
                                                      SingleExpression(
                                                        TermFactor(
                                                          DesignatorEmpty(
                                                            DesignatorNode(
                                                              SingleIdentExpr(
                                                               broj
                                                              ) [SingleIdentExpr]
                                                            ) [DesignatorNode]
                                                          ) [DesignatorEmpty]
                                                        ) [TermFactor]
                                                      ) [SingleExpression]
                                                    ) [Exprs]
                                                  ) [DesignatorNode]
                                                ) [DesignatorEmpty]
                                              ) [TermFactor]
                                            ) [SingleExpression]
                                          ) [Exprs]
                                        ) [DesignatorNode]
                                      ) [DesignatorEmpty]
                                    ) [TermFactor]
                                  ) [SingleExpressionMinus]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermNode(
                                    TermFactor(
                                      ConstantNumber(
                                       5
                                      ) [ConstantNumber]
                                    ) [TermFactor]
                                    AddopMul(
                                    ) [AddopMul]
                                    ConstantNumber(
                                     9
                                    ) [ConstantNumber]
                                  ) [TermNode]
                                ) [ExpressionNode]
                              ) [Exprs]
                            ) [DesignatorNode]
                            Assignop(
                            ) [Assignop]
                            ExpressionNode(
                              SingleExpression(
                                TermNode(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        Idents(
                                          SingleIdentExpr(
                                           Num
                                          ) [SingleIdentExpr]
                                         ZERO
                                        ) [Idents]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                  AddopMul(
                                  ) [AddopMul]
                                  ConstantNumber(
                                   2
                                  ) [ConstantNumber]
                                ) [TermNode]
                              ) [SingleExpression]
                              AddopMinus(
                              ) [AddopMinus]
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     broj
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [ExpressionNode]
                          ) [DesignatorStatementAssignop]
                        ) [DesignatorStatementOnly]
                      ) [Statements]
                      DesignatorStatementOnly(
                        DesignatorStatementAssignop(
                          DesignatorNode(
                            SingleIdentExpr(
                             ff
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                          Assignop(
                          ) [Assignop]
                          SingleExpression(
                            TermFactor(
                              ConstantNumber(
                               0
                              ) [ConstantNumber]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementOnly]
                    ) [Statements]
                    DesignatorStatementOnly(
                      DesignatorStatementAssignop(
                        DesignatorNode(
                          SingleIdentExpr(
                           i
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                        Assignop(
                        ) [Assignop]
                        SingleExpression(
                          TermFactor(
                            ConstantNumber(
                             10
                            ) [ConstantNumber]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementOnly]
                  ) [Statements]
                  ForStatement(
                    ForHeader(
                      DesignatorStatementNotNull(
                        DesignatorStatementAssignop(
                          DesignatorNode(
                            SingleIdentExpr(
                             i
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                          Assignop(
                          ) [Assignop]
                          SingleExpression(
                            TermFactor(
                              ConstantNumber(
                               0
                              ) [ConstantNumber]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementNotNull]
                      ConditionNotNull(
                        ConditionNode(
                          SingleConditionTerm(
                            ConditionTermNode(
                              SingleConditionFact(
                                CondFactExpressionRelopExpression(
                                  SingleExpression(
                                    TermFactor(
                                      DesignatorEmpty(
                                        DesignatorNode(
                                          SingleIdentExpr(
                                           niz
                                          ) [SingleIdentExpr]
                                        ) [DesignatorNode]
                                      ) [DesignatorEmpty]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                  RelopNotEqual(
                                  ) [RelopNotEqual]
                                  SingleExpression(
                                    TermFactor(
                                      DesignatorEmpty(
                                        DesignatorNode(
                                          SingleIdentExpr(
                                           niz
                                          ) [SingleIdentExpr]
                                        ) [DesignatorNode]
                                      ) [DesignatorEmpty]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [CondFactExpressionRelopExpression]
                              ) [SingleConditionFact]
                            ) [ConditionTermNode]
                          ) [SingleConditionTerm]
                        ) [ConditionNode]
                      ) [ConditionNotNull]
                      DesignatorStatementNotNull(
                        DesignatorStatementPlusPlus(
                          DesignatorNode(
                            SingleIdentExpr(
                             i
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                        ) [DesignatorStatementPlusPlus]
                      ) [DesignatorStatementNotNull]
                    ) [ForHeader]
                    InBraceStatement(
                      Statements(
                        NoStatement(
                        ) [NoStatement]
                        BreakStatement(
                          SemiDerived1(
                          ) [SemiDerived1]
                        ) [BreakStatement]
                      ) [Statements]
                    ) [InBraceStatement]
                  ) [ForStatement]
                ) [Statements]
                ReturnStatementExpr(
                  SingleExpression(
                    TermFactor(
                      DesignatorEmpty(
                        DesignatorNode(
                          SingleIdentExpr(
                           ff
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                      ) [DesignatorEmpty]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [ReturnStatementExpr]
              ) [Statements]
            ) [MethodDecl]
          ) [MethodDeclarations]
          MethodDecl(
            MethodTypeName(
              NoVoidType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [NoVoidType]
             fa
            ) [MethodTypeName]
            FormalParams(
              FormalParamDecls(
                FormalParamDecls(
                  SingleFormalParamDecl(
                    FormalParamDeclarationBrackets(
                      TypeNode(
                       char
                      ) [TypeNode]
                     arr
                    ) [FormalParamDeclarationBrackets]
                  ) [SingleFormalParamDecl]
                  FormalParamDeclarationBrackets(
                    TypeNode(
                     char
                    ) [TypeNode]
                   arr2
                  ) [FormalParamDeclarationBrackets]
                ) [FormalParamDecls]
                FormalParamDeclarationBrackets(
                  TypeNode(
                   bool
                  ) [TypeNode]
                 a
                ) [FormalParamDeclarationBrackets]
              ) [FormalParamDecls]
            ) [FormalParams]
            NoVarDeclaration(
            ) [NoVarDeclaration]
            Statements(
              NoStatement(
              ) [NoStatement]
              ReturnStatementExpr(
                SingleExpression(
                  TermFactor(
                    ConstantNumber(
                     2
                    ) [ConstantNumber]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [ReturnStatementExpr]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          MethodTypeName(
            NoVoidType(
              TypeNode(
               int
              ) [TypeNode]
            ) [NoVoidType]
           putp
          ) [MethodTypeName]
          FormalParams(
            SingleFormalParamDecl(
              FormalParamDeclarationNoBrackets(
                TypeNode(
                 char
                ) [TypeNode]
               ch
              ) [FormalParamDeclarationNoBrackets]
            ) [SingleFormalParamDecl]
          ) [FormalParams]
          VarDeclarationList(
            NoVarDeclaration(
            ) [NoVarDeclaration]
            VarDeclNode(
              VarDeclType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [VarDeclType]
              SingleVariable(
                VariableNoBracket(
                 x
                ) [VariableNoBracket]
              ) [SingleVariable]
            ) [VarDeclNode]
          ) [VarDeclarationList]
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStatement(
                  ) [NoStatement]
                  DesignatorStatementOnly(
                    DesignatorStatementAssignop(
                      DesignatorNode(
                        SingleIdentExpr(
                         x
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                      Assignop(
                      ) [Assignop]
                      SingleExpression(
                        TermFactor(
                          ConstantNumber(
                           5
                          ) [ConstantNumber]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementOnly]
                ) [Statements]
                DesignatorStatementOnly(
                  DesignatorStatementAssignop(
                    DesignatorNode(
                      SingleIdentExpr(
                       bo
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                    Assignop(
                    ) [Assignop]
                    SingleExpression(
                      TermFactor(
                        ConstantBoolean(
                         0
                        ) [ConstantBoolean]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementOnly]
              ) [Statements]
              DesignatorStatementOnly(
                DesignatorStatementAssignop(
                  DesignatorNode(
                    SingleIdentExpr(
                     x
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    TermFactor(
                      DesignatorBraceActPars(
                        DesignatorNode(
                          SingleIdentExpr(
                           f2
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                        ActParsNode(
                          ActualParametres(
                            ActualParametres(
                              SingleActualParam(
                                SingleExpression(
                                  TermFactor(
                                    ConstantCharacter(
                                     a
                                    ) [ConstantCharacter]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [SingleActualParam]
                              SingleExpression(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      Idents(
                                        SingleIdentExpr(
                                         Num
                                        ) [SingleIdentExpr]
                                       ZERO
                                      ) [Idents]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [ActualParametres]
                            SingleExpression(
                              TermFactor(
                                ConstantNumber(
                                 3
                                ) [ConstantNumber]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [ActualParametres]
                        ) [ActParsNode]
                      ) [DesignatorBraceActPars]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementOnly]
            ) [Statements]
            ReturnStatementExpr(
              SingleExpression(
                TermFactor(
                  DesignatorEmpty(
                    DesignatorNode(
                      SingleIdentExpr(
                       x
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                  ) [DesignatorEmpty]
                ) [TermFactor]
              ) [SingleExpression]
            ) [ReturnStatementExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          NoVoidType(
            TypeNode(
             char
            ) [TypeNode]
          ) [NoVoidType]
         getp
        ) [MethodTypeName]
        FormalParams(
          SingleFormalParamDecl(
            FormalParamDeclarationNoBrackets(
              TypeNode(
               char
              ) [TypeNode]
             ch
            ) [FormalParamDeclarationNoBrackets]
          ) [SingleFormalParamDecl]
        ) [FormalParams]
        VarDeclarationList(
          NoVarDeclaration(
          ) [NoVarDeclaration]
          VarDeclNode(
            VarDeclType(
              TypeNode(
               int
              ) [TypeNode]
            ) [VarDeclType]
            SingleVariable(
              VariableNoBracket(
               x
              ) [VariableNoBracket]
            ) [SingleVariable]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStatement(
                  ) [NoStatement]
                  DesignatorStatementOnly(
                    DesignatorStatementAssignop(
                      DesignatorNode(
                        SingleIdentExpr(
                         x
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                      Assignop(
                      ) [Assignop]
                      ExpressionNode(
                        SingleExpressionMinus(
                          TermNode(
                            TermFactor(
                              ConstantNumber(
                               2
                              ) [ConstantNumber]
                            ) [TermFactor]
                            AddopMul(
                            ) [AddopMul]
                            DesignatorEmpty(
                              DesignatorNode(
                                SingleIdentExpr(
                                 a
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermNode]
                        ) [SingleExpressionMinus]
                        AddopPlus(
                        ) [AddopPlus]
                        TermNode(
                          TermFactor(
                            ConstantNumber(
                             5
                            ) [ConstantNumber]
                          ) [TermFactor]
                          AddopMul(
                          ) [AddopMul]
                          ExprParenNode(
                            SingleExpression(
                              TermNode(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      SingleIdentExpr(
                                       x
                                      ) [SingleIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                                AddopDiv(
                                ) [AddopDiv]
                                ConstantNumber(
                                 2
                                ) [ConstantNumber]
                              ) [TermNode]
                            ) [SingleExpression]
                          ) [ExprParenNode]
                        ) [TermNode]
                      ) [ExpressionNode]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementOnly]
                ) [Statements]
                DesignatorStatementOnly(
                  DesignatorStatementAssignop(
                    DesignatorNode(
                      SingleIdentExpr(
                       a
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                    Assignop(
                    ) [Assignop]
                    SingleExpression(
                      TermFactor(
                        ConstantNumber(
                         1
                        ) [ConstantNumber]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementOnly]
              ) [Statements]
              DesignatorStatementOnly(
                DesignatorStatementAssignop(
                  DesignatorNode(
                    SingleIdentExpr(
                     b
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    TermNode(
                      TermFactor(
                        ConstantNumber(
                         1
                        ) [ConstantNumber]
                      ) [TermFactor]
                      AddopMul(
                      ) [AddopMul]
                      DesignatorEmpty(
                        DesignatorNode(
                          SingleIdentExpr(
                           a
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                      ) [DesignatorEmpty]
                    ) [TermNode]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementOnly]
            ) [Statements]
            DesignatorStatementOnly(
              DesignatorStatementAssignop(
                DesignatorNode(
                  SingleIdentExpr(
                   c
                  ) [SingleIdentExpr]
                ) [DesignatorNode]
                Assignop(
                ) [Assignop]
                SingleExpression(
                  TermFactor(
                    ConstantNumber(
                     2
                    ) [ConstantNumber]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementOnly]
          ) [Statements]
          ReturnStatementExpr(
            SingleExpression(
              TermFactor(
                ConstantCharacter(
                 x
                ) [ConstantCharacter]
              ) [TermFactor]
            ) [SingleExpression]
          ) [ReturnStatementExpr]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      VarDeclarationList(
        VarDeclarationList(
          VarDeclarationList(
            VarDeclarationList(
              VarDeclarationList(
                NoVarDeclaration(
                ) [NoVarDeclaration]
                VarDeclNode(
                  VarDeclType(
                    TypeNode(
                     int
                    ) [TypeNode]
                  ) [VarDeclType]
                  Variables(
                    SingleVariable(
                      VariableNoBracket(
                       x
                      ) [VariableNoBracket]
                    ) [SingleVariable]
                    VariableNoBracket(
                     i
                    ) [VariableNoBracket]
                  ) [Variables]
                ) [VarDeclNode]
              ) [VarDeclarationList]
              VarDeclNode(
                VarDeclType(
                  TypeNode(
                   char
                  ) [TypeNode]
                ) [VarDeclType]
                SingleVariable(
                  VariableNoBracket(
                   c
                  ) [VariableNoBracket]
                ) [SingleVariable]
              ) [VarDeclNode]
            ) [VarDeclarationList]
            VarDeclNode(
              VarDeclType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [VarDeclType]
              SingleVariable(
                VariableNoBracket(
                 val
                ) [VariableNoBracket]
              ) [SingleVariable]
            ) [VarDeclNode]
          ) [VarDeclarationList]
          VarDeclNode(
            VarDeclType(
              TypeNode(
               char
              ) [TypeNode]
            ) [VarDeclType]
            SingleVariable(
              VariableBracket(
               l
              ) [VariableBracket]
            ) [SingleVariable]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        VarDeclNode(
          VarDeclType(
            TypeNode(
             bool
            ) [TypeNode]
          ) [VarDeclType]
          SingleVariable(
            VariableBracket(
             bbb
            ) [VariableBracket]
          ) [SingleVariable]
        ) [VarDeclNode]
      ) [VarDeclarationList]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              NoStatement(
                              ) [NoStatement]
                              DesignatorStatementOnly(
                                DesignatorStatementAssignop(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     l
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                  Assignop(
                                  ) [Assignop]
                                  SingleExpression(
                                    TermFactor(
                                      NewArray(
                                        TypeNode(
                                         char
                                        ) [TypeNode]
                                        SingleExpression(
                                          TermFactor(
                                            ConstantNumber(
                                             2
                                            ) [ConstantNumber]
                                          ) [TermFactor]
                                        ) [SingleExpression]
                                      ) [NewArray]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [DesignatorStatementAssignop]
                              ) [DesignatorStatementOnly]
                            ) [Statements]
                            DesignatorStatementOnly(
                              DesignatorStatementAssignop(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   bbb
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                                Assignop(
                                ) [Assignop]
                                SingleExpression(
                                  TermFactor(
                                    NewArray(
                                      TypeNode(
                                       bool
                                      ) [TypeNode]
                                      ExpressionNode(
                                        SingleExpressionMinus(
                                          TermNode(
                                            TermFactor(
                                              ConstantNumber(
                                               4
                                              ) [ConstantNumber]
                                            ) [TermFactor]
                                            AddopMul(
                                            ) [AddopMul]
                                            ConstantNumber(
                                             2
                                            ) [ConstantNumber]
                                          ) [TermNode]
                                        ) [SingleExpressionMinus]
                                        AddopPlus(
                                        ) [AddopPlus]
                                        TermFactor(
                                          ConstantNumber(
                                           2
                                          ) [ConstantNumber]
                                        ) [TermFactor]
                                      ) [ExpressionNode]
                                    ) [NewArray]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [DesignatorStatementAssignop]
                            ) [DesignatorStatementOnly]
                          ) [Statements]
                          DesignatorStatementOnly(
                            DesignatorStatementAssignop(
                              DesignatorNode(
                                SingleIdentExpr(
                                 niz
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                              Assignop(
                              ) [Assignop]
                              SingleExpression(
                                TermFactor(
                                  NewArray(
                                    TypeNode(
                                     int
                                    ) [TypeNode]
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             x
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [NewArray]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [DesignatorStatementAssignop]
                          ) [DesignatorStatementOnly]
                        ) [Statements]
                        DesignatorStatementOnly(
                          DesignatorStatementAssignop(
                            DesignatorNode(
                              SingleIdentExpr(
                               val
                              ) [SingleIdentExpr]
                            ) [DesignatorNode]
                            Assignop(
                            ) [Assignop]
                            SingleExpression(
                              TermFactor(
                                ConstantNumber(
                                 5
                                ) [ConstantNumber]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [DesignatorStatementAssignop]
                        ) [DesignatorStatementOnly]
                      ) [Statements]
                      ForStatement(
                        ForHeader(
                          DesignatorStatementNotNull(
                            DesignatorStatementAssignop(
                              DesignatorNode(
                                SingleIdentExpr(
                                 i
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                              Assignop(
                              ) [Assignop]
                              SingleExpression(
                                TermFactor(
                                  ConstantNumber(
                                   0
                                  ) [ConstantNumber]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [DesignatorStatementAssignop]
                          ) [DesignatorStatementNotNull]
                          ConditionNotNull(
                            ConditionNode(
                              SingleConditionTerm(
                                ConditionTermNode(
                                  SingleConditionFact(
                                    CondFactExpressionRelopExpression(
                                      SingleExpression(
                                        TermFactor(
                                          DesignatorEmpty(
                                            DesignatorNode(
                                              SingleIdentExpr(
                                               i
                                              ) [SingleIdentExpr]
                                            ) [DesignatorNode]
                                          ) [DesignatorEmpty]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                      RelopLess(
                                      ) [RelopLess]
                                      SingleExpression(
                                        TermFactor(
                                          DesignatorEmpty(
                                            DesignatorNode(
                                              SingleIdentExpr(
                                               size
                                              ) [SingleIdentExpr]
                                            ) [DesignatorNode]
                                          ) [DesignatorEmpty]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                    ) [CondFactExpressionRelopExpression]
                                  ) [SingleConditionFact]
                                ) [ConditionTermNode]
                              ) [SingleConditionTerm]
                            ) [ConditionNode]
                          ) [ConditionNotNull]
                          DesignatorStatementNotNull(
                            DesignatorStatementPlusPlus(
                              DesignatorNode(
                                SingleIdentExpr(
                                 i
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorStatementPlusPlus]
                          ) [DesignatorStatementNotNull]
                        ) [ForHeader]
                        InBraceStatement(
                          Statements(
                            Statements(
                              NoStatement(
                              ) [NoStatement]
                              DesignatorStatementOnly(
                                DesignatorStatementAssignop(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     x
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                  Assignop(
                                  ) [Assignop]
                                  SingleExpression(
                                    TermFactor(
                                      DesignatorBraceActPars(
                                        DesignatorNode(
                                          SingleIdentExpr(
                                           putp
                                          ) [SingleIdentExpr]
                                        ) [DesignatorNode]
                                        ActParsNode(
                                          SingleActualParam(
                                            SingleExpression(
                                              TermFactor(
                                                ConstantCharacter(
                                                 a
                                                ) [ConstantCharacter]
                                              ) [TermFactor]
                                            ) [SingleExpression]
                                          ) [SingleActualParam]
                                        ) [ActParsNode]
                                      ) [DesignatorBraceActPars]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [DesignatorStatementAssignop]
                              ) [DesignatorStatementOnly]
                            ) [Statements]
                            DesignatorStatementOnly(
                              DesignatorStatementActPars(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   putp
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                                ActParsNode(
                                  SingleActualParam(
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             c
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [SingleActualParam]
                                ) [ActParsNode]
                              ) [DesignatorStatementActPars]
                            ) [DesignatorStatementOnly]
                          ) [Statements]
                        ) [InBraceStatement]
                      ) [ForStatement]
                    ) [Statements]
                    DesignatorStatementOnly(
                      DesignatorStatementActPars(
                        DesignatorNode(
                          SingleIdentExpr(
                           f1
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                        ActParsNode(
                          ActualParametres(
                            ActualParametres(
                              ActualParametres(
                                SingleActualParam(
                                  SingleExpression(
                                    TermFactor(
                                      DesignatorEmpty(
                                        DesignatorNode(
                                          SingleIdentExpr(
                                           c
                                          ) [SingleIdentExpr]
                                        ) [DesignatorNode]
                                      ) [DesignatorEmpty]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [SingleActualParam]
                                SingleExpression(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        Idents(
                                          SingleIdentExpr(
                                           Num
                                          ) [SingleIdentExpr]
                                         ZERO
                                        ) [Idents]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [ActualParametres]
                              SingleExpression(
                                TermNode(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        SingleIdentExpr(
                                         size
                                        ) [SingleIdentExpr]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                  AddopDiv(
                                  ) [AddopDiv]
                                  ConstantNumber(
                                   2
                                  ) [ConstantNumber]
                                ) [TermNode]
                              ) [SingleExpression]
                            ) [ActualParametres]
                            SingleExpression(
                              TermFactor(
                                ConstantBoolean(
                                 0
                                ) [ConstantBoolean]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [ActualParametres]
                        ) [ActParsNode]
                      ) [DesignatorStatementActPars]
                    ) [DesignatorStatementOnly]
                  ) [Statements]
                  PrintStatement(
                    SingleExpression(
                      TermFactor(
                        DesignatorEmpty(
                          DesignatorNode(
                            SingleIdentExpr(
                             d
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                        ) [DesignatorEmpty]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [PrintStatement]
                ) [Statements]
                ReadStatement(
                  DesignatorNode(
                    SingleIdentExpr(
                     x
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                ) [ReadStatement]
              ) [Statements]
              ForStatement(
                ForHeader(
                  DesignatorStatementNotNull(
                    DesignatorStatementAssignop(
                      DesignatorNode(
                        SingleIdentExpr(
                         i
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                      Assignop(
                      ) [Assignop]
                      SingleExpression(
                        TermFactor(
                          ConstantNumber(
                           1
                          ) [ConstantNumber]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementNotNull]
                  ConditionNotNull(
                    ConditionNode(
                      SingleConditionTerm(
                        ConditionTermNode(
                          SingleConditionFact(
                            CondFactExpressionRelopExpression(
                              SingleExpression(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      SingleIdentExpr(
                                       x
                                      ) [SingleIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                              RelopGreater(
                              ) [RelopGreater]
                              SingleExpression(
                                TermFactor(
                                  ConstantNumber(
                                   1
                                  ) [ConstantNumber]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [CondFactExpressionRelopExpression]
                          ) [SingleConditionFact]
                        ) [ConditionTermNode]
                      ) [SingleConditionTerm]
                    ) [ConditionNode]
                  ) [ConditionNotNull]
                  DesignatorStatementNull(
                  ) [DesignatorStatementNull]
                ) [ForHeader]
                InBraceStatement(
                  Statements(
                    Statements(
                      NoStatement(
                      ) [NoStatement]
                      IfElseStatement(
                        IfConditionNode(
                          ConditionNode(
                            SingleConditionTerm(
                              ConditionTermNode(
                                ConditionFacts(
                                  SingleConditionFact(
                                    CondFactExpressionRelopExpression(
                                      SingleExpression(
                                        TermFactor(
                                          ConstantNumber(
                                           0
                                          ) [ConstantNumber]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                      RelopLessEqual(
                                      ) [RelopLessEqual]
                                      SingleExpression(
                                        TermFactor(
                                          DesignatorEmpty(
                                            DesignatorNode(
                                              SingleIdentExpr(
                                               x
                                              ) [SingleIdentExpr]
                                            ) [DesignatorNode]
                                          ) [DesignatorEmpty]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                    ) [CondFactExpressionRelopExpression]
                                  ) [SingleConditionFact]
                                  CondFactExpressionRelopExpression(
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             x
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                    RelopLess(
                                    ) [RelopLess]
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             size
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [CondFactExpressionRelopExpression]
                                ) [ConditionFacts]
                              ) [ConditionTermNode]
                            ) [SingleConditionTerm]
                          ) [ConditionNode]
                        ) [IfConditionNode]
                        InBraceStatement(
                          Statements(
                            NoStatement(
                            ) [NoStatement]
                            DesignatorStatementOnly(
                              DesignatorStatementActPars(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   putp
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                                ActParsNode(
                                  SingleActualParam(
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorBraceActPars(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             getp
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                          ActParsNode(
                                            SingleActualParam(
                                              SingleExpression(
                                                TermFactor(
                                                  DesignatorEmpty(
                                                    DesignatorNode(
                                                      SingleIdentExpr(
                                                       c
                                                      ) [SingleIdentExpr]
                                                    ) [DesignatorNode]
                                                  ) [DesignatorEmpty]
                                                ) [TermFactor]
                                              ) [SingleExpression]
                                            ) [SingleActualParam]
                                          ) [ActParsNode]
                                        ) [DesignatorBraceActPars]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [SingleActualParam]
                                ) [ActParsNode]
                              ) [DesignatorStatementActPars]
                            ) [DesignatorStatementOnly]
                          ) [Statements]
                        ) [InBraceStatement]
                        IfStatement(
                          IfConditionNode(
                            ConditionNode(
                              SingleConditionTerm(
                                ConditionTermNode(
                                  ConditionFacts(
                                    SingleConditionFact(
                                      CondFactExpressionRelopExpression(
                                        SingleExpressionMinus(
                                          TermFactor(
                                            DesignatorEmpty(
                                              DesignatorNode(
                                                SingleIdentExpr(
                                                 size
                                                ) [SingleIdentExpr]
                                              ) [DesignatorNode]
                                            ) [DesignatorEmpty]
                                          ) [TermFactor]
                                        ) [SingleExpressionMinus]
                                        RelopLess(
                                        ) [RelopLess]
                                        SingleExpression(
                                          TermFactor(
                                            DesignatorEmpty(
                                              DesignatorNode(
                                                SingleIdentExpr(
                                                 x
                                                ) [SingleIdentExpr]
                                              ) [DesignatorNode]
                                            ) [DesignatorEmpty]
                                          ) [TermFactor]
                                        ) [SingleExpression]
                                      ) [CondFactExpressionRelopExpression]
                                    ) [SingleConditionFact]
                                    CondFactExpressionRelopExpression(
                                      SingleExpression(
                                        TermFactor(
                                          DesignatorEmpty(
                                            DesignatorNode(
                                              SingleIdentExpr(
                                               x
                                              ) [SingleIdentExpr]
                                            ) [DesignatorNode]
                                          ) [DesignatorEmpty]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                      RelopLess(
                                      ) [RelopLess]
                                      SingleExpression(
                                        TermFactor(
                                          ConstantNumber(
                                           0
                                          ) [ConstantNumber]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                    ) [CondFactExpressionRelopExpression]
                                  ) [ConditionFacts]
                                ) [ConditionTermNode]
                              ) [SingleConditionTerm]
                            ) [ConditionNode]
                          ) [IfConditionNode]
                          InBraceStatement(
                            Statements(
                              NoStatement(
                              ) [NoStatement]
                              DesignatorStatementOnly(
                                DesignatorStatementActPars(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     putp
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                  ActParsNode(
                                    SingleActualParam(
                                      SingleExpression(
                                        TermFactor(
                                          DesignatorBraceActPars(
                                            DesignatorNode(
                                              SingleIdentExpr(
                                               getp
                                              ) [SingleIdentExpr]
                                            ) [DesignatorNode]
                                            ActParsNode(
                                              SingleActualParam(
                                                SingleExpression(
                                                  TermFactor(
                                                    ConstantCharacter(
                                                     #
                                                    ) [ConstantCharacter]
                                                  ) [TermFactor]
                                                ) [SingleExpression]
                                              ) [SingleActualParam]
                                            ) [ActParsNode]
                                          ) [DesignatorBraceActPars]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                    ) [SingleActualParam]
                                  ) [ActParsNode]
                                ) [DesignatorStatementActPars]
                              ) [DesignatorStatementOnly]
                            ) [Statements]
                          ) [InBraceStatement]
                        ) [IfStatement]
                      ) [IfElseStatement]
                    ) [Statements]
                    ReadStatement(
                      DesignatorNode(
                        SingleIdentExpr(
                         x
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                    ) [ReadStatement]
                  ) [Statements]
                ) [InBraceStatement]
              ) [ForStatement]
            ) [Statements]
            DesignatorStatementOnly(
              DesignatorStatementAssignop(
                DesignatorNode(
                  SingleIdentExpr(
                   xx
                  ) [SingleIdentExpr]
                ) [DesignatorNode]
                Assignop(
                ) [Assignop]
                SingleExpression(
                  TermFactor(
                    DesignatorEmpty(
                      DesignatorNode(
                        Exprs(
                          SingleIdentExpr(
                           aa
                          ) [SingleIdentExpr]
                          SingleExpression(
                            TermFactor(
                              DesignatorEmpty(
                                DesignatorNode(
                                  Exprs(
                                    SingleIdentExpr(
                                     aa
                                    ) [SingleIdentExpr]
                                    ExpressionNode(
                                      SingleExpression(
                                        TermFactor(
                                          ConstantNumber(
                                           2
                                          ) [ConstantNumber]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                      AddopPlus(
                                      ) [AddopPlus]
                                      TermFactor(
                                        ConstantNumber(
                                         3
                                        ) [ConstantNumber]
                                      ) [TermFactor]
                                    ) [ExpressionNode]
                                  ) [Exprs]
                                ) [DesignatorNode]
                              ) [DesignatorEmpty]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [Exprs]
                      ) [DesignatorNode]
                    ) [DesignatorEmpty]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementOnly]
          ) [Statements]
          DesignatorStatementOnly(
            DesignatorStatementActPars(
              DesignatorNode(
                SingleIdentExpr(
                 fa
                ) [SingleIdentExpr]
              ) [DesignatorNode]
              ActParsNode(
                ActualParametres(
                  ActualParametres(
                    SingleActualParam(
                      SingleExpression(
                        TermFactor(
                          DesignatorEmpty(
                            DesignatorNode(
                              SingleIdentExpr(
                               l
                              ) [SingleIdentExpr]
                            ) [DesignatorNode]
                          ) [DesignatorEmpty]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [SingleActualParam]
                    SingleExpression(
                      TermFactor(
                        DesignatorEmpty(
                          DesignatorNode(
                            SingleIdentExpr(
                             l
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                        ) [DesignatorEmpty]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [ActualParametres]
                  SingleExpression(
                    TermFactor(
                      DesignatorEmpty(
                        DesignatorNode(
                          SingleIdentExpr(
                           l
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                      ) [DesignatorEmpty]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [ActualParametres]
              ) [ActParsNode]
            ) [DesignatorStatementActPars]
          ) [DesignatorStatementOnly]
        ) [Statements]
        ReturnStatementVoid(
        ) [ReturnStatementVoid]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:45:21,096 - ===================================
INFO  22:45:21,099 - Definisana konstanta (10)size na liniji 4
INFO  22:45:21,099 - Definisana konstanta (1)const1 na liniji 4
INFO  22:45:21,099 - Definisana konstanta (2)const2 na liniji 4
INFO  22:45:21,099 - Definisana konstanta (1)b1 na liniji 5
INFO  22:45:21,099 - Definisana konstanta (0)b2 na liniji 5
INFO  22:45:21,099 - Definisana konstanta (97)x na liniji 6
INFO  22:45:21,099 - Definisana konstanta (1)bb na liniji 7
INFO  22:45:21,099 - Deklarisana array promenljiva niz na liniji 9
INFO  22:45:21,099 - Deklarisana single promenljiva d na liniji 9
INFO  22:45:21,099 - Deklarisan novi enum tip: Num na liniji 11
INFO  22:45:21,099 - Definisana enum konstanta ZERO sa vrednoscu 0 na liniji 11
INFO  22:45:21,099 - Definisana enum konstanta ONE sa vrednoscu 1 na liniji 11
INFO  22:45:21,099 - Definisana enum konstanta TEN sa vrednoscu 10 na liniji 11
INFO  22:45:21,099 - Definisana enum konstanta ELEVEN sa vrednoscu 11 na liniji 11
INFO  22:45:21,099 - Deklarisana single promenljiva a na liniji 13
INFO  22:45:21,099 - Deklarisana single promenljiva b na liniji 13
INFO  22:45:21,099 - Deklarisana single promenljiva c na liniji 13
INFO  22:45:21,099 - Deklarisana single promenljiva bo na liniji 15
INFO  22:45:21,099 - Definisana konstanta (0)b_const na liniji 16
INFO  22:45:21,099 - Deklarisana single promenljiva xx na liniji 18
INFO  22:45:21,099 - Deklarisana array promenljiva aa na liniji 18
INFO  22:45:21,099 - Definisana funkcija f1 na liniji 20
INFO  22:45:21,099 - Deklarisan single argument ch1 na liniji 20
INFO  22:45:21,099 - Deklarisan single argument a1 na liniji 20
INFO  22:45:21,099 - Deklarisan single argument arg1 na liniji 20
INFO  22:45:21,100 - Deklarisan single argument b1 na liniji 20
INFO  22:45:21,100 - Deklarisana single promenljiva x na liniji 21
INFO  22:45:21,100 - Deklarisana single promenljiva c na liniji 22
INFO  22:45:21,100 - Deklarisana single promenljiva broj na liniji 23
INFO  22:45:21,100 - Deklarisana single promenljiva broj2 na liniji 23
INFO  22:45:21,100 - Izabrano polje : .ZERO
INFO  22:45:21,100 - Pronadjen poziv promenljive ZERO na liniji 25
INFO  22:45:21,100 - Dodela vrednosti za x na liniji 25
INFO  22:45:21,100 - Izabrano polje : .ZERO
INFO  22:45:21,100 - Pronadjen poziv promenljive ZERO na liniji 26
INFO  22:45:21,100 - Dodela vrednosti za broj na liniji 26
INFO  22:45:21,100 - Dodela vrednosti za broj2 na liniji 27
INFO  22:45:21,100 - Pronadjen poziv promenljive a na liniji 28
INFO  22:45:21,100 - Dodela vrednosti za x na liniji 28
INFO  22:45:21,100 - Dodela vrednosti za c na liniji 29
INFO  22:45:21,100 - Dodela vrednosti za bo na liniji 30
INFO  22:45:21,100 - Dodela vrednosti za ch1 na liniji 32
INFO  22:45:21,100 - Definisana funkcija f2 na liniji 35
INFO  22:45:21,100 - Deklarisan single argument ch2 na liniji 35
INFO  22:45:21,100 - Deklarisan single argument a na liniji 35
INFO  22:45:21,100 - Deklarisan single argument arg na liniji 35
INFO  22:45:21,100 - Deklarisana single promenljiva ff na liniji 36
INFO  22:45:21,100 - Deklarisana single promenljiva i na liniji 37
INFO  22:45:21,100 - Deklarisana single promenljiva broj na liniji 38
INFO  22:45:21,100 - Pronadjen poziv promenljive ch2 na liniji 41
INFO  22:45:21,100 - Pronadjen poziv promenljive b na liniji 41
INFO  22:45:21,100 - Pronadjen poziv promenljive broj na liniji 41
INFO  22:45:21,100 - Pronadjen poziv promenljive bo na liniji 41
INFO  22:45:21,100 - Pronadjen poziv funkcije f1 sa 4/4 argumenta na liniji 41
INFO  22:45:21,101 - Dodela vrednosti za niz na liniji 42
INFO  22:45:21,101 - Pronadjen poziv promenljive elem na liniji 43
INFO  22:45:21,101 - Dodela vrednosti za ff na liniji 43
INFO  22:45:21,101 - Pronadjen poziv promenljive broj na liniji 44
INFO  22:45:21,101 - Pronadjen poziv promenljive elem na liniji 44
INFO  22:45:21,101 - Pronadjen poziv promenljive elem na liniji 44
INFO  22:45:21,101 - Izabrano polje : .ZERO
INFO  22:45:21,101 - Pronadjen poziv promenljive ZERO na liniji 44
INFO  22:45:21,101 - Pronadjen poziv promenljive broj na liniji 44
INFO  22:45:21,101 - Dodela vrednosti za elem na liniji 44
INFO  22:45:21,101 - Dodela vrednosti za ff na liniji 46
INFO  22:45:21,101 - Dodela vrednosti za i na liniji 47
INFO  22:45:21,101 - Dodela vrednosti za i na liniji 49
INFO  22:45:21,101 - Pronadjen poziv promenljive niz na liniji 49
INFO  22:45:21,101 - Pronadjen poziv promenljive niz na liniji 49
INFO  22:45:21,101 - Pronadjen poziv promenljive ff na liniji 54
INFO  22:45:21,101 - Definisana funkcija fa na liniji 56
INFO  22:45:21,101 - Deklarisan array argument arr na liniji 56
INFO  22:45:21,101 - Deklarisan array argument arr2 na liniji 56
INFO  22:45:21,101 - Deklarisan array argument a na liniji 56
INFO  22:45:21,101 - Definisana funkcija putp na liniji 60
INFO  22:45:21,101 - Deklarisan single argument ch na liniji 60
INFO  22:45:21,101 - Deklarisana single promenljiva x na liniji 61
INFO  22:45:21,101 - Dodela vrednosti za x na liniji 63
INFO  22:45:21,101 - Dodela vrednosti za bo na liniji 64
INFO  22:45:21,102 - Izabrano polje : .ZERO
INFO  22:45:21,102 - Pronadjen poziv promenljive ZERO na liniji 65
INFO  22:45:21,102 - Pronadjen poziv funkcije f2 sa 3/3 argumenta na liniji 65
INFO  22:45:21,102 - Dodela vrednosti za x na liniji 65
INFO  22:45:21,102 - Pronadjen poziv promenljive x na liniji 66
INFO  22:45:21,102 - Definisana funkcija getp na liniji 68
INFO  22:45:21,102 - Deklarisan single argument ch na liniji 68
INFO  22:45:21,102 - Deklarisana single promenljiva x na liniji 69
INFO  22:45:21,102 - Pronadjen poziv promenljive a na liniji 71
INFO  22:45:21,102 - Pronadjen poziv promenljive x na liniji 71
INFO  22:45:21,102 - Dodela vrednosti za x na liniji 71
INFO  22:45:21,102 - Dodela vrednosti za a na liniji 72
INFO  22:45:21,102 - Pronadjen poziv promenljive a na liniji 73
INFO  22:45:21,102 - Dodela vrednosti za b na liniji 73
INFO  22:45:21,102 - Dodela vrednosti za c na liniji 74
INFO  22:45:21,102 - Definisana funkcija main na liniji 77
INFO  22:45:21,102 - Deklarisana single promenljiva x na liniji 78
INFO  22:45:21,102 - Deklarisana single promenljiva i na liniji 78
INFO  22:45:21,102 - Deklarisana single promenljiva c na liniji 78
INFO  22:45:21,102 - Deklarisana single promenljiva val na liniji 78
INFO  22:45:21,102 - Deklarisana array promenljiva l na liniji 79
INFO  22:45:21,102 - Deklarisana array promenljiva bbb na liniji 80
INFO  22:45:21,102 - Dodela vrednosti za l na liniji 82
INFO  22:45:21,102 - Dodela vrednosti za bbb na liniji 83
INFO  22:45:21,102 - Pronadjen poziv promenljive x na liniji 84
INFO  22:45:21,102 - Dodela vrednosti za niz na liniji 84
INFO  22:45:21,102 - Dodela vrednosti za val na liniji 87
INFO  22:45:21,102 - Dodela vrednosti za i na liniji 89
INFO  22:45:21,102 - Pronadjen poziv promenljive i na liniji 89
INFO  22:45:21,102 - Pronadjen poziv promenljive size na liniji 89
INFO  22:45:21,102 - Pronadjen poziv funkcije putp sa 1/1 argumenta na liniji 91
INFO  22:45:21,102 - Dodela vrednosti za x na liniji 91
INFO  22:45:21,102 - Pronadjen poziv promenljive c na liniji 92
INFO  22:45:21,102 - Pronadjen poziv funkcije putp sa 1/1 argumenta na liniji 92
INFO  22:45:21,102 - Pronadjen poziv promenljive c na liniji 94
INFO  22:45:21,102 - Izabrano polje : .ZERO
INFO  22:45:21,102 - Pronadjen poziv promenljive ZERO na liniji 94
INFO  22:45:21,102 - Pronadjen poziv promenljive size na liniji 94
INFO  22:45:21,102 - Pronadjen poziv funkcije f1 sa 4/4 argumenta na liniji 94
INFO  22:45:21,102 - Pronadjen poziv promenljive d na liniji 96
INFO  22:45:21,102 - Dodela vrednosti za i na liniji 100
INFO  22:45:21,102 - Pronadjen poziv promenljive x na liniji 100
INFO  22:45:21,102 - Pronadjen poziv promenljive x na liniji 102
INFO  22:45:21,102 - Pronadjen poziv promenljive x na liniji 102
INFO  22:45:21,102 - Pronadjen poziv promenljive size na liniji 102
INFO  22:45:21,103 - Pronadjen poziv promenljive c na liniji 104
INFO  22:45:21,103 - Pronadjen poziv funkcije getp sa 1/1 argumenta na liniji 104
INFO  22:45:21,103 - Pronadjen poziv funkcije putp sa 1/1 argumenta na liniji 104
INFO  22:45:21,103 - Pronadjen poziv promenljive size na liniji 106
INFO  22:45:21,103 - Pronadjen poziv promenljive x na liniji 106
INFO  22:45:21,103 - Pronadjen poziv promenljive x na liniji 106
INFO  22:45:21,103 - Pronadjen poziv funkcije getp sa 1/1 argumenta na liniji 108
INFO  22:45:21,103 - Pronadjen poziv funkcije putp sa 1/1 argumenta na liniji 108
INFO  22:45:21,103 - Pronadjen poziv promenljive elem na liniji 113
INFO  22:45:21,103 - Pronadjen poziv promenljive elem na liniji 113
INFO  22:45:21,103 - Dodela vrednosti za xx na liniji 113
INFO  22:45:21,103 - Pronadjen poziv promenljive l na liniji 114
INFO  22:45:21,103 - Pronadjen poziv promenljive l na liniji 114
INFO  22:45:21,103 - Pronadjen poziv promenljive l na liniji 114
INFO  22:45:21,103 - Pronadjen poziv funkcije fa sa 3/3 argumenta na liniji 114
ERROR 22:45:21,103 - Greska na liniji 114 : funkcija fa nema korektne argumente!
INFO  22:45:21,103 - main funkcija je korektna.  na liniji 77
INFO  22:45:21,103 - ===================================
ERROR 22:45:21,103 - Parsiranje NIJE uspesno zavrseno!
