INFO  12:45:59,900 - Putanja iz argumenta: test/program.mj
INFO  12:45:59,900 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  12:45:59,931 - #2 program
INFO  12:45:59,931 - #45 Program
INFO  12:45:59,931 - #45 int
INFO  12:45:59,932 - #45 x
INFO  12:45:59,932 - #19 ,
INFO  12:45:59,932 - #45 y
INFO  12:45:59,932 - #19 ,
INFO  12:45:59,932 - #45 z
INFO  12:45:59,932 - #19 ,
INFO  12:45:59,932 - #45 arr
INFO  12:45:59,933 - #14 [
INFO  12:45:59,933 - #15 ]
INFO  12:45:59,933 - #18 ;
INFO  12:45:59,933 - #8 const
INFO  12:45:59,933 - #45 int
INFO  12:45:59,933 - #45 con
INFO  12:45:59,933 - #26 =
INFO  12:45:59,934 - #44 100
INFO  12:45:59,934 - #18 ;
INFO  12:45:59,934 - #8 const
INFO  12:45:59,934 - #45 bool
INFO  12:45:59,934 - #45 bcon
INFO  12:45:59,934 - #26 =
INFO  12:45:59,934 - #47 0
INFO  12:45:59,935 - #19 ,
INFO  12:45:59,935 - #45 bcon2
INFO  12:45:59,935 - #26 =
INFO  12:45:59,935 - #47 1
INFO  12:45:59,935 - #18 ;
INFO  12:45:59,935 - #8 const
INFO  12:45:59,935 - #45 char
INFO  12:45:59,935 - #45 c1
INFO  12:45:59,935 - #26 =
INFO  12:45:59,935 - #46 H
INFO  12:45:59,935 - #19 ,
INFO  12:45:59,935 - #45 c2
INFO  12:45:59,935 - #26 =
INFO  12:45:59,935 - #46 U
INFO  12:45:59,935 - #19 ,
INFO  12:45:59,936 - #45 c3
INFO  12:45:59,936 - #26 =
INFO  12:45:59,936 - #46 D
INFO  12:45:59,936 - #19 ,
INFO  12:45:59,936 - #45 c4
INFO  12:45:59,936 - #26 =
INFO  12:45:59,936 - #46 I
INFO  12:45:59,936 - #18 ;
INFO  12:45:59,936 - #12 {
INFO  12:45:59,936 - #45 int
INFO  12:45:59,936 - #45 func
INFO  12:45:59,936 - #16 (
INFO  12:45:59,937 - #45 int
INFO  12:45:59,937 - #45 arg
INFO  12:45:59,937 - #17 )
INFO  12:45:59,937 - #45 int
INFO  12:45:59,937 - #45 c
INFO  12:45:59,937 - #18 ;
INFO  12:45:59,937 - #12 {
INFO  12:45:59,938 - #11 print
INFO  12:45:59,938 - #16 (
INFO  12:45:59,938 - #45 eol
INFO  12:45:59,938 - #17 )
INFO  12:45:59,938 - #18 ;
INFO  12:45:59,938 - #11 print
INFO  12:45:59,939 - #16 (
INFO  12:45:59,939 - #46 f
INFO  12:45:59,939 - #17 )
INFO  12:45:59,939 - #18 ;
INFO  12:45:59,939 - #45 c
INFO  12:45:59,939 - #26 =
INFO  12:45:59,939 - #45 arg
INFO  12:45:59,939 - #18 ;
INFO  12:45:59,939 - #38 return
INFO  12:45:59,940 - #45 arg
INFO  12:45:59,940 - #23 *
INFO  12:45:59,940 - #44 2
INFO  12:45:59,940 - #18 ;
INFO  12:45:59,940 - #13 }
INFO  12:45:59,940 - #39 void
INFO  12:45:59,941 - #45 print_4
INFO  12:45:59,941 - #16 (
INFO  12:45:59,941 - #45 char
INFO  12:45:59,941 - #45 c1
INFO  12:45:59,941 - #19 ,
INFO  12:45:59,941 - #45 char
INFO  12:45:59,941 - #45 c2
INFO  12:45:59,941 - #19 ,
INFO  12:45:59,941 - #45 char
INFO  12:45:59,941 - #45 c3
INFO  12:45:59,941 - #19 ,
INFO  12:45:59,942 - #45 char
INFO  12:45:59,942 - #45 c4
INFO  12:45:59,942 - #17 )
INFO  12:45:59,942 - #12 {
INFO  12:45:59,942 - #11 print
INFO  12:45:59,942 - #16 (
INFO  12:45:59,942 - #45 eol
INFO  12:45:59,942 - #17 )
INFO  12:45:59,942 - #18 ;
INFO  12:45:59,942 - #11 print
INFO  12:45:59,942 - #16 (
INFO  12:45:59,942 - #45 c1
INFO  12:45:59,942 - #19 ,
INFO  12:45:59,942 - #44 2
INFO  12:45:59,942 - #17 )
INFO  12:45:59,942 - #18 ;
INFO  12:45:59,942 - #11 print
INFO  12:45:59,942 - #16 (
INFO  12:45:59,942 - #45 c2
INFO  12:45:59,942 - #19 ,
INFO  12:45:59,942 - #44 2
INFO  12:45:59,942 - #17 )
INFO  12:45:59,942 - #18 ;
INFO  12:45:59,942 - #11 print
INFO  12:45:59,943 - #16 (
INFO  12:45:59,943 - #45 c3
INFO  12:45:59,943 - #19 ,
INFO  12:45:59,943 - #44 2
INFO  12:45:59,943 - #17 )
INFO  12:45:59,943 - #18 ;
INFO  12:45:59,943 - #11 print
INFO  12:45:59,943 - #16 (
INFO  12:45:59,943 - #45 c4
INFO  12:45:59,943 - #19 ,
INFO  12:45:59,943 - #44 2
INFO  12:45:59,943 - #17 )
INFO  12:45:59,943 - #18 ;
INFO  12:45:59,943 - #11 print
INFO  12:45:59,943 - #16 (
INFO  12:45:59,943 - #45 eol
INFO  12:45:59,943 - #17 )
INFO  12:45:59,944 - #18 ;
INFO  12:45:59,944 - #13 }
INFO  12:45:59,944 - #39 void
INFO  12:45:59,944 - #45 main
INFO  12:45:59,945 - #16 (
INFO  12:45:59,945 - #17 )
INFO  12:45:59,945 - #45 int
INFO  12:45:59,945 - #45 local
INFO  12:45:59,945 - #18 ;
INFO  12:45:59,945 - #12 {
INFO  12:45:59,945 - #45 y
INFO  12:45:59,945 - #26 =
INFO  12:45:59,945 - #44 22
INFO  12:45:59,945 - #18 ;
INFO  12:45:59,945 - #45 x
INFO  12:45:59,945 - #26 =
INFO  12:45:59,945 - #44 45
INFO  12:45:59,945 - #23 *
INFO  12:45:59,945 - #44 2
INFO  12:45:59,945 - #23 *
INFO  12:45:59,945 - #44 0
INFO  12:45:59,945 - #18 ;
INFO  12:45:59,945 - #45 arr
INFO  12:45:59,945 - #26 =
INFO  12:45:59,945 - #10 new
INFO  12:45:59,946 - #45 int
INFO  12:45:59,946 - #14 [
INFO  12:45:59,946 - #44 20
INFO  12:45:59,946 - #15 ]
INFO  12:45:59,946 - #18 ;
INFO  12:45:59,946 - #11 print
INFO  12:45:59,946 - #16 (
INFO  12:45:59,946 - #45 x
INFO  12:45:59,946 - #19 ,
INFO  12:45:59,946 - #44 2
INFO  12:45:59,946 - #17 )
INFO  12:45:59,946 - #18 ;
INFO  12:45:59,946 - #11 print
INFO  12:45:59,946 - #16 (
INFO  12:45:59,946 - #22 -
INFO  12:45:59,946 - #16 (
INFO  12:45:59,946 - #45 con
INFO  12:45:59,946 - #21 +
INFO  12:45:59,946 - #16 (
INFO  12:45:59,947 - #22 -
INFO  12:45:59,947 - #44 44
INFO  12:45:59,947 - #25 %
INFO  12:45:59,947 - #44 10
INFO  12:45:59,947 - #17 )
INFO  12:45:59,947 - #17 )
INFO  12:45:59,947 - #17 )
INFO  12:45:59,947 - #18 ;
INFO  12:45:59,947 - #11 print
INFO  12:45:59,948 - #16 (
INFO  12:45:59,948 - #45 eol
INFO  12:45:59,948 - #17 )
INFO  12:45:59,948 - #18 ;
INFO  12:45:59,948 - #11 print
INFO  12:45:59,948 - #16 (
INFO  12:45:59,948 - #45 bcon
INFO  12:45:59,948 - #17 )
INFO  12:45:59,948 - #18 ;
INFO  12:45:59,948 - #45 print_4
INFO  12:45:59,948 - #16 (
INFO  12:45:59,948 - #46 m
INFO  12:45:59,948 - #19 ,
INFO  12:45:59,948 - #46 a
INFO  12:45:59,948 - #19 ,
INFO  12:45:59,948 - #46 r
INFO  12:45:59,948 - #19 ,
INFO  12:45:59,948 - #46 e
INFO  12:45:59,948 - #17 )
INFO  12:45:59,948 - #18 ;
INFO  12:45:59,948 - #13 }
INFO  12:45:59,948 - #13 }
INFO  12:45:59,954 - Program(
  ProgName(
   Program
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDecl(
          ) [NoDecl]
          VarDeclaration(
            VarDeclNode(
              VarDeclType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [VarDeclType]
              Variables(
                Variables(
                  Variables(
                    SingleVariable(
                      VariableNoBracket(
                       x
                      ) [VariableNoBracket]
                    ) [SingleVariable]
                    VariableNoBracket(
                     y
                    ) [VariableNoBracket]
                  ) [Variables]
                  VariableNoBracket(
                   z
                  ) [VariableNoBracket]
                ) [Variables]
                VariableBracket(
                 arr
                ) [VariableBracket]
              ) [Variables]
            ) [VarDeclNode]
          ) [VarDeclaration]
        ) [Declarations]
        ConstDeclaration(
          ConstDeclNode(
            ConstDeclType(
              TypeNode(
               int
              ) [TypeNode]
            ) [ConstDeclType]
            SingleConstant(
              IdentEqualConstantNode(
               con
                NumberNode(
                 100
                ) [NumberNode]
              ) [IdentEqualConstantNode]
            ) [SingleConstant]
          ) [ConstDeclNode]
        ) [ConstDeclaration]
      ) [Declarations]
      ConstDeclaration(
        ConstDeclNode(
          ConstDeclType(
            TypeNode(
             bool
            ) [TypeNode]
          ) [ConstDeclType]
          Constants(
            SingleConstant(
              IdentEqualConstantNode(
               bcon
                BooleanNode(
                 0
                ) [BooleanNode]
              ) [IdentEqualConstantNode]
            ) [SingleConstant]
            IdentEqualConstantNode(
             bcon2
              BooleanNode(
               1
              ) [BooleanNode]
            ) [IdentEqualConstantNode]
          ) [Constants]
        ) [ConstDeclNode]
      ) [ConstDeclaration]
    ) [Declarations]
    ConstDeclaration(
      ConstDeclNode(
        ConstDeclType(
          TypeNode(
           char
          ) [TypeNode]
        ) [ConstDeclType]
        Constants(
          Constants(
            Constants(
              SingleConstant(
                IdentEqualConstantNode(
                 c1
                  CharNode(
                   H
                  ) [CharNode]
                ) [IdentEqualConstantNode]
              ) [SingleConstant]
              IdentEqualConstantNode(
               c2
                CharNode(
                 U
                ) [CharNode]
              ) [IdentEqualConstantNode]
            ) [Constants]
            IdentEqualConstantNode(
             c3
              CharNode(
               D
              ) [CharNode]
            ) [IdentEqualConstantNode]
          ) [Constants]
          IdentEqualConstantNode(
           c4
            CharNode(
             I
            ) [CharNode]
          ) [IdentEqualConstantNode]
        ) [Constants]
      ) [ConstDeclNode]
    ) [ConstDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          MethodTypeName(
            NoVoidType(
              TypeNode(
               int
              ) [TypeNode]
            ) [NoVoidType]
           func
          ) [MethodTypeName]
          FormalParams(
            SingleFormalParamDecl(
              FormalParamDeclarationNoBrackets(
                TypeNode(
                 int
                ) [TypeNode]
               arg
              ) [FormalParamDeclarationNoBrackets]
            ) [SingleFormalParamDecl]
          ) [FormalParams]
          VarDeclarationList(
            NoVarDeclaration(
            ) [NoVarDeclaration]
            VarDeclNode(
              VarDeclType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [VarDeclType]
              SingleVariable(
                VariableNoBracket(
                 c
                ) [VariableNoBracket]
              ) [SingleVariable]
            ) [VarDeclNode]
          ) [VarDeclarationList]
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStatement(
                  ) [NoStatement]
                  PrintStatement(
                    SingleExpression(
                      TermFactor(
                        DesignatorEmpty(
                          DesignatorNode(
                            SingleIdentExpr(
                             eol
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                        ) [DesignatorEmpty]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [PrintStatement]
                ) [Statements]
                PrintStatement(
                  SingleExpression(
                    TermFactor(
                      ConstantCharacter(
                       f
                      ) [ConstantCharacter]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [PrintStatement]
              ) [Statements]
              DesignatorStatementOnly(
                DesignatorStatementAssignop(
                  DesignatorNode(
                    SingleIdentExpr(
                     c
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    TermFactor(
                      DesignatorEmpty(
                        DesignatorNode(
                          SingleIdentExpr(
                           arg
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                      ) [DesignatorEmpty]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementOnly]
            ) [Statements]
            ReturnStatementExpr(
              SingleExpression(
                TermNode(
                  TermFactor(
                    DesignatorEmpty(
                      DesignatorNode(
                        SingleIdentExpr(
                         arg
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                    ) [DesignatorEmpty]
                  ) [TermFactor]
                  MulopMul(
                  ) [MulopMul]
                  ConstantNumber(
                   2
                  ) [ConstantNumber]
                ) [TermNode]
              ) [SingleExpression]
            ) [ReturnStatementExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          VoidType(
          ) [VoidType]
         print_4
        ) [MethodTypeName]
        FormalParams(
          FormalParamDecls(
            FormalParamDecls(
              FormalParamDecls(
                SingleFormalParamDecl(
                  FormalParamDeclarationNoBrackets(
                    TypeNode(
                     char
                    ) [TypeNode]
                   c1
                  ) [FormalParamDeclarationNoBrackets]
                ) [SingleFormalParamDecl]
                FormalParamDeclarationNoBrackets(
                  TypeNode(
                   char
                  ) [TypeNode]
                 c2
                ) [FormalParamDeclarationNoBrackets]
              ) [FormalParamDecls]
              FormalParamDeclarationNoBrackets(
                TypeNode(
                 char
                ) [TypeNode]
               c3
              ) [FormalParamDeclarationNoBrackets]
            ) [FormalParamDecls]
            FormalParamDeclarationNoBrackets(
              TypeNode(
               char
              ) [TypeNode]
             c4
            ) [FormalParamDeclarationNoBrackets]
          ) [FormalParamDecls]
        ) [FormalParams]
        NoVarDeclaration(
        ) [NoVarDeclaration]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStatement(
                    ) [NoStatement]
                    PrintStatement(
                      SingleExpression(
                        TermFactor(
                          DesignatorEmpty(
                            DesignatorNode(
                              SingleIdentExpr(
                               eol
                              ) [SingleIdentExpr]
                            ) [DesignatorNode]
                          ) [DesignatorEmpty]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [PrintStatement]
                  ) [Statements]
                  PrintWithNumConstStatement(
                    SingleExpression(
                      TermFactor(
                        DesignatorEmpty(
                          DesignatorNode(
                            SingleIdentExpr(
                             c1
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                        ) [DesignatorEmpty]
                      ) [TermFactor]
                    ) [SingleExpression]
                   2
                  ) [PrintWithNumConstStatement]
                ) [Statements]
                PrintWithNumConstStatement(
                  SingleExpression(
                    TermFactor(
                      DesignatorEmpty(
                        DesignatorNode(
                          SingleIdentExpr(
                           c2
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                      ) [DesignatorEmpty]
                    ) [TermFactor]
                  ) [SingleExpression]
                 2
                ) [PrintWithNumConstStatement]
              ) [Statements]
              PrintWithNumConstStatement(
                SingleExpression(
                  TermFactor(
                    DesignatorEmpty(
                      DesignatorNode(
                        SingleIdentExpr(
                         c3
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                    ) [DesignatorEmpty]
                  ) [TermFactor]
                ) [SingleExpression]
               2
              ) [PrintWithNumConstStatement]
            ) [Statements]
            PrintWithNumConstStatement(
              SingleExpression(
                TermFactor(
                  DesignatorEmpty(
                    DesignatorNode(
                      SingleIdentExpr(
                       c4
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                  ) [DesignatorEmpty]
                ) [TermFactor]
              ) [SingleExpression]
             2
            ) [PrintWithNumConstStatement]
          ) [Statements]
          PrintStatement(
            SingleExpression(
              TermFactor(
                DesignatorEmpty(
                  DesignatorNode(
                    SingleIdentExpr(
                     eol
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                ) [DesignatorEmpty]
              ) [TermFactor]
            ) [SingleExpression]
          ) [PrintStatement]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      VarDeclarationList(
        NoVarDeclaration(
        ) [NoVarDeclaration]
        VarDeclNode(
          VarDeclType(
            TypeNode(
             int
            ) [TypeNode]
          ) [VarDeclType]
          SingleVariable(
            VariableNoBracket(
             local
            ) [VariableNoBracket]
          ) [SingleVariable]
        ) [VarDeclNode]
      ) [VarDeclarationList]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStatement(
                      ) [NoStatement]
                      DesignatorStatementOnly(
                        DesignatorStatementAssignop(
                          DesignatorNode(
                            SingleIdentExpr(
                             y
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                          Assignop(
                          ) [Assignop]
                          SingleExpression(
                            TermFactor(
                              ConstantNumber(
                               22
                              ) [ConstantNumber]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementOnly]
                    ) [Statements]
                    DesignatorStatementOnly(
                      DesignatorStatementAssignop(
                        DesignatorNode(
                          SingleIdentExpr(
                           x
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                        Assignop(
                        ) [Assignop]
                        SingleExpression(
                          TermNode(
                            TermNode(
                              TermFactor(
                                ConstantNumber(
                                 45
                                ) [ConstantNumber]
                              ) [TermFactor]
                              MulopMul(
                              ) [MulopMul]
                              ConstantNumber(
                               2
                              ) [ConstantNumber]
                            ) [TermNode]
                            MulopMul(
                            ) [MulopMul]
                            ConstantNumber(
                             0
                            ) [ConstantNumber]
                          ) [TermNode]
                        ) [SingleExpression]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementOnly]
                  ) [Statements]
                  DesignatorStatementOnly(
                    DesignatorStatementAssignop(
                      DesignatorNode(
                        SingleIdentExpr(
                         arr
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                      Assignop(
                      ) [Assignop]
                      SingleExpression(
                        TermFactor(
                          NewArray(
                            NewArrayType(
                              TypeNode(
                               int
                              ) [TypeNode]
                            ) [NewArrayType]
                            SingleExpression(
                              TermFactor(
                                ConstantNumber(
                                 20
                                ) [ConstantNumber]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [NewArray]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementOnly]
                ) [Statements]
                PrintWithNumConstStatement(
                  SingleExpression(
                    TermFactor(
                      DesignatorEmpty(
                        DesignatorNode(
                          SingleIdentExpr(
                           x
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                      ) [DesignatorEmpty]
                    ) [TermFactor]
                  ) [SingleExpression]
                 2
                ) [PrintWithNumConstStatement]
              ) [Statements]
              PrintStatement(
                SingleExpressionMinus(
                  TermFactor(
                    ExprParenNode(
                      ExpressionNode(
                        SingleExpression(
                          TermFactor(
                            DesignatorEmpty(
                              DesignatorNode(
                                SingleIdentExpr(
                                 con
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermFactor]
                        ) [SingleExpression]
                        AddopPlus(
                        ) [AddopPlus]
                        TermFactor(
                          ExprParenNode(
                            SingleExpressionMinus(
                              TermNode(
                                TermFactor(
                                  ConstantNumber(
                                   44
                                  ) [ConstantNumber]
                                ) [TermFactor]
                                MulopPerc(
                                ) [MulopPerc]
                                ConstantNumber(
                                 10
                                ) [ConstantNumber]
                              ) [TermNode]
                            ) [SingleExpressionMinus]
                          ) [ExprParenNode]
                        ) [TermFactor]
                      ) [ExpressionNode]
                    ) [ExprParenNode]
                  ) [TermFactor]
                ) [SingleExpressionMinus]
              ) [PrintStatement]
            ) [Statements]
            PrintStatement(
              SingleExpression(
                TermFactor(
                  DesignatorEmpty(
                    DesignatorNode(
                      SingleIdentExpr(
                       eol
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                  ) [DesignatorEmpty]
                ) [TermFactor]
              ) [SingleExpression]
            ) [PrintStatement]
          ) [Statements]
          PrintStatement(
            SingleExpression(
              TermFactor(
                DesignatorEmpty(
                  DesignatorNode(
                    SingleIdentExpr(
                     bcon
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                ) [DesignatorEmpty]
              ) [TermFactor]
            ) [SingleExpression]
          ) [PrintStatement]
        ) [Statements]
        DesignatorStatementOnly(
          DesignatorStatementActPars(
            DesignatorNode(
              SingleIdentExpr(
               print_4
              ) [SingleIdentExpr]
            ) [DesignatorNode]
            ActParsNode(
              ActualParametres(
                ActualParametres(
                  ActualParametres(
                    SingleActualParam(
                      SingleExpression(
                        TermFactor(
                          ConstantCharacter(
                           m
                          ) [ConstantCharacter]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [SingleActualParam]
                    SingleExpression(
                      TermFactor(
                        ConstantCharacter(
                         a
                        ) [ConstantCharacter]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [ActualParametres]
                  SingleExpression(
                    TermFactor(
                      ConstantCharacter(
                       r
                      ) [ConstantCharacter]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [ActualParametres]
                SingleExpression(
                  TermFactor(
                    ConstantCharacter(
                     e
                    ) [ConstantCharacter]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [ActualParametres]
            ) [ActParsNode]
          ) [DesignatorStatementActPars]
        ) [DesignatorStatementOnly]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  12:45:59,955 - ===================================
INFO  12:45:59,958 - Deklarisana single promenljiva x na liniji 2
INFO  12:45:59,958 - Deklarisana single promenljiva y na liniji 2
INFO  12:45:59,958 - Deklarisana single promenljiva z na liniji 2
INFO  12:45:59,958 - Deklarisana array promenljiva arr na liniji 2
INFO  12:45:59,958 - Definisana konstanta (100)con na liniji 4
INFO  12:45:59,958 - Definisana konstanta (0)bcon na liniji 5
INFO  12:45:59,958 - Definisana konstanta (1)bcon2 na liniji 5
INFO  12:45:59,958 - Definisana konstanta (72)c1 na liniji 7
INFO  12:45:59,958 - Definisana konstanta (85)c2 na liniji 7
INFO  12:45:59,958 - Definisana konstanta (68)c3 na liniji 7
INFO  12:45:59,959 - Definisana konstanta (73)c4 na liniji 7
INFO  12:45:59,959 - Definisana funkcija func na liniji 10
INFO  12:45:59,959 - Deklarisan single argument arg na liniji 10
INFO  12:45:59,959 - Deklarisana single promenljiva c na liniji 11
INFO  12:45:59,959 - Pronadjen poziv promenljive eol na liniji 13
INFO  12:45:59,959 - Pronadjen poziv promenljive arg na liniji 15
INFO  12:45:59,959 - Dodela vrednosti za c na liniji 15
INFO  12:45:59,959 - Pronadjen poziv promenljive arg na liniji 16
INFO  12:45:59,959 - Definisana funkcija print_4 na liniji 18
INFO  12:45:59,959 - Deklarisan single argument c1 na liniji 18
INFO  12:45:59,959 - Deklarisan single argument c2 na liniji 18
INFO  12:45:59,959 - Deklarisan single argument c3 na liniji 18
INFO  12:45:59,959 - Deklarisan single argument c4 na liniji 18
INFO  12:45:59,959 - Pronadjen poziv promenljive eol na liniji 19
INFO  12:45:59,959 - Pronadjen poziv promenljive c1 na liniji 20
INFO  12:45:59,959 - Pronadjen poziv promenljive c2 na liniji 21
INFO  12:45:59,959 - Pronadjen poziv promenljive c3 na liniji 22
INFO  12:45:59,959 - Pronadjen poziv promenljive c4 na liniji 23
INFO  12:45:59,959 - Pronadjen poziv promenljive eol na liniji 24
INFO  12:45:59,959 - Definisana funkcija main na liniji 26
INFO  12:45:59,959 - Deklarisana single promenljiva local na liniji 27
INFO  12:45:59,959 - Dodela vrednosti za y na liniji 29
INFO  12:45:59,960 - Dodela vrednosti za x na liniji 30
INFO  12:45:59,960 - Dodela vrednosti za arr na liniji 31
INFO  12:45:59,960 - Pronadjen poziv promenljive x na liniji 34
INFO  12:45:59,960 - Pronadjen poziv promenljive con na liniji 36
INFO  12:45:59,960 - Pronadjen poziv promenljive eol na liniji 37
INFO  12:45:59,960 - Pronadjen poziv promenljive bcon na liniji 40
INFO  12:45:59,960 - Pronadjen poziv funkcije print_4 sa 4/4 argumenta na liniji 43
INFO  12:45:59,960 - main funkcija je korektna.  na liniji 26
INFO  12:45:59,960 - ===================================
INFO  12:45:59,970 - Parsiranje uspesno zavrseno!
