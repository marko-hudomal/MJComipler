INFO  16:21:56,940 - Putanja iz argumenta: test/program.mj
INFO  16:21:56,940 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  16:21:56,973 - #2 program
INFO  16:21:56,973 - #45 Program
INFO  16:21:56,973 - #45 int
INFO  16:21:56,974 - #45 x
INFO  16:21:56,974 - #19 ,
INFO  16:21:56,974 - #45 y
INFO  16:21:56,974 - #19 ,
INFO  16:21:56,974 - #45 z
INFO  16:21:56,974 - #19 ,
INFO  16:21:56,975 - #45 arr
INFO  16:21:56,975 - #14 [
INFO  16:21:56,975 - #15 ]
INFO  16:21:56,975 - #18 ;
INFO  16:21:56,975 - #8 const
INFO  16:21:56,975 - #45 int
INFO  16:21:56,975 - #45 con
INFO  16:21:56,975 - #26 =
INFO  16:21:56,976 - #44 100
INFO  16:21:56,976 - #18 ;
INFO  16:21:56,976 - #6 enum
INFO  16:21:56,976 - #45 Broj
INFO  16:21:56,976 - #12 {
INFO  16:21:56,977 - #45 ZERO
INFO  16:21:56,977 - #19 ,
INFO  16:21:56,977 - #45 ONE
INFO  16:21:56,977 - #19 ,
INFO  16:21:56,977 - #45 TWO
INFO  16:21:56,977 - #19 ,
INFO  16:21:56,977 - #45 FIVE
INFO  16:21:56,977 - #26 =
INFO  16:21:56,977 - #44 5
INFO  16:21:56,977 - #13 }
INFO  16:21:56,977 - #12 {
INFO  16:21:56,978 - #45 int
INFO  16:21:56,978 - #45 add
INFO  16:21:56,978 - #16 (
INFO  16:21:56,978 - #45 int
INFO  16:21:56,978 - #45 a
INFO  16:21:56,978 - #19 ,
INFO  16:21:56,979 - #45 int
INFO  16:21:56,979 - #45 b
INFO  16:21:56,979 - #17 )
INFO  16:21:56,979 - #12 {
INFO  16:21:56,979 - #38 return
INFO  16:21:56,979 - #45 a
INFO  16:21:56,979 - #21 +
INFO  16:21:56,980 - #45 b
INFO  16:21:56,980 - #18 ;
INFO  16:21:56,980 - #45 a
INFO  16:21:56,981 - #26 =
INFO  16:21:56,981 - #44 999
INFO  16:21:56,981 - #18 ;
INFO  16:21:56,981 - #13 }
INFO  16:21:56,981 - #39 void
INFO  16:21:56,982 - #45 print4
INFO  16:21:56,982 - #16 (
INFO  16:21:56,982 - #45 char
INFO  16:21:56,982 - #45 arr
INFO  16:21:56,982 - #14 [
INFO  16:21:56,982 - #15 ]
INFO  16:21:56,982 - #17 )
INFO  16:21:56,982 - #12 {
INFO  16:21:56,983 - #11 print
INFO  16:21:56,983 - #16 (
INFO  16:21:56,983 - #45 eol
INFO  16:21:56,983 - #17 )
INFO  16:21:56,983 - #18 ;
INFO  16:21:56,984 - #11 print
INFO  16:21:56,984 - #16 (
INFO  16:21:56,984 - #45 arr
INFO  16:21:56,984 - #14 [
INFO  16:21:56,985 - #44 0
INFO  16:21:56,985 - #15 ]
INFO  16:21:56,985 - #19 ,
INFO  16:21:56,985 - #44 2
INFO  16:21:56,985 - #17 )
INFO  16:21:56,985 - #18 ;
INFO  16:21:56,985 - #11 print
INFO  16:21:56,985 - #16 (
INFO  16:21:56,985 - #45 arr
INFO  16:21:56,985 - #14 [
INFO  16:21:56,985 - #44 1
INFO  16:21:56,985 - #15 ]
INFO  16:21:56,985 - #19 ,
INFO  16:21:56,985 - #44 2
INFO  16:21:56,985 - #17 )
INFO  16:21:56,985 - #18 ;
INFO  16:21:56,985 - #11 print
INFO  16:21:56,986 - #16 (
INFO  16:21:56,986 - #45 arr
INFO  16:21:56,986 - #14 [
INFO  16:21:56,986 - #44 2
INFO  16:21:56,986 - #15 ]
INFO  16:21:56,986 - #19 ,
INFO  16:21:56,986 - #44 2
INFO  16:21:56,986 - #17 )
INFO  16:21:56,986 - #18 ;
INFO  16:21:56,986 - #11 print
INFO  16:21:56,986 - #16 (
INFO  16:21:56,986 - #45 arr
INFO  16:21:56,986 - #14 [
INFO  16:21:56,986 - #44 3
INFO  16:21:56,986 - #15 ]
INFO  16:21:56,986 - #19 ,
INFO  16:21:56,986 - #44 2
INFO  16:21:56,986 - #17 )
INFO  16:21:56,986 - #18 ;
INFO  16:21:56,986 - #11 print
INFO  16:21:56,986 - #16 (
INFO  16:21:56,986 - #45 eol
INFO  16:21:56,986 - #17 )
INFO  16:21:56,986 - #18 ;
INFO  16:21:56,986 - #13 }
INFO  16:21:56,986 - #39 void
INFO  16:21:56,986 - #45 allocate
INFO  16:21:56,987 - #16 (
INFO  16:21:56,987 - #45 char
INFO  16:21:56,987 - #45 arr
INFO  16:21:56,987 - #14 [
INFO  16:21:56,987 - #15 ]
INFO  16:21:56,987 - #17 )
INFO  16:21:56,987 - #12 {
INFO  16:21:56,987 - #45 print4
INFO  16:21:56,987 - #16 (
INFO  16:21:56,987 - #45 arr
INFO  16:21:56,987 - #17 )
INFO  16:21:56,987 - #18 ;
INFO  16:21:56,987 - #45 arr
INFO  16:21:56,987 - #26 =
INFO  16:21:56,987 - #10 new
INFO  16:21:56,987 - #45 char
INFO  16:21:56,987 - #14 [
INFO  16:21:56,988 - #44 4
INFO  16:21:56,988 - #15 ]
INFO  16:21:56,988 - #18 ;
INFO  16:21:56,988 - #45 arr
INFO  16:21:56,988 - #14 [
INFO  16:21:56,988 - #44 0
INFO  16:21:56,988 - #15 ]
INFO  16:21:56,988 - #26 =
INFO  16:21:56,988 - #46 H
INFO  16:21:56,988 - #18 ;
INFO  16:21:56,989 - #45 arr
INFO  16:21:56,989 - #14 [
INFO  16:21:56,989 - #44 1
INFO  16:21:56,989 - #15 ]
INFO  16:21:56,989 - #26 =
INFO  16:21:56,989 - #46 U
INFO  16:21:56,989 - #18 ;
INFO  16:21:56,989 - #45 arr
INFO  16:21:56,989 - #14 [
INFO  16:21:56,989 - #44 2
INFO  16:21:56,989 - #15 ]
INFO  16:21:56,989 - #26 =
INFO  16:21:56,989 - #46 D
INFO  16:21:56,989 - #18 ;
INFO  16:21:56,989 - #45 arr
INFO  16:21:56,989 - #14 [
INFO  16:21:56,989 - #44 3
INFO  16:21:56,989 - #15 ]
INFO  16:21:56,989 - #26 =
INFO  16:21:56,989 - #46 I
INFO  16:21:56,989 - #18 ;
INFO  16:21:56,989 - #45 print4
INFO  16:21:56,989 - #16 (
INFO  16:21:56,989 - #45 arr
INFO  16:21:56,989 - #17 )
INFO  16:21:56,989 - #18 ;
INFO  16:21:56,989 - #13 }
INFO  16:21:56,989 - #39 void
INFO  16:21:56,989 - #45 main
INFO  16:21:56,989 - #16 (
INFO  16:21:56,990 - #17 )
INFO  16:21:56,990 - #45 char
INFO  16:21:56,990 - #45 arr
INFO  16:21:56,990 - #14 [
INFO  16:21:56,990 - #15 ]
INFO  16:21:56,990 - #18 ;
INFO  16:21:56,990 - #45 Broj
INFO  16:21:56,990 - #45 broj
INFO  16:21:56,990 - #18 ;
INFO  16:21:56,990 - #45 int
INFO  16:21:56,990 - #45 x
INFO  16:21:56,990 - #18 ;
INFO  16:21:56,990 - #12 {
INFO  16:21:56,990 - #45 x
INFO  16:21:56,990 - #26 =
INFO  16:21:56,990 - #44 10
INFO  16:21:56,990 - #18 ;
INFO  16:21:56,990 - #45 x
INFO  16:21:56,990 - #28 --
INFO  16:21:56,990 - #18 ;
INFO  16:21:56,991 - #45 x
INFO  16:21:56,991 - #26 =
INFO  16:21:56,991 - #44 0
INFO  16:21:56,991 - #18 ;
INFO  16:21:56,991 - #45 x
INFO  16:21:56,991 - #28 --
INFO  16:21:56,991 - #18 ;
INFO  16:21:56,991 - #45 x
INFO  16:21:56,991 - #28 --
INFO  16:21:56,991 - #18 ;
INFO  16:21:56,991 - #45 x
INFO  16:21:56,991 - #26 =
INFO  16:21:56,991 - #45 con
INFO  16:21:56,991 - #22 -
INFO  16:21:56,991 - #44 1
INFO  16:21:56,991 - #18 ;
INFO  16:21:56,991 - #11 print
INFO  16:21:56,991 - #16 (
INFO  16:21:56,991 - #45 x
INFO  16:21:56,991 - #17 )
INFO  16:21:56,991 - #18 ;
INFO  16:21:56,991 - #13 }
INFO  16:21:56,991 - #13 }
INFO  16:21:56,997 - Program(
  ProgName(
   Program
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        NoDecl(
        ) [NoDecl]
        VarDeclaration(
          VarDeclNode(
            VarDeclType(
              TypeNode(
               int
              ) [TypeNode]
            ) [VarDeclType]
            Variables(
              Variables(
                Variables(
                  SingleVariable(
                    VariableNoBracket(
                     x
                    ) [VariableNoBracket]
                  ) [SingleVariable]
                  VariableNoBracket(
                   y
                  ) [VariableNoBracket]
                ) [Variables]
                VariableNoBracket(
                 z
                ) [VariableNoBracket]
              ) [Variables]
              VariableBracket(
               arr
              ) [VariableBracket]
            ) [Variables]
          ) [VarDeclNode]
        ) [VarDeclaration]
      ) [Declarations]
      ConstDeclaration(
        ConstDeclNode(
          ConstDeclType(
            TypeNode(
             int
            ) [TypeNode]
          ) [ConstDeclType]
          SingleConstant(
            IdentEqualConstantNode(
             con
              NumberNode(
               100
              ) [NumberNode]
            ) [IdentEqualConstantNode]
          ) [SingleConstant]
        ) [ConstDeclNode]
      ) [ConstDeclaration]
    ) [Declarations]
    EnumDeclaration(
      EnumDeclarationNode(
        EnumIdent(
         Broj
        ) [EnumIdent]
        Enumerations(
          Enumerations(
            Enumerations(
              SingleEnumeration(
                EnumerationNoVal(
                 ZERO
                ) [EnumerationNoVal]
              ) [SingleEnumeration]
              EnumerationNoVal(
               ONE
              ) [EnumerationNoVal]
            ) [Enumerations]
            EnumerationNoVal(
             TWO
            ) [EnumerationNoVal]
          ) [Enumerations]
          EnumerationVal(
           FIVE
           5
          ) [EnumerationVal]
        ) [Enumerations]
      ) [EnumDeclarationNode]
    ) [EnumDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecl(
            MethodTypeName(
              NoVoidType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [NoVoidType]
             add
            ) [MethodTypeName]
            FormalParams(
              FormalParamDecls(
                SingleFormalParamDecl(
                  FormalParamDeclarationNoBrackets(
                    TypeNode(
                     int
                    ) [TypeNode]
                   a
                  ) [FormalParamDeclarationNoBrackets]
                ) [SingleFormalParamDecl]
                FormalParamDeclarationNoBrackets(
                  TypeNode(
                   int
                  ) [TypeNode]
                 b
                ) [FormalParamDeclarationNoBrackets]
              ) [FormalParamDecls]
            ) [FormalParams]
            NoVarDeclaration(
            ) [NoVarDeclaration]
            Statements(
              Statements(
                NoStatement(
                ) [NoStatement]
                ReturnStatementExpr(
                  ExpressionNode(
                    SingleExpression(
                      TermFactor(
                        DesignatorEmpty(
                          DesignatorNode(
                            SingleIdentExpr(
                             a
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                        ) [DesignatorEmpty]
                      ) [TermFactor]
                    ) [SingleExpression]
                    AddopPlus(
                    ) [AddopPlus]
                    TermFactor(
                      DesignatorEmpty(
                        DesignatorNode(
                          SingleIdentExpr(
                           b
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                      ) [DesignatorEmpty]
                    ) [TermFactor]
                  ) [ExpressionNode]
                ) [ReturnStatementExpr]
              ) [Statements]
              DesignatorStatementOnly(
                DesignatorStatementAssignop(
                  DesignatorNode(
                    SingleIdentExpr(
                     a
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    TermFactor(
                      ConstantNumber(
                       999
                      ) [ConstantNumber]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementOnly]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          MethodTypeName(
            VoidType(
            ) [VoidType]
           print4
          ) [MethodTypeName]
          FormalParams(
            SingleFormalParamDecl(
              FormalParamDeclarationBrackets(
                TypeNode(
                 char
                ) [TypeNode]
               arr
              ) [FormalParamDeclarationBrackets]
            ) [SingleFormalParamDecl]
          ) [FormalParams]
          NoVarDeclaration(
          ) [NoVarDeclaration]
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStatement(
                      ) [NoStatement]
                      PrintStatement(
                        SingleExpression(
                          TermFactor(
                            DesignatorEmpty(
                              DesignatorNode(
                                SingleIdentExpr(
                                 eol
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [PrintStatement]
                    ) [Statements]
                    PrintWithNumConstStatement(
                      SingleExpression(
                        TermFactor(
                          DesignatorEmpty(
                            DesignatorNode(
                              Exprs(
                                IdentExprListArray(
                                  SingleIdentExpr(
                                   arr
                                  ) [SingleIdentExpr]
                                ) [IdentExprListArray]
                                SingleExpression(
                                  TermFactor(
                                    ConstantNumber(
                                     0
                                    ) [ConstantNumber]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [Exprs]
                            ) [DesignatorNode]
                          ) [DesignatorEmpty]
                        ) [TermFactor]
                      ) [SingleExpression]
                     2
                    ) [PrintWithNumConstStatement]
                  ) [Statements]
                  PrintWithNumConstStatement(
                    SingleExpression(
                      TermFactor(
                        DesignatorEmpty(
                          DesignatorNode(
                            Exprs(
                              IdentExprListArray(
                                SingleIdentExpr(
                                 arr
                                ) [SingleIdentExpr]
                              ) [IdentExprListArray]
                              SingleExpression(
                                TermFactor(
                                  ConstantNumber(
                                   1
                                  ) [ConstantNumber]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [Exprs]
                          ) [DesignatorNode]
                        ) [DesignatorEmpty]
                      ) [TermFactor]
                    ) [SingleExpression]
                   2
                  ) [PrintWithNumConstStatement]
                ) [Statements]
                PrintWithNumConstStatement(
                  SingleExpression(
                    TermFactor(
                      DesignatorEmpty(
                        DesignatorNode(
                          Exprs(
                            IdentExprListArray(
                              SingleIdentExpr(
                               arr
                              ) [SingleIdentExpr]
                            ) [IdentExprListArray]
                            SingleExpression(
                              TermFactor(
                                ConstantNumber(
                                 2
                                ) [ConstantNumber]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [Exprs]
                        ) [DesignatorNode]
                      ) [DesignatorEmpty]
                    ) [TermFactor]
                  ) [SingleExpression]
                 2
                ) [PrintWithNumConstStatement]
              ) [Statements]
              PrintWithNumConstStatement(
                SingleExpression(
                  TermFactor(
                    DesignatorEmpty(
                      DesignatorNode(
                        Exprs(
                          IdentExprListArray(
                            SingleIdentExpr(
                             arr
                            ) [SingleIdentExpr]
                          ) [IdentExprListArray]
                          SingleExpression(
                            TermFactor(
                              ConstantNumber(
                               3
                              ) [ConstantNumber]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [Exprs]
                      ) [DesignatorNode]
                    ) [DesignatorEmpty]
                  ) [TermFactor]
                ) [SingleExpression]
               2
              ) [PrintWithNumConstStatement]
            ) [Statements]
            PrintStatement(
              SingleExpression(
                TermFactor(
                  DesignatorEmpty(
                    DesignatorNode(
                      SingleIdentExpr(
                       eol
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                  ) [DesignatorEmpty]
                ) [TermFactor]
              ) [SingleExpression]
            ) [PrintStatement]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          VoidType(
          ) [VoidType]
         allocate
        ) [MethodTypeName]
        FormalParams(
          SingleFormalParamDecl(
            FormalParamDeclarationBrackets(
              TypeNode(
               char
              ) [TypeNode]
             arr
            ) [FormalParamDeclarationBrackets]
          ) [SingleFormalParamDecl]
        ) [FormalParams]
        NoVarDeclaration(
        ) [NoVarDeclaration]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStatement(
                      ) [NoStatement]
                      DesignatorStatementOnly(
                        DesignatorStatementActPars(
                          DesignatorNode(
                            SingleIdentExpr(
                             print4
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                          ActParsNode(
                            SingleActualParam(
                              SingleExpression(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      SingleIdentExpr(
                                       arr
                                      ) [SingleIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [SingleActualParam]
                          ) [ActParsNode]
                        ) [DesignatorStatementActPars]
                      ) [DesignatorStatementOnly]
                    ) [Statements]
                    DesignatorStatementOnly(
                      DesignatorStatementAssignop(
                        DesignatorNode(
                          SingleIdentExpr(
                           arr
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                        Assignop(
                        ) [Assignop]
                        SingleExpression(
                          TermFactor(
                            NewArray(
                              NewArrayType(
                                TypeNode(
                                 char
                                ) [TypeNode]
                              ) [NewArrayType]
                              SingleExpression(
                                TermFactor(
                                  ConstantNumber(
                                   4
                                  ) [ConstantNumber]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [NewArray]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementOnly]
                  ) [Statements]
                  DesignatorStatementOnly(
                    DesignatorStatementAssignop(
                      DesignatorNode(
                        Exprs(
                          IdentExprListArray(
                            SingleIdentExpr(
                             arr
                            ) [SingleIdentExpr]
                          ) [IdentExprListArray]
                          SingleExpression(
                            TermFactor(
                              ConstantNumber(
                               0
                              ) [ConstantNumber]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [Exprs]
                      ) [DesignatorNode]
                      Assignop(
                      ) [Assignop]
                      SingleExpression(
                        TermFactor(
                          ConstantCharacter(
                           H
                          ) [ConstantCharacter]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementOnly]
                ) [Statements]
                DesignatorStatementOnly(
                  DesignatorStatementAssignop(
                    DesignatorNode(
                      Exprs(
                        IdentExprListArray(
                          SingleIdentExpr(
                           arr
                          ) [SingleIdentExpr]
                        ) [IdentExprListArray]
                        SingleExpression(
                          TermFactor(
                            ConstantNumber(
                             1
                            ) [ConstantNumber]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [Exprs]
                    ) [DesignatorNode]
                    Assignop(
                    ) [Assignop]
                    SingleExpression(
                      TermFactor(
                        ConstantCharacter(
                         U
                        ) [ConstantCharacter]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementOnly]
              ) [Statements]
              DesignatorStatementOnly(
                DesignatorStatementAssignop(
                  DesignatorNode(
                    Exprs(
                      IdentExprListArray(
                        SingleIdentExpr(
                         arr
                        ) [SingleIdentExpr]
                      ) [IdentExprListArray]
                      SingleExpression(
                        TermFactor(
                          ConstantNumber(
                           2
                          ) [ConstantNumber]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [Exprs]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    TermFactor(
                      ConstantCharacter(
                       D
                      ) [ConstantCharacter]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementOnly]
            ) [Statements]
            DesignatorStatementOnly(
              DesignatorStatementAssignop(
                DesignatorNode(
                  Exprs(
                    IdentExprListArray(
                      SingleIdentExpr(
                       arr
                      ) [SingleIdentExpr]
                    ) [IdentExprListArray]
                    SingleExpression(
                      TermFactor(
                        ConstantNumber(
                         3
                        ) [ConstantNumber]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [Exprs]
                ) [DesignatorNode]
                Assignop(
                ) [Assignop]
                SingleExpression(
                  TermFactor(
                    ConstantCharacter(
                     I
                    ) [ConstantCharacter]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementOnly]
          ) [Statements]
          DesignatorStatementOnly(
            DesignatorStatementActPars(
              DesignatorNode(
                SingleIdentExpr(
                 print4
                ) [SingleIdentExpr]
              ) [DesignatorNode]
              ActParsNode(
                SingleActualParam(
                  SingleExpression(
                    TermFactor(
                      DesignatorEmpty(
                        DesignatorNode(
                          SingleIdentExpr(
                           arr
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                      ) [DesignatorEmpty]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [SingleActualParam]
              ) [ActParsNode]
            ) [DesignatorStatementActPars]
          ) [DesignatorStatementOnly]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      VarDeclarationList(
        VarDeclarationList(
          VarDeclarationList(
            NoVarDeclaration(
            ) [NoVarDeclaration]
            VarDeclNode(
              VarDeclType(
                TypeNode(
                 char
                ) [TypeNode]
              ) [VarDeclType]
              SingleVariable(
                VariableBracket(
                 arr
                ) [VariableBracket]
              ) [SingleVariable]
            ) [VarDeclNode]
          ) [VarDeclarationList]
          VarDeclNode(
            VarDeclType(
              TypeNode(
               Broj
              ) [TypeNode]
            ) [VarDeclType]
            SingleVariable(
              VariableNoBracket(
               broj
              ) [VariableNoBracket]
            ) [SingleVariable]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        VarDeclNode(
          VarDeclType(
            TypeNode(
             int
            ) [TypeNode]
          ) [VarDeclType]
          SingleVariable(
            VariableNoBracket(
             x
            ) [VariableNoBracket]
          ) [SingleVariable]
        ) [VarDeclNode]
      ) [VarDeclarationList]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStatement(
                    ) [NoStatement]
                    DesignatorStatementOnly(
                      DesignatorStatementAssignop(
                        DesignatorNode(
                          SingleIdentExpr(
                           x
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                        Assignop(
                        ) [Assignop]
                        SingleExpression(
                          TermFactor(
                            ConstantNumber(
                             10
                            ) [ConstantNumber]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementOnly]
                  ) [Statements]
                  DesignatorStatementOnly(
                    DesignatorStatementMinusMinus(
                      DesignatorNode(
                        SingleIdentExpr(
                         x
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                    ) [DesignatorStatementMinusMinus]
                  ) [DesignatorStatementOnly]
                ) [Statements]
                DesignatorStatementOnly(
                  DesignatorStatementAssignop(
                    DesignatorNode(
                      SingleIdentExpr(
                       x
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                    Assignop(
                    ) [Assignop]
                    SingleExpression(
                      TermFactor(
                        ConstantNumber(
                         0
                        ) [ConstantNumber]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementOnly]
              ) [Statements]
              DesignatorStatementOnly(
                DesignatorStatementMinusMinus(
                  DesignatorNode(
                    SingleIdentExpr(
                     x
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                ) [DesignatorStatementMinusMinus]
              ) [DesignatorStatementOnly]
            ) [Statements]
            DesignatorStatementOnly(
              DesignatorStatementMinusMinus(
                DesignatorNode(
                  SingleIdentExpr(
                   x
                  ) [SingleIdentExpr]
                ) [DesignatorNode]
              ) [DesignatorStatementMinusMinus]
            ) [DesignatorStatementOnly]
          ) [Statements]
          DesignatorStatementOnly(
            DesignatorStatementAssignop(
              DesignatorNode(
                SingleIdentExpr(
                 x
                ) [SingleIdentExpr]
              ) [DesignatorNode]
              Assignop(
              ) [Assignop]
              ExpressionNode(
                SingleExpression(
                  TermFactor(
                    DesignatorEmpty(
                      DesignatorNode(
                        SingleIdentExpr(
                         con
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                    ) [DesignatorEmpty]
                  ) [TermFactor]
                ) [SingleExpression]
                AddopMinus(
                ) [AddopMinus]
                TermFactor(
                  ConstantNumber(
                   1
                  ) [ConstantNumber]
                ) [TermFactor]
              ) [ExpressionNode]
            ) [DesignatorStatementAssignop]
          ) [DesignatorStatementOnly]
        ) [Statements]
        PrintStatement(
          SingleExpression(
            TermFactor(
              DesignatorEmpty(
                DesignatorNode(
                  SingleIdentExpr(
                   x
                  ) [SingleIdentExpr]
                ) [DesignatorNode]
              ) [DesignatorEmpty]
            ) [TermFactor]
          ) [SingleExpression]
        ) [PrintStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  16:21:56,998 - ===================================
INFO  16:21:57,001 - Deklarisana single promenljiva x na liniji 3
INFO  16:21:57,001 - Deklarisana single promenljiva y na liniji 3
INFO  16:21:57,001 - Deklarisana single promenljiva z na liniji 3
INFO  16:21:57,001 - Deklarisana array promenljiva arr na liniji 3
INFO  16:21:57,001 - Definisana konstanta (100)con na liniji 4
INFO  16:21:57,001 - Deklarisan novi enum tip: Broj na liniji 5
INFO  16:21:57,001 - Definisana enum konstanta ZERO sa vrednoscu 0 na liniji 5
INFO  16:21:57,001 - Definisana enum konstanta ONE sa vrednoscu 1 na liniji 5
INFO  16:21:57,001 - Definisana enum konstanta TWO sa vrednoscu 2 na liniji 5
INFO  16:21:57,002 - Definisana enum konstanta FIVE sa vrednoscu 5 na liniji 5
INFO  16:21:57,002 - Definisana funkcija add na liniji 8
INFO  16:21:57,002 - Deklarisan single argument a na liniji 8
INFO  16:21:57,002 - Deklarisan single argument b na liniji 8
INFO  16:21:57,002 - Pronadjen poziv promenljive a na liniji 10
INFO  16:21:57,002 - Pronadjen poziv promenljive b na liniji 10
INFO  16:21:57,002 - Dodela vrednosti za a na liniji 11
INFO  16:21:57,002 - Definisana funkcija print4 na liniji 13
INFO  16:21:57,002 - Deklarisan array argument arr na liniji 13
INFO  16:21:57,002 - Pronadjen poziv promenljive eol na liniji 15
INFO  16:21:57,002 - Pronadjen poziv promenljive $elem na liniji 16
INFO  16:21:57,002 - Pronadjen poziv promenljive $elem na liniji 17
INFO  16:21:57,002 - Pronadjen poziv promenljive $elem na liniji 18
INFO  16:21:57,002 - Pronadjen poziv promenljive $elem na liniji 19
INFO  16:21:57,002 - Pronadjen poziv promenljive eol na liniji 20
INFO  16:21:57,003 - Definisana funkcija allocate na liniji 22
INFO  16:21:57,003 - Deklarisan array argument arr na liniji 22
INFO  16:21:57,003 - Pronadjen poziv promenljive arr na liniji 23
INFO  16:21:57,003 - Pronadjen poziv funkcije print4 sa 1/1 argumenta na liniji 23
INFO  16:21:57,003 - Dodela vrednosti za arr na liniji 25
INFO  16:21:57,003 - Dodela vrednosti za $elem na liniji 26
INFO  16:21:57,003 - Dodela vrednosti za $elem na liniji 27
INFO  16:21:57,003 - Dodela vrednosti za $elem na liniji 28
INFO  16:21:57,003 - Dodela vrednosti za $elem na liniji 29
INFO  16:21:57,003 - Pronadjen poziv promenljive arr na liniji 31
INFO  16:21:57,003 - Pronadjen poziv funkcije print4 sa 1/1 argumenta na liniji 31
INFO  16:21:57,003 - Definisana funkcija main na liniji 33
INFO  16:21:57,003 - Deklarisana array promenljiva arr na liniji 35
INFO  16:21:57,004 - Deklarisana single promenljiva broj na liniji 36
INFO  16:21:57,004 - Deklarisana single promenljiva x na liniji 37
INFO  16:21:57,004 - Dodela vrednosti za x na liniji 40
INFO  16:21:57,004 - Dodela vrednosti za x na liniji 42
INFO  16:21:57,004 - Pronadjen poziv promenljive con na liniji 45
INFO  16:21:57,004 - Dodela vrednosti za x na liniji 45
INFO  16:21:57,004 - Pronadjen poziv promenljive x na liniji 46
INFO  16:21:57,004 - main funkcija je korektna.  na liniji 33
INFO  16:21:57,004 - ===================================
INFO  16:21:57,008 - Parsiranje uspesno zavrseno!
