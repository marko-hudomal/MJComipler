INFO  00:28:19,485 - Putanja iz argumenta: test/program.mj
INFO  00:28:19,486 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  00:28:19,520 - #2 program
INFO  00:28:19,520 - #45 Program
INFO  00:28:19,520 - #45 int
INFO  00:28:19,521 - #45 x
INFO  00:28:19,521 - #19 ,
INFO  00:28:19,522 - #45 y
INFO  00:28:19,522 - #19 ,
INFO  00:28:19,522 - #45 z
INFO  00:28:19,522 - #19 ,
INFO  00:28:19,522 - #45 arr
INFO  00:28:19,522 - #14 [
INFO  00:28:19,522 - #15 ]
INFO  00:28:19,522 - #18 ;
INFO  00:28:19,522 - #12 {
INFO  00:28:19,522 - #39 void
INFO  00:28:19,523 - #45 main
INFO  00:28:19,523 - #16 (
INFO  00:28:19,523 - #17 )
INFO  00:28:19,524 - #45 int
INFO  00:28:19,524 - #45 a
INFO  00:28:19,524 - #19 ,
INFO  00:28:19,524 - #45 b
INFO  00:28:19,524 - #18 ;
INFO  00:28:19,525 - #12 {
INFO  00:28:19,525 - #45 a
INFO  00:28:19,525 - #26 =
INFO  00:28:19,525 - #44 2
INFO  00:28:19,525 - #18 ;
INFO  00:28:19,526 - #45 b
INFO  00:28:19,526 - #26 =
INFO  00:28:19,526 - #44 2
INFO  00:28:19,526 - #18 ;
INFO  00:28:19,526 - #9 if
INFO  00:28:19,526 - #16 (
INFO  00:28:19,526 - #45 a
INFO  00:28:19,526 - #29 ==
INFO  00:28:19,526 - #45 b
INFO  00:28:19,527 - #17 )
INFO  00:28:19,527 - #12 {
INFO  00:28:19,527 - #9 if
INFO  00:28:19,527 - #16 (
INFO  00:28:19,527 - #45 a
INFO  00:28:19,527 - #29 ==
INFO  00:28:19,528 - #44 2
INFO  00:28:19,528 - #17 )
INFO  00:28:19,528 - #12 {
INFO  00:28:19,528 - #11 print
INFO  00:28:19,528 - #16 (
INFO  00:28:19,528 - #44 1
INFO  00:28:19,528 - #17 )
INFO  00:28:19,528 - #18 ;
INFO  00:28:19,528 - #13 }
INFO  00:28:19,528 - #7 else
INFO  00:28:19,528 - #12 {
INFO  00:28:19,528 - #11 print
INFO  00:28:19,528 - #16 (
INFO  00:28:19,529 - #44 2
INFO  00:28:19,529 - #17 )
INFO  00:28:19,529 - #18 ;
INFO  00:28:19,529 - #13 }
INFO  00:28:19,529 - #11 print
INFO  00:28:19,529 - #16 (
INFO  00:28:19,529 - #44 3
INFO  00:28:19,529 - #17 )
INFO  00:28:19,530 - #18 ;
INFO  00:28:19,530 - #13 }
INFO  00:28:19,530 - #7 else
INFO  00:28:19,530 - #12 {
INFO  00:28:19,530 - #11 print
INFO  00:28:19,530 - #16 (
INFO  00:28:19,530 - #44 4
INFO  00:28:19,530 - #17 )
INFO  00:28:19,530 - #18 ;
INFO  00:28:19,530 - #13 }
INFO  00:28:19,530 - #11 print
INFO  00:28:19,530 - #16 (
INFO  00:28:19,530 - #44 5
INFO  00:28:19,530 - #17 )
INFO  00:28:19,530 - #18 ;
INFO  00:28:19,530 - #13 }
INFO  00:28:19,530 - #13 }
INFO  00:28:19,535 - Program(
  ProgName(
   Program
  ) [ProgName]
  Declarations(
    NoDecl(
    ) [NoDecl]
    VarDeclaration(
      VarDeclNode(
        VarDeclType(
          TypeNode(
           int
          ) [TypeNode]
        ) [VarDeclType]
        Variables(
          Variables(
            Variables(
              SingleVariable(
                VariableNoBracket(
                 x
                ) [VariableNoBracket]
              ) [SingleVariable]
              VariableNoBracket(
               y
              ) [VariableNoBracket]
            ) [Variables]
            VariableNoBracket(
             z
            ) [VariableNoBracket]
          ) [Variables]
          VariableBracket(
           arr
          ) [VariableBracket]
        ) [Variables]
      ) [VarDeclNode]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      VarDeclarationList(
        NoVarDeclaration(
        ) [NoVarDeclaration]
        VarDeclNode(
          VarDeclType(
            TypeNode(
             int
            ) [TypeNode]
          ) [VarDeclType]
          Variables(
            SingleVariable(
              VariableNoBracket(
               a
              ) [VariableNoBracket]
            ) [SingleVariable]
            VariableNoBracket(
             b
            ) [VariableNoBracket]
          ) [Variables]
        ) [VarDeclNode]
      ) [VarDeclarationList]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatement(
              ) [NoStatement]
              DesignatorStatementOnly(
                DesignatorStatementAssignop(
                  DesignatorNode(
                    SingleIdentExpr(
                     a
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    TermFactor(
                      ConstantNumber(
                       2
                      ) [ConstantNumber]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementOnly]
            ) [Statements]
            DesignatorStatementOnly(
              DesignatorStatementAssignop(
                DesignatorNode(
                  SingleIdentExpr(
                   b
                  ) [SingleIdentExpr]
                ) [DesignatorNode]
                Assignop(
                ) [Assignop]
                SingleExpression(
                  TermFactor(
                    ConstantNumber(
                     2
                    ) [ConstantNumber]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementOnly]
          ) [Statements]
          IfElseStatement(
            IfConditionNode(
              ConditionNode(
                SingleConditionTerm(
                  ConditionTermNode(
                    SingleConditionFact(
                      CondFactExpressionRelopExpression(
                        SingleExpression(
                          TermFactor(
                            DesignatorEmpty(
                              DesignatorNode(
                                SingleIdentExpr(
                                 a
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermFactor]
                        ) [SingleExpression]
                        RelopEqualEqual(
                        ) [RelopEqualEqual]
                        SingleExpression(
                          TermFactor(
                            DesignatorEmpty(
                              DesignatorNode(
                                SingleIdentExpr(
                                 b
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [CondFactExpressionRelopExpression]
                    ) [SingleConditionFact]
                  ) [ConditionTermNode]
                ) [SingleConditionTerm]
              ) [ConditionNode]
            ) [IfConditionNode]
            IfStatementThen(
              InBraceStatement(
                Statements(
                  Statements(
                    NoStatement(
                    ) [NoStatement]
                    IfElseStatement(
                      IfConditionNode(
                        ConditionNode(
                          SingleConditionTerm(
                            ConditionTermNode(
                              SingleConditionFact(
                                CondFactExpressionRelopExpression(
                                  SingleExpression(
                                    TermFactor(
                                      DesignatorEmpty(
                                        DesignatorNode(
                                          SingleIdentExpr(
                                           a
                                          ) [SingleIdentExpr]
                                        ) [DesignatorNode]
                                      ) [DesignatorEmpty]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                  RelopEqualEqual(
                                  ) [RelopEqualEqual]
                                  SingleExpression(
                                    TermFactor(
                                      ConstantNumber(
                                       2
                                      ) [ConstantNumber]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [CondFactExpressionRelopExpression]
                              ) [SingleConditionFact]
                            ) [ConditionTermNode]
                          ) [SingleConditionTerm]
                        ) [ConditionNode]
                      ) [IfConditionNode]
                      IfStatementThen(
                        InBraceStatement(
                          Statements(
                            NoStatement(
                            ) [NoStatement]
                            PrintStatement(
                              SingleExpression(
                                TermFactor(
                                  ConstantNumber(
                                   1
                                  ) [ConstantNumber]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [PrintStatement]
                          ) [Statements]
                        ) [InBraceStatement]
                      ) [IfStatementThen]
                      IfStatementElse(
                        InBraceStatement(
                          Statements(
                            NoStatement(
                            ) [NoStatement]
                            PrintStatement(
                              SingleExpression(
                                TermFactor(
                                  ConstantNumber(
                                   2
                                  ) [ConstantNumber]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [PrintStatement]
                          ) [Statements]
                        ) [InBraceStatement]
                      ) [IfStatementElse]
                    ) [IfElseStatement]
                  ) [Statements]
                  PrintStatement(
                    SingleExpression(
                      TermFactor(
                        ConstantNumber(
                         3
                        ) [ConstantNumber]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [PrintStatement]
                ) [Statements]
              ) [InBraceStatement]
            ) [IfStatementThen]
            IfStatementElse(
              InBraceStatement(
                Statements(
                  NoStatement(
                  ) [NoStatement]
                  PrintStatement(
                    SingleExpression(
                      TermFactor(
                        ConstantNumber(
                         4
                        ) [ConstantNumber]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [PrintStatement]
                ) [Statements]
              ) [InBraceStatement]
            ) [IfStatementElse]
          ) [IfElseStatement]
        ) [Statements]
        PrintStatement(
          SingleExpression(
            TermFactor(
              ConstantNumber(
               5
              ) [ConstantNumber]
            ) [TermFactor]
          ) [SingleExpression]
        ) [PrintStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  00:28:19,536 - ===================================
INFO  00:28:19,539 - Deklarisana single promenljiva x na liniji 3
INFO  00:28:19,539 - Deklarisana single promenljiva y na liniji 3
INFO  00:28:19,539 - Deklarisana single promenljiva z na liniji 3
INFO  00:28:19,539 - Deklarisana array promenljiva arr na liniji 3
INFO  00:28:19,539 - Definisana funkcija main na liniji 7
INFO  00:28:19,539 - Deklarisana single promenljiva a na liniji 9
INFO  00:28:19,539 - Deklarisana single promenljiva b na liniji 9
INFO  00:28:19,539 - Dodela vrednosti za a na liniji 11
INFO  00:28:19,539 - Dodela vrednosti za b na liniji 12
INFO  00:28:19,539 - Pronadjen poziv promenljive a na liniji 14
INFO  00:28:19,539 - Pronadjen poziv promenljive b na liniji 14
INFO  00:28:19,539 - Pronadjen poziv promenljive a na liniji 16
INFO  00:28:19,540 - main funkcija je korektna.  na liniji 7
INFO  00:28:19,540 - ===================================
INFO  00:28:19,549 - Parsiranje uspesno zavrseno!
