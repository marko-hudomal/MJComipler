INFO  21:58:00,571 - Putanja iz argumenta: test/program.mj
INFO  21:58:00,571 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  21:58:00,604 - #2 program
INFO  21:58:00,604 - #45 MojProgram
INFO  21:58:00,604 - #8 const
INFO  21:58:00,605 - #45 int
INFO  21:58:00,605 - #45 size
INFO  21:58:00,605 - #26 =
INFO  21:58:00,605 - #44 10
INFO  21:58:00,605 - #19 ,
INFO  21:58:00,605 - #45 const1
INFO  21:58:00,605 - #26 =
INFO  21:58:00,605 - #44 1
INFO  21:58:00,606 - #19 ,
INFO  21:58:00,606 - #45 const2
INFO  21:58:00,606 - #26 =
INFO  21:58:00,606 - #44 2
INFO  21:58:00,606 - #18 ;
INFO  21:58:00,606 - #8 const
INFO  21:58:00,606 - #45 bool
INFO  21:58:00,606 - #45 b1
INFO  21:58:00,607 - #26 =
INFO  21:58:00,607 - #47 1
INFO  21:58:00,607 - #19 ,
INFO  21:58:00,607 - #45 b2
INFO  21:58:00,607 - #26 =
INFO  21:58:00,607 - #47 0
INFO  21:58:00,607 - #18 ;
INFO  21:58:00,607 - #8 const
INFO  21:58:00,607 - #45 char
INFO  21:58:00,607 - #45 x
INFO  21:58:00,607 - #26 =
INFO  21:58:00,607 - #46 a
INFO  21:58:00,607 - #18 ;
INFO  21:58:00,607 - #8 const
INFO  21:58:00,607 - #45 bool
INFO  21:58:00,608 - #45 bb
INFO  21:58:00,608 - #26 =
INFO  21:58:00,608 - #47 1
INFO  21:58:00,608 - #18 ;
INFO  21:58:00,608 - #45 int
INFO  21:58:00,608 - #45 niz
INFO  21:58:00,608 - #14 [
INFO  21:58:00,608 - #15 ]
INFO  21:58:00,608 - #19 ,
INFO  21:58:00,608 - #45 d
INFO  21:58:00,609 - #18 ;
INFO  21:58:00,609 - #6 enum
INFO  21:58:00,609 - #45 Num
INFO  21:58:00,609 - #12 {
INFO  21:58:00,609 - #45 ZERO
INFO  21:58:00,609 - #26 =
INFO  21:58:00,609 - #44 0
INFO  21:58:00,609 - #19 ,
INFO  21:58:00,610 - #45 ONE
INFO  21:58:00,610 - #19 ,
INFO  21:58:00,610 - #45 TEN
INFO  21:58:00,610 - #26 =
INFO  21:58:00,610 - #44 10
INFO  21:58:00,610 - #19 ,
INFO  21:58:00,610 - #45 ELEVEN
INFO  21:58:00,610 - #26 =
INFO  21:58:00,610 - #44 11
INFO  21:58:00,610 - #13 }
INFO  21:58:00,610 - #45 int
INFO  21:58:00,610 - #45 a
INFO  21:58:00,610 - #19 ,
INFO  21:58:00,610 - #45 b
INFO  21:58:00,610 - #19 ,
INFO  21:58:00,610 - #45 c
INFO  21:58:00,611 - #18 ;
INFO  21:58:00,611 - #45 bool
INFO  21:58:00,611 - #45 bo
INFO  21:58:00,611 - #18 ;
INFO  21:58:00,611 - #45 int
INFO  21:58:00,611 - #45 xx
INFO  21:58:00,611 - #19 ,
INFO  21:58:00,611 - #45 aa
INFO  21:58:00,611 - #14 [
INFO  21:58:00,611 - #15 ]
INFO  21:58:00,611 - #18 ;
INFO  21:58:00,611 - #12 {
INFO  21:58:00,611 - #39 void
INFO  21:58:00,611 - #45 f1
INFO  21:58:00,612 - #16 (
INFO  21:58:00,612 - #45 char
INFO  21:58:00,612 - #45 ch
INFO  21:58:00,612 - #19 ,
INFO  21:58:00,612 - #45 int
INFO  21:58:00,612 - #45 a
INFO  21:58:00,612 - #19 ,
INFO  21:58:00,612 - #45 int
INFO  21:58:00,613 - #45 arg
INFO  21:58:00,613 - #17 )
INFO  21:58:00,613 - #45 int
INFO  21:58:00,613 - #45 x
INFO  21:58:00,613 - #18 ;
INFO  21:58:00,613 - #45 bool
INFO  21:58:00,613 - #45 c
INFO  21:58:00,613 - #18 ;
INFO  21:58:00,613 - #45 Num
INFO  21:58:00,613 - #45 broj
INFO  21:58:00,613 - #19 ,
INFO  21:58:00,614 - #45 broj2
INFO  21:58:00,614 - #18 ;
INFO  21:58:00,614 - #12 {
INFO  21:58:00,614 - #45 x
INFO  21:58:00,614 - #26 =
INFO  21:58:00,614 - #45 Num
INFO  21:58:00,615 - #20 .
INFO  21:58:00,615 - #45 ZERO
INFO  21:58:00,615 - #18 ;
INFO  21:58:00,615 - #45 broj
INFO  21:58:00,615 - #26 =
INFO  21:58:00,615 - #45 Num
INFO  21:58:00,615 - #20 .
INFO  21:58:00,615 - #45 ZERO
INFO  21:58:00,615 - #18 ;
INFO  21:58:00,615 - #45 broj2
INFO  21:58:00,615 - #26 =
INFO  21:58:00,615 - #44 10
INFO  21:58:00,616 - #18 ;
INFO  21:58:00,616 - #45 x
INFO  21:58:00,616 - #26 =
INFO  21:58:00,616 - #45 a
INFO  21:58:00,616 - #21 +
INFO  21:58:00,616 - #44 1
INFO  21:58:00,616 - #18 ;
INFO  21:58:00,616 - #45 c
INFO  21:58:00,616 - #26 =
INFO  21:58:00,617 - #47 0
INFO  21:58:00,617 - #18 ;
INFO  21:58:00,617 - #45 bo
INFO  21:58:00,618 - #26 =
INFO  21:58:00,618 - #47 1
INFO  21:58:00,618 - #18 ;
INFO  21:58:00,618 - #45 ch
INFO  21:58:00,618 - #26 =
INFO  21:58:00,618 - #46 1
INFO  21:58:00,618 - #18 ;
INFO  21:58:00,618 - #13 }
INFO  21:58:00,618 - #45 int
INFO  21:58:00,619 - #45 f2
INFO  21:58:00,619 - #16 (
INFO  21:58:00,619 - #45 char
INFO  21:58:00,619 - #45 ch
INFO  21:58:00,619 - #19 ,
INFO  21:58:00,619 - #45 int
INFO  21:58:00,619 - #45 a
INFO  21:58:00,619 - #19 ,
INFO  21:58:00,619 - #45 int
INFO  21:58:00,619 - #45 arg
INFO  21:58:00,619 - #17 )
INFO  21:58:00,619 - #45 int
INFO  21:58:00,619 - #45 ff
INFO  21:58:00,619 - #18 ;
INFO  21:58:00,619 - #45 int
INFO  21:58:00,619 - #45 i
INFO  21:58:00,619 - #18 ;
INFO  21:58:00,619 - #45 Num
INFO  21:58:00,619 - #45 broj
INFO  21:58:00,620 - #18 ;
INFO  21:58:00,620 - #12 {
INFO  21:58:00,620 - #45 f1
INFO  21:58:00,620 - #16 (
INFO  21:58:00,620 - #45 bo
INFO  21:58:00,620 - #19 ,
INFO  21:58:00,620 - #45 b
INFO  21:58:00,620 - #19 ,
INFO  21:58:00,620 - #45 c
INFO  21:58:00,620 - #17 )
INFO  21:58:00,620 - #18 ;
INFO  21:58:00,620 - #45 niz
INFO  21:58:00,620 - #26 =
INFO  21:58:00,620 - #10 new
INFO  21:58:00,620 - #45 int
INFO  21:58:00,620 - #14 [
INFO  21:58:00,620 - #44 20
INFO  21:58:00,620 - #15 ]
INFO  21:58:00,620 - #18 ;
INFO  21:58:00,621 - #45 ff
INFO  21:58:00,621 - #26 =
INFO  21:58:00,621 - #45 niz
INFO  21:58:00,621 - #14 [
INFO  21:58:00,621 - #44 1
INFO  21:58:00,621 - #15 ]
INFO  21:58:00,621 - #18 ;
INFO  21:58:00,621 - #45 niz
INFO  21:58:00,621 - #14 [
INFO  21:58:00,621 - #22 -
INFO  21:58:00,621 - #45 niz
INFO  21:58:00,621 - #14 [
INFO  21:58:00,621 - #45 niz
INFO  21:58:00,621 - #14 [
INFO  21:58:00,621 - #45 broj
INFO  21:58:00,621 - #15 ]
INFO  21:58:00,621 - #15 ]
INFO  21:58:00,621 - #21 +
INFO  21:58:00,621 - #44 5
INFO  21:58:00,621 - #23 *
INFO  21:58:00,621 - #44 9
INFO  21:58:00,622 - #15 ]
INFO  21:58:00,622 - #26 =
INFO  21:58:00,622 - #45 Num
INFO  21:58:00,622 - #20 .
INFO  21:58:00,622 - #45 ZERO
INFO  21:58:00,622 - #23 *
INFO  21:58:00,622 - #44 2
INFO  21:58:00,622 - #22 -
INFO  21:58:00,622 - #45 broj
INFO  21:58:00,622 - #18 ;
INFO  21:58:00,623 - #45 ff
INFO  21:58:00,623 - #26 =
INFO  21:58:00,623 - #44 0
INFO  21:58:00,623 - #18 ;
INFO  21:58:00,623 - #45 i
INFO  21:58:00,623 - #26 =
INFO  21:58:00,623 - #44 10
INFO  21:58:00,623 - #18 ;
INFO  21:58:00,623 - #40 for
INFO  21:58:00,623 - #16 (
INFO  21:58:00,623 - #45 i
INFO  21:58:00,623 - #26 =
INFO  21:58:00,623 - #44 0
INFO  21:58:00,623 - #18 ;
INFO  21:58:00,623 - #45 niz
INFO  21:58:00,623 - #30 !=
INFO  21:58:00,623 - #45 niz
INFO  21:58:00,624 - #18 ;
INFO  21:58:00,624 - #45 i
INFO  21:58:00,624 - #27 ++
INFO  21:58:00,624 - #17 )
INFO  21:58:00,624 - #12 {
INFO  21:58:00,624 - #3 break
INFO  21:58:00,625 - #18 ;
INFO  21:58:00,625 - #13 }
INFO  21:58:00,625 - #38 return
INFO  21:58:00,625 - #45 ff
INFO  21:58:00,625 - #18 ;
INFO  21:58:00,625 - #13 }
INFO  21:58:00,625 - #45 int
INFO  21:58:00,625 - #45 putp
INFO  21:58:00,625 - #16 (
INFO  21:58:00,625 - #45 char
INFO  21:58:00,625 - #45 ch
INFO  21:58:00,626 - #17 )
INFO  21:58:00,626 - #45 int
INFO  21:58:00,626 - #45 x
INFO  21:58:00,626 - #18 ;
INFO  21:58:00,626 - #12 {
INFO  21:58:00,626 - #45 x
INFO  21:58:00,626 - #26 =
INFO  21:58:00,626 - #44 5
INFO  21:58:00,626 - #18 ;
INFO  21:58:00,626 - #45 bo
INFO  21:58:00,627 - #26 =
INFO  21:58:00,627 - #47 0
INFO  21:58:00,627 - #18 ;
INFO  21:58:00,627 - #45 x
INFO  21:58:00,627 - #26 =
INFO  21:58:00,627 - #45 f2
INFO  21:58:00,627 - #16 (
INFO  21:58:00,627 - #44 1
INFO  21:58:00,627 - #19 ,
INFO  21:58:00,627 - #44 2
INFO  21:58:00,627 - #19 ,
INFO  21:58:00,627 - #44 3
INFO  21:58:00,627 - #17 )
INFO  21:58:00,627 - #18 ;
INFO  21:58:00,627 - #38 return
INFO  21:58:00,628 - #45 x
INFO  21:58:00,628 - #18 ;
INFO  21:58:00,628 - #13 }
INFO  21:58:00,628 - #45 int
INFO  21:58:00,628 - #45 getp
INFO  21:58:00,628 - #16 (
INFO  21:58:00,628 - #45 char
INFO  21:58:00,628 - #45 ch
INFO  21:58:00,628 - #17 )
INFO  21:58:00,628 - #45 int
INFO  21:58:00,628 - #45 x
INFO  21:58:00,628 - #18 ;
INFO  21:58:00,628 - #12 {
INFO  21:58:00,628 - #45 x
INFO  21:58:00,628 - #26 =
INFO  21:58:00,628 - #22 -
INFO  21:58:00,628 - #44 2
INFO  21:58:00,628 - #23 *
INFO  21:58:00,628 - #45 a
INFO  21:58:00,628 - #21 +
INFO  21:58:00,628 - #44 5
INFO  21:58:00,628 - #23 *
INFO  21:58:00,628 - #16 (
INFO  21:58:00,628 - #45 x
INFO  21:58:00,628 - #24 /
INFO  21:58:00,628 - #44 2
INFO  21:58:00,629 - #17 )
INFO  21:58:00,629 - #18 ;
INFO  21:58:00,629 - #45 a
INFO  21:58:00,629 - #26 =
INFO  21:58:00,629 - #44 1
INFO  21:58:00,629 - #18 ;
INFO  21:58:00,629 - #45 b
INFO  21:58:00,629 - #26 =
INFO  21:58:00,629 - #44 1
INFO  21:58:00,629 - #23 *
INFO  21:58:00,629 - #45 a
INFO  21:58:00,629 - #18 ;
INFO  21:58:00,629 - #45 c
INFO  21:58:00,629 - #26 =
INFO  21:58:00,629 - #44 2
INFO  21:58:00,629 - #18 ;
INFO  21:58:00,629 - #38 return
INFO  21:58:00,629 - #45 x
INFO  21:58:00,629 - #21 +
INFO  21:58:00,629 - #44 10
INFO  21:58:00,629 - #18 ;
INFO  21:58:00,629 - #13 }
INFO  21:58:00,629 - #39 void
INFO  21:58:00,629 - #45 main
INFO  21:58:00,629 - #16 (
INFO  21:58:00,629 - #17 )
INFO  21:58:00,629 - #45 int
INFO  21:58:00,630 - #45 x
INFO  21:58:00,630 - #19 ,
INFO  21:58:00,630 - #45 i
INFO  21:58:00,630 - #18 ;
INFO  21:58:00,630 - #45 char
INFO  21:58:00,630 - #45 c
INFO  21:58:00,630 - #18 ;
INFO  21:58:00,630 - #45 int
INFO  21:58:00,630 - #45 val
INFO  21:58:00,630 - #18 ;
INFO  21:58:00,630 - #12 {
INFO  21:58:00,630 - #45 niz
INFO  21:58:00,630 - #26 =
INFO  21:58:00,630 - #10 new
INFO  21:58:00,630 - #45 int
INFO  21:58:00,630 - #14 [
INFO  21:58:00,630 - #45 x
INFO  21:58:00,630 - #15 ]
INFO  21:58:00,630 - #18 ;
INFO  21:58:00,630 - #45 val
INFO  21:58:00,630 - #26 =
INFO  21:58:00,630 - #44 5
INFO  21:58:00,630 - #18 ;
INFO  21:58:00,630 - #40 for
INFO  21:58:00,630 - #16 (
INFO  21:58:00,630 - #45 i
INFO  21:58:00,630 - #26 =
INFO  21:58:00,630 - #44 0
INFO  21:58:00,630 - #18 ;
INFO  21:58:00,630 - #45 i
INFO  21:58:00,630 - #33 <
INFO  21:58:00,630 - #45 size
INFO  21:58:00,630 - #18 ;
INFO  21:58:00,631 - #45 i
INFO  21:58:00,631 - #27 ++
INFO  21:58:00,631 - #17 )
INFO  21:58:00,631 - #12 {
INFO  21:58:00,631 - #45 x
INFO  21:58:00,631 - #26 =
INFO  21:58:00,631 - #45 putp
INFO  21:58:00,631 - #16 (
INFO  21:58:00,631 - #44 0
INFO  21:58:00,631 - #19 ,
INFO  21:58:00,631 - #45 i
INFO  21:58:00,631 - #17 )
INFO  21:58:00,631 - #18 ;
INFO  21:58:00,631 - #45 putp
INFO  21:58:00,631 - #16 (
INFO  21:58:00,631 - #44 0
INFO  21:58:00,631 - #19 ,
INFO  21:58:00,631 - #45 i
INFO  21:58:00,631 - #17 )
INFO  21:58:00,631 - #18 ;
INFO  21:58:00,631 - #13 }
INFO  21:58:00,631 - #45 f1
INFO  21:58:00,631 - #16 (
INFO  21:58:00,631 - #45 c
INFO  21:58:00,631 - #19 ,
INFO  21:58:00,631 - #45 x
INFO  21:58:00,631 - #19 ,
INFO  21:58:00,631 - #45 i
INFO  21:58:00,631 - #17 )
INFO  21:58:00,631 - #18 ;
INFO  21:58:00,631 - #11 print
INFO  21:58:00,631 - #16 (
INFO  21:58:00,631 - #45 d
INFO  21:58:00,631 - #17 )
INFO  21:58:00,631 - #18 ;
INFO  21:58:00,631 - #37 read
INFO  21:58:00,631 - #16 (
INFO  21:58:00,631 - #45 x
INFO  21:58:00,631 - #17 )
INFO  21:58:00,631 - #18 ;
INFO  21:58:00,631 - #40 for
INFO  21:58:00,632 - #16 (
INFO  21:58:00,632 - #45 i
INFO  21:58:00,632 - #26 =
INFO  21:58:00,632 - #44 1
INFO  21:58:00,632 - #18 ;
INFO  21:58:00,632 - #45 x
INFO  21:58:00,632 - #31 >
INFO  21:58:00,632 - #44 1
INFO  21:58:00,632 - #18 ;
INFO  21:58:00,632 - #17 )
INFO  21:58:00,632 - #12 {
INFO  21:58:00,632 - #9 if
INFO  21:58:00,632 - #16 (
INFO  21:58:00,632 - #44 0
INFO  21:58:00,632 - #34 <=
INFO  21:58:00,632 - #45 x
INFO  21:58:00,633 - #35 &&
INFO  21:58:00,633 - #45 x
INFO  21:58:00,633 - #33 <
INFO  21:58:00,633 - #45 size
INFO  21:58:00,633 - #17 )
INFO  21:58:00,633 - #12 {
INFO  21:58:00,633 - #45 putp
INFO  21:58:00,633 - #16 (
INFO  21:58:00,633 - #45 getp
INFO  21:58:00,633 - #16 (
INFO  21:58:00,633 - #45 x
INFO  21:58:00,633 - #17 )
INFO  21:58:00,633 - #21 +
INFO  21:58:00,633 - #44 1
INFO  21:58:00,633 - #17 )
INFO  21:58:00,633 - #18 ;
INFO  21:58:00,633 - #13 }
INFO  21:58:00,633 - #7 else
INFO  21:58:00,633 - #9 if
INFO  21:58:00,633 - #16 (
INFO  21:58:00,633 - #22 -
INFO  21:58:00,633 - #45 size
INFO  21:58:00,633 - #33 <
INFO  21:58:00,633 - #45 x
INFO  21:58:00,633 - #35 &&
INFO  21:58:00,633 - #45 x
INFO  21:58:00,633 - #33 <
INFO  21:58:00,633 - #44 0
INFO  21:58:00,633 - #17 )
INFO  21:58:00,633 - #12 {
INFO  21:58:00,633 - #45 putp
INFO  21:58:00,633 - #16 (
INFO  21:58:00,634 - #45 getp
INFO  21:58:00,634 - #16 (
INFO  21:58:00,634 - #22 -
INFO  21:58:00,634 - #45 x
INFO  21:58:00,634 - #17 )
INFO  21:58:00,634 - #21 +
INFO  21:58:00,634 - #44 1
INFO  21:58:00,634 - #17 )
INFO  21:58:00,634 - #18 ;
INFO  21:58:00,634 - #13 }
INFO  21:58:00,634 - #37 read
INFO  21:58:00,634 - #16 (
INFO  21:58:00,634 - #45 x
INFO  21:58:00,634 - #17 )
INFO  21:58:00,634 - #18 ;
INFO  21:58:00,634 - #13 }
INFO  21:58:00,634 - #45 f2
INFO  21:58:00,634 - #16 (
INFO  21:58:00,634 - #17 )
INFO  21:58:00,634 - #18 ;
INFO  21:58:00,634 - #38 return
INFO  21:58:00,634 - #18 ;
INFO  21:58:00,635 - #13 }
INFO  21:58:00,635 - #13 }
INFO  21:58:00,644 - Program(
  ProgName(
   MojProgram
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                Declarations(
                  Declarations(
                    NoDecl(
                    ) [NoDecl]
                    ConstDeclaration(
                      ConstDeclNode(
                        ConstDeclType(
                          TypeNode(
                           int
                          ) [TypeNode]
                        ) [ConstDeclType]
                        Constants(
                          Constants(
                            SingleConstant(
                              IdentEqualConstantNode(
                               size
                                NumberNode(
                                 10
                                ) [NumberNode]
                              ) [IdentEqualConstantNode]
                            ) [SingleConstant]
                            IdentEqualConstantNode(
                             const1
                              NumberNode(
                               1
                              ) [NumberNode]
                            ) [IdentEqualConstantNode]
                          ) [Constants]
                          IdentEqualConstantNode(
                           const2
                            NumberNode(
                             2
                            ) [NumberNode]
                          ) [IdentEqualConstantNode]
                        ) [Constants]
                      ) [ConstDeclNode]
                    ) [ConstDeclaration]
                  ) [Declarations]
                  ConstDeclaration(
                    ConstDeclNode(
                      ConstDeclType(
                        TypeNode(
                         bool
                        ) [TypeNode]
                      ) [ConstDeclType]
                      Constants(
                        SingleConstant(
                          IdentEqualConstantNode(
                           b1
                            BooleanNode(
                             1
                            ) [BooleanNode]
                          ) [IdentEqualConstantNode]
                        ) [SingleConstant]
                        IdentEqualConstantNode(
                         b2
                          BooleanNode(
                           0
                          ) [BooleanNode]
                        ) [IdentEqualConstantNode]
                      ) [Constants]
                    ) [ConstDeclNode]
                  ) [ConstDeclaration]
                ) [Declarations]
                ConstDeclaration(
                  ConstDeclNode(
                    ConstDeclType(
                      TypeNode(
                       char
                      ) [TypeNode]
                    ) [ConstDeclType]
                    SingleConstant(
                      IdentEqualConstantNode(
                       x
                        CharNode(
                         a
                        ) [CharNode]
                      ) [IdentEqualConstantNode]
                    ) [SingleConstant]
                  ) [ConstDeclNode]
                ) [ConstDeclaration]
              ) [Declarations]
              ConstDeclaration(
                ConstDeclNode(
                  ConstDeclType(
                    TypeNode(
                     bool
                    ) [TypeNode]
                  ) [ConstDeclType]
                  SingleConstant(
                    IdentEqualConstantNode(
                     bb
                      BooleanNode(
                       1
                      ) [BooleanNode]
                    ) [IdentEqualConstantNode]
                  ) [SingleConstant]
                ) [ConstDeclNode]
              ) [ConstDeclaration]
            ) [Declarations]
            VarDeclaration(
              VarDeclNode(
                VarDeclType(
                  TypeNode(
                   int
                  ) [TypeNode]
                ) [VarDeclType]
                Variables(
                  SingleVariable(
                    VariableBracket(
                     niz
                    ) [VariableBracket]
                  ) [SingleVariable]
                  VariableNoBracket(
                   d
                  ) [VariableNoBracket]
                ) [Variables]
              ) [VarDeclNode]
            ) [VarDeclaration]
          ) [Declarations]
          EnumDeclaration(
            EnumDeclarationNode(
              EnumIdent(
               Num
              ) [EnumIdent]
              Enumerations(
                Enumerations(
                  Enumerations(
                    SingleEnumeration(
                      EnumerationVal(
                       ZERO
                       0
                      ) [EnumerationVal]
                    ) [SingleEnumeration]
                    EnumerationNoVal(
                     ONE
                    ) [EnumerationNoVal]
                  ) [Enumerations]
                  EnumerationVal(
                   TEN
                   10
                  ) [EnumerationVal]
                ) [Enumerations]
                EnumerationVal(
                 ELEVEN
                 11
                ) [EnumerationVal]
              ) [Enumerations]
            ) [EnumDeclarationNode]
          ) [EnumDeclaration]
        ) [Declarations]
        VarDeclaration(
          VarDeclNode(
            VarDeclType(
              TypeNode(
               int
              ) [TypeNode]
            ) [VarDeclType]
            Variables(
              Variables(
                SingleVariable(
                  VariableNoBracket(
                   a
                  ) [VariableNoBracket]
                ) [SingleVariable]
                VariableNoBracket(
                 b
                ) [VariableNoBracket]
              ) [Variables]
              VariableNoBracket(
               c
              ) [VariableNoBracket]
            ) [Variables]
          ) [VarDeclNode]
        ) [VarDeclaration]
      ) [Declarations]
      VarDeclaration(
        VarDeclNode(
          VarDeclType(
            TypeNode(
             bool
            ) [TypeNode]
          ) [VarDeclType]
          SingleVariable(
            VariableNoBracket(
             bo
            ) [VariableNoBracket]
          ) [SingleVariable]
        ) [VarDeclNode]
      ) [VarDeclaration]
    ) [Declarations]
    VarDeclaration(
      VarDeclNode(
        VarDeclType(
          TypeNode(
           int
          ) [TypeNode]
        ) [VarDeclType]
        Variables(
          SingleVariable(
            VariableNoBracket(
             xx
            ) [VariableNoBracket]
          ) [SingleVariable]
          VariableBracket(
           aa
          ) [VariableBracket]
        ) [Variables]
      ) [VarDeclNode]
    ) [VarDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          MethodDeclarations(
            NoMethodDecl(
            ) [NoMethodDecl]
            MethodDecl(
              MethodTypeName(
                VoidType(
                ) [VoidType]
               f1
              ) [MethodTypeName]
              FormalParams(
                FormalParamDecls(
                  FormalParamDecls(
                    SingleFormalParamDecl(
                      FormalParamDeclarationNoBrackets(
                        TypeNode(
                         char
                        ) [TypeNode]
                       ch
                      ) [FormalParamDeclarationNoBrackets]
                    ) [SingleFormalParamDecl]
                    FormalParamDeclarationNoBrackets(
                      TypeNode(
                       int
                      ) [TypeNode]
                     a
                    ) [FormalParamDeclarationNoBrackets]
                  ) [FormalParamDecls]
                  FormalParamDeclarationNoBrackets(
                    TypeNode(
                     int
                    ) [TypeNode]
                   arg
                  ) [FormalParamDeclarationNoBrackets]
                ) [FormalParamDecls]
              ) [FormalParams]
              VarDeclarationList(
                VarDeclarationList(
                  VarDeclarationList(
                    NoVarDeclaration(
                    ) [NoVarDeclaration]
                    VarDeclNode(
                      VarDeclType(
                        TypeNode(
                         int
                        ) [TypeNode]
                      ) [VarDeclType]
                      SingleVariable(
                        VariableNoBracket(
                         x
                        ) [VariableNoBracket]
                      ) [SingleVariable]
                    ) [VarDeclNode]
                  ) [VarDeclarationList]
                  VarDeclNode(
                    VarDeclType(
                      TypeNode(
                       bool
                      ) [TypeNode]
                    ) [VarDeclType]
                    SingleVariable(
                      VariableNoBracket(
                       c
                      ) [VariableNoBracket]
                    ) [SingleVariable]
                  ) [VarDeclNode]
                ) [VarDeclarationList]
                VarDeclNode(
                  VarDeclType(
                    TypeNode(
                     Num
                    ) [TypeNode]
                  ) [VarDeclType]
                  Variables(
                    SingleVariable(
                      VariableNoBracket(
                       broj
                      ) [VariableNoBracket]
                    ) [SingleVariable]
                    VariableNoBracket(
                     broj2
                    ) [VariableNoBracket]
                  ) [Variables]
                ) [VarDeclNode]
              ) [VarDeclarationList]
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            NoStatement(
                            ) [NoStatement]
                            DesignatorStatementOnly(
                              DesignatorStatementAssignop(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   x
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                                Assignop(
                                ) [Assignop]
                                SingleExpression(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        Idents(
                                          SingleIdentExpr(
                                           Num
                                          ) [SingleIdentExpr]
                                         ZERO
                                        ) [Idents]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [DesignatorStatementAssignop]
                            ) [DesignatorStatementOnly]
                          ) [Statements]
                          DesignatorStatementOnly(
                            DesignatorStatementAssignop(
                              DesignatorNode(
                                SingleIdentExpr(
                                 broj
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                              Assignop(
                              ) [Assignop]
                              SingleExpression(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      Idents(
                                        SingleIdentExpr(
                                         Num
                                        ) [SingleIdentExpr]
                                       ZERO
                                      ) [Idents]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [DesignatorStatementAssignop]
                          ) [DesignatorStatementOnly]
                        ) [Statements]
                        DesignatorStatementOnly(
                          DesignatorStatementAssignop(
                            DesignatorNode(
                              SingleIdentExpr(
                               broj2
                              ) [SingleIdentExpr]
                            ) [DesignatorNode]
                            Assignop(
                            ) [Assignop]
                            SingleExpression(
                              TermFactor(
                                ConstantNumber(
                                 10
                                ) [ConstantNumber]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [DesignatorStatementAssignop]
                        ) [DesignatorStatementOnly]
                      ) [Statements]
                      DesignatorStatementOnly(
                        DesignatorStatementAssignop(
                          DesignatorNode(
                            SingleIdentExpr(
                             x
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                          Assignop(
                          ) [Assignop]
                          ExpressionNode(
                            SingleExpression(
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     a
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                            AddopPlus(
                            ) [AddopPlus]
                            TermFactor(
                              ConstantNumber(
                               1
                              ) [ConstantNumber]
                            ) [TermFactor]
                          ) [ExpressionNode]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementOnly]
                    ) [Statements]
                    DesignatorStatementOnly(
                      DesignatorStatementAssignop(
                        DesignatorNode(
                          SingleIdentExpr(
                           c
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                        Assignop(
                        ) [Assignop]
                        SingleExpression(
                          TermFactor(
                            ConstantBoolean(
                             0
                            ) [ConstantBoolean]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementOnly]
                  ) [Statements]
                  DesignatorStatementOnly(
                    DesignatorStatementAssignop(
                      DesignatorNode(
                        SingleIdentExpr(
                         bo
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                      Assignop(
                      ) [Assignop]
                      SingleExpression(
                        TermFactor(
                          ConstantBoolean(
                           1
                          ) [ConstantBoolean]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementOnly]
                ) [Statements]
                DesignatorStatementOnly(
                  DesignatorStatementAssignop(
                    DesignatorNode(
                      SingleIdentExpr(
                       ch
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                    Assignop(
                    ) [Assignop]
                    SingleExpression(
                      TermFactor(
                        ConstantCharacter(
                         1
                        ) [ConstantCharacter]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementOnly]
              ) [Statements]
            ) [MethodDecl]
          ) [MethodDeclarations]
          MethodDecl(
            MethodTypeName(
              NoVoidType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [NoVoidType]
             f2
            ) [MethodTypeName]
            FormalParams(
              FormalParamDecls(
                FormalParamDecls(
                  SingleFormalParamDecl(
                    FormalParamDeclarationNoBrackets(
                      TypeNode(
                       char
                      ) [TypeNode]
                     ch
                    ) [FormalParamDeclarationNoBrackets]
                  ) [SingleFormalParamDecl]
                  FormalParamDeclarationNoBrackets(
                    TypeNode(
                     int
                    ) [TypeNode]
                   a
                  ) [FormalParamDeclarationNoBrackets]
                ) [FormalParamDecls]
                FormalParamDeclarationNoBrackets(
                  TypeNode(
                   int
                  ) [TypeNode]
                 arg
                ) [FormalParamDeclarationNoBrackets]
              ) [FormalParamDecls]
            ) [FormalParams]
            VarDeclarationList(
              VarDeclarationList(
                VarDeclarationList(
                  NoVarDeclaration(
                  ) [NoVarDeclaration]
                  VarDeclNode(
                    VarDeclType(
                      TypeNode(
                       int
                      ) [TypeNode]
                    ) [VarDeclType]
                    SingleVariable(
                      VariableNoBracket(
                       ff
                      ) [VariableNoBracket]
                    ) [SingleVariable]
                  ) [VarDeclNode]
                ) [VarDeclarationList]
                VarDeclNode(
                  VarDeclType(
                    TypeNode(
                     int
                    ) [TypeNode]
                  ) [VarDeclType]
                  SingleVariable(
                    VariableNoBracket(
                     i
                    ) [VariableNoBracket]
                  ) [SingleVariable]
                ) [VarDeclNode]
              ) [VarDeclarationList]
              VarDeclNode(
                VarDeclType(
                  TypeNode(
                   Num
                  ) [TypeNode]
                ) [VarDeclType]
                SingleVariable(
                  VariableNoBracket(
                   broj
                  ) [VariableNoBracket]
                ) [SingleVariable]
              ) [VarDeclNode]
            ) [VarDeclarationList]
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            NoStatement(
                            ) [NoStatement]
                            DesignatorStatementOnly(
                              DesignatorStatementActPars(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   f1
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                                ActParsNode(
                                  ActualParametres(
                                    ActualParametres(
                                      SingleActualParam(
                                        SingleExpression(
                                          TermFactor(
                                            DesignatorEmpty(
                                              DesignatorNode(
                                                SingleIdentExpr(
                                                 bo
                                                ) [SingleIdentExpr]
                                              ) [DesignatorNode]
                                            ) [DesignatorEmpty]
                                          ) [TermFactor]
                                        ) [SingleExpression]
                                      ) [SingleActualParam]
                                      SingleExpression(
                                        TermFactor(
                                          DesignatorEmpty(
                                            DesignatorNode(
                                              SingleIdentExpr(
                                               b
                                              ) [SingleIdentExpr]
                                            ) [DesignatorNode]
                                          ) [DesignatorEmpty]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                    ) [ActualParametres]
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             c
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [ActualParametres]
                                ) [ActParsNode]
                              ) [DesignatorStatementActPars]
                            ) [DesignatorStatementOnly]
                          ) [Statements]
                          DesignatorStatementOnly(
                            DesignatorStatementAssignop(
                              DesignatorNode(
                                SingleIdentExpr(
                                 niz
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                              Assignop(
                              ) [Assignop]
                              SingleExpression(
                                TermFactor(
                                  NewArray(
                                    TypeNode(
                                     int
                                    ) [TypeNode]
                                    SingleExpression(
                                      TermFactor(
                                        ConstantNumber(
                                         20
                                        ) [ConstantNumber]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [NewArray]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [DesignatorStatementAssignop]
                          ) [DesignatorStatementOnly]
                        ) [Statements]
                        DesignatorStatementOnly(
                          DesignatorStatementAssignop(
                            DesignatorNode(
                              SingleIdentExpr(
                               ff
                              ) [SingleIdentExpr]
                            ) [DesignatorNode]
                            Assignop(
                            ) [Assignop]
                            SingleExpression(
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                    Exprs(
                                      SingleIdentExpr(
                                       niz
                                      ) [SingleIdentExpr]
                                      SingleExpression(
                                        TermFactor(
                                          ConstantNumber(
                                           1
                                          ) [ConstantNumber]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                    ) [Exprs]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [DesignatorStatementAssignop]
                        ) [DesignatorStatementOnly]
                      ) [Statements]
                      DesignatorStatementOnly(
                        DesignatorStatementAssignop(
                          DesignatorNode(
                            Exprs(
                              SingleIdentExpr(
                               niz
                              ) [SingleIdentExpr]
                              ExpressionNode(
                                SingleExpressionMinus(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        Exprs(
                                          SingleIdentExpr(
                                           niz
                                          ) [SingleIdentExpr]
                                          SingleExpression(
                                            TermFactor(
                                              DesignatorEmpty(
                                                DesignatorNode(
                                                  Exprs(
                                                    SingleIdentExpr(
                                                     niz
                                                    ) [SingleIdentExpr]
                                                    SingleExpression(
                                                      TermFactor(
                                                        DesignatorEmpty(
                                                          DesignatorNode(
                                                            SingleIdentExpr(
                                                             broj
                                                            ) [SingleIdentExpr]
                                                          ) [DesignatorNode]
                                                        ) [DesignatorEmpty]
                                                      ) [TermFactor]
                                                    ) [SingleExpression]
                                                  ) [Exprs]
                                                ) [DesignatorNode]
                                              ) [DesignatorEmpty]
                                            ) [TermFactor]
                                          ) [SingleExpression]
                                        ) [Exprs]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpressionMinus]
                                AddopPlus(
                                ) [AddopPlus]
                                TermNode(
                                  TermFactor(
                                    ConstantNumber(
                                     5
                                    ) [ConstantNumber]
                                  ) [TermFactor]
                                  AddopMul(
                                  ) [AddopMul]
                                  ConstantNumber(
                                   9
                                  ) [ConstantNumber]
                                ) [TermNode]
                              ) [ExpressionNode]
                            ) [Exprs]
                          ) [DesignatorNode]
                          Assignop(
                          ) [Assignop]
                          ExpressionNode(
                            SingleExpression(
                              TermNode(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      Idents(
                                        SingleIdentExpr(
                                         Num
                                        ) [SingleIdentExpr]
                                       ZERO
                                      ) [Idents]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                                AddopMul(
                                ) [AddopMul]
                                ConstantNumber(
                                 2
                                ) [ConstantNumber]
                              ) [TermNode]
                            ) [SingleExpression]
                            AddopMinus(
                            ) [AddopMinus]
                            TermFactor(
                              DesignatorEmpty(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   broj
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                              ) [DesignatorEmpty]
                            ) [TermFactor]
                          ) [ExpressionNode]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementOnly]
                    ) [Statements]
                    DesignatorStatementOnly(
                      DesignatorStatementAssignop(
                        DesignatorNode(
                          SingleIdentExpr(
                           ff
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                        Assignop(
                        ) [Assignop]
                        SingleExpression(
                          TermFactor(
                            ConstantNumber(
                             0
                            ) [ConstantNumber]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementOnly]
                  ) [Statements]
                  DesignatorStatementOnly(
                    DesignatorStatementAssignop(
                      DesignatorNode(
                        SingleIdentExpr(
                         i
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                      Assignop(
                      ) [Assignop]
                      SingleExpression(
                        TermFactor(
                          ConstantNumber(
                           10
                          ) [ConstantNumber]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementOnly]
                ) [Statements]
                ForStatement(
                  ForHeader(
                    DesignatorStatementNotNull(
                      DesignatorStatementAssignop(
                        DesignatorNode(
                          SingleIdentExpr(
                           i
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                        Assignop(
                        ) [Assignop]
                        SingleExpression(
                          TermFactor(
                            ConstantNumber(
                             0
                            ) [ConstantNumber]
                          ) [TermFactor]
                        ) [SingleExpression]
                      ) [DesignatorStatementAssignop]
                    ) [DesignatorStatementNotNull]
                    ConditionNotNull(
                      ConditionNode(
                        SingleConditionTerm(
                          ConditionTermNode(
                            SingleConditionFact(
                              CondFactExpressionRelopExpression(
                                SingleExpression(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        SingleIdentExpr(
                                         niz
                                        ) [SingleIdentExpr]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                                RelopNotEqual(
                                ) [RelopNotEqual]
                                SingleExpression(
                                  TermFactor(
                                    DesignatorEmpty(
                                      DesignatorNode(
                                        SingleIdentExpr(
                                         niz
                                        ) [SingleIdentExpr]
                                      ) [DesignatorNode]
                                    ) [DesignatorEmpty]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [CondFactExpressionRelopExpression]
                            ) [SingleConditionFact]
                          ) [ConditionTermNode]
                        ) [SingleConditionTerm]
                      ) [ConditionNode]
                    ) [ConditionNotNull]
                    DesignatorStatementNotNull(
                      DesignatorStatementPlusPlus(
                        DesignatorNode(
                          SingleIdentExpr(
                           i
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                      ) [DesignatorStatementPlusPlus]
                    ) [DesignatorStatementNotNull]
                  ) [ForHeader]
                  InBraceStatement(
                    Statements(
                      NoStatement(
                      ) [NoStatement]
                      BreakStatement(
                        SemiDerived1(
                        ) [SemiDerived1]
                      ) [BreakStatement]
                    ) [Statements]
                  ) [InBraceStatement]
                ) [ForStatement]
              ) [Statements]
              ReturnStatementExpr(
                SingleExpression(
                  TermFactor(
                    DesignatorEmpty(
                      DesignatorNode(
                        SingleIdentExpr(
                         ff
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                    ) [DesignatorEmpty]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [ReturnStatementExpr]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          MethodTypeName(
            NoVoidType(
              TypeNode(
               int
              ) [TypeNode]
            ) [NoVoidType]
           putp
          ) [MethodTypeName]
          FormalParams(
            SingleFormalParamDecl(
              FormalParamDeclarationNoBrackets(
                TypeNode(
                 char
                ) [TypeNode]
               ch
              ) [FormalParamDeclarationNoBrackets]
            ) [SingleFormalParamDecl]
          ) [FormalParams]
          VarDeclarationList(
            NoVarDeclaration(
            ) [NoVarDeclaration]
            VarDeclNode(
              VarDeclType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [VarDeclType]
              SingleVariable(
                VariableNoBracket(
                 x
                ) [VariableNoBracket]
              ) [SingleVariable]
            ) [VarDeclNode]
          ) [VarDeclarationList]
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStatement(
                  ) [NoStatement]
                  DesignatorStatementOnly(
                    DesignatorStatementAssignop(
                      DesignatorNode(
                        SingleIdentExpr(
                         x
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                      Assignop(
                      ) [Assignop]
                      SingleExpression(
                        TermFactor(
                          ConstantNumber(
                           5
                          ) [ConstantNumber]
                        ) [TermFactor]
                      ) [SingleExpression]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementOnly]
                ) [Statements]
                DesignatorStatementOnly(
                  DesignatorStatementAssignop(
                    DesignatorNode(
                      SingleIdentExpr(
                       bo
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                    Assignop(
                    ) [Assignop]
                    SingleExpression(
                      TermFactor(
                        ConstantBoolean(
                         0
                        ) [ConstantBoolean]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementOnly]
              ) [Statements]
              DesignatorStatementOnly(
                DesignatorStatementAssignop(
                  DesignatorNode(
                    SingleIdentExpr(
                     x
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    TermFactor(
                      DesignatorBraceActPars(
                        DesignatorNode(
                          SingleIdentExpr(
                           f2
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                        ActParsNode(
                          ActualParametres(
                            ActualParametres(
                              SingleActualParam(
                                SingleExpression(
                                  TermFactor(
                                    ConstantNumber(
                                     1
                                    ) [ConstantNumber]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [SingleActualParam]
                              SingleExpression(
                                TermFactor(
                                  ConstantNumber(
                                   2
                                  ) [ConstantNumber]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [ActualParametres]
                            SingleExpression(
                              TermFactor(
                                ConstantNumber(
                                 3
                                ) [ConstantNumber]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [ActualParametres]
                        ) [ActParsNode]
                      ) [DesignatorBraceActPars]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementOnly]
            ) [Statements]
            ReturnStatementExpr(
              SingleExpression(
                TermFactor(
                  DesignatorEmpty(
                    DesignatorNode(
                      SingleIdentExpr(
                       x
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                  ) [DesignatorEmpty]
                ) [TermFactor]
              ) [SingleExpression]
            ) [ReturnStatementExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          NoVoidType(
            TypeNode(
             int
            ) [TypeNode]
          ) [NoVoidType]
         getp
        ) [MethodTypeName]
        FormalParams(
          SingleFormalParamDecl(
            FormalParamDeclarationNoBrackets(
              TypeNode(
               char
              ) [TypeNode]
             ch
            ) [FormalParamDeclarationNoBrackets]
          ) [SingleFormalParamDecl]
        ) [FormalParams]
        VarDeclarationList(
          NoVarDeclaration(
          ) [NoVarDeclaration]
          VarDeclNode(
            VarDeclType(
              TypeNode(
               int
              ) [TypeNode]
            ) [VarDeclType]
            SingleVariable(
              VariableNoBracket(
               x
              ) [VariableNoBracket]
            ) [SingleVariable]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStatement(
                  ) [NoStatement]
                  DesignatorStatementOnly(
                    DesignatorStatementAssignop(
                      DesignatorNode(
                        SingleIdentExpr(
                         x
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                      Assignop(
                      ) [Assignop]
                      ExpressionNode(
                        SingleExpressionMinus(
                          TermNode(
                            TermFactor(
                              ConstantNumber(
                               2
                              ) [ConstantNumber]
                            ) [TermFactor]
                            AddopMul(
                            ) [AddopMul]
                            DesignatorEmpty(
                              DesignatorNode(
                                SingleIdentExpr(
                                 a
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                            ) [DesignatorEmpty]
                          ) [TermNode]
                        ) [SingleExpressionMinus]
                        AddopPlus(
                        ) [AddopPlus]
                        TermNode(
                          TermFactor(
                            ConstantNumber(
                             5
                            ) [ConstantNumber]
                          ) [TermFactor]
                          AddopMul(
                          ) [AddopMul]
                          ExprParenNode(
                            SingleExpression(
                              TermNode(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      SingleIdentExpr(
                                       x
                                      ) [SingleIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                                AddopDiv(
                                ) [AddopDiv]
                                ConstantNumber(
                                 2
                                ) [ConstantNumber]
                              ) [TermNode]
                            ) [SingleExpression]
                          ) [ExprParenNode]
                        ) [TermNode]
                      ) [ExpressionNode]
                    ) [DesignatorStatementAssignop]
                  ) [DesignatorStatementOnly]
                ) [Statements]
                DesignatorStatementOnly(
                  DesignatorStatementAssignop(
                    DesignatorNode(
                      SingleIdentExpr(
                       a
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                    Assignop(
                    ) [Assignop]
                    SingleExpression(
                      TermFactor(
                        ConstantNumber(
                         1
                        ) [ConstantNumber]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementOnly]
              ) [Statements]
              DesignatorStatementOnly(
                DesignatorStatementAssignop(
                  DesignatorNode(
                    SingleIdentExpr(
                     b
                    ) [SingleIdentExpr]
                  ) [DesignatorNode]
                  Assignop(
                  ) [Assignop]
                  SingleExpression(
                    TermNode(
                      TermFactor(
                        ConstantNumber(
                         1
                        ) [ConstantNumber]
                      ) [TermFactor]
                      AddopMul(
                      ) [AddopMul]
                      DesignatorEmpty(
                        DesignatorNode(
                          SingleIdentExpr(
                           a
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                      ) [DesignatorEmpty]
                    ) [TermNode]
                  ) [SingleExpression]
                ) [DesignatorStatementAssignop]
              ) [DesignatorStatementOnly]
            ) [Statements]
            DesignatorStatementOnly(
              DesignatorStatementAssignop(
                DesignatorNode(
                  SingleIdentExpr(
                   c
                  ) [SingleIdentExpr]
                ) [DesignatorNode]
                Assignop(
                ) [Assignop]
                SingleExpression(
                  TermFactor(
                    ConstantNumber(
                     2
                    ) [ConstantNumber]
                  ) [TermFactor]
                ) [SingleExpression]
              ) [DesignatorStatementAssignop]
            ) [DesignatorStatementOnly]
          ) [Statements]
          ReturnStatementExpr(
            ExpressionNode(
              SingleExpression(
                TermFactor(
                  DesignatorEmpty(
                    DesignatorNode(
                      SingleIdentExpr(
                       x
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                  ) [DesignatorEmpty]
                ) [TermFactor]
              ) [SingleExpression]
              AddopPlus(
              ) [AddopPlus]
              TermFactor(
                ConstantNumber(
                 10
                ) [ConstantNumber]
              ) [TermFactor]
            ) [ExpressionNode]
          ) [ReturnStatementExpr]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormalParam(
      ) [NoFormalParam]
      VarDeclarationList(
        VarDeclarationList(
          VarDeclarationList(
            NoVarDeclaration(
            ) [NoVarDeclaration]
            VarDeclNode(
              VarDeclType(
                TypeNode(
                 int
                ) [TypeNode]
              ) [VarDeclType]
              Variables(
                SingleVariable(
                  VariableNoBracket(
                   x
                  ) [VariableNoBracket]
                ) [SingleVariable]
                VariableNoBracket(
                 i
                ) [VariableNoBracket]
              ) [Variables]
            ) [VarDeclNode]
          ) [VarDeclarationList]
          VarDeclNode(
            VarDeclType(
              TypeNode(
               char
              ) [TypeNode]
            ) [VarDeclType]
            SingleVariable(
              VariableNoBracket(
               c
              ) [VariableNoBracket]
            ) [SingleVariable]
          ) [VarDeclNode]
        ) [VarDeclarationList]
        VarDeclNode(
          VarDeclType(
            TypeNode(
             int
            ) [TypeNode]
          ) [VarDeclType]
          SingleVariable(
            VariableNoBracket(
             val
            ) [VariableNoBracket]
          ) [SingleVariable]
        ) [VarDeclNode]
      ) [VarDeclarationList]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        NoStatement(
                        ) [NoStatement]
                        DesignatorStatementOnly(
                          DesignatorStatementAssignop(
                            DesignatorNode(
                              SingleIdentExpr(
                               niz
                              ) [SingleIdentExpr]
                            ) [DesignatorNode]
                            Assignop(
                            ) [Assignop]
                            SingleExpression(
                              TermFactor(
                                NewArray(
                                  TypeNode(
                                   int
                                  ) [TypeNode]
                                  SingleExpression(
                                    TermFactor(
                                      DesignatorEmpty(
                                        DesignatorNode(
                                          SingleIdentExpr(
                                           x
                                          ) [SingleIdentExpr]
                                        ) [DesignatorNode]
                                      ) [DesignatorEmpty]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [NewArray]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [DesignatorStatementAssignop]
                        ) [DesignatorStatementOnly]
                      ) [Statements]
                      DesignatorStatementOnly(
                        DesignatorStatementAssignop(
                          DesignatorNode(
                            SingleIdentExpr(
                             val
                            ) [SingleIdentExpr]
                          ) [DesignatorNode]
                          Assignop(
                          ) [Assignop]
                          SingleExpression(
                            TermFactor(
                              ConstantNumber(
                               5
                              ) [ConstantNumber]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [DesignatorStatementAssignop]
                      ) [DesignatorStatementOnly]
                    ) [Statements]
                    ForStatement(
                      ForHeader(
                        DesignatorStatementNotNull(
                          DesignatorStatementAssignop(
                            DesignatorNode(
                              SingleIdentExpr(
                               i
                              ) [SingleIdentExpr]
                            ) [DesignatorNode]
                            Assignop(
                            ) [Assignop]
                            SingleExpression(
                              TermFactor(
                                ConstantNumber(
                                 0
                                ) [ConstantNumber]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [DesignatorStatementAssignop]
                        ) [DesignatorStatementNotNull]
                        ConditionNotNull(
                          ConditionNode(
                            SingleConditionTerm(
                              ConditionTermNode(
                                SingleConditionFact(
                                  CondFactExpressionRelopExpression(
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             i
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                    RelopLess(
                                    ) [RelopLess]
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             size
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [CondFactExpressionRelopExpression]
                                ) [SingleConditionFact]
                              ) [ConditionTermNode]
                            ) [SingleConditionTerm]
                          ) [ConditionNode]
                        ) [ConditionNotNull]
                        DesignatorStatementNotNull(
                          DesignatorStatementPlusPlus(
                            DesignatorNode(
                              SingleIdentExpr(
                               i
                              ) [SingleIdentExpr]
                            ) [DesignatorNode]
                          ) [DesignatorStatementPlusPlus]
                        ) [DesignatorStatementNotNull]
                      ) [ForHeader]
                      InBraceStatement(
                        Statements(
                          Statements(
                            NoStatement(
                            ) [NoStatement]
                            DesignatorStatementOnly(
                              DesignatorStatementAssignop(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   x
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                                Assignop(
                                ) [Assignop]
                                SingleExpression(
                                  TermFactor(
                                    DesignatorBraceActPars(
                                      DesignatorNode(
                                        SingleIdentExpr(
                                         putp
                                        ) [SingleIdentExpr]
                                      ) [DesignatorNode]
                                      ActParsNode(
                                        ActualParametres(
                                          SingleActualParam(
                                            SingleExpression(
                                              TermFactor(
                                                ConstantNumber(
                                                 0
                                                ) [ConstantNumber]
                                              ) [TermFactor]
                                            ) [SingleExpression]
                                          ) [SingleActualParam]
                                          SingleExpression(
                                            TermFactor(
                                              DesignatorEmpty(
                                                DesignatorNode(
                                                  SingleIdentExpr(
                                                   i
                                                  ) [SingleIdentExpr]
                                                ) [DesignatorNode]
                                              ) [DesignatorEmpty]
                                            ) [TermFactor]
                                          ) [SingleExpression]
                                        ) [ActualParametres]
                                      ) [ActParsNode]
                                    ) [DesignatorBraceActPars]
                                  ) [TermFactor]
                                ) [SingleExpression]
                              ) [DesignatorStatementAssignop]
                            ) [DesignatorStatementOnly]
                          ) [Statements]
                          DesignatorStatementOnly(
                            DesignatorStatementActPars(
                              DesignatorNode(
                                SingleIdentExpr(
                                 putp
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                              ActParsNode(
                                ActualParametres(
                                  SingleActualParam(
                                    SingleExpression(
                                      TermFactor(
                                        ConstantNumber(
                                         0
                                        ) [ConstantNumber]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [SingleActualParam]
                                  SingleExpression(
                                    TermFactor(
                                      DesignatorEmpty(
                                        DesignatorNode(
                                          SingleIdentExpr(
                                           i
                                          ) [SingleIdentExpr]
                                        ) [DesignatorNode]
                                      ) [DesignatorEmpty]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [ActualParametres]
                              ) [ActParsNode]
                            ) [DesignatorStatementActPars]
                          ) [DesignatorStatementOnly]
                        ) [Statements]
                      ) [InBraceStatement]
                    ) [ForStatement]
                  ) [Statements]
                  DesignatorStatementOnly(
                    DesignatorStatementActPars(
                      DesignatorNode(
                        SingleIdentExpr(
                         f1
                        ) [SingleIdentExpr]
                      ) [DesignatorNode]
                      ActParsNode(
                        ActualParametres(
                          ActualParametres(
                            SingleActualParam(
                              SingleExpression(
                                TermFactor(
                                  DesignatorEmpty(
                                    DesignatorNode(
                                      SingleIdentExpr(
                                       c
                                      ) [SingleIdentExpr]
                                    ) [DesignatorNode]
                                  ) [DesignatorEmpty]
                                ) [TermFactor]
                              ) [SingleExpression]
                            ) [SingleActualParam]
                            SingleExpression(
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     x
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [ActualParametres]
                          SingleExpression(
                            TermFactor(
                              DesignatorEmpty(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   i
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                              ) [DesignatorEmpty]
                            ) [TermFactor]
                          ) [SingleExpression]
                        ) [ActualParametres]
                      ) [ActParsNode]
                    ) [DesignatorStatementActPars]
                  ) [DesignatorStatementOnly]
                ) [Statements]
                PrintStatement(
                  SingleExpression(
                    TermFactor(
                      DesignatorEmpty(
                        DesignatorNode(
                          SingleIdentExpr(
                           d
                          ) [SingleIdentExpr]
                        ) [DesignatorNode]
                      ) [DesignatorEmpty]
                    ) [TermFactor]
                  ) [SingleExpression]
                ) [PrintStatement]
              ) [Statements]
              ReadStatement(
                DesignatorNode(
                  SingleIdentExpr(
                   x
                  ) [SingleIdentExpr]
                ) [DesignatorNode]
              ) [ReadStatement]
            ) [Statements]
            ForStatement(
              ForHeader(
                DesignatorStatementNotNull(
                  DesignatorStatementAssignop(
                    DesignatorNode(
                      SingleIdentExpr(
                       i
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                    Assignop(
                    ) [Assignop]
                    SingleExpression(
                      TermFactor(
                        ConstantNumber(
                         1
                        ) [ConstantNumber]
                      ) [TermFactor]
                    ) [SingleExpression]
                  ) [DesignatorStatementAssignop]
                ) [DesignatorStatementNotNull]
                ConditionNotNull(
                  ConditionNode(
                    SingleConditionTerm(
                      ConditionTermNode(
                        SingleConditionFact(
                          CondFactExpressionRelopExpression(
                            SingleExpression(
                              TermFactor(
                                DesignatorEmpty(
                                  DesignatorNode(
                                    SingleIdentExpr(
                                     x
                                    ) [SingleIdentExpr]
                                  ) [DesignatorNode]
                                ) [DesignatorEmpty]
                              ) [TermFactor]
                            ) [SingleExpression]
                            RelopGreater(
                            ) [RelopGreater]
                            SingleExpression(
                              TermFactor(
                                ConstantNumber(
                                 1
                                ) [ConstantNumber]
                              ) [TermFactor]
                            ) [SingleExpression]
                          ) [CondFactExpressionRelopExpression]
                        ) [SingleConditionFact]
                      ) [ConditionTermNode]
                    ) [SingleConditionTerm]
                  ) [ConditionNode]
                ) [ConditionNotNull]
                DesignatorStatementNull(
                ) [DesignatorStatementNull]
              ) [ForHeader]
              InBraceStatement(
                Statements(
                  Statements(
                    NoStatement(
                    ) [NoStatement]
                    IfElseStatement(
                      IfConditionNode(
                        ConditionNode(
                          SingleConditionTerm(
                            ConditionTermNode(
                              ConditionFacts(
                                SingleConditionFact(
                                  CondFactExpressionRelopExpression(
                                    SingleExpression(
                                      TermFactor(
                                        ConstantNumber(
                                         0
                                        ) [ConstantNumber]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                    RelopLessEqual(
                                    ) [RelopLessEqual]
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             x
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [CondFactExpressionRelopExpression]
                                ) [SingleConditionFact]
                                CondFactExpressionRelopExpression(
                                  SingleExpression(
                                    TermFactor(
                                      DesignatorEmpty(
                                        DesignatorNode(
                                          SingleIdentExpr(
                                           x
                                          ) [SingleIdentExpr]
                                        ) [DesignatorNode]
                                      ) [DesignatorEmpty]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                  RelopLess(
                                  ) [RelopLess]
                                  SingleExpression(
                                    TermFactor(
                                      DesignatorEmpty(
                                        DesignatorNode(
                                          SingleIdentExpr(
                                           size
                                          ) [SingleIdentExpr]
                                        ) [DesignatorNode]
                                      ) [DesignatorEmpty]
                                    ) [TermFactor]
                                  ) [SingleExpression]
                                ) [CondFactExpressionRelopExpression]
                              ) [ConditionFacts]
                            ) [ConditionTermNode]
                          ) [SingleConditionTerm]
                        ) [ConditionNode]
                      ) [IfConditionNode]
                      InBraceStatement(
                        Statements(
                          NoStatement(
                          ) [NoStatement]
                          DesignatorStatementOnly(
                            DesignatorStatementActPars(
                              DesignatorNode(
                                SingleIdentExpr(
                                 putp
                                ) [SingleIdentExpr]
                              ) [DesignatorNode]
                              ActParsNode(
                                SingleActualParam(
                                  ExpressionNode(
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorBraceActPars(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             getp
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                          ActParsNode(
                                            SingleActualParam(
                                              SingleExpression(
                                                TermFactor(
                                                  DesignatorEmpty(
                                                    DesignatorNode(
                                                      SingleIdentExpr(
                                                       x
                                                      ) [SingleIdentExpr]
                                                    ) [DesignatorNode]
                                                  ) [DesignatorEmpty]
                                                ) [TermFactor]
                                              ) [SingleExpression]
                                            ) [SingleActualParam]
                                          ) [ActParsNode]
                                        ) [DesignatorBraceActPars]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                    AddopPlus(
                                    ) [AddopPlus]
                                    TermFactor(
                                      ConstantNumber(
                                       1
                                      ) [ConstantNumber]
                                    ) [TermFactor]
                                  ) [ExpressionNode]
                                ) [SingleActualParam]
                              ) [ActParsNode]
                            ) [DesignatorStatementActPars]
                          ) [DesignatorStatementOnly]
                        ) [Statements]
                      ) [InBraceStatement]
                      IfStatement(
                        IfConditionNode(
                          ConditionNode(
                            SingleConditionTerm(
                              ConditionTermNode(
                                ConditionFacts(
                                  SingleConditionFact(
                                    CondFactExpressionRelopExpression(
                                      SingleExpressionMinus(
                                        TermFactor(
                                          DesignatorEmpty(
                                            DesignatorNode(
                                              SingleIdentExpr(
                                               size
                                              ) [SingleIdentExpr]
                                            ) [DesignatorNode]
                                          ) [DesignatorEmpty]
                                        ) [TermFactor]
                                      ) [SingleExpressionMinus]
                                      RelopLess(
                                      ) [RelopLess]
                                      SingleExpression(
                                        TermFactor(
                                          DesignatorEmpty(
                                            DesignatorNode(
                                              SingleIdentExpr(
                                               x
                                              ) [SingleIdentExpr]
                                            ) [DesignatorNode]
                                          ) [DesignatorEmpty]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                    ) [CondFactExpressionRelopExpression]
                                  ) [SingleConditionFact]
                                  CondFactExpressionRelopExpression(
                                    SingleExpression(
                                      TermFactor(
                                        DesignatorEmpty(
                                          DesignatorNode(
                                            SingleIdentExpr(
                                             x
                                            ) [SingleIdentExpr]
                                          ) [DesignatorNode]
                                        ) [DesignatorEmpty]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                    RelopLess(
                                    ) [RelopLess]
                                    SingleExpression(
                                      TermFactor(
                                        ConstantNumber(
                                         0
                                        ) [ConstantNumber]
                                      ) [TermFactor]
                                    ) [SingleExpression]
                                  ) [CondFactExpressionRelopExpression]
                                ) [ConditionFacts]
                              ) [ConditionTermNode]
                            ) [SingleConditionTerm]
                          ) [ConditionNode]
                        ) [IfConditionNode]
                        InBraceStatement(
                          Statements(
                            NoStatement(
                            ) [NoStatement]
                            DesignatorStatementOnly(
                              DesignatorStatementActPars(
                                DesignatorNode(
                                  SingleIdentExpr(
                                   putp
                                  ) [SingleIdentExpr]
                                ) [DesignatorNode]
                                ActParsNode(
                                  SingleActualParam(
                                    ExpressionNode(
                                      SingleExpression(
                                        TermFactor(
                                          DesignatorBraceActPars(
                                            DesignatorNode(
                                              SingleIdentExpr(
                                               getp
                                              ) [SingleIdentExpr]
                                            ) [DesignatorNode]
                                            ActParsNode(
                                              SingleActualParam(
                                                SingleExpressionMinus(
                                                  TermFactor(
                                                    DesignatorEmpty(
                                                      DesignatorNode(
                                                        SingleIdentExpr(
                                                         x
                                                        ) [SingleIdentExpr]
                                                      ) [DesignatorNode]
                                                    ) [DesignatorEmpty]
                                                  ) [TermFactor]
                                                ) [SingleExpressionMinus]
                                              ) [SingleActualParam]
                                            ) [ActParsNode]
                                          ) [DesignatorBraceActPars]
                                        ) [TermFactor]
                                      ) [SingleExpression]
                                      AddopPlus(
                                      ) [AddopPlus]
                                      TermFactor(
                                        ConstantNumber(
                                         1
                                        ) [ConstantNumber]
                                      ) [TermFactor]
                                    ) [ExpressionNode]
                                  ) [SingleActualParam]
                                ) [ActParsNode]
                              ) [DesignatorStatementActPars]
                            ) [DesignatorStatementOnly]
                          ) [Statements]
                        ) [InBraceStatement]
                      ) [IfStatement]
                    ) [IfElseStatement]
                  ) [Statements]
                  ReadStatement(
                    DesignatorNode(
                      SingleIdentExpr(
                       x
                      ) [SingleIdentExpr]
                    ) [DesignatorNode]
                  ) [ReadStatement]
                ) [Statements]
              ) [InBraceStatement]
            ) [ForStatement]
          ) [Statements]
          DesignatorStatementOnly(
            DesignatorStatementActPars(
              DesignatorNode(
                SingleIdentExpr(
                 f2
                ) [SingleIdentExpr]
              ) [DesignatorNode]
              NoActAprsNode(
              ) [NoActAprsNode]
            ) [DesignatorStatementActPars]
          ) [DesignatorStatementOnly]
        ) [Statements]
        ReturnStatementVoid(
        ) [ReturnStatementVoid]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:58:00,646 - ===================================
INFO  21:58:00,648 - Definisana konstanta (10)size na liniji 4
INFO  21:58:00,649 - Definisana konstanta (1)const1 na liniji 4
INFO  21:58:00,649 - Definisana konstanta (2)const2 na liniji 4
INFO  21:58:00,649 - Definisana konstanta (1)b1 na liniji 5
INFO  21:58:00,649 - Definisana konstanta (0)b2 na liniji 5
INFO  21:58:00,649 - Definisana konstanta (97)x na liniji 6
INFO  21:58:00,649 - Definisana konstanta (1)bb na liniji 7
INFO  21:58:00,649 - Deklarisana array promenljiva niz na liniji 9
INFO  21:58:00,649 - Deklarisana single promenljiva d na liniji 9
INFO  21:58:00,649 - Deklarisan novi enum tip: Num na liniji 11
INFO  21:58:00,649 - Definisana enum konstanta ZERO sa vrednoscu 0 na liniji 11
INFO  21:58:00,649 - Definisana enum konstanta ONE sa vrednoscu 1 na liniji 11
INFO  21:58:00,649 - Definisana enum konstanta TEN sa vrednoscu 10 na liniji 11
INFO  21:58:00,649 - Definisana enum konstanta ELEVEN sa vrednoscu 11 na liniji 11
INFO  21:58:00,649 - Deklarisana single promenljiva a na liniji 13
INFO  21:58:00,649 - Deklarisana single promenljiva b na liniji 13
INFO  21:58:00,649 - Deklarisana single promenljiva c na liniji 13
INFO  21:58:00,649 - Deklarisana single promenljiva bo na liniji 15
INFO  21:58:00,649 - Deklarisana single promenljiva xx na liniji 18
INFO  21:58:00,649 - Deklarisana array promenljiva aa na liniji 18
INFO  21:58:00,649 - Definisana funkcija f1 na liniji 20
INFO  21:58:00,649 - Deklarisan single argument ch na liniji 20
INFO  21:58:00,649 - Deklarisan single argument a na liniji 20
INFO  21:58:00,649 - Deklarisan single argument arg na liniji 20
INFO  21:58:00,649 - Deklarisana single promenljiva x na liniji 21
INFO  21:58:00,649 - Deklarisana single promenljiva c na liniji 22
INFO  21:58:00,649 - Deklarisana single promenljiva broj na liniji 23
INFO  21:58:00,649 - Deklarisana single promenljiva broj2 na liniji 23
INFO  21:58:00,650 - Izabrano polje : .ZERO
INFO  21:58:00,650 - Pronadjen poziv promenljive ZERO na liniji 25
INFO  21:58:00,650 - Dodela vrednosti za x na liniji 25
INFO  21:58:00,650 - Izabrano polje : .ZERO
INFO  21:58:00,650 - Pronadjen poziv promenljive ZERO na liniji 26
INFO  21:58:00,650 - Dodela vrednosti za broj na liniji 26
INFO  21:58:00,650 - Dodela vrednosti za broj2 na liniji 27
INFO  21:58:00,650 - Pronadjen poziv promenljive a na liniji 28
INFO  21:58:00,650 - Dodela vrednosti za x na liniji 28
INFO  21:58:00,650 - Dodela vrednosti za c na liniji 29
INFO  21:58:00,650 - Dodela vrednosti za bo na liniji 30
INFO  21:58:00,650 - Dodela vrednosti za ch na liniji 32
INFO  21:58:00,650 - Definisana funkcija f2 na liniji 35
INFO  21:58:00,650 - Deklarisan single argument ch na liniji 35
INFO  21:58:00,650 - Deklarisan single argument a na liniji 35
INFO  21:58:00,650 - Deklarisan single argument arg na liniji 35
INFO  21:58:00,650 - Deklarisana single promenljiva ff na liniji 36
INFO  21:58:00,650 - Deklarisana single promenljiva i na liniji 37
INFO  21:58:00,650 - Deklarisana single promenljiva broj na liniji 38
INFO  21:58:00,650 - Pronadjen poziv promenljive bo na liniji 41
INFO  21:58:00,650 - 1. >>>>>>>>>>[PRONADJEN] PARAMETAR FUNKCIJE tip[5] na liniji 41
INFO  21:58:00,650 - Pronadjen poziv promenljive b na liniji 41
INFO  21:58:00,650 - 2. >>>>>>>>>>[PRONADJEN] PARAMETAR FUNKCIJE tip[1] na liniji 41
INFO  21:58:00,650 - Pronadjen poziv promenljive c na liniji 41
INFO  21:58:00,650 - 3. >>>>>>>>>>[PRONADJEN] PARAMETAR FUNKCIJE tip[1] na liniji 41
INFO  21:58:00,650 - Dodela vrednosti za niz na liniji 42
INFO  21:58:00,650 - Pronadjen poziv promenljive elem na liniji 43
INFO  21:58:00,650 - Dodela vrednosti za ff na liniji 43
INFO  21:58:00,651 - Pronadjen poziv promenljive broj na liniji 44
INFO  21:58:00,651 - Pronadjen poziv promenljive elem na liniji 44
INFO  21:58:00,651 - Pronadjen poziv promenljive elem na liniji 44
INFO  21:58:00,651 - Izabrano polje : .ZERO
INFO  21:58:00,651 - Pronadjen poziv promenljive ZERO na liniji 44
INFO  21:58:00,651 - Pronadjen poziv promenljive broj na liniji 44
INFO  21:58:00,651 - Dodela vrednosti za elem na liniji 44
INFO  21:58:00,651 - Dodela vrednosti za ff na liniji 46
INFO  21:58:00,651 - Dodela vrednosti za i na liniji 47
INFO  21:58:00,651 - Dodela vrednosti za i na liniji 49
INFO  21:58:00,651 - Pronadjen poziv promenljive niz na liniji 49
INFO  21:58:00,651 - Pronadjen poziv promenljive niz na liniji 49
INFO  21:58:00,651 - Pronadjen poziv promenljive ff na liniji 54
INFO  21:58:00,651 - Definisana funkcija putp na liniji 56
INFO  21:58:00,651 - Deklarisan single argument ch na liniji 56
INFO  21:58:00,651 - Deklarisana single promenljiva x na liniji 57
INFO  21:58:00,651 - Dodela vrednosti za x na liniji 59
INFO  21:58:00,651 - Dodela vrednosti za bo na liniji 60
INFO  21:58:00,651 - 1. >>>>>>>>>>[PRONADJEN] PARAMETAR FUNKCIJE tip[1] na liniji 61
INFO  21:58:00,651 - 2. >>>>>>>>>>[PRONADJEN] PARAMETAR FUNKCIJE tip[1] na liniji 61
INFO  21:58:00,651 - 3. >>>>>>>>>>[PRONADJEN] PARAMETAR FUNKCIJE tip[1] na liniji 61
INFO  21:58:00,651 - -----------------TEST na liniji 61
INFO  21:58:00,651 - Pronadjen poziv funkcije f2 sa 3 argumenta na liniji 61
INFO  21:58:00,651 - 1. >>>>>>>>>>[POTREBAN] PARAMETAR FUNKCIJE 'f2' : ch
INFO  21:58:00,651 - 2. >>>>>>>>>>[POTREBAN] PARAMETAR FUNKCIJE 'f2' : a
INFO  21:58:00,651 - 3. >>>>>>>>>>[POTREBAN] PARAMETAR FUNKCIJE 'f2' : arg
INFO  21:58:00,651 - NO >>>>>>>>>>LOS POZIV FUNKCIJE
INFO  21:58:00,651 - Dodela vrednosti za x na liniji 61
INFO  21:58:00,651 - Pronadjen poziv promenljive x na liniji 62
INFO  21:58:00,651 - Definisana funkcija getp na liniji 64
INFO  21:58:00,651 - Deklarisan single argument ch na liniji 64
INFO  21:58:00,651 - Deklarisana single promenljiva x na liniji 65
INFO  21:58:00,651 - Pronadjen poziv promenljive a na liniji 67
INFO  21:58:00,652 - Pronadjen poziv promenljive x na liniji 67
INFO  21:58:00,652 - Dodela vrednosti za x na liniji 67
INFO  21:58:00,652 - Dodela vrednosti za a na liniji 68
INFO  21:58:00,652 - Pronadjen poziv promenljive a na liniji 69
INFO  21:58:00,652 - Dodela vrednosti za b na liniji 69
INFO  21:58:00,652 - Dodela vrednosti za c na liniji 70
INFO  21:58:00,652 - Pronadjen poziv promenljive x na liniji 71
INFO  21:58:00,652 - Definisana funkcija main na liniji 73
INFO  21:58:00,652 - Deklarisana single promenljiva x na liniji 74
INFO  21:58:00,652 - Deklarisana single promenljiva i na liniji 74
INFO  21:58:00,652 - Deklarisana single promenljiva c na liniji 74
INFO  21:58:00,652 - Deklarisana single promenljiva val na liniji 74
INFO  21:58:00,652 - Pronadjen poziv promenljive x na liniji 77
INFO  21:58:00,652 - Dodela vrednosti za niz na liniji 77
INFO  21:58:00,652 - Dodela vrednosti za val na liniji 80
INFO  21:58:00,652 - Dodela vrednosti za i na liniji 82
INFO  21:58:00,652 - Pronadjen poziv promenljive i na liniji 82
INFO  21:58:00,652 - Pronadjen poziv promenljive size na liniji 82
INFO  21:58:00,652 - 1. >>>>>>>>>>[PRONADJEN] PARAMETAR FUNKCIJE tip[1] na liniji 84
INFO  21:58:00,652 - Pronadjen poziv promenljive i na liniji 84
INFO  21:58:00,652 - 2. >>>>>>>>>>[PRONADJEN] PARAMETAR FUNKCIJE tip[1] na liniji 84
INFO  21:58:00,652 - -----------------TEST na liniji 84
INFO  21:58:00,652 - Pronadjen poziv funkcije putp sa 1 argumenta na liniji 84
INFO  21:58:00,652 - 1. >>>>>>>>>>[POTREBAN] PARAMETAR FUNKCIJE 'putp' : ch
INFO  21:58:00,652 - NO >>>>>>>>>>LOS POZIV FUNKCIJE
INFO  21:58:00,652 - Dodela vrednosti za x na liniji 84
INFO  21:58:00,652 - 1. >>>>>>>>>>[PRONADJEN] PARAMETAR FUNKCIJE tip[1] na liniji 85
INFO  21:58:00,652 - Pronadjen poziv promenljive i na liniji 85
INFO  21:58:00,652 - 2. >>>>>>>>>>[PRONADJEN] PARAMETAR FUNKCIJE tip[1] na liniji 85
INFO  21:58:00,652 - Pronadjen poziv promenljive c na liniji 87
INFO  21:58:00,652 - 1. >>>>>>>>>>[PRONADJEN] PARAMETAR FUNKCIJE tip[2] na liniji 87
INFO  21:58:00,652 - Pronadjen poziv promenljive x na liniji 87
INFO  21:58:00,652 - 2. >>>>>>>>>>[PRONADJEN] PARAMETAR FUNKCIJE tip[1] na liniji 87
INFO  21:58:00,652 - Pronadjen poziv promenljive i na liniji 87
INFO  21:58:00,652 - 3. >>>>>>>>>>[PRONADJEN] PARAMETAR FUNKCIJE tip[1] na liniji 87
INFO  21:58:00,652 - Pronadjen poziv promenljive d na liniji 89
INFO  21:58:00,652 - Dodela vrednosti za i na liniji 93
INFO  21:58:00,652 - Pronadjen poziv promenljive x na liniji 93
INFO  21:58:00,652 - Pronadjen poziv promenljive x na liniji 95
INFO  21:58:00,652 - Pronadjen poziv promenljive x na liniji 95
INFO  21:58:00,652 - Pronadjen poziv promenljive size na liniji 95
INFO  21:58:00,652 - Pronadjen poziv promenljive x na liniji 97
INFO  21:58:00,652 - 1. >>>>>>>>>>[PRONADJEN] PARAMETAR FUNKCIJE tip[1] na liniji 97
INFO  21:58:00,652 - -----------------TEST na liniji 97
INFO  21:58:00,652 - Pronadjen poziv funkcije getp sa 1 argumenta na liniji 97
INFO  21:58:00,652 - 1. >>>>>>>>>>[POTREBAN] PARAMETAR FUNKCIJE 'getp' : ch
INFO  21:58:00,652 - NO >>>>>>>>>>LOS POZIV FUNKCIJE
INFO  21:58:00,652 - 1. >>>>>>>>>>[PRONADJEN] PARAMETAR FUNKCIJE tip[1] na liniji 97
INFO  21:58:00,652 - Pronadjen poziv promenljive size na liniji 99
INFO  21:58:00,652 - Pronadjen poziv promenljive x na liniji 99
INFO  21:58:00,652 - Pronadjen poziv promenljive x na liniji 99
INFO  21:58:00,652 - Pronadjen poziv promenljive x na liniji 101
INFO  21:58:00,652 - 1. >>>>>>>>>>[PRONADJEN] PARAMETAR FUNKCIJE tip[1] na liniji 101
INFO  21:58:00,652 - -----------------TEST na liniji 101
INFO  21:58:00,652 - Pronadjen poziv funkcije getp sa 1 argumenta na liniji 101
INFO  21:58:00,652 - 1. >>>>>>>>>>[POTREBAN] PARAMETAR FUNKCIJE 'getp' : ch
INFO  21:58:00,652 - NO >>>>>>>>>>LOS POZIV FUNKCIJE
INFO  21:58:00,652 - 1. >>>>>>>>>>[PRONADJEN] PARAMETAR FUNKCIJE tip[1] na liniji 101
INFO  21:58:00,652 - main funkcija je korektna.  na liniji 73
INFO  21:58:00,652 - ===================================
INFO  21:58:00,653 - Parsiranje uspesno zavrseno!
