INFO  04:28:42,198 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  04:28:42,206 - #1 program
INFO  04:28:42,206 - #36 P
INFO  04:28:42,206 - #7 const
INFO  04:28:42,206 - #36 int
INFO  04:28:42,206 - #36 size
INFO  04:28:42,206 - #24 =
INFO  04:28:42,206 - #37 10
INFO  04:28:42,207 - #27 ;
INFO  04:28:42,207 - #5 enum
INFO  04:28:42,207 - #36 Num
INFO  04:28:42,207 - #34 {
INFO  04:28:42,207 - #36 ZERO
INFO  04:28:42,207 - #28 ,
INFO  04:28:42,207 - #36 ONE
INFO  04:28:42,207 - #28 ,
INFO  04:28:42,207 - #36 TEN
INFO  04:28:42,207 - #24 =
INFO  04:28:42,207 - #37 10
INFO  04:28:42,207 - #35 }
INFO  04:28:42,207 - #4 interface
INFO  04:28:42,207 - #36 I
INFO  04:28:42,207 - #34 {
INFO  04:28:42,208 - #36 int
INFO  04:28:42,208 - #36 getp
INFO  04:28:42,208 - #30 (
INFO  04:28:42,208 - #36 int
INFO  04:28:42,208 - #36 i
INFO  04:28:42,208 - #31 )
INFO  04:28:42,208 - #27 ;
INFO  04:28:42,208 - #36 int
INFO  04:28:42,208 - #36 getn
INFO  04:28:42,208 - #30 (
INFO  04:28:42,208 - #36 int
INFO  04:28:42,208 - #36 i
INFO  04:28:42,208 - #31 )
INFO  04:28:42,208 - #27 ;
INFO  04:28:42,208 - #35 }
INFO  04:28:42,208 - #3 class
INFO  04:28:42,208 - #36 Table
INFO  04:28:42,208 - #36 implements
INFO  04:28:42,208 - #36 I
INFO  04:28:42,208 - #34 {
INFO  04:28:42,208 - #36 int
INFO  04:28:42,208 - #36 pos
INFO  04:28:42,208 - #32 [
INFO  04:28:42,208 - #33 ]
INFO  04:28:42,208 - #28 ,
INFO  04:28:42,208 - #36 neg
INFO  04:28:42,208 - #32 [
INFO  04:28:42,208 - #33 ]
INFO  04:28:42,208 - #27 ;
INFO  04:28:42,208 - #34 {
INFO  04:28:42,209 - #13 void
INFO  04:28:42,209 - #36 putp
INFO  04:28:42,209 - #30 (
INFO  04:28:42,209 - #36 int
INFO  04:28:42,209 - #36 a
INFO  04:28:42,209 - #28 ,
INFO  04:28:42,209 - #36 int
INFO  04:28:42,209 - #36 idx
INFO  04:28:42,209 - #31 )
INFO  04:28:42,209 - #34 {
INFO  04:28:42,209 - #36 this
INFO  04:28:42,209 - #29 .
INFO  04:28:42,209 - #36 pos
INFO  04:28:42,209 - #32 [
INFO  04:28:42,209 - #36 idx
INFO  04:28:42,209 - #33 ]
INFO  04:28:42,209 - #24 =
INFO  04:28:42,209 - #36 a
INFO  04:28:42,209 - #27 ;
INFO  04:28:42,209 - #35 }
INFO  04:28:42,209 - #13 void
INFO  04:28:42,209 - #36 putn
INFO  04:28:42,209 - #30 (
INFO  04:28:42,209 - #36 int
INFO  04:28:42,209 - #36 a
INFO  04:28:42,210 - #28 ,
INFO  04:28:42,210 - #36 int
INFO  04:28:42,210 - #36 idx
INFO  04:28:42,210 - #31 )
INFO  04:28:42,210 - #34 {
INFO  04:28:42,210 - #36 this
INFO  04:28:42,210 - #29 .
INFO  04:28:42,210 - #36 neg
INFO  04:28:42,210 - #32 [
INFO  04:28:42,210 - #36 idx
INFO  04:28:42,210 - #33 ]
INFO  04:28:42,210 - #24 =
INFO  04:28:42,210 - #36 a
INFO  04:28:42,210 - #27 ;
INFO  04:28:42,210 - #35 }
INFO  04:28:42,210 - #36 int
INFO  04:28:42,210 - #36 getp
INFO  04:28:42,210 - #30 (
INFO  04:28:42,210 - #36 int
INFO  04:28:42,210 - #36 idx
INFO  04:28:42,210 - #31 )
INFO  04:28:42,210 - #34 {
INFO  04:28:42,210 - #12 return
INFO  04:28:42,210 - #36 pos
INFO  04:28:42,210 - #32 [
INFO  04:28:42,210 - #36 idx
INFO  04:28:42,210 - #33 ]
INFO  04:28:42,210 - #27 ;
INFO  04:28:42,211 - #35 }
INFO  04:28:42,211 - #36 int
INFO  04:28:42,211 - #36 getn
INFO  04:28:42,211 - #30 (
INFO  04:28:42,211 - #36 int
INFO  04:28:42,211 - #36 idx
INFO  04:28:42,211 - #31 )
INFO  04:28:42,211 - #34 {
INFO  04:28:42,211 - #12 return
INFO  04:28:42,211 - #36 neg
INFO  04:28:42,211 - #32 [
INFO  04:28:42,211 - #36 idx
INFO  04:28:42,211 - #33 ]
INFO  04:28:42,211 - #27 ;
INFO  04:28:42,211 - #35 }
INFO  04:28:42,211 - #35 }
INFO  04:28:42,211 - #35 }
INFO  04:28:42,211 - #36 Table
INFO  04:28:42,211 - #36 val
INFO  04:28:42,211 - #27 ;
INFO  04:28:42,211 - #34 {
INFO  04:28:42,211 - #13 void
INFO  04:28:42,211 - #36 f
INFO  04:28:42,211 - #30 (
INFO  04:28:42,211 - #36 char
INFO  04:28:42,211 - #36 ch
INFO  04:28:42,212 - #28 ,
INFO  04:28:42,213 - #36 int
INFO  04:28:42,213 - #36 a
INFO  04:28:42,213 - #28 ,
INFO  04:28:42,213 - #36 int
INFO  04:28:42,213 - #36 arg
INFO  04:28:42,213 - #31 )
INFO  04:28:42,213 - #36 int
INFO  04:28:42,213 - #36 x
INFO  04:28:42,213 - #27 ;
INFO  04:28:42,213 - #34 {
INFO  04:28:42,213 - #36 x
INFO  04:28:42,213 - #24 =
INFO  04:28:42,213 - #36 arg
INFO  04:28:42,213 - #27 ;
INFO  04:28:42,213 - #35 }
INFO  04:28:42,213 - #13 void
INFO  04:28:42,213 - #36 main
INFO  04:28:42,213 - #30 (
INFO  04:28:42,213 - #31 )
INFO  04:28:42,213 - #36 int
INFO  04:28:42,213 - #36 x
INFO  04:28:42,213 - #28 ,
INFO  04:28:42,213 - #36 i
INFO  04:28:42,213 - #27 ;
INFO  04:28:42,214 - #36 char
INFO  04:28:42,214 - #36 c
INFO  04:28:42,214 - #27 ;
INFO  04:28:42,214 - #34 {
INFO  04:28:42,214 - #36 val
INFO  04:28:42,214 - #24 =
INFO  04:28:42,214 - #9 new
INFO  04:28:42,214 - #36 Table
INFO  04:28:42,214 - #27 ;
INFO  04:28:42,214 - #36 val
INFO  04:28:42,214 - #29 .
INFO  04:28:42,214 - #36 pos
INFO  04:28:42,214 - #24 =
INFO  04:28:42,214 - #9 new
INFO  04:28:42,214 - #36 int
INFO  04:28:42,214 - #32 [
INFO  04:28:42,214 - #36 size
INFO  04:28:42,214 - #33 ]
INFO  04:28:42,214 - #27 ;
INFO  04:28:42,214 - #36 val
INFO  04:28:42,214 - #29 .
INFO  04:28:42,214 - #36 neg
INFO  04:28:42,214 - #24 =
INFO  04:28:42,214 - #9 new
INFO  04:28:42,214 - #36 int
INFO  04:28:42,214 - #32 [
INFO  04:28:42,214 - #36 size
INFO  04:28:42,215 - #33 ]
INFO  04:28:42,215 - #27 ;
INFO  04:28:42,215 - #14 for
INFO  04:28:42,215 - #30 (
INFO  04:28:42,215 - #36 i
INFO  04:28:42,215 - #24 =
INFO  04:28:42,215 - #37 0
INFO  04:28:42,215 - #27 ;
INFO  04:28:42,215 - #36 i
INFO  04:28:42,215 - #20 <
INFO  04:28:42,215 - #36 size
INFO  04:28:42,215 - #27 ;
INFO  04:28:42,215 - #36 i
INFO  04:28:42,215 - #25 ++
INFO  04:28:42,215 - #31 )
INFO  04:28:42,215 - #34 {
INFO  04:28:42,215 - #36 val
INFO  04:28:42,215 - #29 .
INFO  04:28:42,215 - #36 putp
INFO  04:28:42,215 - #30 (
INFO  04:28:42,215 - #37 0
INFO  04:28:42,215 - #28 ,
INFO  04:28:42,215 - #36 i
INFO  04:28:42,215 - #31 )
INFO  04:28:42,215 - #27 ;
INFO  04:28:42,215 - #36 val
INFO  04:28:42,215 - #29 .
INFO  04:28:42,215 - #36 putn
INFO  04:28:42,215 - #30 (
INFO  04:28:42,215 - #37 0
INFO  04:28:42,215 - #28 ,
INFO  04:28:42,215 - #36 i
INFO  04:28:42,215 - #31 )
INFO  04:28:42,215 - #27 ;
INFO  04:28:42,216 - #35 }
INFO  04:28:42,216 - #36 f
INFO  04:28:42,216 - #30 (
INFO  04:28:42,216 - #36 c
INFO  04:28:42,216 - #28 ,
INFO  04:28:42,216 - #36 x
INFO  04:28:42,216 - #28 ,
INFO  04:28:42,216 - #36 i
INFO  04:28:42,216 - #31 )
INFO  04:28:42,216 - #27 ;
INFO  04:28:42,216 - #11 read
INFO  04:28:42,216 - #30 (
INFO  04:28:42,216 - #36 x
INFO  04:28:42,216 - #31 )
INFO  04:28:42,216 - #27 ;
INFO  04:28:42,216 - #14 for
INFO  04:28:42,216 - #30 (
INFO  04:28:42,216 - #27 ;
INFO  04:28:42,216 - #36 x
INFO  04:28:42,216 - #18 >
INFO  04:28:42,216 - #37 0
INFO  04:28:42,216 - #27 ;
INFO  04:28:42,216 - #31 )
INFO  04:28:42,216 - #34 {
INFO  04:28:42,216 - #8 if
INFO  04:28:42,216 - #30 (
INFO  04:28:42,216 - #36 Num
INFO  04:28:42,216 - #29 .
INFO  04:28:42,216 - #36 ZERO
INFO  04:28:42,216 - #21 <=
INFO  04:28:42,216 - #36 x
INFO  04:28:42,216 - #22 &&
INFO  04:28:42,216 - #36 x
INFO  04:28:42,216 - #20 <
INFO  04:28:42,216 - #36 size
INFO  04:28:42,216 - #31 )
INFO  04:28:42,216 - #34 {
INFO  04:28:42,216 - #36 val
INFO  04:28:42,217 - #29 .
INFO  04:28:42,217 - #36 putp
INFO  04:28:42,217 - #30 (
INFO  04:28:42,217 - #36 val
INFO  04:28:42,217 - #29 .
INFO  04:28:42,217 - #36 getp
INFO  04:28:42,217 - #30 (
INFO  04:28:42,217 - #36 x
INFO  04:28:42,217 - #31 )
INFO  04:28:42,217 - #11 +
INFO  04:28:42,217 - #36 Num
INFO  04:28:42,217 - #29 .
INFO  04:28:42,217 - #36 ONE
INFO  04:28:42,217 - #31 )
INFO  04:28:42,217 - #27 ;
INFO  04:28:42,217 - #35 }
INFO  04:28:42,217 - #6 else
INFO  04:28:42,217 - #8 if
INFO  04:28:42,217 - #30 (
INFO  04:28:42,217 - #36 size
INFO  04:28:42,217 - #20 <
INFO  04:28:42,217 - #36 x
INFO  04:28:42,217 - #22 &&
INFO  04:28:42,217 - #36 x
INFO  04:28:42,217 - #20 <
INFO  04:28:42,217 - #37 0
INFO  04:28:42,217 - #31 )
INFO  04:28:42,217 - #34 {
INFO  04:28:42,217 - #36 val
INFO  04:28:42,217 - #29 .
INFO  04:28:42,217 - #36 putn
INFO  04:28:42,217 - #30 (
INFO  04:28:42,217 - #36 val
INFO  04:28:42,217 - #29 .
INFO  04:28:42,217 - #36 getn
INFO  04:28:42,217 - #30 (
INFO  04:28:42,218 - #36 x
INFO  04:28:42,218 - #31 )
INFO  04:28:42,218 - #11 +
INFO  04:28:42,218 - #37 1
INFO  04:28:42,218 - #31 )
INFO  04:28:42,218 - #27 ;
INFO  04:28:42,218 - #35 }
INFO  04:28:42,218 - #11 read
INFO  04:28:42,218 - #30 (
INFO  04:28:42,218 - #36 x
INFO  04:28:42,218 - #31 )
INFO  04:28:42,218 - #27 ;
INFO  04:28:42,218 - #35 }
INFO  04:28:42,218 - #35 }
INFO  04:28:42,218 - #35 }
INFO  04:28:42,218 - --EOF.
