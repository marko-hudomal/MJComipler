INFO  04:48:14,744 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  04:48:14,752 - #1 program
INFO  04:48:14,752 - #36 P
INFO  04:48:14,753 - #7 const
INFO  04:48:14,753 - #36 int
INFO  04:48:14,753 - #36 size
INFO  04:48:14,753 - #24 =
INFO  04:48:14,753 - #37 10
INFO  04:48:14,753 - #27 ;
INFO  04:48:14,753 - #5 enum
INFO  04:48:14,753 - #36 Num
INFO  04:48:14,753 - #34 {
INFO  04:48:14,753 - #36 ZERO
INFO  04:48:14,753 - #28 ,
INFO  04:48:14,753 - #36 ONE
INFO  04:48:14,753 - #28 ,
INFO  04:48:14,754 - #36 TEN
INFO  04:48:14,754 - #24 =
INFO  04:48:14,754 - #37 10
INFO  04:48:14,754 - #35 }
INFO  04:48:14,754 - #4 interface
INFO  04:48:14,754 - #36 I
INFO  04:48:14,754 - #34 {
INFO  04:48:14,754 - #36 int
INFO  04:48:14,754 - #36 getp
INFO  04:48:14,754 - #30 (
INFO  04:48:14,754 - #36 int
INFO  04:48:14,754 - #36 i
INFO  04:48:14,754 - #31 )
INFO  04:48:14,754 - #27 ;
INFO  04:48:14,754 - #36 int
INFO  04:48:14,754 - #36 getn
INFO  04:48:14,754 - #30 (
INFO  04:48:14,755 - #36 int
INFO  04:48:14,755 - #36 i
INFO  04:48:14,755 - #31 )
INFO  04:48:14,755 - #27 ;
INFO  04:48:14,755 - #35 }
INFO  04:48:14,755 - #3 class
INFO  04:48:14,755 - #36 Table
INFO  04:48:14,755 - #36 implements
INFO  04:48:14,755 - #36 I
INFO  04:48:14,755 - #34 {
INFO  04:48:14,755 - #36 int
INFO  04:48:14,755 - #36 pos
INFO  04:48:14,755 - #32 [
INFO  04:48:14,755 - #33 ]
INFO  04:48:14,755 - #28 ,
INFO  04:48:14,755 - #36 neg
INFO  04:48:14,755 - #32 [
INFO  04:48:14,755 - #33 ]
INFO  04:48:14,755 - #27 ;
INFO  04:48:14,755 - #34 {
INFO  04:48:14,755 - #13 void
INFO  04:48:14,755 - #36 putp
INFO  04:48:14,755 - #30 (
INFO  04:48:14,755 - #36 int
INFO  04:48:14,756 - #36 a
INFO  04:48:14,756 - #28 ,
INFO  04:48:14,756 - #36 int
INFO  04:48:14,756 - #36 idx
INFO  04:48:14,756 - #31 )
INFO  04:48:14,756 - #34 {
INFO  04:48:14,756 - #36 this
INFO  04:48:14,756 - #29 .
INFO  04:48:14,756 - #36 pos
INFO  04:48:14,756 - #32 [
INFO  04:48:14,756 - #36 idx
INFO  04:48:14,756 - #33 ]
INFO  04:48:14,756 - #24 =
INFO  04:48:14,756 - #36 a
INFO  04:48:14,756 - #27 ;
INFO  04:48:14,756 - #35 }
INFO  04:48:14,756 - #13 void
INFO  04:48:14,756 - #36 putn
INFO  04:48:14,757 - #30 (
INFO  04:48:14,757 - #36 int
INFO  04:48:14,757 - #36 a
INFO  04:48:14,757 - #28 ,
INFO  04:48:14,757 - #36 int
INFO  04:48:14,757 - #36 idx
INFO  04:48:14,757 - #31 )
INFO  04:48:14,757 - #34 {
INFO  04:48:14,757 - #36 this
INFO  04:48:14,757 - #29 .
INFO  04:48:14,757 - #36 neg
INFO  04:48:14,757 - #32 [
INFO  04:48:14,757 - #36 idx
INFO  04:48:14,757 - #33 ]
INFO  04:48:14,757 - #24 =
INFO  04:48:14,757 - #36 a
INFO  04:48:14,758 - #27 ;
INFO  04:48:14,758 - #35 }
INFO  04:48:14,758 - #36 int
INFO  04:48:14,758 - #36 getp
INFO  04:48:14,758 - #30 (
INFO  04:48:14,758 - #36 int
INFO  04:48:14,758 - #36 idx
INFO  04:48:14,758 - #31 )
INFO  04:48:14,758 - #34 {
INFO  04:48:14,758 - #12 return
INFO  04:48:14,758 - #36 pos
INFO  04:48:14,758 - #32 [
INFO  04:48:14,758 - #36 idx
INFO  04:48:14,758 - #33 ]
INFO  04:48:14,758 - #27 ;
INFO  04:48:14,758 - #35 }
INFO  04:48:14,758 - #36 int
INFO  04:48:14,758 - #36 getn
INFO  04:48:14,758 - #30 (
INFO  04:48:14,759 - #36 int
INFO  04:48:14,759 - #36 idx
INFO  04:48:14,759 - #31 )
INFO  04:48:14,759 - #34 {
INFO  04:48:14,759 - #12 return
INFO  04:48:14,759 - #36 neg
INFO  04:48:14,759 - #32 [
INFO  04:48:14,759 - #36 idx
INFO  04:48:14,759 - #33 ]
INFO  04:48:14,759 - #27 ;
INFO  04:48:14,759 - #35 }
INFO  04:48:14,759 - #35 }
INFO  04:48:14,759 - #35 }
INFO  04:48:14,759 - #36 Table
INFO  04:48:14,759 - #36 val
INFO  04:48:14,759 - #27 ;
INFO  04:48:14,759 - #34 {
INFO  04:48:14,759 - #13 void
INFO  04:48:14,759 - #36 f
INFO  04:48:14,759 - #30 (
INFO  04:48:14,759 - #36 char
INFO  04:48:14,759 - #36 ch
INFO  04:48:14,760 - #28 ,
INFO  04:48:14,762 - #36 int
INFO  04:48:14,762 - #36 a
INFO  04:48:14,762 - #28 ,
INFO  04:48:14,762 - #36 int
INFO  04:48:14,762 - #36 arg
INFO  04:48:14,762 - #31 )
INFO  04:48:14,762 - #36 int
INFO  04:48:14,762 - #36 x
INFO  04:48:14,762 - #27 ;
INFO  04:48:14,762 - #34 {
INFO  04:48:14,762 - #36 x
INFO  04:48:14,762 - #24 =
INFO  04:48:14,762 - #36 arg
INFO  04:48:14,762 - #27 ;
INFO  04:48:14,762 - #35 }
INFO  04:48:14,762 - #13 void
INFO  04:48:14,762 - #36 main
INFO  04:48:14,762 - #30 (
INFO  04:48:14,762 - #31 )
INFO  04:48:14,762 - #36 int
INFO  04:48:14,762 - #36 x
INFO  04:48:14,762 - #28 ,
INFO  04:48:14,762 - #36 i
INFO  04:48:14,762 - #27 ;
INFO  04:48:14,763 - #36 char
INFO  04:48:14,763 - #36 c
INFO  04:48:14,763 - #27 ;
INFO  04:48:14,763 - #34 {
INFO  04:48:14,763 - #36 val
INFO  04:48:14,763 - #24 =
INFO  04:48:14,763 - #9 new
INFO  04:48:14,763 - #36 Table
INFO  04:48:14,763 - #27 ;
INFO  04:48:14,763 - #36 val
INFO  04:48:14,763 - #29 .
INFO  04:48:14,763 - #36 pos
INFO  04:48:14,763 - #24 =
INFO  04:48:14,763 - #9 new
INFO  04:48:14,763 - #36 int
INFO  04:48:14,763 - #32 [
INFO  04:48:14,763 - #36 size
INFO  04:48:14,763 - #33 ]
INFO  04:48:14,763 - #27 ;
INFO  04:48:14,763 - #36 val
INFO  04:48:14,763 - #29 .
INFO  04:48:14,763 - #36 neg
INFO  04:48:14,763 - #24 =
INFO  04:48:14,763 - #9 new
INFO  04:48:14,764 - #36 int
INFO  04:48:14,764 - #32 [
INFO  04:48:14,764 - #36 size
INFO  04:48:14,764 - #33 ]
INFO  04:48:14,764 - #27 ;
INFO  04:48:14,764 - #14 for
INFO  04:48:14,764 - #30 (
INFO  04:48:14,764 - #36 i
INFO  04:48:14,764 - #24 =
INFO  04:48:14,764 - #37 0
INFO  04:48:14,764 - #27 ;
INFO  04:48:14,764 - #36 i
INFO  04:48:14,764 - #20 <
INFO  04:48:14,764 - #36 size
INFO  04:48:14,764 - #27 ;
INFO  04:48:14,764 - #36 i
INFO  04:48:14,764 - #25 ++
INFO  04:48:14,764 - #31 )
INFO  04:48:14,764 - #34 {
INFO  04:48:14,764 - #36 val
INFO  04:48:14,764 - #29 .
INFO  04:48:14,764 - #36 putp
INFO  04:48:14,764 - #30 (
INFO  04:48:14,764 - #37 0
INFO  04:48:14,764 - #28 ,
INFO  04:48:14,764 - #36 i
INFO  04:48:14,764 - #31 )
INFO  04:48:14,764 - #27 ;
INFO  04:48:14,764 - #36 val
INFO  04:48:14,764 - #29 .
INFO  04:48:14,765 - #36 putn
INFO  04:48:14,765 - #30 (
INFO  04:48:14,765 - #37 0
INFO  04:48:14,765 - #28 ,
INFO  04:48:14,765 - #36 i
INFO  04:48:14,765 - #31 )
INFO  04:48:14,765 - #27 ;
INFO  04:48:14,765 - #35 }
INFO  04:48:14,765 - #36 f
INFO  04:48:14,765 - #30 (
INFO  04:48:14,765 - #36 c
INFO  04:48:14,765 - #28 ,
INFO  04:48:14,765 - #36 x
INFO  04:48:14,765 - #28 ,
INFO  04:48:14,765 - #36 i
INFO  04:48:14,765 - #31 )
INFO  04:48:14,765 - #27 ;
INFO  04:48:14,765 - #36 X
INFO  04:48:14,765 - #24 =
INFO  04:48:14,765 - #36 c
INFO  04:48:14,765 - #27 ;
INFO  04:48:14,765 - #11 read
INFO  04:48:14,765 - #30 (
INFO  04:48:14,765 - #36 x
INFO  04:48:14,765 - #31 )
INFO  04:48:14,765 - #27 ;
INFO  04:48:14,765 - #14 for
INFO  04:48:14,765 - #30 (
INFO  04:48:14,765 - #27 ;
INFO  04:48:14,765 - #36 x
INFO  04:48:14,765 - #18 >
INFO  04:48:14,766 - #37 0
INFO  04:48:14,766 - #27 ;
INFO  04:48:14,766 - #31 )
INFO  04:48:14,766 - #34 {
INFO  04:48:14,766 - #8 if
INFO  04:48:14,766 - #30 (
INFO  04:48:14,766 - #36 Num
INFO  04:48:14,766 - #29 .
INFO  04:48:14,766 - #36 ZERO
INFO  04:48:14,766 - #21 <=
INFO  04:48:14,766 - #36 x
INFO  04:48:14,766 - #22 &&
INFO  04:48:14,766 - #36 x
INFO  04:48:14,766 - #20 <
INFO  04:48:14,766 - #36 size
INFO  04:48:14,766 - #31 )
INFO  04:48:14,766 - #34 {
INFO  04:48:14,766 - #36 val
INFO  04:48:14,766 - #29 .
INFO  04:48:14,766 - #36 putp
INFO  04:48:14,766 - #30 (
INFO  04:48:14,766 - #36 val
INFO  04:48:14,766 - #29 .
INFO  04:48:14,766 - #36 getp
INFO  04:48:14,766 - #30 (
INFO  04:48:14,766 - #36 x
INFO  04:48:14,766 - #31 )
INFO  04:48:14,766 - #11 +
INFO  04:48:14,766 - #36 Num
INFO  04:48:14,767 - #29 .
INFO  04:48:14,767 - #36 ONE
INFO  04:48:14,767 - #31 )
INFO  04:48:14,767 - #27 ;
INFO  04:48:14,767 - #35 }
INFO  04:48:14,767 - #6 else
INFO  04:48:14,767 - #8 if
INFO  04:48:14,767 - #30 (
INFO  04:48:14,767 - #12 -
INFO  04:48:14,767 - #36 size
INFO  04:48:14,767 - #20 <
INFO  04:48:14,767 - #36 x
INFO  04:48:14,767 - #22 &&
INFO  04:48:14,767 - #36 x
INFO  04:48:14,767 - #20 <
INFO  04:48:14,767 - #37 0
INFO  04:48:14,767 - #31 )
INFO  04:48:14,767 - #34 {
INFO  04:48:14,767 - #36 val
INFO  04:48:14,767 - #29 .
INFO  04:48:14,767 - #36 putn
INFO  04:48:14,767 - #30 (
INFO  04:48:14,767 - #36 val
INFO  04:48:14,767 - #29 .
INFO  04:48:14,767 - #36 getn
INFO  04:48:14,767 - #30 (
INFO  04:48:14,767 - #12 -
INFO  04:48:14,767 - #36 x
INFO  04:48:14,767 - #31 )
INFO  04:48:14,767 - #11 +
INFO  04:48:14,767 - #37 1
INFO  04:48:14,767 - #31 )
INFO  04:48:14,767 - #27 ;
INFO  04:48:14,767 - #35 }
INFO  04:48:14,767 - #11 read
INFO  04:48:14,767 - #30 (
INFO  04:48:14,767 - #36 x
INFO  04:48:14,767 - #31 )
INFO  04:48:14,767 - #27 ;
INFO  04:48:14,767 - #35 }
INFO  04:48:14,767 - #35 }
INFO  04:48:14,767 - #35 }
INFO  04:48:14,768 - --EOF.
