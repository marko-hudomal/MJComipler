INFO  04:49:13,826 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  04:49:13,834 - #1 program
INFO  04:49:13,834 - #36 P
INFO  04:49:13,834 - #7 const
INFO  04:49:13,834 - #36 int
INFO  04:49:13,834 - #36 size
INFO  04:49:13,834 - #24 =
INFO  04:49:13,834 - #37 10
INFO  04:49:13,834 - #27 ;
INFO  04:49:13,834 - #5 enum
INFO  04:49:13,834 - #36 Num
INFO  04:49:13,834 - #34 {
INFO  04:49:13,834 - #36 ZERO
INFO  04:49:13,835 - #28 ,
INFO  04:49:13,835 - #36 ONE
INFO  04:49:13,835 - #28 ,
INFO  04:49:13,835 - #36 TEN
INFO  04:49:13,835 - #24 =
INFO  04:49:13,835 - #37 10
INFO  04:49:13,835 - #35 }
INFO  04:49:13,835 - #4 interface
INFO  04:49:13,835 - #36 I
INFO  04:49:13,835 - #34 {
INFO  04:49:13,835 - #36 int
INFO  04:49:13,835 - #36 getp
INFO  04:49:13,835 - #30 (
INFO  04:49:13,835 - #36 int
INFO  04:49:13,835 - #36 i
INFO  04:49:13,836 - #31 )
INFO  04:49:13,836 - #27 ;
INFO  04:49:13,836 - #36 int
INFO  04:49:13,836 - #36 getn
INFO  04:49:13,836 - #30 (
INFO  04:49:13,836 - #36 int
INFO  04:49:13,836 - #36 i
INFO  04:49:13,836 - #31 )
INFO  04:49:13,836 - #27 ;
INFO  04:49:13,836 - #35 }
INFO  04:49:13,836 - #3 class
INFO  04:49:13,836 - #36 Table
INFO  04:49:13,836 - #36 implements
INFO  04:49:13,836 - #36 I
INFO  04:49:13,836 - #34 {
INFO  04:49:13,836 - #36 int
INFO  04:49:13,836 - #36 pos
INFO  04:49:13,836 - #32 [
INFO  04:49:13,836 - #33 ]
INFO  04:49:13,836 - #28 ,
INFO  04:49:13,836 - #36 neg
INFO  04:49:13,836 - #32 [
INFO  04:49:13,836 - #33 ]
INFO  04:49:13,836 - #27 ;
INFO  04:49:13,836 - #34 {
INFO  04:49:13,836 - #13 void
INFO  04:49:13,836 - #36 putp
INFO  04:49:13,837 - #30 (
INFO  04:49:13,837 - #36 int
INFO  04:49:13,837 - #36 a
INFO  04:49:13,837 - #28 ,
INFO  04:49:13,837 - #36 int
INFO  04:49:13,837 - #36 idx
INFO  04:49:13,837 - #31 )
INFO  04:49:13,837 - #34 {
INFO  04:49:13,837 - #36 this
INFO  04:49:13,837 - #29 .
INFO  04:49:13,837 - #36 pos
INFO  04:49:13,837 - #32 [
INFO  04:49:13,837 - #36 idx
INFO  04:49:13,837 - #33 ]
INFO  04:49:13,837 - #24 =
INFO  04:49:13,837 - #36 a
INFO  04:49:13,837 - #27 ;
INFO  04:49:13,837 - #35 }
INFO  04:49:13,837 - #13 void
INFO  04:49:13,837 - #36 putn
INFO  04:49:13,837 - #30 (
INFO  04:49:13,837 - #36 int
INFO  04:49:13,837 - #36 a
INFO  04:49:13,837 - #28 ,
INFO  04:49:13,837 - #36 int
INFO  04:49:13,837 - #36 idx
INFO  04:49:13,837 - #31 )
INFO  04:49:13,837 - #34 {
INFO  04:49:13,837 - #36 this
INFO  04:49:13,838 - #29 .
INFO  04:49:13,838 - #36 neg
INFO  04:49:13,838 - #32 [
INFO  04:49:13,838 - #36 idx
INFO  04:49:13,838 - #33 ]
INFO  04:49:13,838 - #24 =
INFO  04:49:13,838 - #36 a
INFO  04:49:13,838 - #27 ;
INFO  04:49:13,838 - #35 }
INFO  04:49:13,838 - #36 int
INFO  04:49:13,838 - #36 getp
INFO  04:49:13,838 - #30 (
INFO  04:49:13,838 - #36 int
INFO  04:49:13,838 - #36 idx
INFO  04:49:13,838 - #31 )
INFO  04:49:13,838 - #34 {
INFO  04:49:13,838 - #12 return
INFO  04:49:13,838 - #36 pos
INFO  04:49:13,838 - #32 [
INFO  04:49:13,838 - #36 idx
INFO  04:49:13,838 - #33 ]
INFO  04:49:13,838 - #27 ;
INFO  04:49:13,838 - #35 }
INFO  04:49:13,838 - #36 int
INFO  04:49:13,838 - #36 getn
INFO  04:49:13,838 - #30 (
INFO  04:49:13,838 - #36 int
INFO  04:49:13,838 - #36 idx
INFO  04:49:13,838 - #31 )
INFO  04:49:13,838 - #34 {
INFO  04:49:13,838 - #12 return
INFO  04:49:13,839 - #36 neg
INFO  04:49:13,839 - #32 [
INFO  04:49:13,839 - #36 idx
INFO  04:49:13,839 - #33 ]
INFO  04:49:13,839 - #27 ;
INFO  04:49:13,839 - #35 }
INFO  04:49:13,839 - #35 }
INFO  04:49:13,839 - #35 }
INFO  04:49:13,839 - #36 Table
INFO  04:49:13,839 - #36 val
INFO  04:49:13,839 - #27 ;
INFO  04:49:13,839 - #34 {
INFO  04:49:13,839 - #13 void
INFO  04:49:13,839 - #36 f
INFO  04:49:13,839 - #30 (
INFO  04:49:13,839 - #36 char
INFO  04:49:13,839 - #36 ch
INFO  04:49:13,839 - #28 ,
INFO  04:49:13,840 - #36 int
INFO  04:49:13,840 - #36 a
INFO  04:49:13,840 - #28 ,
INFO  04:49:13,840 - #36 int
INFO  04:49:13,840 - #36 arg
INFO  04:49:13,841 - #31 )
INFO  04:49:13,841 - #36 int
INFO  04:49:13,841 - #36 x
INFO  04:49:13,841 - #27 ;
INFO  04:49:13,841 - #34 {
INFO  04:49:13,841 - #36 x
INFO  04:49:13,841 - #24 =
INFO  04:49:13,841 - #36 arg
INFO  04:49:13,841 - #27 ;
INFO  04:49:13,841 - #35 }
INFO  04:49:13,841 - #13 void
INFO  04:49:13,841 - #36 main
INFO  04:49:13,841 - #30 (
INFO  04:49:13,841 - #31 )
INFO  04:49:13,841 - #36 int
INFO  04:49:13,841 - #36 x
INFO  04:49:13,841 - #28 ,
INFO  04:49:13,841 - #36 i
INFO  04:49:13,841 - #27 ;
INFO  04:49:13,841 - #36 char
INFO  04:49:13,841 - #36 c
INFO  04:49:13,841 - #27 ;
INFO  04:49:13,841 - #34 {
INFO  04:49:13,841 - #36 val
INFO  04:49:13,841 - #24 =
INFO  04:49:13,841 - #9 new
INFO  04:49:13,841 - #36 Table
INFO  04:49:13,841 - #27 ;
INFO  04:49:13,841 - #36 val
INFO  04:49:13,841 - #29 .
INFO  04:49:13,841 - #36 pos
INFO  04:49:13,841 - #24 =
INFO  04:49:13,841 - #9 new
INFO  04:49:13,841 - #36 int
INFO  04:49:13,842 - #32 [
INFO  04:49:13,842 - #36 size
INFO  04:49:13,842 - #33 ]
INFO  04:49:13,842 - #27 ;
INFO  04:49:13,842 - #36 val
INFO  04:49:13,842 - #29 .
INFO  04:49:13,842 - #36 neg
INFO  04:49:13,842 - #24 =
INFO  04:49:13,842 - #9 new
INFO  04:49:13,842 - #36 int
INFO  04:49:13,842 - #32 [
INFO  04:49:13,842 - #36 size
INFO  04:49:13,842 - #33 ]
INFO  04:49:13,842 - #27 ;
INFO  04:49:13,842 - #14 for
INFO  04:49:13,842 - #30 (
INFO  04:49:13,842 - #36 i
INFO  04:49:13,842 - #24 =
INFO  04:49:13,842 - #37 0
INFO  04:49:13,842 - #27 ;
INFO  04:49:13,842 - #36 i
INFO  04:49:13,842 - #20 <
INFO  04:49:13,842 - #36 size
INFO  04:49:13,842 - #27 ;
INFO  04:49:13,842 - #36 i
INFO  04:49:13,842 - #25 ++
INFO  04:49:13,842 - #31 )
INFO  04:49:13,842 - #34 {
INFO  04:49:13,842 - #36 val
INFO  04:49:13,842 - #29 .
INFO  04:49:13,842 - #36 putp
INFO  04:49:13,842 - #30 (
INFO  04:49:13,843 - #37 0
INFO  04:49:13,843 - #28 ,
INFO  04:49:13,843 - #36 i
INFO  04:49:13,843 - #31 )
INFO  04:49:13,843 - #27 ;
INFO  04:49:13,843 - #36 val
INFO  04:49:13,843 - #29 .
INFO  04:49:13,843 - #36 putn
INFO  04:49:13,843 - #30 (
INFO  04:49:13,843 - #37 0
INFO  04:49:13,843 - #28 ,
INFO  04:49:13,843 - #36 i
INFO  04:49:13,843 - #31 )
INFO  04:49:13,843 - #27 ;
INFO  04:49:13,843 - #35 }
INFO  04:49:13,843 - #36 f
INFO  04:49:13,843 - #30 (
INFO  04:49:13,843 - #36 c
INFO  04:49:13,843 - #28 ,
INFO  04:49:13,843 - #36 x
INFO  04:49:13,843 - #28 ,
INFO  04:49:13,843 - #36 i
INFO  04:49:13,843 - #31 )
INFO  04:49:13,843 - #27 ;
INFO  04:49:13,843 - #36 X
INFO  04:49:13,843 - #24 =
INFO  04:49:13,843 - #36 c
INFO  04:49:13,843 - #27 ;
INFO  04:49:13,843 - #11 read
INFO  04:49:13,843 - #30 (
INFO  04:49:13,843 - #36 x
INFO  04:49:13,843 - #31 )
INFO  04:49:13,843 - #27 ;
INFO  04:49:13,843 - #14 for
INFO  04:49:13,844 - #30 (
INFO  04:49:13,844 - #27 ;
INFO  04:49:13,844 - #36 x
INFO  04:49:13,844 - #18 >
INFO  04:49:13,844 - #37 0
INFO  04:49:13,844 - #27 ;
INFO  04:49:13,844 - #31 )
INFO  04:49:13,844 - #34 {
INFO  04:49:13,844 - #8 if
INFO  04:49:13,844 - #30 (
INFO  04:49:13,844 - #36 Num
INFO  04:49:13,844 - #29 .
INFO  04:49:13,844 - #36 ZERO
INFO  04:49:13,844 - #21 <=
INFO  04:49:13,844 - #36 x
INFO  04:49:13,844 - #22 &&
INFO  04:49:13,844 - #36 x
INFO  04:49:13,844 - #20 <
INFO  04:49:13,844 - #36 size
INFO  04:49:13,844 - #31 )
INFO  04:49:13,844 - #34 {
INFO  04:49:13,844 - #36 val
INFO  04:49:13,844 - #29 .
INFO  04:49:13,844 - #36 putp
INFO  04:49:13,844 - #30 (
INFO  04:49:13,844 - #36 val
INFO  04:49:13,845 - #29 .
INFO  04:49:13,845 - #36 getp
INFO  04:49:13,845 - #30 (
INFO  04:49:13,845 - #36 x
INFO  04:49:13,845 - #31 )
INFO  04:49:13,845 - #11 +
INFO  04:49:13,845 - #36 Num
INFO  04:49:13,845 - #29 .
INFO  04:49:13,845 - #36 ONE
INFO  04:49:13,845 - #31 )
INFO  04:49:13,845 - #27 ;
INFO  04:49:13,845 - #35 }
INFO  04:49:13,845 - #6 else
INFO  04:49:13,845 - #8 if
INFO  04:49:13,845 - #30 (
INFO  04:49:13,845 - #12 -
INFO  04:49:13,845 - #36 size
INFO  04:49:13,845 - #20 <
INFO  04:49:13,845 - #36 x
INFO  04:49:13,845 - #22 &&
INFO  04:49:13,845 - #36 x
INFO  04:49:13,845 - #20 <
INFO  04:49:13,845 - #37 0
INFO  04:49:13,845 - #31 )
INFO  04:49:13,845 - #34 {
INFO  04:49:13,845 - #36 val
INFO  04:49:13,845 - #29 .
INFO  04:49:13,845 - #36 putn
INFO  04:49:13,845 - #30 (
INFO  04:49:13,845 - #36 val
INFO  04:49:13,845 - #29 .
INFO  04:49:13,845 - #36 getn
INFO  04:49:13,845 - #30 (
INFO  04:49:13,845 - #12 -
INFO  04:49:13,845 - #36 x
INFO  04:49:13,845 - #31 )
INFO  04:49:13,845 - #11 +
INFO  04:49:13,845 - #37 1
INFO  04:49:13,845 - #31 )
INFO  04:49:13,845 - #27 ;
INFO  04:49:13,845 - #35 }
INFO  04:49:13,845 - #11 read
INFO  04:49:13,845 - #30 (
INFO  04:49:13,845 - #36 x
INFO  04:49:13,845 - #31 )
INFO  04:49:13,846 - #27 ;
INFO  04:49:13,846 - #35 }
INFO  04:49:13,846 - #35 }
INFO  04:49:13,846 - #35 }
INFO  04:49:13,846 - --EOF.
