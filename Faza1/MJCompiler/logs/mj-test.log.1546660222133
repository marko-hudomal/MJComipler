INFO  04:49:55,398 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  04:49:55,407 - #1 program
INFO  04:49:55,407 - #36 P
INFO  04:49:55,407 - #7 const
INFO  04:49:55,407 - #36 int
INFO  04:49:55,407 - #36 size
INFO  04:49:55,407 - #24 =
INFO  04:49:55,407 - #37 10
INFO  04:49:55,407 - #27 ;
INFO  04:49:55,407 - #5 enum
INFO  04:49:55,407 - #36 Num
INFO  04:49:55,407 - #34 {
INFO  04:49:55,407 - #36 ZERO
INFO  04:49:55,407 - #28 ,
INFO  04:49:55,407 - #36 ONE
INFO  04:49:55,407 - #28 ,
INFO  04:49:55,407 - #36 TEN
INFO  04:49:55,408 - #24 =
INFO  04:49:55,408 - #37 10
INFO  04:49:55,408 - #35 }
INFO  04:49:55,408 - #4 interface
INFO  04:49:55,408 - #36 I
INFO  04:49:55,408 - #34 {
INFO  04:49:55,408 - #36 int
INFO  04:49:55,408 - #36 getp
INFO  04:49:55,408 - #30 (
INFO  04:49:55,408 - #36 int
INFO  04:49:55,408 - #36 i
INFO  04:49:55,408 - #31 )
INFO  04:49:55,408 - #27 ;
INFO  04:49:55,408 - #36 int
INFO  04:49:55,408 - #36 getn
INFO  04:49:55,408 - #30 (
INFO  04:49:55,408 - #36 int
INFO  04:49:55,408 - #36 i
INFO  04:49:55,408 - #31 )
INFO  04:49:55,408 - #27 ;
INFO  04:49:55,409 - #35 }
INFO  04:49:55,409 - #3 class
INFO  04:49:55,409 - #36 Table
INFO  04:49:55,409 - #36 implements
INFO  04:49:55,409 - #36 I
INFO  04:49:55,409 - #34 {
INFO  04:49:55,409 - #36 int
INFO  04:49:55,409 - #36 pos
INFO  04:49:55,409 - #32 [
INFO  04:49:55,409 - #33 ]
INFO  04:49:55,409 - #28 ,
INFO  04:49:55,409 - #36 neg
INFO  04:49:55,409 - #32 [
INFO  04:49:55,409 - #33 ]
INFO  04:49:55,409 - #27 ;
INFO  04:49:55,409 - #34 {
INFO  04:49:55,409 - #13 void
INFO  04:49:55,409 - #36 putp
INFO  04:49:55,409 - #30 (
INFO  04:49:55,409 - #36 int
INFO  04:49:55,409 - #36 a
INFO  04:49:55,409 - #28 ,
INFO  04:49:55,409 - #36 int
INFO  04:49:55,409 - #36 idx
INFO  04:49:55,410 - #31 )
INFO  04:49:55,410 - #34 {
INFO  04:49:55,410 - #36 this
INFO  04:49:55,410 - #29 .
INFO  04:49:55,410 - #36 pos
INFO  04:49:55,410 - #32 [
INFO  04:49:55,410 - #36 idx
INFO  04:49:55,410 - #33 ]
INFO  04:49:55,410 - #24 =
INFO  04:49:55,410 - #36 a
INFO  04:49:55,410 - #27 ;
INFO  04:49:55,410 - #35 }
INFO  04:49:55,410 - #13 void
INFO  04:49:55,410 - #36 putn
INFO  04:49:55,410 - #30 (
INFO  04:49:55,410 - #36 int
INFO  04:49:55,410 - #36 a
INFO  04:49:55,410 - #28 ,
INFO  04:49:55,410 - #36 int
INFO  04:49:55,410 - #36 idx
INFO  04:49:55,410 - #31 )
INFO  04:49:55,410 - #34 {
INFO  04:49:55,410 - #36 this
INFO  04:49:55,410 - #29 .
INFO  04:49:55,410 - #36 neg
INFO  04:49:55,410 - #32 [
INFO  04:49:55,410 - #36 idx
INFO  04:49:55,410 - #33 ]
INFO  04:49:55,410 - #24 =
INFO  04:49:55,411 - #36 a
INFO  04:49:55,411 - #27 ;
INFO  04:49:55,411 - #35 }
INFO  04:49:55,411 - #36 int
INFO  04:49:55,411 - #36 getp
INFO  04:49:55,411 - #30 (
INFO  04:49:55,411 - #36 int
INFO  04:49:55,411 - #36 idx
INFO  04:49:55,411 - #31 )
INFO  04:49:55,411 - #34 {
INFO  04:49:55,411 - #12 return
INFO  04:49:55,411 - #36 pos
INFO  04:49:55,411 - #32 [
INFO  04:49:55,411 - #36 idx
INFO  04:49:55,411 - #33 ]
INFO  04:49:55,411 - #27 ;
INFO  04:49:55,411 - #35 }
INFO  04:49:55,411 - #36 int
INFO  04:49:55,411 - #36 getn
INFO  04:49:55,411 - #30 (
INFO  04:49:55,411 - #36 int
INFO  04:49:55,411 - #36 idx
INFO  04:49:55,411 - #31 )
INFO  04:49:55,411 - #34 {
INFO  04:49:55,411 - #12 return
INFO  04:49:55,411 - #36 neg
INFO  04:49:55,411 - #32 [
INFO  04:49:55,411 - #36 idx
INFO  04:49:55,411 - #33 ]
INFO  04:49:55,411 - #27 ;
INFO  04:49:55,411 - #35 }
INFO  04:49:55,411 - #35 }
INFO  04:49:55,411 - #35 }
INFO  04:49:55,412 - #36 Table
INFO  04:49:55,412 - #36 val
INFO  04:49:55,412 - #27 ;
INFO  04:49:55,412 - #34 {
INFO  04:49:55,412 - #13 void
INFO  04:49:55,412 - #36 f
INFO  04:49:55,412 - #30 (
INFO  04:49:55,412 - #36 char
INFO  04:49:55,412 - #36 ch
INFO  04:49:55,412 - #28 ,
INFO  04:49:55,413 - #36 int
INFO  04:49:55,413 - #36 a
INFO  04:49:55,413 - #28 ,
INFO  04:49:55,413 - #36 int
INFO  04:49:55,413 - #36 arg
INFO  04:49:55,413 - #31 )
INFO  04:49:55,413 - #36 int
INFO  04:49:55,413 - #36 x
INFO  04:49:55,413 - #27 ;
INFO  04:49:55,413 - #34 {
INFO  04:49:55,414 - #36 x
INFO  04:49:55,414 - #24 =
INFO  04:49:55,414 - #36 arg
INFO  04:49:55,414 - #27 ;
INFO  04:49:55,414 - #35 }
INFO  04:49:55,414 - #13 void
INFO  04:49:55,414 - #36 main
INFO  04:49:55,414 - #30 (
INFO  04:49:55,414 - #31 )
INFO  04:49:55,414 - #36 int
INFO  04:49:55,414 - #36 x
INFO  04:49:55,414 - #28 ,
INFO  04:49:55,414 - #36 i
INFO  04:49:55,414 - #27 ;
INFO  04:49:55,414 - #36 char
INFO  04:49:55,414 - #36 c
INFO  04:49:55,414 - #27 ;
INFO  04:49:55,414 - #34 {
INFO  04:49:55,414 - #36 val
INFO  04:49:55,414 - #24 =
INFO  04:49:55,414 - #9 new
INFO  04:49:55,414 - #36 Table
INFO  04:49:55,414 - #27 ;
INFO  04:49:55,414 - #36 val
INFO  04:49:55,414 - #29 .
INFO  04:49:55,414 - #36 pos
INFO  04:49:55,414 - #24 =
INFO  04:49:55,414 - #9 new
INFO  04:49:55,414 - #36 int
INFO  04:49:55,414 - #32 [
INFO  04:49:55,414 - #36 size
INFO  04:49:55,415 - #33 ]
INFO  04:49:55,415 - #27 ;
INFO  04:49:55,415 - #36 val
INFO  04:49:55,415 - #29 .
INFO  04:49:55,415 - #36 neg
INFO  04:49:55,415 - #24 =
INFO  04:49:55,415 - #9 new
INFO  04:49:55,415 - #36 int
INFO  04:49:55,415 - #32 [
INFO  04:49:55,415 - #36 size
INFO  04:49:55,415 - #33 ]
INFO  04:49:55,415 - #27 ;
INFO  04:49:55,415 - #14 for
INFO  04:49:55,415 - #30 (
INFO  04:49:55,415 - #36 i
INFO  04:49:55,415 - #24 =
INFO  04:49:55,415 - #37 0
INFO  04:49:55,415 - #27 ;
INFO  04:49:55,415 - #36 i
INFO  04:49:55,415 - #20 <
INFO  04:49:55,415 - #36 size
INFO  04:49:55,415 - #27 ;
INFO  04:49:55,415 - #36 i
INFO  04:49:55,415 - #25 ++
INFO  04:49:55,415 - #31 )
INFO  04:49:55,415 - #34 {
INFO  04:49:55,415 - #36 val
INFO  04:49:55,415 - #29 .
INFO  04:49:55,415 - #36 putp
INFO  04:49:55,415 - #30 (
INFO  04:49:55,415 - #37 0
INFO  04:49:55,416 - #28 ,
INFO  04:49:55,416 - #36 i
INFO  04:49:55,416 - #31 )
INFO  04:49:55,416 - #27 ;
INFO  04:49:55,416 - #36 val
INFO  04:49:55,416 - #29 .
INFO  04:49:55,416 - #36 putn
INFO  04:49:55,416 - #30 (
INFO  04:49:55,416 - #37 0
INFO  04:49:55,416 - #28 ,
INFO  04:49:55,416 - #36 i
INFO  04:49:55,416 - #31 )
INFO  04:49:55,416 - #27 ;
INFO  04:49:55,416 - #35 }
INFO  04:49:55,416 - #36 f
INFO  04:49:55,416 - #30 (
INFO  04:49:55,416 - #36 c
INFO  04:49:55,416 - #28 ,
INFO  04:49:55,416 - #36 x
INFO  04:49:55,416 - #28 ,
INFO  04:49:55,416 - #36 i
INFO  04:49:55,416 - #31 )
INFO  04:49:55,416 - #27 ;
INFO  04:49:55,416 - #36 X
INFO  04:49:55,416 - #24 =
INFO  04:49:55,416 - #36 c
INFO  04:49:55,416 - #27 ;
INFO  04:49:55,416 - #11 read
INFO  04:49:55,417 - #30 (
INFO  04:49:55,417 - #36 x
INFO  04:49:55,417 - #31 )
INFO  04:49:55,417 - #27 ;
INFO  04:49:55,417 - #14 for
INFO  04:49:55,417 - #30 (
INFO  04:49:55,417 - #27 ;
INFO  04:49:55,417 - #36 x
INFO  04:49:55,417 - #18 >
INFO  04:49:55,417 - #37 0
INFO  04:49:55,417 - #27 ;
INFO  04:49:55,417 - #31 )
INFO  04:49:55,417 - #34 {
INFO  04:49:55,417 - #8 if
INFO  04:49:55,417 - #30 (
INFO  04:49:55,417 - #36 Num
INFO  04:49:55,417 - #29 .
INFO  04:49:55,417 - #36 ZERO
INFO  04:49:55,417 - #21 <=
INFO  04:49:55,417 - #36 x
INFO  04:49:55,417 - #22 &&
INFO  04:49:55,417 - #36 x
INFO  04:49:55,417 - #20 <
INFO  04:49:55,418 - #36 size
INFO  04:49:55,418 - #31 )
INFO  04:49:55,418 - #34 {
INFO  04:49:55,418 - #36 val
INFO  04:49:55,418 - #29 .
INFO  04:49:55,418 - #36 putp
INFO  04:49:55,418 - #30 (
INFO  04:49:55,418 - #36 val
INFO  04:49:55,418 - #29 .
INFO  04:49:55,418 - #36 getp
INFO  04:49:55,418 - #30 (
INFO  04:49:55,418 - #36 x
INFO  04:49:55,418 - #31 )
INFO  04:49:55,418 - #11 +
INFO  04:49:55,418 - #36 Num
INFO  04:49:55,418 - #29 .
INFO  04:49:55,418 - #36 ONE
INFO  04:49:55,418 - #31 )
INFO  04:49:55,418 - #27 ;
INFO  04:49:55,418 - #35 }
INFO  04:49:55,418 - #6 else
INFO  04:49:55,418 - #8 if
INFO  04:49:55,418 - #30 (
INFO  04:49:55,418 - #12 -
INFO  04:49:55,418 - #36 size
INFO  04:49:55,418 - #20 <
INFO  04:49:55,418 - #36 x
INFO  04:49:55,418 - #22 &&
INFO  04:49:55,418 - #36 x
INFO  04:49:55,418 - #20 <
INFO  04:49:55,418 - #37 0
INFO  04:49:55,418 - #31 )
INFO  04:49:55,418 - #34 {
INFO  04:49:55,418 - #36 val
INFO  04:49:55,418 - #29 .
INFO  04:49:55,418 - #36 putn
INFO  04:49:55,418 - #30 (
INFO  04:49:55,418 - #36 val
INFO  04:49:55,418 - #29 .
INFO  04:49:55,418 - #36 getn
INFO  04:49:55,418 - #30 (
INFO  04:49:55,418 - #12 -
INFO  04:49:55,418 - #36 x
INFO  04:49:55,418 - #31 )
INFO  04:49:55,418 - #11 +
INFO  04:49:55,419 - #37 1
INFO  04:49:55,419 - #31 )
INFO  04:49:55,419 - #27 ;
INFO  04:49:55,419 - #35 }
INFO  04:49:55,419 - #11 read
INFO  04:49:55,419 - #30 (
INFO  04:49:55,419 - #36 x
INFO  04:49:55,419 - #31 )
INFO  04:49:55,419 - #27 ;
INFO  04:49:55,419 - #35 }
INFO  04:49:55,419 - #35 }
INFO  04:49:55,419 - #35 }
INFO  04:49:55,419 - --EOF.
