INFO  04:49:38,642 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  04:49:38,650 - #1 program
INFO  04:49:38,650 - #36 P
INFO  04:49:38,650 - #7 const
INFO  04:49:38,650 - #36 int
INFO  04:49:38,650 - #36 size
INFO  04:49:38,650 - #24 =
INFO  04:49:38,650 - #37 10
INFO  04:49:38,650 - #27 ;
INFO  04:49:38,650 - #5 enum
INFO  04:49:38,650 - #36 Num
INFO  04:49:38,651 - #34 {
INFO  04:49:38,651 - #36 ZERO
INFO  04:49:38,651 - #28 ,
INFO  04:49:38,651 - #36 ONE
INFO  04:49:38,651 - #28 ,
INFO  04:49:38,651 - #36 TEN
INFO  04:49:38,651 - #24 =
INFO  04:49:38,651 - #37 10
INFO  04:49:38,651 - #35 }
INFO  04:49:38,651 - #4 interface
INFO  04:49:38,651 - #36 I
INFO  04:49:38,651 - #34 {
INFO  04:49:38,651 - #36 int
INFO  04:49:38,651 - #36 getp
INFO  04:49:38,651 - #30 (
INFO  04:49:38,651 - #36 int
INFO  04:49:38,652 - #36 i
INFO  04:49:38,652 - #31 )
INFO  04:49:38,652 - #27 ;
INFO  04:49:38,652 - #36 int
INFO  04:49:38,652 - #36 getn
INFO  04:49:38,652 - #30 (
INFO  04:49:38,652 - #36 int
INFO  04:49:38,652 - #36 i
INFO  04:49:38,652 - #31 )
INFO  04:49:38,652 - #27 ;
INFO  04:49:38,652 - #35 }
INFO  04:49:38,652 - #3 class
INFO  04:49:38,652 - #36 Table
INFO  04:49:38,652 - #36 implements
INFO  04:49:38,652 - #36 I
INFO  04:49:38,652 - #34 {
INFO  04:49:38,652 - #36 int
INFO  04:49:38,652 - #36 pos
INFO  04:49:38,652 - #32 [
INFO  04:49:38,652 - #33 ]
INFO  04:49:38,652 - #28 ,
INFO  04:49:38,652 - #36 neg
INFO  04:49:38,652 - #32 [
INFO  04:49:38,652 - #33 ]
INFO  04:49:38,652 - #27 ;
INFO  04:49:38,652 - #34 {
INFO  04:49:38,652 - #13 void
INFO  04:49:38,652 - #36 putp
INFO  04:49:38,653 - #30 (
INFO  04:49:38,653 - #36 int
INFO  04:49:38,653 - #36 a
INFO  04:49:38,653 - #28 ,
INFO  04:49:38,653 - #36 int
INFO  04:49:38,653 - #36 idx
INFO  04:49:38,653 - #31 )
INFO  04:49:38,653 - #34 {
INFO  04:49:38,653 - #36 this
INFO  04:49:38,653 - #29 .
INFO  04:49:38,653 - #36 pos
INFO  04:49:38,653 - #32 [
INFO  04:49:38,653 - #36 idx
INFO  04:49:38,653 - #33 ]
INFO  04:49:38,653 - #24 =
INFO  04:49:38,653 - #36 a
INFO  04:49:38,653 - #27 ;
INFO  04:49:38,653 - #35 }
INFO  04:49:38,653 - #13 void
INFO  04:49:38,653 - #36 putn
INFO  04:49:38,653 - #30 (
INFO  04:49:38,653 - #36 int
INFO  04:49:38,653 - #36 a
INFO  04:49:38,653 - #28 ,
INFO  04:49:38,653 - #36 int
INFO  04:49:38,653 - #36 idx
INFO  04:49:38,653 - #31 )
INFO  04:49:38,653 - #34 {
INFO  04:49:38,653 - #36 this
INFO  04:49:38,654 - #29 .
INFO  04:49:38,654 - #36 neg
INFO  04:49:38,654 - #32 [
INFO  04:49:38,654 - #36 idx
INFO  04:49:38,654 - #33 ]
INFO  04:49:38,654 - #24 =
INFO  04:49:38,654 - #36 a
INFO  04:49:38,654 - #27 ;
INFO  04:49:38,654 - #35 }
INFO  04:49:38,654 - #36 int
INFO  04:49:38,654 - #36 getp
INFO  04:49:38,654 - #30 (
INFO  04:49:38,654 - #36 int
INFO  04:49:38,654 - #36 idx
INFO  04:49:38,654 - #31 )
INFO  04:49:38,654 - #34 {
INFO  04:49:38,654 - #12 return
INFO  04:49:38,654 - #36 pos
INFO  04:49:38,654 - #32 [
INFO  04:49:38,654 - #36 idx
INFO  04:49:38,654 - #33 ]
INFO  04:49:38,654 - #27 ;
INFO  04:49:38,654 - #35 }
INFO  04:49:38,654 - #36 int
INFO  04:49:38,654 - #36 getn
INFO  04:49:38,654 - #30 (
INFO  04:49:38,654 - #36 int
INFO  04:49:38,654 - #36 idx
INFO  04:49:38,655 - #31 )
INFO  04:49:38,655 - #34 {
INFO  04:49:38,655 - #12 return
INFO  04:49:38,655 - #36 neg
INFO  04:49:38,655 - #32 [
INFO  04:49:38,655 - #36 idx
INFO  04:49:38,655 - #33 ]
INFO  04:49:38,655 - #27 ;
INFO  04:49:38,655 - #35 }
INFO  04:49:38,655 - #35 }
INFO  04:49:38,655 - #35 }
INFO  04:49:38,655 - #36 Table
INFO  04:49:38,655 - #36 val
INFO  04:49:38,655 - #27 ;
INFO  04:49:38,655 - #34 {
INFO  04:49:38,655 - #13 void
INFO  04:49:38,655 - #36 f
INFO  04:49:38,655 - #30 (
INFO  04:49:38,655 - #36 char
INFO  04:49:38,655 - #36 ch
INFO  04:49:38,655 - #28 ,
INFO  04:49:38,656 - #36 int
INFO  04:49:38,656 - #36 a
INFO  04:49:38,656 - #28 ,
INFO  04:49:38,656 - #36 int
INFO  04:49:38,656 - #36 arg
INFO  04:49:38,657 - #31 )
INFO  04:49:38,657 - #36 int
INFO  04:49:38,657 - #36 x
INFO  04:49:38,657 - #27 ;
INFO  04:49:38,657 - #34 {
INFO  04:49:38,657 - #36 x
INFO  04:49:38,657 - #24 =
INFO  04:49:38,657 - #36 arg
INFO  04:49:38,657 - #27 ;
INFO  04:49:38,657 - #35 }
INFO  04:49:38,657 - #13 void
INFO  04:49:38,657 - #36 main
INFO  04:49:38,657 - #30 (
INFO  04:49:38,657 - #31 )
INFO  04:49:38,657 - #36 int
INFO  04:49:38,657 - #36 x
INFO  04:49:38,657 - #28 ,
INFO  04:49:38,657 - #36 i
INFO  04:49:38,657 - #27 ;
INFO  04:49:38,657 - #36 char
INFO  04:49:38,657 - #36 c
INFO  04:49:38,657 - #27 ;
INFO  04:49:38,657 - #34 {
INFO  04:49:38,657 - #36 val
INFO  04:49:38,657 - #24 =
INFO  04:49:38,657 - #9 new
INFO  04:49:38,657 - #36 Table
INFO  04:49:38,658 - #27 ;
INFO  04:49:38,658 - #36 val
INFO  04:49:38,658 - #29 .
INFO  04:49:38,658 - #36 pos
INFO  04:49:38,658 - #24 =
INFO  04:49:38,658 - #9 new
INFO  04:49:38,658 - #36 int
INFO  04:49:38,658 - #32 [
INFO  04:49:38,658 - #36 size
INFO  04:49:38,658 - #33 ]
INFO  04:49:38,658 - #27 ;
INFO  04:49:38,658 - #36 val
INFO  04:49:38,658 - #29 .
INFO  04:49:38,658 - #36 neg
INFO  04:49:38,658 - #24 =
INFO  04:49:38,658 - #9 new
INFO  04:49:38,658 - #36 int
INFO  04:49:38,658 - #32 [
INFO  04:49:38,658 - #36 size
INFO  04:49:38,658 - #33 ]
INFO  04:49:38,658 - #27 ;
INFO  04:49:38,659 - #14 for
INFO  04:49:38,659 - #30 (
INFO  04:49:38,659 - #36 i
INFO  04:49:38,659 - #24 =
INFO  04:49:38,659 - #37 0
INFO  04:49:38,659 - #27 ;
INFO  04:49:38,659 - #36 i
INFO  04:49:38,659 - #20 <
INFO  04:49:38,659 - #36 size
INFO  04:49:38,659 - #27 ;
INFO  04:49:38,659 - #36 i
INFO  04:49:38,659 - #25 ++
INFO  04:49:38,659 - #31 )
INFO  04:49:38,659 - #34 {
INFO  04:49:38,659 - #36 val
INFO  04:49:38,659 - #29 .
INFO  04:49:38,659 - #36 putp
INFO  04:49:38,659 - #30 (
INFO  04:49:38,659 - #37 0
INFO  04:49:38,659 - #28 ,
INFO  04:49:38,659 - #36 i
INFO  04:49:38,659 - #31 )
INFO  04:49:38,659 - #27 ;
INFO  04:49:38,659 - #36 val
INFO  04:49:38,659 - #29 .
INFO  04:49:38,660 - #36 putn
INFO  04:49:38,660 - #30 (
INFO  04:49:38,660 - #37 0
INFO  04:49:38,660 - #28 ,
INFO  04:49:38,660 - #36 i
INFO  04:49:38,660 - #31 )
INFO  04:49:38,660 - #27 ;
INFO  04:49:38,660 - #35 }
INFO  04:49:38,660 - #36 f
INFO  04:49:38,660 - #30 (
INFO  04:49:38,660 - #36 c
INFO  04:49:38,660 - #28 ,
INFO  04:49:38,660 - #36 x
INFO  04:49:38,660 - #28 ,
INFO  04:49:38,660 - #36 i
INFO  04:49:38,660 - #31 )
INFO  04:49:38,660 - #27 ;
INFO  04:49:38,660 - #36 X
INFO  04:49:38,660 - #24 =
INFO  04:49:38,660 - #36 c
INFO  04:49:38,660 - #27 ;
INFO  04:49:38,660 - #11 read
INFO  04:49:38,660 - #30 (
INFO  04:49:38,660 - #36 x
INFO  04:49:38,661 - #31 )
INFO  04:49:38,661 - #27 ;
INFO  04:49:38,661 - #14 for
INFO  04:49:38,661 - #30 (
INFO  04:49:38,661 - #27 ;
INFO  04:49:38,661 - #36 x
INFO  04:49:38,661 - #18 >
INFO  04:49:38,661 - #37 0
INFO  04:49:38,661 - #27 ;
INFO  04:49:38,661 - #31 )
INFO  04:49:38,661 - #34 {
INFO  04:49:38,661 - #8 if
INFO  04:49:38,661 - #30 (
INFO  04:49:38,661 - #36 Num
INFO  04:49:38,661 - #29 .
INFO  04:49:38,661 - #36 ZERO
INFO  04:49:38,661 - #21 <=
INFO  04:49:38,661 - #36 x
INFO  04:49:38,661 - #22 &&
INFO  04:49:38,661 - #36 x
INFO  04:49:38,661 - #20 <
INFO  04:49:38,661 - #36 size
INFO  04:49:38,661 - #31 )
INFO  04:49:38,661 - #34 {
INFO  04:49:38,661 - #36 val
INFO  04:49:38,661 - #29 .
INFO  04:49:38,661 - #36 putp
INFO  04:49:38,661 - #30 (
INFO  04:49:38,661 - #36 val
INFO  04:49:38,661 - #29 .
INFO  04:49:38,662 - #36 getp
INFO  04:49:38,662 - #30 (
INFO  04:49:38,662 - #36 x
INFO  04:49:38,662 - #31 )
INFO  04:49:38,662 - #11 +
INFO  04:49:38,662 - #36 Num
INFO  04:49:38,662 - #29 .
INFO  04:49:38,662 - #36 ONE
INFO  04:49:38,662 - #31 )
INFO  04:49:38,662 - #27 ;
INFO  04:49:38,662 - #35 }
INFO  04:49:38,662 - #6 else
INFO  04:49:38,662 - #8 if
INFO  04:49:38,662 - #30 (
INFO  04:49:38,662 - #12 -
INFO  04:49:38,662 - #36 size
INFO  04:49:38,662 - #20 <
INFO  04:49:38,662 - #36 x
INFO  04:49:38,662 - #22 &&
INFO  04:49:38,662 - #36 x
INFO  04:49:38,662 - #20 <
INFO  04:49:38,662 - #37 0
INFO  04:49:38,662 - #31 )
INFO  04:49:38,662 - #34 {
INFO  04:49:38,662 - #36 val
INFO  04:49:38,662 - #29 .
INFO  04:49:38,662 - #36 putn
INFO  04:49:38,662 - #30 (
INFO  04:49:38,662 - #36 val
INFO  04:49:38,662 - #29 .
INFO  04:49:38,662 - #36 getn
INFO  04:49:38,662 - #30 (
INFO  04:49:38,662 - #12 -
INFO  04:49:38,662 - #36 x
INFO  04:49:38,662 - #31 )
INFO  04:49:38,662 - #11 +
INFO  04:49:38,662 - #37 1
INFO  04:49:38,662 - #31 )
INFO  04:49:38,662 - #27 ;
INFO  04:49:38,662 - #35 }
INFO  04:49:38,662 - #11 read
INFO  04:49:38,662 - #30 (
INFO  04:49:38,662 - #36 x
INFO  04:49:38,662 - #31 )
INFO  04:49:38,662 - #27 ;
INFO  04:49:38,662 - #35 }
INFO  04:49:38,662 - #35 }
INFO  04:49:38,662 - #35 }
INFO  04:49:38,663 - --EOF.
