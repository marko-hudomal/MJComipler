INFO  04:31:26,930 - Compiling source file: D:\ETF\PP1\Projekat\workspace\MJCompiler\test\program.mj
INFO  04:31:26,938 - #1 program
INFO  04:31:26,938 - #36 P
INFO  04:31:26,938 - #7 const
INFO  04:31:26,938 - #36 int
INFO  04:31:26,938 - #36 size
INFO  04:31:26,938 - #24 =
INFO  04:31:26,938 - #37 10
INFO  04:31:26,938 - #27 ;
INFO  04:31:26,938 - #5 enum
INFO  04:31:26,938 - #36 Num
INFO  04:31:26,938 - #34 {
INFO  04:31:26,938 - #36 ZERO
INFO  04:31:26,938 - #28 ,
INFO  04:31:26,939 - #36 ONE
INFO  04:31:26,939 - #28 ,
INFO  04:31:26,939 - #36 TEN
INFO  04:31:26,939 - #24 =
INFO  04:31:26,939 - #37 10
INFO  04:31:26,939 - #35 }
INFO  04:31:26,939 - #4 interface
INFO  04:31:26,939 - #36 I
INFO  04:31:26,939 - #34 {
INFO  04:31:26,939 - #36 int
INFO  04:31:26,939 - #36 getp
INFO  04:31:26,939 - #30 (
INFO  04:31:26,939 - #36 int
INFO  04:31:26,939 - #36 i
INFO  04:31:26,939 - #31 )
INFO  04:31:26,939 - #27 ;
INFO  04:31:26,939 - #36 int
INFO  04:31:26,939 - #36 getn
INFO  04:31:26,939 - #30 (
INFO  04:31:26,940 - #36 int
INFO  04:31:26,940 - #36 i
INFO  04:31:26,940 - #31 )
INFO  04:31:26,940 - #27 ;
INFO  04:31:26,940 - #35 }
INFO  04:31:26,940 - #3 class
INFO  04:31:26,940 - #36 Table
INFO  04:31:26,940 - #36 implements
INFO  04:31:26,940 - #36 I
INFO  04:31:26,940 - #34 {
INFO  04:31:26,940 - #36 int
INFO  04:31:26,940 - #36 pos
INFO  04:31:26,940 - #32 [
INFO  04:31:26,940 - #33 ]
INFO  04:31:26,940 - #28 ,
INFO  04:31:26,940 - #36 neg
INFO  04:31:26,940 - #32 [
INFO  04:31:26,940 - #33 ]
INFO  04:31:26,940 - #27 ;
INFO  04:31:26,940 - #34 {
INFO  04:31:26,940 - #13 void
INFO  04:31:26,940 - #36 putp
INFO  04:31:26,940 - #30 (
INFO  04:31:26,940 - #36 int
INFO  04:31:26,940 - #36 a
INFO  04:31:26,940 - #28 ,
INFO  04:31:26,940 - #36 int
INFO  04:31:26,940 - #36 idx
INFO  04:31:26,940 - #31 )
INFO  04:31:26,940 - #34 {
INFO  04:31:26,941 - #36 this
INFO  04:31:26,941 - #29 .
INFO  04:31:26,941 - #36 pos
INFO  04:31:26,941 - #32 [
INFO  04:31:26,941 - #36 idx
INFO  04:31:26,941 - #33 ]
INFO  04:31:26,941 - #24 =
INFO  04:31:26,941 - #36 a
INFO  04:31:26,941 - #27 ;
INFO  04:31:26,941 - #35 }
INFO  04:31:26,941 - #13 void
INFO  04:31:26,941 - #36 putn
INFO  04:31:26,941 - #30 (
INFO  04:31:26,941 - #36 int
INFO  04:31:26,941 - #36 a
INFO  04:31:26,941 - #28 ,
INFO  04:31:26,941 - #36 int
INFO  04:31:26,941 - #36 idx
INFO  04:31:26,941 - #31 )
INFO  04:31:26,941 - #34 {
INFO  04:31:26,941 - #36 this
INFO  04:31:26,941 - #29 .
INFO  04:31:26,941 - #36 neg
INFO  04:31:26,941 - #32 [
INFO  04:31:26,941 - #36 idx
INFO  04:31:26,941 - #33 ]
INFO  04:31:26,941 - #24 =
INFO  04:31:26,941 - #36 a
INFO  04:31:26,941 - #27 ;
INFO  04:31:26,941 - #35 }
INFO  04:31:26,941 - #36 int
INFO  04:31:26,941 - #36 getp
INFO  04:31:26,942 - #30 (
INFO  04:31:26,942 - #36 int
INFO  04:31:26,942 - #36 idx
INFO  04:31:26,942 - #31 )
INFO  04:31:26,942 - #34 {
INFO  04:31:26,942 - #12 return
INFO  04:31:26,942 - #36 pos
INFO  04:31:26,942 - #32 [
INFO  04:31:26,942 - #36 idx
INFO  04:31:26,942 - #33 ]
INFO  04:31:26,942 - #27 ;
INFO  04:31:26,942 - #35 }
INFO  04:31:26,942 - #36 int
INFO  04:31:26,942 - #36 getn
INFO  04:31:26,942 - #30 (
INFO  04:31:26,942 - #36 int
INFO  04:31:26,942 - #36 idx
INFO  04:31:26,942 - #31 )
INFO  04:31:26,942 - #34 {
INFO  04:31:26,942 - #12 return
INFO  04:31:26,942 - #36 neg
INFO  04:31:26,942 - #32 [
INFO  04:31:26,942 - #36 idx
INFO  04:31:26,942 - #33 ]
INFO  04:31:26,942 - #27 ;
INFO  04:31:26,942 - #35 }
INFO  04:31:26,943 - #35 }
INFO  04:31:26,943 - #35 }
INFO  04:31:26,943 - #36 Table
INFO  04:31:26,943 - #36 val
INFO  04:31:26,943 - #27 ;
INFO  04:31:26,943 - #34 {
INFO  04:31:26,943 - #13 void
INFO  04:31:26,943 - #36 f
INFO  04:31:26,943 - #30 (
INFO  04:31:26,943 - #36 char
INFO  04:31:26,943 - #36 ch
INFO  04:31:26,943 - #28 ,
INFO  04:31:26,945 - #36 int
INFO  04:31:26,945 - #36 a
INFO  04:31:26,945 - #28 ,
INFO  04:31:26,945 - #36 int
INFO  04:31:26,945 - #36 arg
INFO  04:31:26,945 - #31 )
INFO  04:31:26,945 - #36 int
INFO  04:31:26,945 - #36 x
INFO  04:31:26,945 - #27 ;
INFO  04:31:26,945 - #34 {
INFO  04:31:26,945 - #36 x
INFO  04:31:26,945 - #24 =
INFO  04:31:26,945 - #36 arg
INFO  04:31:26,945 - #27 ;
INFO  04:31:26,945 - #35 }
INFO  04:31:26,945 - #13 void
INFO  04:31:26,945 - #36 main
INFO  04:31:26,945 - #30 (
INFO  04:31:26,945 - #31 )
INFO  04:31:26,945 - #36 int
INFO  04:31:26,945 - #36 x
INFO  04:31:26,945 - #28 ,
INFO  04:31:26,945 - #36 i
INFO  04:31:26,945 - #27 ;
INFO  04:31:26,945 - #36 char
INFO  04:31:26,945 - #36 c
INFO  04:31:26,946 - #27 ;
INFO  04:31:26,946 - #34 {
INFO  04:31:26,946 - #36 val
INFO  04:31:26,946 - #24 =
INFO  04:31:26,946 - #9 new
INFO  04:31:26,946 - #36 Table
INFO  04:31:26,946 - #27 ;
INFO  04:31:26,946 - #36 val
INFO  04:31:26,946 - #29 .
INFO  04:31:26,946 - #36 pos
INFO  04:31:26,946 - #24 =
INFO  04:31:26,946 - #9 new
INFO  04:31:26,946 - #36 int
INFO  04:31:26,946 - #32 [
INFO  04:31:26,946 - #36 size
INFO  04:31:26,946 - #33 ]
INFO  04:31:26,946 - #27 ;
INFO  04:31:26,946 - #36 val
INFO  04:31:26,946 - #29 .
INFO  04:31:26,946 - #36 neg
INFO  04:31:26,946 - #24 =
INFO  04:31:26,946 - #9 new
INFO  04:31:26,946 - #36 int
INFO  04:31:26,946 - #32 [
INFO  04:31:26,946 - #36 size
INFO  04:31:26,946 - #33 ]
INFO  04:31:26,946 - #27 ;
INFO  04:31:26,946 - #14 for
INFO  04:31:26,946 - #30 (
INFO  04:31:26,946 - #36 i
INFO  04:31:26,946 - #24 =
INFO  04:31:26,946 - #37 0
INFO  04:31:26,946 - #27 ;
INFO  04:31:26,946 - #36 i
INFO  04:31:26,946 - #20 <
INFO  04:31:26,946 - #36 size
INFO  04:31:26,946 - #27 ;
INFO  04:31:26,946 - #36 i
INFO  04:31:26,946 - #25 ++
INFO  04:31:26,946 - #31 )
INFO  04:31:26,946 - #34 {
INFO  04:31:26,947 - #36 val
INFO  04:31:26,947 - #29 .
INFO  04:31:26,947 - #36 putp
INFO  04:31:26,947 - #30 (
INFO  04:31:26,947 - #37 0
INFO  04:31:26,947 - #28 ,
INFO  04:31:26,947 - #36 i
INFO  04:31:26,947 - #31 )
INFO  04:31:26,947 - #27 ;
INFO  04:31:26,947 - #36 val
INFO  04:31:26,947 - #29 .
INFO  04:31:26,947 - #36 putn
INFO  04:31:26,947 - #30 (
INFO  04:31:26,947 - #37 0
INFO  04:31:26,947 - #28 ,
INFO  04:31:26,947 - #36 i
INFO  04:31:26,947 - #31 )
INFO  04:31:26,947 - #27 ;
INFO  04:31:26,947 - #35 }
INFO  04:31:26,947 - #36 f
INFO  04:31:26,947 - #30 (
INFO  04:31:26,947 - #36 c
INFO  04:31:26,947 - #28 ,
INFO  04:31:26,947 - #36 x
INFO  04:31:26,947 - #28 ,
INFO  04:31:26,947 - #36 i
INFO  04:31:26,947 - #31 )
INFO  04:31:26,947 - #27 ;
INFO  04:31:26,947 - #11 read
INFO  04:31:26,947 - #30 (
INFO  04:31:26,947 - #36 x
INFO  04:31:26,947 - #31 )
INFO  04:31:26,947 - #27 ;
INFO  04:31:26,947 - #14 for
INFO  04:31:26,947 - #30 (
INFO  04:31:26,947 - #27 ;
INFO  04:31:26,947 - #36 x
INFO  04:31:26,947 - #18 >
INFO  04:31:26,947 - #37 0
INFO  04:31:26,947 - #27 ;
INFO  04:31:26,947 - #31 )
INFO  04:31:26,947 - #34 {
INFO  04:31:26,948 - #8 if
INFO  04:31:26,948 - #30 (
INFO  04:31:26,948 - #36 Num
INFO  04:31:26,948 - #29 .
INFO  04:31:26,948 - #36 ZERO
INFO  04:31:26,948 - #21 <=
INFO  04:31:26,948 - #36 x
INFO  04:31:26,948 - #22 &&
INFO  04:31:26,948 - #36 x
INFO  04:31:26,948 - #20 <
INFO  04:31:26,948 - #36 size
INFO  04:31:26,948 - #31 )
INFO  04:31:26,948 - #34 {
INFO  04:31:26,948 - #36 val
INFO  04:31:26,948 - #29 .
INFO  04:31:26,948 - #36 putp
INFO  04:31:26,948 - #30 (
INFO  04:31:26,948 - #36 val
INFO  04:31:26,948 - #29 .
INFO  04:31:26,948 - #36 getp
INFO  04:31:26,948 - #30 (
INFO  04:31:26,948 - #36 x
INFO  04:31:26,948 - #31 )
INFO  04:31:26,948 - #11 +
INFO  04:31:26,948 - #36 Num
INFO  04:31:26,948 - #29 .
INFO  04:31:26,948 - #36 ONE
INFO  04:31:26,948 - #31 )
INFO  04:31:26,948 - #27 ;
INFO  04:31:26,948 - #35 }
INFO  04:31:26,948 - #6 else
INFO  04:31:26,948 - #8 if
INFO  04:31:26,948 - #30 (
INFO  04:31:26,948 - #12 -
INFO  04:31:26,948 - #36 size
INFO  04:31:26,948 - #20 <
INFO  04:31:26,948 - #36 x
INFO  04:31:26,948 - #22 &&
INFO  04:31:26,948 - #36 x
INFO  04:31:26,949 - #20 <
INFO  04:31:26,949 - #37 0
INFO  04:31:26,949 - #31 )
INFO  04:31:26,949 - #34 {
INFO  04:31:26,949 - #36 val
INFO  04:31:26,949 - #29 .
INFO  04:31:26,949 - #36 putn
INFO  04:31:26,949 - #30 (
INFO  04:31:26,949 - #36 val
INFO  04:31:26,949 - #29 .
INFO  04:31:26,949 - #36 getn
INFO  04:31:26,949 - #30 (
INFO  04:31:26,949 - #12 -
INFO  04:31:26,949 - #36 x
INFO  04:31:26,949 - #31 )
INFO  04:31:26,949 - #11 +
INFO  04:31:26,949 - #37 1
INFO  04:31:26,949 - #31 )
INFO  04:31:26,949 - #27 ;
INFO  04:31:26,949 - #35 }
INFO  04:31:26,949 - #11 read
INFO  04:31:26,949 - #30 (
INFO  04:31:26,949 - #36 x
INFO  04:31:26,949 - #31 )
INFO  04:31:26,949 - #27 ;
INFO  04:31:26,949 - #35 }
INFO  04:31:26,949 - #35 }
INFO  04:31:26,949 - #35 }
INFO  04:31:26,949 - --EOF.
